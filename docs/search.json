[
  {
    "objectID": "syllabus/syllabus_micro.html",
    "href": "syllabus/syllabus_micro.html",
    "title": "ミクロ政治データ分析実習",
    "section": "",
    "text": "講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: Rの使い方\n\nRの基本的な操作 & Quarto\nデータの入出力\nデータのハンドリング（前処理）\nデータの可視化\n\n統計学、確率、多変量解析、因果推論の授業ではない。\n\nデータ分析の手法は後期の「マクロ政治データ分析実習」で紹介する。\n後期の授業ではRの使い方について解説しない。\n\n到達目標: Rを用いたデータ分析の教科書が読める土台づくり"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#概要",
    "href": "syllabus/syllabus_micro.html#概要",
    "title": "ミクロ政治データ分析実習",
    "section": "",
    "text": "講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: Rの使い方\n\nRの基本的な操作 & Quarto\nデータの入出力\nデータのハンドリング（前処理）\nデータの可視化\n\n統計学、確率、多変量解析、因果推論の授業ではない。\n\nデータ分析の手法は後期の「マクロ政治データ分析実習」で紹介する。\n後期の授業ではRの使い方について解説しない。\n\n到達目標: Rを用いたデータ分析の教科書が読める土台づくり"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#オフィスアワー",
    "href": "syllabus/syllabus_micro.html#オフィスアワー",
    "title": "ミクロ政治データ分析実習",
    "section": "オフィス・アワー",
    "text": "オフィス・アワー\n宋、またはTAが研究室に待機し、事前予約なしに相談、質問などが可能な時間\n\n場所：TA227研究室（A棟の2階）\n毎週水曜日2限 (10:40〜12:10)\n\n宋が対応\n\n毎週木曜日3・5限 (13:00〜14:30 / 16:20〜17:50)\n\n宋・TAが対応\n\n上記の時間外は事前予約が必要（メール、対面）\n\nメール: song@kansai-u.ac.jp"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#講義内容",
    "href": "syllabus/syllabus_micro.html#講義内容",
    "title": "ミクロ政治データ分析実習",
    "section": "講義内容",
    "text": "講義内容\n\n\n\n回\n内容\n教科書\n課題（予定）\n\n\n\n\n1\nイントロダクション\n\n\n\n\n2\nRとIDEの導入\n第1〜5章\n\n\n\n3\nRの基本的な操作\n第6章\n\n\n\n4\nプログラミングの基本的な概念\n第10・11章\n\n\n\n5\nR Markdown（Quarto）と再現可能な研究\n第22・24章\n\\(\\bigcirc\\)\n\n\n6\nデータ収集\n\n\n\n\n7\nデータ型\n第8章\n\n\n\n8\nデータ構造\n第9章\n\n\n\n9\nデータハンドリング（1）\n第12・14章\n\n\n\n10\nデータハンドリング（2）\n第13・14章\n\\(\\bigcirc\\)\n\n\n11\nデータハンドリング（3）\n第15章\n\\(\\bigcirc\\)\n\n\n12\n可視化（1）\n第17章\n\n\n\n13\n可視化（2）\n第18・19章\n\\(\\bigcirc\\)\n\n\n14\n可視化（3）\n第18・19章\n\\(\\bigcirc\\)\n\n\n15\n期末テスト"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#前提知識",
    "href": "syllabus/syllabus_micro.html#前提知識",
    "title": "ミクロ政治データ分析実習",
    "section": "前提知識",
    "text": "前提知識\n\nファイル・システムの理解\n\nフォルダー (ディレクトリ)の概念\nC:/AAA/BBB/CCC.txt (Windows)や~/AAA/BBB/CCC.text (macOS / Linux)の意味が理解できること\n相対パス / 絶対パスの概念が理解できること\n\nブラインド・タッチ (重要)\n\n期末レポートは第15回の授業中に執筆する。\nタイピングが遅いと、時間内に期末レポートの完成ができない。\n第15回の授業までにブラインドタッチの練習を推奨\nこの授業に限らず、現代社会で極めて重要なスキル"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#教科書",
    "href": "syllabus/syllabus_micro.html#教科書",
    "title": "ミクロ政治データ分析実習",
    "section": "教科書",
    "text": "教科書\nSong Jaehyun・矢内勇生.『私たちのR: ベストプラクティスの探求』Web-book\n\nhttps://www.jaysong.net/RBook\n本講義内容を200%カバーする\n無料"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#参考書",
    "href": "syllabus/syllabus_micro.html#参考書",
    "title": "ミクロ政治データ分析実習",
    "section": "参考書",
    "text": "参考書\n\n松村優哉 他. 2021. 『改訂2版 RユーザのためのRStudio[実践]入門』技術評論社\nGarrett Grolemund and Hadley Wickham. 2017. R for Data Science. O’Reilly.\n\n邦訳『Rではじめるデータサイエンス』(原著は無料: https://r4ds.had.co.nz/)\n\nJared P. Lander. 2018. R for Everyone. Addison-Wesley Professional.\n\n邦訳『みんなのR』"
  },
  {
    "objectID": "syllabus/syllabus_micro.html#成績評価",
    "href": "syllabus/syllabus_micro.html#成績評価",
    "title": "ミクロ政治データ分析実習",
    "section": "成績評価",
    "text": "成績評価\n\n平常点: 30%\n\n学生証を持参すること（カードリーダーで出席を確認）\n欠席4回以上は評価の対象外（3回まで評価対象）\n\n課題: 40%\n\n計5〜6回の課題を予定\n未提出3回以上は評価の対象外（2回まで評価対象）\n課題提出期限の延長はない（提出までの期間が長めであるため）\n\n提出期限は次回講義の前日23時59分まで\n期限内に提出出来なかった場合でも宋に連絡する必要はない（どうせ延ばしてくれない）。\n\n不正行為厳禁\n\n期末レポート: 30%\n\n第15回の授業中に期末レポートを執筆（未回答の問題は持ち帰り可であるものの、減点）\n未提出者は評価の対象外\n不正行為厳禁"
  },
  {
    "objectID": "syllabus/session.html",
    "href": "syllabus/session.html",
    "title": "セッション情報",
    "section": "",
    "text": "macOS Ventura 13.3.1\nFirefox 112.0.2\nR version 4.3.0 (2023-04-21)\nRStudio 2023.03.0+386\nQuarto 1.4.37\nR package {quarto} 1.2"
  },
  {
    "objectID": "syllabus/session.html#作成環境",
    "href": "syllabus/session.html#作成環境",
    "title": "セッション情報",
    "section": "",
    "text": "macOS Ventura 13.3.1\nFirefox 112.0.2\nR version 4.3.0 (2023-04-21)\nRStudio 2023.03.0+386\nQuarto 1.4.37\nR package {quarto} 1.2"
  },
  {
    "objectID": "syllabus/session.html#セッション情報",
    "href": "syllabus/session.html#セッション情報",
    "title": "セッション情報",
    "section": "セッション情報",
    "text": "セッション情報\n\n\nR version 4.3.0 (2023-04-21)\nPlatform: x86_64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.3.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Tokyo\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] digest_0.6.31     later_1.3.1       fastmap_1.1.1     xfun_0.39        \n [5] magrittr_2.0.3    glue_1.6.2        stringr_1.5.0     knitr_1.42       \n [9] htmltools_0.5.5   rmarkdown_2.21    lifecycle_1.0.3   ps_1.7.5         \n[13] cli_3.6.1         processx_3.8.1    vctrs_0.6.2       compiler_4.3.0   \n[17] rstudioapi_0.14   tools_4.3.0       quarto_1.2        evaluate_0.21    \n[21] Rcpp_1.0.10       yaml_2.3.7        rlang_1.1.1       jsonlite_1.8.4   \n[25] htmlwidgets_1.6.2 stringi_1.7.12"
  },
  {
    "objectID": "syllabus/session.html#パッケージ",
    "href": "syllabus/session.html#パッケージ",
    "title": "セッション情報",
    "section": "パッケージ",
    "text": "パッケージ\n\n\n\n\n\nPackage\nVersion\n\n\n\n\nabind\n1.4-5\n\n\nAER\n1.2-10\n\n\narm\n1.13-1\n\n\nAsioHeaders\n1.22.1-2\n\n\naskpass\n1.1\n\n\nassertthat\n0.2.1\n\n\nattachment\n0.3.1\n\n\nattempt\n0.3.1\n\n\nbackports\n1.4.1\n\n\nBalanceR\n0.8.0\n\n\nbase\n4.3.0\n\n\nbase64enc\n0.1-3\n\n\nbayestestR\n0.13.1\n\n\nBH\n1.81.0-1\n\n\nbibtex\n0.5.1\n\n\nbigD\n0.2.0\n\n\nbit\n4.0.5\n\n\nbit64\n4.0.5\n\n\nbitops\n1.0-7\n\n\nblob\n1.2.4\n\n\nblogdown\n1.16\n\n\nbookdown\n0.34\n\n\nboot\n1.3-28.1\n\n\nbrew\n1.0-8\n\n\nbrio\n1.1.3\n\n\nbroom\n1.0.4\n\n\nbslib\n0.4.2\n\n\ncachem\n1.0.8\n\n\ncallr\n3.7.3\n\n\ncar\n3.1-2\n\n\ncarData\n3.0-5\n\n\ncellranger\n1.1.0\n\n\ncheckmate\n2.2.0\n\n\nchromote\n0.1.1.9001\n\n\ncjoint\n2.1.0\n\n\nclass\n7.3-22\n\n\nclassInt\n0.4-9\n\n\ncli\n3.6.1\n\n\nclipr\n0.8.0\n\n\ncluster\n2.1.4\n\n\ncoda\n0.19-4\n\n\ncodetools\n0.2-19\n\n\ncolorspace\n2.1-0\n\n\ncolourpicker\n1.2.0\n\n\ncommonmark\n1.9.0\n\n\ncompiler\n4.3.0\n\n\nconfig\n0.3.1\n\n\nconflicted\n1.2.0\n\n\ncorpcor\n1.6.10\n\n\ncorrplot\n0.92\n\n\ncountrycode\n1.4.0\n\n\ncowplot\n1.1.1\n\n\ncpp11\n0.4.3\n\n\ncranlogs\n2.1.1\n\n\ncrayon\n1.5.2\n\n\ncredentials\n1.3.2\n\n\ncregg\n0.4.0\n\n\ncrosstalk\n1.2.0\n\n\ncrul\n1.3\n\n\ncshapes\n2.0\n\n\ncurl\n5.0.0\n\n\ndagitty\n0.3-1\n\n\ndata.table\n1.14.8\n\n\ndata.tree\n1.0.0\n\n\nDataCombine\n0.2.21\n\n\ndatasets\n4.3.0\n\n\ndatawizard\n0.7.1\n\n\nDBI\n1.1.3\n\n\ndbplyr\n2.3.2\n\n\ndcurver\n0.9.2\n\n\ndemocracyData\n0.5.0\n\n\ndendextend\n1.17.1\n\n\nDeriv\n4.1.3\n\n\ndesc\n1.4.2\n\n\ndevtools\n2.4.5\n\n\ndiffobj\n0.3.5\n\n\ndigest\n0.6.31\n\n\ndownlit\n0.4.2\n\n\ndplyr\n1.1.2\n\n\nDT\n0.27\n\n\ndtplyr\n1.3.1\n\n\ne1071\n1.7-13\n\n\nellipsis\n0.3.2\n\n\nestimatr\n1.0.0\n\n\nevaluate\n0.21\n\n\nextrafont\n0.19\n\n\nextrafontdb\n1.0\n\n\nfansi\n1.0.4\n\n\nfarver\n2.1.1\n\n\nfastDummies\n1.6.3\n\n\nfastmap\n1.1.1\n\n\nfontawesome\n0.5.1\n\n\nfontBitstreamVera\n0.1.1\n\n\nfontLiberation\n0.1.0\n\n\nfontquiver\n0.2.1\n\n\nforcats\n1.0.0\n\n\nforeign\n0.8-84\n\n\nformatR\n1.14\n\n\nFormula\n1.2-5\n\n\nfs\n1.6.2\n\n\nfusen\n0.4.1\n\n\nfuzzyjoin\n0.1.6\n\n\ngamlss.dist\n6.0-5\n\n\ngapminder\n1.0.0\n\n\ngargle\n1.4.0\n\n\ngdtools\n0.3.3\n\n\ngenerics\n0.1.3\n\n\ngeojsonsf\n2.0.3\n\n\ngeometries\n0.2.2\n\n\ngeosphere\n1.5-18\n\n\ngert\n1.9.2\n\n\ngfonts\n0.2.0\n\n\nggalluvial\n0.12.5\n\n\nGGally\n2.1.2\n\n\nggbump\n0.1.0\n\n\nggdag\n0.2.8\n\n\nggdendro\n0.1.23\n\n\nggExtra\n0.10.0\n\n\nggfittext\n0.10.0\n\n\nggforce\n0.4.1\n\n\ngghighlight\n0.4.0\n\n\nggmosaic\n0.3.3\n\n\nggplot2\n3.4.2\n\n\nggpubr\n0.6.0\n\n\nggraph\n2.1.0\n\n\nggrepel\n0.9.3\n\n\nggridges\n0.5.4\n\n\nggsci\n3.0.0\n\n\nggsignif\n0.6.4\n\n\nggstance\n0.3.6\n\n\ngh\n1.4.0\n\n\nghibli\n0.3.3\n\n\ngitcreds\n0.1.2\n\n\nglue\n1.6.2\n\n\ngolem\n0.4.0\n\n\ngoogledrive\n2.1.0\n\n\ngooglePolylines\n0.8.3\n\n\ngooglesheets4\n1.1.0\n\n\nGPArotation\n2023.3-1\n\n\ngraphics\n4.3.0\n\n\ngraphlayouts\n1.0.0\n\n\ngrDevices\n4.3.0\n\n\ngrid\n4.3.0\n\n\ngridExtra\n2.3\n\n\ngridtext\n0.1.5\n\n\ngt\n0.9.0\n\n\ngtable\n0.3.3\n\n\ngtExtras\n0.4.5\n\n\ngtools\n3.9.4\n\n\nhaven\n2.5.2\n\n\nhere\n1.0.1\n\n\nhighr\n0.10\n\n\nhms\n1.1.3\n\n\nhrbrthemes\n0.8.0\n\n\nhtmltools\n0.5.5\n\n\nhtmlwidgets\n1.6.2\n\n\nhttpcode\n0.3.0\n\n\nhttpuv\n1.6.10\n\n\nhttr\n1.4.6\n\n\nhttr2\n0.2.3\n\n\nicons\n0.2.0\n\n\nids\n1.0.1\n\n\nigraph\n1.4.2\n\n\nini\n0.3.1\n\n\ninline\n0.3.19\n\n\ninsight\n0.19.1\n\n\nisoband\n0.2.7\n\n\njpeg\n0.1-10\n\n\njpmesh\n2.1.0\n\n\njpndistrict\n0.3.9.9000\n\n\njquerylib\n0.1.4\n\n\njsonify\n1.2.2\n\n\njsonlite\n1.8.4\n\n\njuicyjuice\n0.1.0\n\n\nkableExtra\n1.3.4\n\n\nKernSmooth\n2.23-21\n\n\nknitr\n1.42\n\n\nlabeling\n0.4.2\n\n\nlater\n1.3.1\n\n\nlattice\n0.21-8\n\n\nlazyeval\n0.2.2\n\n\nleaflet\n2.1.2\n\n\nleaflet.providers\n1.9.0\n\n\nlifecycle\n1.0.3\n\n\nlist\n9.2.4\n\n\nlme4\n1.1-33\n\n\nlmtest\n0.9-40\n\n\nlobstr\n1.1.2\n\n\nloo\n2.6.0\n\n\nlpdensity\n2.4\n\n\nlubridate\n1.9.2\n\n\nmagic\n1.6-1\n\n\nmagick\n2.7.4\n\n\nmagrittr\n2.0.3\n\n\nmarginaleffects\n0.11.1\n\n\nmargins\n0.3.26\n\n\nmarkdown\n1.6\n\n\nMASS\n7.3-60\n\n\nMatrix\n1.5-4\n\n\nMatrixModels\n0.5-1\n\n\nmatrixStats\n0.63.0\n\n\nmemoise\n2.0.1\n\n\nmethods\n4.3.0\n\n\nmgcv\n1.8-42\n\n\nmime\n0.12\n\n\nminiUI\n0.1.1.1\n\n\nminqa\n1.2.5\n\n\nmirt\n1.38.1\n\n\nmitools\n2.4\n\n\nmodelr\n0.1.11\n\n\nmodelsummary\n1.4.0\n\n\nmunsell\n0.5.0\n\n\nmvtnorm\n1.1-3\n\n\nnlme\n3.1-162\n\n\nnloptr\n2.0.3\n\n\nnnet\n7.3-19\n\n\nnumDeriv\n2016.8-1.1\n\n\nopenssl\n2.0.6\n\n\nopenxlsx\n4.2.5.2\n\n\npackrat\n0.9.1\n\n\npacman\n0.5.1\n\n\npagedown\n0.20\n\n\npaletteer\n1.5.0\n\n\npander\n0.6.5\n\n\nparallel\n4.3.0\n\n\nparameters\n0.21.0\n\n\nparsermd\n0.1.2\n\n\npbapply\n1.7-0\n\n\npbkrtest\n0.5.2\n\n\nperformance\n0.10.3\n\n\npermute\n0.9-7\n\n\npillar\n1.9.0\n\n\npkgbuild\n1.4.0\n\n\npkgconfig\n2.0.3\n\n\npkgdown\n2.0.7\n\n\npkgload\n1.3.2\n\n\nplotly\n4.10.1\n\n\nplyr\n1.8.8\n\n\npng\n0.1-8\n\n\npolyclip\n1.10-4\n\n\npolynom\n1.4-1\n\n\npraise\n1.0.0\n\n\nPRcalc\n0.7.0\n\n\nprediction\n0.3.14\n\n\nprettyunits\n1.1.1\n\n\nprismatic\n1.1.1\n\n\nprocessx\n3.8.1\n\n\nproductplots\n0.1.1\n\n\nprofvis\n0.3.8\n\n\nprogress\n1.2.2\n\n\npromises\n1.2.0.1\n\n\nproxy\n0.4-27\n\n\npryr\n0.1.6\n\n\nps\n1.7.5\n\n\npsData\n0.2.2\n\n\npurrr\n1.0.1\n\n\nquadprog\n1.5-8\n\n\nquantreg\n5.95\n\n\nquarto\n1.2\n\n\nR.cache\n0.16.0\n\n\nR.methodsS3\n1.8.2\n\n\nR.oo\n1.25.0\n\n\nR.utils\n2.12.2\n\n\nR6\n2.5.1\n\n\nragg\n1.2.5\n\n\nrapidjsonr\n1.2.0\n\n\nrappdirs\n0.3.3\n\n\nrapportools\n1.1\n\n\nraster\n3.6-20\n\n\nrcmdcheck\n1.4.0\n\n\nRColorBrewer\n1.1-3\n\n\nRcpp\n1.0.10\n\n\nRcppArmadillo\n0.12.2.0.0\n\n\nRcppEigen\n0.3.3.9.3\n\n\nRcppParallel\n5.1.7\n\n\nrdd\n0.57\n\n\nrddensity\n2.4\n\n\nrdrobust\n2.1.1\n\n\nreactable\n0.4.4\n\n\nreactR\n0.4.4\n\n\nreadr\n2.1.4\n\n\nreadxl\n1.4.2\n\n\nRefManageR\n1.4.0\n\n\nrematch\n1.0.1\n\n\nrematch2\n2.1.2\n\n\nremotes\n2.4.2\n\n\nrenderthis\n0.2.1\n\n\nreprex\n2.0.2\n\n\nreshape\n0.8.9\n\n\nreshape2\n1.4.4\n\n\nrio\n0.5.29\n\n\nrJava\n1.0-6\n\n\nrlang\n1.1.1\n\n\nrmapshaper\n0.5.0\n\n\nrmarkdown\n2.21\n\n\nrmdja\n0.4.6.9\n\n\nrnaturalearth\n0.3.2\n\n\nrnaturalearthdata\n0.1.0\n\n\nrnaturalearthhires\n0.2.1\n\n\nroxygen2\n7.2.3\n\n\nrpart\n4.1.19\n\n\nrprojroot\n2.0.3\n\n\nrqog\n0.4.2023\n\n\nrsconnect\n0.8.29\n\n\nrstan\n2.21.8\n\n\nrstatix\n0.7.2\n\n\nrstudioapi\n0.14\n\n\nRttf2pt1\n1.3.12\n\n\nrversions\n2.1.2\n\n\nrvest\n1.0.3\n\n\ns2\n1.1.3\n\n\nsandwich\n3.0-2\n\n\nsass\n0.4.6\n\n\nscales\n1.2.1\n\n\nselectr\n0.4-2\n\n\nservr\n0.27\n\n\nsessioninfo\n1.2.2\n\n\nsf\n1.0-12\n\n\nsfheaders\n0.4.2\n\n\nshades\n1.4.0\n\n\nshiny\n1.7.4\n\n\nshiny.i18n\n0.3.0\n\n\nshinyBS\n0.61.1\n\n\nshinyjs\n2.1.0\n\n\nSimpleConjoint\n0.1.1\n\n\nsourcetools\n0.1.7-1\n\n\nsp\n1.6-0\n\n\nSparseM\n1.81\n\n\nspatial\n7.3-16\n\n\nsplines\n4.3.0\n\n\nStanHeaders\n2.21.0-7\n\n\nstargazer\n5.2.3\n\n\nstats\n4.3.0\n\n\nstats4\n4.3.0\n\n\nstringdist\n0.9.10\n\n\nstringi\n1.7.12\n\n\nstringr\n1.5.0\n\n\nstyler\n1.9.1\n\n\nsummarytools\n1.0.1\n\n\nsurvey\n4.2-1\n\n\nsurvival\n3.5-5\n\n\nsvglite\n2.1.1\n\n\nsys\n3.4.1\n\n\nsystemfonts\n1.0.4\n\n\ntables\n0.9.17\n\n\ntcltk\n4.3.0\n\n\nterra\n1.7-29\n\n\ntestthat\n3.1.8\n\n\ntextshaping\n0.3.6\n\n\ntibble\n3.2.1\n\n\ntidygraph\n1.2.3\n\n\ntidyr\n1.3.0\n\n\ntidyselect\n1.2.0\n\n\ntidyverse\n2.0.0\n\n\ntimechange\n0.2.0\n\n\ntinytex\n0.45\n\n\ntitanic\n0.1.0\n\n\ntools\n4.3.0\n\n\ntreemapify\n2.5.5\n\n\ntriebeard\n0.4.1\n\n\ntweenr\n2.0.2\n\n\ntzdb\n0.3.0\n\n\nunits\n0.8-2\n\n\nurlchecker\n1.0.1\n\n\nurlshorteneR\n1.5.7\n\n\nurltools\n1.7.3\n\n\nusethis\n2.1.6\n\n\nutf8\n1.2.3\n\n\nutils\n4.3.0\n\n\nuuid\n1.1-0\n\n\nV8\n4.3.0\n\n\nvctrs\n0.6.2\n\n\nvdemdata\n13.0\n\n\nvegan\n2.6-4\n\n\nVGAM\n1.1-8\n\n\nviridis\n0.6.3\n\n\nviridisLite\n0.4.2\n\n\nvroom\n1.6.3\n\n\nwaldo\n0.5.1\n\n\nwebshot\n0.5.4\n\n\nwebsocket\n1.4.1\n\n\nwhisker\n0.4.1\n\n\nwithr\n2.5.0\n\n\nwk\n0.7.3\n\n\nwoRdle\n0.0.1\n\n\nxaringan\n0.28\n\n\nxaringanExtra\n0.7.0.9000\n\n\nxfun\n0.39\n\n\nxlsx\n0.6.5\n\n\nxlsxjars\n0.6.1\n\n\nxml2\n1.3.4\n\n\nxopen\n1.0.0\n\n\nxtable\n1.8-4\n\n\nyaml\n2.3.7\n\n\nzip\n2.3.0\n\n\nzoo\n1.8-12"
  },
  {
    "objectID": "slides/micro/visualization2.html#named-graphs-5ng",
    "href": "slides/micro/visualization2.html#named-graphs-5ng",
    "title": "ミクロ政治データ分析実習",
    "section": "5 Named Graphs (5NG)",
    "text": "5 Named Graphs (5NG)\n\n棒グラフ (bar plot)\n\ngeom_col() or geom_bar()\n\nヒストグラム (histogram)\n\ngeom_histogram()\n\n箱ひげ図 (box plot / box-and-whisker plot)\n\ngeom_box()\n\n散布図 (scatter plot)\n\ngeom_point()\n\n折れ線グラフ (line plot)\n\ngeom_line()"
  },
  {
    "objectID": "slides/micro/visualization2.html#グラフ作成の手順",
    "href": "slides/micro/visualization2.html#グラフ作成の手順",
    "title": "ミクロ政治データ分析実習",
    "section": "グラフ作成の手順",
    "text": "グラフ作成の手順\n\n作成したいグラフを決める\n作成したいグラフの完成図を想像する or 描いてみる\nグラフ上の要素（点、線、面）が持つ情報を考える\n3の情報が一つの変数（列）と対応するような整然データを作成する\n{ggplot2}で作図\n図のカスタマイズ\n図の保存"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒グラフの必須要素",
    "href": "slides/micro/visualization2.html#棒グラフの必須要素",
    "title": "ミクロ政治データ分析実習",
    "section": "棒グラフの必須要素",
    "text": "棒グラフの必須要素\n棒グラフを作成する際に必要な最低限の情報\n\n\n\nx: 棒の横軸上の位置 (大陸)\ny: 棒の高さ (人間開発指数の平均値)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ny: 棒の縦軸上の位置 (大陸)\nx: 棒の長さ (人間開発指数の平均値)"
  },
  {
    "objectID": "slides/micro/visualization2.html#データの用意",
    "href": "slides/micro/visualization2.html#データの用意",
    "title": "ミクロ政治データ分析実習",
    "section": "データの用意",
    "text": "データの用意\n第9回講義のデータ (countries.csv) を使用\n\n{dplyr}を使用し、大陸 (Continent)ごとの人間開発指数 (HDI_2018)の平均値を計算し、df2という名で格納\n\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")\n\ndf2 &lt;- df |&gt;\n   group_by(Continent) |&gt;\n   summarise(HDI = mean(HDI_2018, na.rm = TRUE))\n\ndf2\n\n# A tibble: 5 × 2\n  Continent   HDI\n  &lt;chr&gt;     &lt;dbl&gt;\n1 Africa    0.553\n2 America   0.742\n3 Asia      0.723\n4 Europe    0.861\n5 Oceania   0.782"
  },
  {
    "objectID": "slides/micro/visualization2.html#とりあえず作図してみよう",
    "href": "slides/micro/visualization2.html#とりあえず作図してみよう",
    "title": "ミクロ政治データ分析実習",
    "section": "とりあえず作図してみよう",
    "text": "とりあえず作図してみよう\n\n使用する幾何オブジェクト: geom_col()\nマッピング要素 (幾何オブジェクト内にaes())\n\n棒の横軸上の位置は大陸 (Continent)を意味する\n棒の高さは人間開発指数の平均値 (HDI)を意味する\n\n\n\n\nコード\n\nbar_plot1 &lt;- df2 |&gt;\n  ggplot() +\n  geom_col(aes(x = Continent, y = HDI))\n\n\n\n\n結果\n\nbar_plot1"
  },
  {
    "objectID": "slides/micro/visualization2.html#日本語の使用-1",
    "href": "slides/micro/visualization2.html#日本語の使用-1",
    "title": "ミクロ政治データ分析実習",
    "section": "日本語の使用 (1)",
    "text": "日本語の使用 (1)\nStep1: df2のContinent列を日本語にリコーディング\n\ndf2 &lt;- df2 |&gt;\n   mutate(Continent_J = case_when(Continent == \"Asia\"    ~ \"アジア\",\n                                  Continent == \"Africa\"  ~ \"アフリカ\",\n                                  Continent == \"America\" ~ \"アメリカ\",\n                                  Continent == \"Europe\"  ~ \"ヨーロッパ\",\n                                  TRUE                   ~ \"オセアニア\"))\n\ndf2\n\n# A tibble: 5 × 3\n  Continent   HDI Continent_J\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      \n1 Africa    0.553 アフリカ   \n2 America   0.742 アメリカ   \n3 Asia      0.723 アジア     \n4 Europe    0.861 ヨーロッパ \n5 Oceania   0.782 オセアニア"
  },
  {
    "objectID": "slides/micro/visualization2.html#日本語の使用-2",
    "href": "slides/micro/visualization2.html#日本語の使用-2",
    "title": "ミクロ政治データ分析実習",
    "section": "日本語の使用 (2)",
    "text": "日本語の使用 (2)\nStep2: 図のラベルを修正 (labs())\n\ndf2 |&gt;\n   ggplot() +\n   geom_col(aes(x = Continent_J, y = HDI)) +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#文字化けが生じる場合",
    "href": "slides/micro/visualization2.html#文字化けが生じる場合",
    "title": "ミクロ政治データ分析実習",
    "section": "文字化けが生じる場合",
    "text": "文字化けが生じる場合\nJDCat分析ツールを使用する場合、文字化けは生じない\n\ntheme_*()レイヤーを追加し、base_family = \"日本語フォント\"を指定\ntheme_gray(): {ggplot2}の基本テーマ\n\n他にもtheme_bw()、theme_minimal()など\n\nmacOSの場合、\"HiraginoSans-W3\"、Windowsの場合、\"Yu Gothic\"を指定\n\n\ndf2 |&gt;\n   ggplot() +\n   geom_col(aes(x = Continent_J, y = HDI)) +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\") +\n   theme_gray(base_family = \"HiraginoSans-W3\")\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒の並び替え",
    "href": "slides/micro/visualization2.html#棒の並び替え",
    "title": "ミクロ政治データ分析実習",
    "section": "棒の並び替え",
    "text": "棒の並び替え\nアルファベット順に並べ替えたい場合\n\nコード結果\n\n\n\nContinet_J列をfactor化し、アフリカ、アメリカ、アジア、ヨーロッパ、オセアニア順とする\n\n\ndf2 |&gt;\n   mutate(Continent_J = factor(Continent_J, \n                               levels = c(\"アフリカ\", \"アメリカ\", \"アジア\", \n                                          \"ヨーロッパ\", \"オセアニア\"))) |&gt; \n   ggplot() +\n   geom_col(aes(x = Continent_J, y = HDI)) +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\") +\n   theme_bw() # Black and Whiteテーマも使ってみよう"
  },
  {
    "objectID": "slides/micro/visualization2.html#便利な関数-fct_inorder",
    "href": "slides/micro/visualization2.html#便利な関数-fct_inorder",
    "title": "ミクロ政治データ分析実習",
    "section": "便利な関数: fct_inorder()",
    "text": "便利な関数: fct_inorder()\n{forcats}のfct_inorder()関数（{forcats}は{tidyverse}の一部）\n\nfactor化を行い、各要素順番を表で登場した順番とする\n\n\n\n\n# df2の中身\ndf2\n\n# A tibble: 5 × 3\n  Continent   HDI Continent_J\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      \n1 Africa    0.553 アフリカ   \n2 America   0.742 アメリカ   \n3 Asia      0.723 アジア     \n4 Europe    0.861 ヨーロッパ \n5 Oceania   0.782 オセアニア \n\n\n\n\n\n\ndf2 |&gt;\n   mutate(Continent_J = fct_inorder(Continent_J)) |&gt;\n   ggplot() +\n   geom_col(aes(x = Continent_J, y = HDI)) +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#ケース数の棒グラフ",
    "href": "slides/micro/visualization2.html#ケース数の棒グラフ",
    "title": "ミクロ政治データ分析実習",
    "section": "ケース数の棒グラフ",
    "text": "ケース数の棒グラフ\n各政治体制に属する国家数を計算\n\ndf3 &lt;- df |&gt;\n   drop_na(Polity_Type) |&gt;\n   mutate(Polity_Type = factor(Polity_Type,\n                               levels = c(\"Autocracy\", \"Closed Anocracy\",\n                                          \"Open Anocracy\", \"Democracy\",\n                                          \"Full Democracy\"))) |&gt;\n   group_by(Polity_Type) |&gt;\n   summarise(N = n())\n\ndf3\n\n# A tibble: 5 × 2\n  Polity_Type         N\n  &lt;fct&gt;           &lt;int&gt;\n1 Autocracy          19\n2 Closed Anocracy    23\n3 Open Anocracy      20\n4 Democracy          65\n5 Full Democracy     31"
  },
  {
    "objectID": "slides/micro/visualization2.html#作図",
    "href": "slides/micro/visualization2.html#作図",
    "title": "ミクロ政治データ分析実習",
    "section": "作図",
    "text": "作図\n\ndf3 |&gt;\n   ggplot() +\n   geom_col(aes(x = Polity_Type, y = N))"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒が持つ情報",
    "href": "slides/micro/visualization2.html#棒が持つ情報",
    "title": "ミクロ政治データ分析実習",
    "section": "棒が持つ情報",
    "text": "棒が持つ情報\n\n政治体制のタイプ (x = Polity_Type)\n国家数 (y = N)\n\n例) さらに大陸の情報を持たせ、色分けしたい\n\n大陸の列が必要\n\n\ndf4 &lt;- df |&gt;\n   drop_na(Polity_Type) |&gt;\n   mutate(Polity_Type = factor(Polity_Type,\n                               levels = c(\"Autocracy\", \"Closed Anocracy\",\n                                          \"Open Anocracy\", \"Democracy\",\n                                          \"Full Democracy\"))) |&gt;\n   group_by(Polity_Type, Continent) |&gt;\n   summarise(N       = n(),\n             .groups = \"drop\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#データ",
    "href": "slides/micro/visualization2.html#データ",
    "title": "ミクロ政治データ分析実習",
    "section": "データ",
    "text": "データ\n\ndf4\n\n# A tibble: 20 × 3\n   Polity_Type     Continent     N\n   &lt;fct&gt;           &lt;chr&gt;     &lt;int&gt;\n 1 Autocracy       Africa        3\n 2 Autocracy       Asia         14\n 3 Autocracy       Europe        2\n 4 Closed Anocracy Africa       14\n 5 Closed Anocracy America       2\n 6 Closed Anocracy Asia          6\n 7 Closed Anocracy Europe        1\n 8 Open Anocracy   Africa       12\n 9 Open Anocracy   America       4\n10 Open Anocracy   Europe        2\n11 Open Anocracy   Oceania       2\n12 Democracy       Africa       18\n13 Democracy       America      16\n14 Democracy       Asia         15\n15 Democracy       Europe       16\n16 Full Democracy  Africa        1\n17 Full Democracy  America       5\n18 Full Democracy  Asia          3\n19 Full Democracy  Europe       20\n20 Full Democracy  Oceania       2"
  },
  {
    "objectID": "slides/micro/visualization2.html#次元の追加-1",
    "href": "slides/micro/visualization2.html#次元の追加-1",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加",
    "text": "次元の追加\naes()内にfill = Continentを追加\n\ndf4 |&gt;\n  ggplot() +\n  geom_col(aes(x = Polity_Type, y = N, fill = Continent))"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒の位置をずらす",
    "href": "slides/micro/visualization2.html#棒の位置をずらす",
    "title": "ミクロ政治データ分析実習",
    "section": "棒の位置をずらす",
    "text": "棒の位置をずらす\ngeom_col()内にposition = \"dodge\"を指定（aes()の外）\n\ndf4 |&gt;\n  ggplot() +\n  geom_col(aes(x = Polity_Type, y = N, fill = Continent), \n           position = \"dodge\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#凡例の位置調整",
    "href": "slides/micro/visualization2.html#凡例の位置調整",
    "title": "ミクロ政治データ分析実習",
    "section": "凡例の位置調整",
    "text": "凡例の位置調整\ntheme()内にlegend.position = \"bottom\"を指定\n\nデフォルトは\"right\"（\"top\"は上段; \"none\"は削除）\n\n\nコード結果\n\n\n\ndf4 |&gt;\n  ggplot() +\n  geom_col(aes(x = Polity_Type, y = N, fill = Continent),\n           position = \"dodge\") +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#もう一つの方法-マッピングの交換",
    "href": "slides/micro/visualization2.html#もう一つの方法-マッピングの交換",
    "title": "ミクロ政治データ分析実習",
    "section": "もう一つの方法: マッピングの交換",
    "text": "もう一つの方法: マッピングの交換\n\n前ページの場合、「ある政治体制内の大陸の分布」を知ることに特化\n「ある大陸内の政治体制の分布」を見るには? \\(\\rightarrow\\) xとfillを交換\n\n\nコード結果\n\n\n\ndf4 |&gt;\n  ggplot() +\n  geom_col(aes(x = Continent, y = N, fill = Polity_Type),\n           position = \"dodge\") +\n  labs(x = \"Continent\", y = \"Number of Countries\", fill = \"Polity Type\")"
  },
  {
    "objectID": "slides/micro/visualization2.html#もう一つの方法-ファセット分割",
    "href": "slides/micro/visualization2.html#もう一つの方法-ファセット分割",
    "title": "ミクロ政治データ分析実習",
    "section": "もう一つの方法: ファセット分割",
    "text": "もう一つの方法: ファセット分割\n\n色分けを出来る限り抑えたい\nfacet_wrap(~ 分割の基準となる変数名)\n\n\nコード結果\n\n\n\nbar_plot2 &lt;- df4 |&gt;\n  ggplot() +\n  geom_col(aes(x = Polity_Type, y = N)) +\n  facet_wrap(~ Continent, ncol = 5) # ncol/nrowで列/行数の指定が可能\n\n\n\n\nbar_plot2"
  },
  {
    "objectID": "slides/micro/visualization2.html#値ラベルの回転",
    "href": "slides/micro/visualization2.html#値ラベルの回転",
    "title": "ミクロ政治データ分析実習",
    "section": "値ラベルの回転",
    "text": "値ラベルの回転\n値ラベルが長すぎる場合、ラベルを回転することで重複を避ける\n\n覚える必要はなく、必要に応じてググる（theme()レイヤーはかなり複雑）\n\n\nコード結果\n\n\n\n# 以下のように図オブジェクトに直接「+」でレイヤーを追加することもできる。\nbar_plot3 &lt;- bar_plot2 +\n   theme_minimal() + # テーマを変えてみよう\n   theme(axis.text.x = element_text(angle = 35, vjust = 1, hjust = 1)) # 35度回転\n\n\n\n\nbar_plot3"
  },
  {
    "objectID": "slides/micro/visualization2.html#マッピング交換でも解決可能",
    "href": "slides/micro/visualization2.html#マッピング交換でも解決可能",
    "title": "ミクロ政治データ分析実習",
    "section": "マッピング交換でも解決可能",
    "text": "マッピング交換でも解決可能\nxとyを交換しても良い\n\nコード結果\n\n\n\nbar_plot4 &lt;- df4 |&gt;\n  ggplot() +\n  geom_col(aes(x = N, y = Polity_Type)) +\n  labs(x = \"Number of Countries\", y = \"Poltiy Type\") +\n  facet_wrap(~ Continent, ncol = 5) + # 5列のファセット分割\n  theme_minimal(base_size = 12)       # フォントサイズの調整も可能\n\n\n\n\nbar_plot4"
  },
  {
    "objectID": "slides/micro/visualization2.html#ベクトルとビットマップ",
    "href": "slides/micro/visualization2.html#ベクトルとビットマップ",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトルとビットマップ",
    "text": "ベクトルとビットマップ\nベクトル画像を推奨するが、使用するワードソフトによってはPDFの図の埋め込みができない場合もある。\n\n本講義では高解像度の.png形式の保存方法について解説する。\n\n\n\nベクトル画像\n\n.pdf、.svgなど\n\n推奨はPDF形式\n\n拡大しても図が綺麗なまま\n複雑な図であれば、ファイルのサイズが大きくなる\n\n\n\n\n\n\n\n\n\nビットマップ画像\n\n.png、.bmp、.jpg（= .jpeg）など\n\n推奨はPNG形式\n\n拡大すると図がカクカクする\n\n高い解像度（DPI）にすると、拡大しても綺麗だが、ファイルサイズに注意\n\n図が複雑でも、ファイルサイズが比較的安定"
  },
  {
    "objectID": "slides/micro/visualization2.html#図の保存-1",
    "href": "slides/micro/visualization2.html#図の保存-1",
    "title": "ミクロ政治データ分析実習",
    "section": "図の保存",
    "text": "図の保存\nbar_plot3を保存する例\n\nggsave()関数を利用\n作業フォルダー内のFigsフォルダにFigure1.pngという名で保存\n\n予めFigsフォルダーを作成しておくこと\n\n図のサイズは幅6インチ、高さ3インチ\n保存形式はPNG形式 & 解像度は400\n\n画面表示のみなら最低150、印刷目的なら最低300\n\n{ragg}パッケージをインストールしておく（文字化け防止）\n\n\nggsave(filename = \"Figs/Figure1.png\", # 保存先とファイル名\n       plot     = bar_plot3,          # 保存する図のオブジェクト名\n       width    = 6,                  # 図の幅 (インチ)\n       height   = 3,                  # 図の高さ (インチ)\n       dpi      = 400,                # 解像度\n       device   = ragg::agg_png)      # 文字化け防止\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/visualization2.html#section",
    "href": "slides/micro/visualization2.html#section",
    "title": "ミクロ政治データ分析実習",
    "section": "",
    "text": "ヒストグラム"
  },
  {
    "objectID": "slides/micro/visualization2.html#変数の分布を確認する方法",
    "href": "slides/micro/visualization2.html#変数の分布を確認する方法",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の分布を確認する方法",
    "text": "変数の分布を確認する方法\n変数が一つの場合\n\n変数が離散変数の場合: 棒グラフ\n\n性別、国、都道府県など、数値が意味を持たないか変数\n順位など取りうる値が有限\n\n変数が連続変数の場合: ヒストグラム、箱ひげ図\n\n気温、成績、所得、身長、体重、人間開発指数、…\n取りうる値が無限個\n\n\n変数が2つの場合\n\n連続変数と連続変数: 散布図\n順序付き離散変数と連続変数: 折れ線グラフ\n離散変数と離散変数: モザイク図\n\n変数が3つ以上の場合\n\n次元を追加する形で対応"
  },
  {
    "objectID": "slides/micro/visualization2.html#ヒストグラムの棒が持つ情報",
    "href": "slides/micro/visualization2.html#ヒストグラムの棒が持つ情報",
    "title": "ミクロ政治データ分析実習",
    "section": "ヒストグラムの棒が持つ情報",
    "text": "ヒストグラムの棒が持つ情報\n棒の横軸上の位置と高さ\n\n{ggplot2}の場合、ヒストグラムを出力する変数をxにマッピングするだけで、自動的にヒストグラムを生成"
  },
  {
    "objectID": "slides/micro/visualization2.html#ヒストグラムの作成",
    "href": "slides/micro/visualization2.html#ヒストグラムの作成",
    "title": "ミクロ政治データ分析実習",
    "section": "ヒストグラムの作成",
    "text": "ヒストグラムの作成\ngeom_histogram()を使用: マッピングはxのみ\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018)) # HDI_2018のヒストグラム"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒の数を調整する",
    "href": "slides/micro/visualization2.html#棒の数を調整する",
    "title": "ミクロ政治データ分析実習",
    "section": "棒の数を調整する",
    "text": "棒の数を調整する\ngeom_histogram()内、aes()の外にbins引数を指定\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), bins = 10) # 棒を10本にする"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒の幅を調整する",
    "href": "slides/micro/visualization2.html#棒の幅を調整する",
    "title": "ミクロ政治データ分析実習",
    "section": "棒の幅を調整する",
    "text": "棒の幅を調整する\ngeom_histogram()内、aes()の外にbinwidth引数を指定\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), binwidth = 0.05) # 棒の幅を0.05にする"
  },
  {
    "objectID": "slides/micro/visualization2.html#棒の枠線を入れる",
    "href": "slides/micro/visualization2.html#棒の枠線を入れる",
    "title": "ミクロ政治データ分析実習",
    "section": "棒の枠線を入れる",
    "text": "棒の枠線を入れる\ngeom_histogram()内、aes()の外にcolor引数を指定\n\nhist_plot1 &lt;- df |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), binwidth = 0.05, color = \"white\") +\n  labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\")\nhist_plot1"
  },
  {
    "objectID": "slides/micro/visualization2.html#横軸のスケール調整",
    "href": "slides/micro/visualization2.html#横軸のスケール調整",
    "title": "ミクロ政治データ分析実習",
    "section": "横軸のスケール調整",
    "text": "横軸のスケール調整\nscale_x_continuous()を使用 (xをyに変えると縦軸修正)\n\nbreaks引数: 目盛りの位置 / labels引数: 目盛りのラベル\n\n\nコード結果\n\n\n\nhist_plot2 &lt;- hist_plot1 +\n   scale_x_continuous(breaks = seq(0.4, 1.0, by = 0.1),\n                      labels = seq(0.4, 1.0, by = 0.1))\n\n\n\n\nhist_plot2"
  },
  {
    "objectID": "slides/micro/visualization2.html#次元の追加ファセット分割",
    "href": "slides/micro/visualization2.html#次元の追加ファセット分割",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加（ファセット分割）",
    "text": "次元の追加（ファセット分割）\n大陸ごとのHDI_2018のヒストグラム: ファセット分割を使用\n\nhist_plot1 +\n   facet_wrap(~Continent, ncol = 6)"
  },
  {
    "objectID": "slides/micro/visualization2.html#次元の追加-色分け",
    "href": "slides/micro/visualization2.html#次元の追加-色分け",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加 (色分け)",
    "text": "次元の追加 (色分け)\nposition = \"identity\"とalpha = 0.5で可能であるが、非推奨\n\nalpha = 1の場合、棒が不透明であるため、0.5程度に調整\n\n\nコード結果\n\n\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"OECD Members\", \"Others\")) |&gt;\n   ggplot() +\n   geom_histogram(aes(x = HDI_2018, fill = OECD), position = \"identity\",\n                  binwidth = 0.05, color = \"white\", alpha = 0.5)"
  },
  {
    "objectID": "slides/micro/r.html#rとは",
    "href": "slides/micro/r.html#rとは",
    "title": "ミクロ政治データ分析実習",
    "section": "Rとは",
    "text": "Rとは\n\n\n\n\n\n\n統計、データ分析、作図のためのインタープリタープログラミング言語\n1976年開発されたS言語の後継者\nRoss IhakaとRobert Clifford Gentlemanが開発\n統計分析のためのソフトウェアは星の数ほど存在"
  },
  {
    "objectID": "slides/micro/r.html#統計ソフトウェア言語",
    "href": "slides/micro/r.html#統計ソフトウェア言語",
    "title": "ミクロ政治データ分析実習",
    "section": "統計ソフトウェア/言語",
    "text": "統計ソフトウェア/言語\n有償\n\nSAS\nSPSS\nStata\nMATLAB\n\n無償\n\nPSPP: SPSSにとてもよく似た無料ソフトウェア\nJASP/jamovi: 裏で動いているのはR\ngretl: 時系列分析など、計量経済学で利用される手法に特化したソフト\nGNU Octave: MATLABとほぼ同じ文法をもつ無料言語\nHAD: 清水裕士先生が開発しているExcelベースのデータ分析マクロ\n\nただし、Excelが有償ソフト"
  },
  {
    "objectID": "slides/micro/r.html#rのライバルたちどれも無料",
    "href": "slides/micro/r.html#rのライバルたちどれも無料",
    "title": "ミクロ政治データ分析実習",
    "section": "Rのライバルたち（どれも無料）",
    "text": "Rのライバルたち（どれも無料）\n\n現在のデータサイエンス業界において標準はR + Python\nどれもGUI（Graphical User Interface）でなく、CUI（Character User Interface）\n\n\n\n\n\n\n\n\nPython\n\n汎用プログラミング言語\n機械分析に強い\n豊富なパッケージ\nRより速く、Juliaより遅い\n\n\n\n\n\n\n\n\n\nJulia\n\n統計プログラミング言語\n非常に高速\nパッケージがRやPythonに比べ、少ない"
  },
  {
    "objectID": "slides/micro/r.html#why-r",
    "href": "slides/micro/r.html#why-r",
    "title": "ミクロ政治データ分析実習",
    "section": "Why R?",
    "text": "Why R?\nR界隈の神様、Hadley Wickham（羽鳥先生）によると… (Hadley 2019)\n\n無料、オープンソース、多くのプラットフォームで利用可能\nオンライン、オフラインの両方で、多様なRコミュニティが存在\n膨大なパッケージが用意されている。\n分析結果を伝達する強力なツールを提供（R Markdown）\n代表的な統合開発環境であるRStudioはデータサイエンス、対話型のデータ分析、そして統計的プログラミングが必要とするものに最適化されている。\n多くの統計学や機械学習の研究者は自分の研究成果とRパッケージを同時に公開している。\nデータ分析を特化した言語（欠損値、データフレーム、ベクトル化など）\n関数型プログラミングのための最適な環境を提供\nRStudio社は営利企業であるものの、その収益の多くをオープンソースコミュニティーに投資している。\nメタプログラミングが非常に強力\nRはC、C++、Fortranのようなhigh-performance言語と容易に結合できるように設計されている。"
  },
  {
    "objectID": "slides/micro/r.html#guiとcui",
    "href": "slides/micro/r.html#guiとcui",
    "title": "ミクロ政治データ分析実習",
    "section": "GUIとCUI",
    "text": "GUIとCUI\n\n\n\n\n\n\nGUI：マウスでポチポチするだけで操作できる環境\n\n間違いがほぼ起きない\n柔軟性が低い（開発元が提供する機能しか使えない）\n分析の再現が難しい（出来ないわけではない）\n\nCUI：全ての操作を文字列ベース（=キーボード）で行う\n\n一文字でも間違えるとエラーが出たり\n柔軟性が高い（カスタマイズ自由）\n分析の再現性が非常に高い（コードさえ保存しておけばOK）"
  },
  {
    "objectID": "slides/micro/r.html#guiとcuiの操作の違い",
    "href": "slides/micro/r.html#guiとcuiの操作の違い",
    "title": "ミクロ政治データ分析実習",
    "section": "GUIとCUIの操作の違い",
    "text": "GUIとCUIの操作の違い\nData.csvを読み込み、Xという変数の平均値と分散を計算するまでの手順\n\n\nGUI (SPSS)の例\n\n「ファイル」→「開く」→「データ」をクリック\nファイルを選択し、「開く」をクリック\n「分析」→「記述統計」→「記述統計」をクリック\n左側のパネルからXを右側の「変数」パネルへ移動\n「オブション」をクリック\n「散らばり」の「分散」にチェック\n「続行」をクリック→「OK」をクリック\n\n\n\n\nCUI (R)の例\nMyData &lt;- read.csv(\"Data.csv\")\nmean(MyData$X)\nvar(MyData$X)"
  },
  {
    "objectID": "slides/micro/r.html#統合開発環境ide",
    "href": "slides/micro/r.html#統合開発環境ide",
    "title": "ミクロ政治データ分析実習",
    "section": "統合開発環境（IDE）",
    "text": "統合開発環境（IDE）\n\nR Studioが代表的（ほぼ一択）\n\n他にもR Tools for Visual Studio、VS Code、Atom、Sublime Text、Vim、Emacsなど\n\nIDEの使用は必須ではないが、生産性に大きく向上させる。\nデータ分析、プログラミングの手助けをする優秀な秘書\n\nファイルの管理、うろ覚えのコマンドの、コードの色分けなどを自動的に行う。\nコードの実行結果の画面をコードと同時に表示\nこれまでの作業を記録"
  },
  {
    "objectID": "slides/micro/r.html#rとrstudioの導入",
    "href": "slides/micro/r.html#rとrstudioの導入",
    "title": "ミクロ政治データ分析実習",
    "section": "RとRStudioの導入",
    "text": "RとRStudioの導入\n\n本講義のサポートページを参照\n対面講義では宋と一緒にRStudioの初期設定、起動、終了などを行う。\n\n\n\n\n導入 \\(\\neq\\) 起動\n\n\n　Rの「導入」はアプリのインストールの概念に近い。一方、「起動」はアプリの実行である。スマホのアプリを使う度にインストールする人はいないだろう。Rの導入は1回のみとし、複数回行わないこと。何かの不具合が生じるわけではないが、サーバー立ち上げ用のURLにアクセスする度に、サーバーが増え、自分が使っていたサーバーが何だったのかが分からなくなる。今後の授業では「サーバー立ち上げ用のURL」でなく、「起動用のURL」からアクセスすること。"
  },
  {
    "objectID": "slides/micro/r.html#プロジェクト機能について",
    "href": "slides/micro/r.html#プロジェクト機能について",
    "title": "ミクロ政治データ分析実習",
    "section": "「プロジェクト」機能について",
    "text": "「プロジェクト」機能について\n\n本講義のサポートページを参照\n\nRの使い方の「ファイルシステム」、「プロジェクト管理」、「ファイル管理」すべてを読むこと\n教科書の「ファイルシステム」も合わせて読もう。\n\n毎回の講義、課題ごとに独立したプロジェクトを作ること\nファイル・システムに関する知識（パス、相対パス、絶対パス）がない場合、プロジェクト機能は必須\n\nファイル・システムを知っている宋でも常にプロジェクト機能を使用している。"
  },
  {
    "objectID": "slides/micro/r.html#課題",
    "href": "slides/micro/r.html#課題",
    "title": "ミクロ政治データ分析実習",
    "section": "課題",
    "text": "課題\n課題の遂行有無は確認しない（履修者の良心に任せる）。\n\n課題1課題2\n\n\n\n以下の内容を熟読する。\n\n『私たちのR』の「ファイルシステム」\nサポートページ\n\nファイル・システム\nプロジェクト管理\nファイル管理\n\n\n本講義では簡単には説明するが、予め読んでおくこと。\n\n\n\n\n英字のブラインドタッチの練習\n\nGoogleで「タイピング練習」を検索\n例) https://manabi-gakushu.benesse.ne.jp/gakushu/typing/eigonyuryoku.html\n\n1分間、約150文字以上が打てるようにすること\n\n毎日欠かさず30分程度練習すれば2週間でできるようになる。\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/programming.html#ファイルシステムとは",
    "href": "slides/micro/programming.html#ファイルシステムとは",
    "title": "ミクロ政治データ分析実習",
    "section": "ファイル・システムとは",
    "text": "ファイル・システムとは\n（本講義の内容に限定すると）パソコン内のファイルのあり方\n\nPCには数万以上のファイルが存在する。\nこれらのファイルは一つに部屋に存在するのではなく、複数のフォルダー1（folder）に分かれて保存されている。\n\nこの授業の履修者もそれぞれの授業に関するファイルを一つの箇所でなく、科目名のフォルダーを作ってその中に保存しているはず。\nフォルダーの概念がないと…\n\n同じファイル名が使えない。\n管理が大変\n欲しいファイルが見つけにくいなどデメリットしかない。\n\n\n最近のソフトウェア/アプリではファイルの選択をフォルダーをクリックしながら行うが、R/Python/C/Javaなどではファイルの位置（\\(=\\)パス\\(\\simeq\\)住所）を直接書く必要がある。\n\nフォルダーはディレクトリー（directory）とも呼ばれる。"
  },
  {
    "objectID": "slides/micro/programming.html#パスpathの書き方",
    "href": "slides/micro/programming.html#パスpathの書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "パス（path）の書き方",
    "text": "パス（path）の書き方\n\n\n\n\n                      levelName\n1  .                           \n2   ¦--ReadMe.docx             \n3   ¦--Day01                   \n4   ¦   ¦--Day01.Rproj         \n5   ¦   ¦--Script01.R          \n6   ¦   ¦--Script02.R          \n7   ¦   ¦--Data                \n8   ¦   ¦   ¦--raw_data.csv    \n9   ¦   ¦   °--cleaned_data.csv\n10  ¦   °--Figs                \n11  ¦       ¦--Figure01.png    \n12  ¦       °--Figure02.png    \n13  °--Day02                   \n14      ¦--Day02.Rproj         \n15      ¦--Script01.R          \n16      ¦--Document01.qmd      \n17      ¦--Document01.html     \n18      ¦--Data                \n19      ¦   °--my_data.csv     \n20      °--Figs                \n21          ¦--Old             \n22          ¦   ¦--Figure01.pdf\n23          ¦   ¦--Figure02.pdf\n24          ¦   °--Figure03.pdf\n25          °--New             \n26              °--Figure01.png\n\n\n\n以下はJDCat分析ツールと同じLinuxの書き方（macOSも同様）\n\n通常、ファイル＆フォルダーの構造はツリー（tree）構造で表現される。\nパスは/（最上位フォルダー）で始まり、フォルダーは/で区切る。\n\n最後はファイル名\n\n2行目のファイル\n\n/ReadMe.docx\n\n6行目のファイル\n\n/Day01/Script02.R\n\n9行目のファイル\n\n/Day01/Data/cleaned_data.csv\n\n26行目のファイル\n\n/Day02/Figs/New/Figure01.png"
  },
  {
    "objectID": "slides/micro/programming.html#絶対パスと相対パス",
    "href": "slides/micro/programming.html#絶対パスと相対パス",
    "title": "ミクロ政治データ分析実習",
    "section": "絶対パスと相対パス",
    "text": "絶対パスと相対パス\n\n\n\n\n                      levelName\n1  .                           \n2   ¦--ReadMe.docx             \n3   ¦--Day01                   \n4   ¦   ¦--Day01.Rproj         \n5   ¦   ¦--Script01.R          \n6   ¦   ¦--Script02.R          \n7   ¦   ¦--Data                \n8   ¦   ¦   ¦--raw_data.csv    \n9   ¦   ¦   °--cleaned_data.csv\n10  ¦   °--Figs                \n11  ¦       ¦--Figure01.png    \n12  ¦       °--Figure02.png    \n13  °--Day02                   \n14      ¦--Day02.Rproj         \n15      ¦--Script01.R          \n16      ¦--Document01.qmd      \n17      ¦--Document01.html     \n18      ¦--Data                \n19      ¦   °--my_data.csv     \n20      °--Figs                \n21          ¦--Old             \n22          ¦   ¦--Figure01.pdf\n23          ¦   ¦--Figure02.pdf\n24          ¦   °--Figure03.pdf\n25          °--New             \n26              °--Figure01.png\n\n\n\n\n絶対パス：必ず最上位フォルダー（/）から始まるパス\n\n長い\n\n相対パス：作業フォルダーを基準としたパス\n\n短い（作業フォルダーまでのパスが省略される）\n/で始まらない\n\n作業フォルダーが/Day01/の場合\n\n6行目のファイル\n\n絶対パス：/Day01/Script02.R\n相対パス：Script02.R\n\n9行目のファイル\n\n絶対パス：/Day01/Data/cleaned_data.csv\n相対パス：Data/cleaned_data.csv\n\n\n相対パスの方が短いため、より効率的なコーディングが可能に\n\nフォルダー構造が複雑であるほど、相対パスが効率的\n作業フォルダーってどう指定すれば良いだろう\n\n\\(\\Rightarrow\\) プロジェクト機能\n\n現在の作業フォルダーはRコンソール上でgetwd()を入力すれば確認可能"
  },
  {
    "objectID": "slides/micro/programming.html#プロジェクト機能",
    "href": "slides/micro/programming.html#プロジェクト機能",
    "title": "ミクロ政治データ分析実習",
    "section": "プロジェクト機能",
    "text": "プロジェクト機能\nRStudioのプロジェクト機能\n\n作業フォルダー（working directory/working folder）が任意のフォルダーに固定される。\n\n固定先はプロジェクト名.Rprojファイルが位置するフォルダー\n\nプロジェクト機能を使用中の場合、RStudioの右上にプロジェクト名が表示される。\n\n使っていない場合は、Project: (none)と表示される。\n\nプロジェクト機能のメリット\n\n相対パスを使用することによって、パスをより簡潔に表現できる。\nローカル版のR/RStudioを使う場合、プロジェクトをDropbox等に入れておくと、どこでも作業を再開することができる。\n\n相対パスを使う = パスの書き方が変わらない\nmacOS \\(\\leftrightarrow\\) Windowsのクロスプラットフォームも可能\n\n\nプロジェクト機能のデメリット\n\nなし（ただし、これまでプロジェクト機能を使ってこなかった自分のことが嫌いになる可能性がある）"
  },
  {
    "objectID": "slides/micro/programming.html#プロジェクトの作成",
    "href": "slides/micro/programming.html#プロジェクトの作成",
    "title": "ミクロ政治データ分析実習",
    "section": "プロジェクトの作成",
    "text": "プロジェクトの作成\n\nStep 1Step 2Step 3Step 4Step 5\n\n\nFile &gt; New Project…を選択\n\n\n\n\n\n\n\nNew Directoryを選択\n\n\n\n\n\n\n\nNew Projectを選択\n\n\n\n\n\n\n\nプロジェクト名を入力し、Create Project\n\nプロジェクト名は英字・数字のみ使用（スペース禁止; 記号は_のみ使用）\n\n\n\n\n\n\n\n\nプロジェクトを確認する"
  },
  {
    "objectID": "slides/micro/programming.html#プロジェクトの確認",
    "href": "slides/micro/programming.html#プロジェクトの確認",
    "title": "ミクロ政治データ分析実習",
    "section": "プロジェクトの確認",
    "text": "プロジェクトの確認\nRStudioの右上を確認\n\n何かしら計算/分析の結果を残しておきたい場合は必ずプロジェクト機能を使う。\n電卓程度の用途なら不要\n\n\n\n\n\n\n\nプロジェクト未使用\n\n\n\n\n\n\n\nHomeworkという名のプロジェクト使用中"
  },
  {
    "objectID": "slides/micro/programming.html#プロジェクトの再開",
    "href": "slides/micro/programming.html#プロジェクトの再開",
    "title": "ミクロ政治データ分析実習",
    "section": "プロジェクトの再開",
    "text": "プロジェクトの再開\n\nStep 1Step2\n\n\nFile &gt; Open Project…を選択\n\n\n\n\n\n\n\nプロジェクト名のフォルダーをダブルクリックし、.Rprojファイルをダブルクリック"
  },
  {
    "objectID": "slides/micro/programming.html#作業環境environment",
    "href": "slides/micro/programming.html#作業環境environment",
    "title": "ミクロ政治データ分析実習",
    "section": "作業環境（Environment）",
    "text": "作業環境（Environment）\n\nR/RStudioを起動すると、Rセッションが開始され、作業環境が生成される。\n作業環境内には自分が作成したオブジェクト（後述）や読み込んだパッケージが格納される。\n「R/RStudioの終了」 = 「Rセッションの終了」を意味し、作業環境がリセットされる。\n\nコードをスクリプトファイルとして保存しておく必要性\n\n保存したコードを開き、実行すれば再現可能\n\nパッケージも再度読み込む必要がある（インストールはしなくても良い）。"
  },
  {
    "objectID": "slides/micro/programming.html#ものづくりに例えると",
    "href": "slides/micro/programming.html#ものづくりに例えると",
    "title": "ミクロ政治データ分析実習",
    "section": "ものづくりに例えると…",
    "text": "ものづくりに例えると…\n\nR/RStudioの起動（Rセッションの開始）\n\n作業台を用意する。\n\nパッケージのインストール\n\n作業に必要な工具を購入し、倉庫に入れておく。\nしたがって、インストールは1回のみで十分（アップデートを除く）\n\nパッケージの読み込み\n\n倉庫内の工具を取り出し、作業台に乗せる。\n\nデータの読み込み\n\n素材を取り出し、作業台に乗せる。\n\nオブジェクトの格納（&lt;-演算子使用）\n\n加工した素材、結果物を作業台に乗せる。\n\nR/RStudioの終了（Rセッションの終了）\n\n工具を倉庫に戻す。\n加工した素材、結果物を廃棄する。\n\n別途保存したコードスクリプト、図、表、文書、データなどは消えない（これらは作業環境外に搬出されたもの）。\nコードのスクリプトを残しておけば、それを実行することで同じ結果物が得られる。\n\n作業台を撤去する。"
  },
  {
    "objectID": "slides/micro/programming.html#作業環境の確認",
    "href": "slides/micro/programming.html#作業環境の確認",
    "title": "ミクロ政治データ分析実習",
    "section": "作業環境の確認",
    "text": "作業環境の確認\n\nls()：作業環境内のオブジェクトリストを出力\n\nこちらのオブジェクトはRを終了すると消える。\n\n\n\nmy_vec1 &lt;- c(1, 3, 5)\nmy_vec2 &lt;- c(FALSE, FALSE, TRUE, TRUE, FALSE)\nmy_vec3 &lt;- \"Cat\"\n\nls()\n\n[1] \"my_vec1\" \"my_vec2\" \"my_vec3\"\n\n\n\n(.packages())：読み込まれたパッケージのリストを出力\n\nこちらのパッケージはRを終了すると取り外される（再読込すれば良い）。\n\n\n\n(.packages()) # Rのコアパッケージは最初から読み込まれている。\n\n\n\n[1] \"stats\"     \"graphics\"  \"grDevices\" \"utils\"     \"datasets\"  \"methods\"   \"base\"\n\n\n\nlibrary(tidyverse) # {tidyverse}の依存パッケージも一緒に読み込まれる。\n\n(.packages())\n\n\n\n[1] \"lubridate\" \"forcats\"   \"stringr\"   \"dplyr\"     \"purrr\"     \"readr\"     \"tidyr\"    \n[8] \"tibble\"    \"ggplot2\"   \"tidyverse\" \"stats\"     \"graphics\"  \"grDevices\" \"utils\"    \n[15] \"datasets\"  \"methods\"   \"base\""
  },
  {
    "objectID": "slides/micro/programming.html#プログラミングの基礎概念-1",
    "href": "slides/micro/programming.html#プログラミングの基礎概念-1",
    "title": "ミクロ政治データ分析実習",
    "section": "プログラミングの基礎概念",
    "text": "プログラミングの基礎概念\n\nオブジェクト（object）\nクラス（class）\n関数（function）\n引数\n\n仮引数（parameter）と実引数（argument）"
  },
  {
    "objectID": "slides/micro/programming.html#オブジェクト",
    "href": "slides/micro/programming.html#オブジェクト",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクト",
    "text": "オブジェクト\nオブジェクト (object) : メモリに割り当てられた「何か」\n\nベクトル (vector)、行列 (matrix)、データフレーム (data frame)、リスト (list)、関数 (function) など\nそれぞれ固有の（=他のオブジェクトと重複しない）名前が付いている。\n1から5までの自然数の数列をmy_vec1という名前のオブジェクトとして格納\n\n\nmy_vec1 &lt;- c(1, 2, 3, 4, 5) # my_vec1 &lt;- 1:5  も同じ\n\n\nRに存在するあらゆるものはオブジェクトである（Chambers 2016）\n\n“Everything that exists in R is an object”\n\n\nmy_vec1 * 2\n\n\n以上のコードの場合、2もオブジェクト\n\n計算が終わった瞬間、メモリから削除されるだけ\n\n演算子*もオブジェクト"
  },
  {
    "objectID": "slides/micro/programming.html#クラス",
    "href": "slides/micro/programming.html#クラス",
    "title": "ミクロ政治データ分析実習",
    "section": "クラス",
    "text": "クラス\nクラス (class): オブジェクトを特徴づける属性\n\nclass()関数で確認可能\nすべてのオブジェクトは何らかのクラスを持つ\n\n\nclass(my_vec1)    # my_vec1 のクラス\n\n[1] \"numeric\"\n\nclass(2)          # 2 のクラス\n\n[1] \"numeric\"\n\nclass(c(1, 2, 3)) # c(1, 2, 3)\n\n[1] \"numeric\"\n\nclass(`*`)        # * のクラス\n\n[1] \"function\"\n\nclass(class)      # class() のクラス\n\n[1] \"function\""
  },
  {
    "objectID": "slides/micro/programming.html#なぜクラスが重要か",
    "href": "slides/micro/programming.html#なぜクラスが重要か",
    "title": "ミクロ政治データ分析実習",
    "section": "なぜクラスが重要か",
    "text": "なぜクラスが重要か\n\nある関数の引数（後述）には使用可能なクラスが指定されている。\n\n?関数名で確認可能\nmean()関数の例（Consoleペイン上で?mean）\n\nmean()に使用可能な引数はx、trim、na.rm\nx: numeric型ベクトル、logical型ベクトルなどが使用可能\nna.rm: 長さ1のlogical型ベクトル（a logical value）のみ使用可能\nmean(c(1, 2, 3, NA, 5), na.rm = TRUE)\n\n関数を使いこなすためには関数のヘルプを確認する\n\n必要な引数、返されるデータの構造、サンプルコードなど豊富な情報が載っている。\n\n\n同じ関数でもクラスによって動きが変わる。"
  },
  {
    "objectID": "slides/micro/programming.html#関数と引数",
    "href": "slides/micro/programming.html#関数と引数",
    "title": "ミクロ政治データ分析実習",
    "section": "関数と引数",
    "text": "関数と引数\n関数 (function): 入力されたデータを内部で決められた手順に従って処理し、その結果を返すもの\n\nRで起こるあらゆることは関数の呼び出しである (Chambers, 2016)\n\nEverything that happens in R is a function call。\n\n使い方: 関数名(関数の入力となるオブジェクト)\n\n例) class(my_vec1)、sum(my_vec1)\n\n自分で関数を作成することも可能\n関数には引数（ひきすう）が必要"
  },
  {
    "objectID": "slides/micro/programming.html#引数",
    "href": "slides/micro/programming.html#引数",
    "title": "ミクロ政治データ分析実習",
    "section": "引数",
    "text": "引数\nsum()関数の例\nsum(c(1, 2, 3, NA, 5), na.rm = TRUE)\n\n関数名はsum\n仮引数 (parameter): na.rm\n実引数 (argument): c(1, 2, 3, NA, 5)、TRUE\n\nc(1, 2, 3, NA, 5)の仮引数名はない（ヘルプを見ると...と表示される）。このように仮引数名が存在しないケースもある。\n\n第一引数の仮引数は省略するケースが多い\n第二引数以降は仮引数名を明記（実引数がどの仮引数に対応するかを明示）\n\n関数によっては引数は数十個ある場合も\n\n引数には既定値 (default value)が指定されているものもあり、省略可能。既定値がない引数はすべて指定する。\n\nたとえば、mean()のtrim引数の既定値は0（?mean参照）\nUsageに仮引数 = 実引数と表記されている場合、既定値が存在する\nArguemntsにan optional…と書いていれば、既定値はないが、指定しなくても関数は動くことを意味する。"
  },
  {
    "objectID": "slides/micro/programming.html#コーディングスタイル-1",
    "href": "slides/micro/programming.html#コーディングスタイル-1",
    "title": "ミクロ政治データ分析実習",
    "section": "コーディング・スタイル",
    "text": "コーディング・スタイル\n\nオブジェクト名の付け方\n改行\nスペースと字下げ（インデント）\n代入の演算子は=でなく、&lt;-を使用\n\n\n参考\n\nThe tidyverse style guide\nGoogle’s Style Guide\n{styler}パッケージと{lintr}パッケージ"
  },
  {
    "objectID": "slides/micro/programming.html#オブジェクト名1",
    "href": "slides/micro/programming.html#オブジェクト名1",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクト名（1）",
    "text": "オブジェクト名（1）\n原則1: オブジェクト名は英数字と一部の記号（_と.）のみにする\n\nローマ字以外の文字も使える場合もあるが、絶対に使わないこと！\n\n\nvariable1 &lt;- \"R is fun!\"\nvariable1\n\n[1] \"R is fun!\"\n\n変数2 &lt;- \"Rは楽しいよ！\"\n変数2\n\n[1] \"Rは楽しいよ！\"\n\nへんすう3 &lt;- \"Rはええでー\"\nへんすう3\n\n[1] \"Rはええでー\"\n\n변수4 &lt;- \"매일 아침 눈을 뜨면 R부터 기동시킵니다.\"\n변수4\n\n[1] \"매일 아침 눈을 뜨면 R부터 기동시킵니다.\""
  },
  {
    "objectID": "slides/micro/programming.html#オブジェクト名2",
    "href": "slides/micro/programming.html#オブジェクト名2",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクト名（2）",
    "text": "オブジェクト名（2）\n原則2: 数字で始まる変数名、記号が含まれた変数名は指定できない\n\n裏技で使うことも可能だが、なるべく使わないこと\n\n\n100ABC &lt;- c(1, 2, 3, 5, 7, 11)\n\nError: &lt;text&gt;:1:4: unexpected symbol\n1: 100ABC\n       ^\n\n\n\nSmile^^ &lt;- \"マクドでスマイルを頼んでみたい！\"\n\nError: &lt;text&gt;:1:7: unexpected '^'\n1: Smile^^\n          ^\n\n\n\nWeather_2022/03/30 &lt;- \"最高気温22度\"\n\nError: object 'Weather_2022' not found\n\n\nただし、_と.は使用可能であり、.より_を推奨\n\nWeather_2022_03_30 &lt;- \"最高気温22度\"\nWeather_2022_03_30\n\n[1] \"最高気温22度\""
  },
  {
    "objectID": "slides/micro/programming.html#オブジェクト名3",
    "href": "slides/micro/programming.html#オブジェクト名3",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクト名（3）",
    "text": "オブジェクト名（3）\n原則3: 予約語を避ける\n\nRがデフォルトで提供する組込の関数やオブジェクトと重複する名前を自分で作成するオブジェクトに付けることは避ける（できない場合もある）。\n\n例) pi（円周率）、if、forなど\n\n\n\n\n例1: 指定は出来るが、非推奨\n\npi # 円周率\n\n[1] 3.141593\n\n\n\npi &lt;- \"3月14日はpie day!\"\npi # もはや円周率ではない\n\n[1] \"3月14日はpie day!\"\n\n\n\n\n\n例2: そもそも指定できない\n\nfor &lt;- \"フォー！\"\n\nError: &lt;text&gt;:1:5: unexpected assignment\n1: for &lt;-\n        ^"
  },
  {
    "objectID": "slides/micro/programming.html#オブジェクト名4",
    "href": "slides/micro/programming.html#オブジェクト名4",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクト名（4）",
    "text": "オブジェクト名（4）\n原則4: 短さと分かりやすさの両立\n\nオブジェクト名を付けるセンスはプログラマーのレベルが測れる指標の一つ\n\n例1: 変数の中身を見るまでは、どのような内容が入っているか分からない\n\nvar2   &lt;- c(\"female\", \"male\", \"male\", \"female\") # 分かりにくい\ngender &lt;- c(\"female\", \"male\", \"male\", \"female\") # 分かりやすい\n\n\n例2: 長すぎて今後、打つのが面倒くさい\n\nmathematicsscore &lt;- c(30, 91, 43, 77, 100) # 長い!!\nMathScore        &lt;- c(30, 91, 43, 77, 100) # 大文字キャメルケース\nmathScore        &lt;- c(30, 91, 43, 77, 100) # 小文字キャメルケース\nmath_score       &lt;- c(30, 91, 43, 77, 100) # スネークケース"
  },
  {
    "objectID": "slides/micro/programming.html#改行",
    "href": "slides/micro/programming.html#改行",
    "title": "ミクロ政治データ分析実習",
    "section": "改行",
    "text": "改行\n\nコードは1行が長すぎないように適宜改行すること。\n\n1行に何文字までするかはモニター・サイズと相談すること（昔は80文字という非公式的なルールがあった）。\n\n\n良い例: 改行あり\n\nfit1 &lt;- glm(Voted ~ Female + Age + Education + Income + Region +\n              Attitude1 + Attitude2 + Attitude3, \n            family = binomial(\"logit\"), data = my_data)\n\n悪い例: 改行なし\n\nfit1 &lt;- glm(Voted ~ Female + Age + Education + Income + Region + Attitude1 + Attitude2 + Attitude3, family = binomial(\"logit\"), data = my_data)"
  },
  {
    "objectID": "slides/micro/programming.html#スペースと字下げ1",
    "href": "slides/micro/programming.html#スペースと字下げ1",
    "title": "ミクロ政治データ分析実習",
    "section": "スペースと字下げ（1）",
    "text": "スペースと字下げ（1）\n\nコードが長くなるほどスペースの字下げは重要\n全ての演算子の前後には半角スペースを入れる。\n\n+、-、*、%%、&、|、&lt;-など\nただし、^は例外\n全角スペースは絶対に使わないこと\n\n同じブロック（()、{}）内なら字下げも可読性の観点から重要\n\nただし、字下げはRStudioを手伝ってくれる。\n\n\n良い例:\n\nsum(my_vec2, na.rm = TRUE)\n\n悪い例:\n\nsum(my_vec2,na.rm=TRUE)"
  },
  {
    "objectID": "slides/micro/programming.html#スペースと字下げ2",
    "href": "slides/micro/programming.html#スペースと字下げ2",
    "title": "ミクロ政治データ分析実習",
    "section": "スペースと字下げ（2）",
    "text": "スペースと字下げ（2）\n以下のコードは全て同じであるが、可読性が桁違い（表形式データ作成の例）\n良い例: 改行あり、字下げあり、スペースあり\n\ndata.frame(\n  name     = c(\"Song\",  \"Yanai\", \"Wickham\"),\n  favorite = c(\"Ramen\", \"Cat\",   \"R\"),\n  gender   = c(\"Male\",  \"Male\",  \"Male\")\n)\n\n悪い例: 改行あり、字下げなし、スペースあり\n\ndata.frame(\nname = c(\"Song\", \"Yanai\", \"Hadley\"),\nfavorite = c(\"Ramen\", \"Cat\", \"R\"),\ngender = c(\"Male\", \"Male\", \"Male\")\n)\n\n邪悪な例: 改行なし（=字下げなし）、スペースなし\n\ndata.frame(name=c(\"Song\",\"Yanai\",\"Hadley\"),favorite=c(\"Ramen\",\"Cat\",\"R\"),fender=c(\"Male\",\"Male\",\"Male\"))"
  },
  {
    "objectID": "slides/micro/programming.html#本格的なプログラミングの世界へ-1",
    "href": "slides/micro/programming.html#本格的なプログラミングの世界へ-1",
    "title": "ミクロ政治データ分析実習",
    "section": "本格的なプログラミングの世界へ",
    "text": "本格的なプログラミングの世界へ\n中級者以上を目指すなら以下のようなプログラミングの知識は必須であるものの、本講義では一部を除き、解説しない。\n詳細は教科書の第10章を参照\n\n反復\n\nfor()\nwhile()\n\n条件分岐\n\nif()、else if()、else()\nifelse()（\\(\\simeq\\) if_else()）\n\n本講義ではかなり頻繁に使うため、第9回以降に解説する。\n\nswitch()"
  },
  {
    "objectID": "slides/micro/programming.html#プログラミングは簡単だから難しい",
    "href": "slides/micro/programming.html#プログラミングは簡単だから難しい",
    "title": "ミクロ政治データ分析実習",
    "section": "プログラミングは簡単だから難しい",
    "text": "プログラミングは簡単だから難しい\nチューリング完全な言語の2条件\n\nデータの読み書き\n条件分岐\nデータの読み書きと条件分岐を組み合わせると反復処理が可能\n\n\nプログラミングが簡単な理由\nデータの読み書き、条件分岐、反復処理を覚えるだけで、パソコンで出来るすべてのことができる。\n\nプログラミングが難しい理由\nデータの読み書き、条件分岐、反復処理だけですべてを処理しなければならない。"
  },
  {
    "objectID": "slides/micro/handling3.html#授業開始前に",
    "href": "slides/micro/handling3.html#授業開始前に",
    "title": "ミクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプトファイル、またはQuartoファイルを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\n\n# covid_sampleのアップロード先に応じて、パスを適宜修正すること\ndf &lt;- read_csv(\"Data/covid_sample.csv\")\n\n\nトラブルが生じた場合、速やかにTAを呼んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう"
  },
  {
    "objectID": "slides/micro/handling3.html#データの結合-行",
    "href": "slides/micro/handling3.html#データの結合-行",
    "title": "ミクロ政治データ分析実習",
    "section": "データの結合: 行",
    "text": "データの結合: 行\nbind_rows()を利用: 変数名が一致する必要がある\n\n以下の例はいずれのdata.frameもID、Name、Scoreで構成されている。\n\nID、Name、Scoreの順番は一致しなくても良い（上のdata.frameの順番に調整される）。\n\n\n\n\n結合前\n\nData1\n\n  ID  Name Score\n1  1 Aさん    77\n2  2 Bさん    89\n3  3 Cさん    41\n\nData2\n\n  ID  Name Score\n1  4 Xさん    98\n2  5 Yさん    78\n\n\n\n\n\n結合後\n\nbind_rows(Data1, Data2)\n\n  ID  Name Score\n1  1 Aさん    77\n2  2 Bさん    89\n3  3 Cさん    41\n4  4 Xさん    98\n5  5 Yさん    78"
  },
  {
    "objectID": "slides/micro/handling3.html#データの結合-行-1",
    "href": "slides/micro/handling3.html#データの結合-行-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データの結合: 行",
    "text": "データの結合: 行\n結合前のデータ識別変数の追加\n\n結合するデータをlist()でまとめ、.id引数を追加する\nlist()の内部では\"識別変数の値\" = 結合するデータと定義\n\n例) 結合後、Classという列を追加し、元々Data1だった行は\"1組\"、Data2だった行には\"2組\"を格納する。\n\nbind_rows(list(\"1組\" = Data1, \"2組\" = Data2),\n          .id = \"Class\")\n\n  Class ID  Name Score\n1   1組  1 Aさん    77\n2   1組  2 Bさん    89\n3   1組  3 Cさん    41\n4   2組  4 Xさん    98\n5   2組  5 Yさん    78"
  },
  {
    "objectID": "slides/micro/handling3.html#データの結合-列",
    "href": "slides/micro/handling3.html#データの結合-列",
    "title": "ミクロ政治データ分析実習",
    "section": "データの結合: 列",
    "text": "データの結合: 列\n*_join(): 結合に使う識別用の変数（キー変数）が必要（以下ではCity）\n\n\n結合前\n\nData1\n\n   City Pop Area\n1 Tokyo 927 2194\n2 Osaka 148  828\n3 Kochi  76 7104\n\n\n\n\n\n結合前\n\nData2\n\n   City     Food\n1 Kochi   Katsuo\n2 Osaka Takoyaki\n3 Tokyo    Ramen\n\n\n\n\n結合後\n\nleft_join(Data1, Data2, by = \"City\")\n\n   City Pop Area     Food\n1 Tokyo 927 2194    Ramen\n2 Osaka 148  828 Takoyaki\n3 Kochi  76 7104   Katsuo"
  },
  {
    "objectID": "slides/micro/handling3.html#列結合に使う関数",
    "href": "slides/micro/handling3.html#列結合に使う関数",
    "title": "ミクロ政治データ分析実習",
    "section": "列結合に使う関数",
    "text": "列結合に使う関数\n識別子は両データに含まれているが、一致しないケースがある。\n\nどのデータの識別子を優先するか\n\n\n\nleft_join()\n\n左側のデータの識別子を優先する\n空欄は欠損値として埋められる\n\nright_join()\n\n右側のデータの識別子を優先する\n空欄は欠損値として埋められる\n\ninner_join()\n\n両データの識別子に共通する行のみを残して結合\n\nfull_join()\n\n両データの識別子に存在する行すべて結合\n空欄は欠損値として埋められる"
  },
  {
    "objectID": "slides/micro/handling3.html#left_joinの仕組み",
    "href": "slides/micro/handling3.html#left_joinの仕組み",
    "title": "ミクロ政治データ分析実習",
    "section": "left_join()の仕組み",
    "text": "left_join()の仕組み\nleft_join(データ1, データ2, by = \"識別用変数名\")\n\nデータ1を温存する\n欠損しているセルは欠損値（NA）で埋められる"
  },
  {
    "objectID": "slides/micro/handling3.html#right_joinの仕組み",
    "href": "slides/micro/handling3.html#right_joinの仕組み",
    "title": "ミクロ政治データ分析実習",
    "section": "right_join()の仕組み",
    "text": "right_join()の仕組み\nright_join(データ1, データ2, by = \"識別用変数名\")\n\nデータ2を温存する\n欠損しているセルは欠損値（NA）で埋められる"
  },
  {
    "objectID": "slides/micro/handling3.html#inner_joinの仕組み",
    "href": "slides/micro/handling3.html#inner_joinの仕組み",
    "title": "ミクロ政治データ分析実習",
    "section": "inner_join()の仕組み",
    "text": "inner_join()の仕組み\ninner_join(データ1, データ2, by = \"識別用変数名\")\n\nデータ1とデータ2で識別子が共通する行のみ結合"
  },
  {
    "objectID": "slides/micro/handling3.html#full_joinの仕組み",
    "href": "slides/micro/handling3.html#full_joinの仕組み",
    "title": "ミクロ政治データ分析実習",
    "section": "full_join()の仕組み",
    "text": "full_join()の仕組み\nfull_join(データ1, データ2, by = \"識別用変数名\")\n\nデータ1とデータ2をすべて温存\n欠損しているセルは欠損値（NA）で埋められる"
  },
  {
    "objectID": "slides/micro/handling3.html#比較-1",
    "href": "slides/micro/handling3.html#比較-1",
    "title": "ミクロ政治データ分析実習",
    "section": "比較 (1)",
    "text": "比較 (1)\n\ndf1 &lt;- tibble(Pref  = c(\"東京\", \"大阪\", \"京都\"),\n              Score = c(3.5, 4, 4.2))\ndf2 &lt;- tibble(Pref  = c(\"東京\", \"大阪\", \"高知\"),\n              N     = c(3220, 1325, 111))\n\n\n\n\ndf1\n\n# A tibble: 3 × 2\n  Pref  Score\n  &lt;chr&gt; &lt;dbl&gt;\n1 東京    3.5\n2 大阪    4  \n3 京都    4.2\n\n\n\n\n\n\ndf2\n\n# A tibble: 3 × 2\n  Pref      N\n  &lt;chr&gt; &lt;dbl&gt;\n1 東京   3220\n2 大阪   1325\n3 高知    111"
  },
  {
    "objectID": "slides/micro/handling3.html#比較-2",
    "href": "slides/micro/handling3.html#比較-2",
    "title": "ミクロ政治データ分析実習",
    "section": "比較 (2)",
    "text": "比較 (2)\nby = \"識別用の変数名\"は複数用いることも可能（例: 都道府県名&年度で結合）\n\nby = c(\"識別用の変数名1\", \"識別用の変数名2\")\n\n\n\n\nleft_join(df1, df2, by = \"Pref\")\n\n# A tibble: 3 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 京都    4.2    NA\n\nright_join(df1, df2, by = \"Pref\")\n\n# A tibble: 3 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 高知   NA     111\n\n\n\n\n\n\ninner_join(df1, df2, by = \"Pref\")\n\n# A tibble: 2 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n\nfull_join(df1, df2, by = \"Pref\")\n\n# A tibble: 4 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 京都    4.2    NA\n4 高知   NA     111"
  },
  {
    "objectID": "slides/micro/handling3.html#整然データ構造とは",
    "href": "slides/micro/handling3.html#整然データ構造とは",
    "title": "ミクロ政治データ分析実習",
    "section": "整然データ構造とは",
    "text": "整然データ構造とは\nTidy data: Hadley Wickhamが提唱したデータ分析に適したデータ構造\n\n\n\n整然データ、簡潔データと呼ばれる。\n\n対概念は非整然データ、雑然データ（messy data）\n\nパソコンにとって読みやすいデータ \\(\\neq\\) 人間にとって読みやすいデータ\n{tidyr}パッケージは雑然データを整然データへ変形するパッケージ\n次回紹介する{ggplot2}は整然データを前提として開発されたパッケージ\n\n4つの原則\n\n1つの列は、1つの変数を表す\n1つの行は、1つの観測を表す\n1つのセルは、1つの値を表す\n1つの表は、1つの観測単位をもつ"
  },
  {
    "objectID": "slides/micro/handling3.html#原則1-1列1変数",
    "href": "slides/micro/handling3.html#原則1-1列1変数",
    "title": "ミクロ政治データ分析実習",
    "section": "原則1: 1列1変数",
    "text": "原則1: 1列1変数\n\n1列には1つの変数のみ\n\n3人の被験者に対し、薬を飲む前後の数学成績を測定した場合\n薬を飲む前: Control / 薬を飲んだ後: Treatment"
  },
  {
    "objectID": "slides/micro/handling3.html#原則2-1行1観察",
    "href": "slides/micro/handling3.html#原則2-1行1観察",
    "title": "ミクロ政治データ分析実習",
    "section": "原則2: 1行1観察",
    "text": "原則2: 1行1観察\n\n1観察 \\(\\neq\\) 1値\n\n観察: 観察単位ごとに測定された値の集合\n観察単位: 人、企業、国、時間など\n\n以下の例の場合、観察単位は「人 \\(\\times\\) 時間 」"
  },
  {
    "objectID": "slides/micro/handling3.html#原則3-1セル1値",
    "href": "slides/micro/handling3.html#原則3-1セル1値",
    "title": "ミクロ政治データ分析実習",
    "section": "原則3: 1セル1値",
    "text": "原則3: 1セル1値\n\nこの原則に反するケースは多くない\n例外) 1セルに2020年8月24日という値がある場合\n\n分析の目的によっては年月日を全て異なるセルに割り当てる必要もある\nこのままで問題とならないケースも"
  },
  {
    "objectID": "slides/micro/handling3.html#原則4-1表1単位",
    "href": "slides/micro/handling3.html#原則4-1表1単位",
    "title": "ミクロ政治データ分析実習",
    "section": "原則4: 1表1単位",
    "text": "原則4: 1表1単位\n\n政府統計: 日本を代表する雑然データ\n\nデータの中身は良いが、構造が…\n表に「国」、「都道府県」、「市区町村」、「行政区」の単位が混在"
  },
  {
    "objectID": "slides/micro/handling3.html#原則4-1表1単位-1",
    "href": "slides/micro/handling3.html#原則4-1表1単位-1",
    "title": "ミクロ政治データ分析実習",
    "section": "原則4: 1表1単位",
    "text": "原則4: 1表1単位\n\n「1表1単位」原則を満たさない場合、filter()関数等で、異なる単位の行を除外\n\n以降、解説する{tidyr}でなく、{dplyr}で対応可能"
  },
  {
    "objectID": "slides/micro/handling3.html#tidyrパッケージ",
    "href": "slides/micro/handling3.html#tidyrパッケージ",
    "title": "ミクロ政治データ分析実習",
    "section": "{tidyr}パッケージ",
    "text": "{tidyr}パッケージ\n\n\n\n\n\n雑然データから整然データへ変形をサポートするパッケージ\n\npivot_longer(): Wide型データからLong型データへ\n\n原則1・2に反するデータを整然データへ変換 (最も頻繁に使われる)\n\npivot_wider(): Long型データからWide型データへ\n\n人間には雑然データの方が読みやすい場合がある（原則1の例）\n\nseparate(): セルの分割（「年月日」から「年」、「月」、「日」へ）\n\n原則3に反するデータを整然データへ変換\n\n原則4に反するデータは分析単位が異なる行をfilter()などで除外"
  },
  {
    "objectID": "slides/micro/handling3.html#実習用データ",
    "href": "slides/micro/handling3.html#実習用データ",
    "title": "ミクロ政治データ分析実習",
    "section": "実習用データ",
    "text": "実習用データ\ncovid_sample.csv: 中国、日本、韓国、モンゴル、台湾の5日間COVID-19新規感染者数\n\nサポートページからダウンロード\nデータ出典:Johns Hopkins University Center for Systems Science and Engineering\n\n\nCOVID_df &lt;- read_csv(\"Data/covid_sample.csv\")\nCOVID_df\n\n# A tibble: 5 × 7\n  Country  Population `2022/06/09` `2022/06/10` `2022/06/11` `2022/06/12`\n  &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 China    1447470092          819          848         1114          990\n2 Japan     126476461        16788        15584        15338        13381\n3 Korea      51269185         9304         8428         7382         3828\n4 Mongolia    3278290            0            0            0            0\n5 Taiwan     23816775        72846        68293        79616        50567\n# ℹ 1 more variable: `2022/06/13` &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/handling3.html#このデータの問題点",
    "href": "slides/micro/handling3.html#このデータの問題点",
    "title": "ミクロ政治データ分析実習",
    "section": "このデータの問題点",
    "text": "このデータの問題点\n\n観察単位は? 測定した変数は?\n\n観察単位: 地域 \\(\\times\\) 時間\n変数: 新規感染者数、人口\n2つの観察時点 + 2つの変数 = 計4つの変数 \\(\\rightarrow\\) 整然データ\n\n新規感染者数が5列にわたって格納されている \\(\\rightarrow\\) 雑然データ\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountry\nPopulation\n2022/06/09\n2022/06/10\n2022/06/11\n2022/06/12\n2022/06/13\n\n\n\n\nChina\n1447470092\n819\n848\n1114\n990\n957\n\n\nJapan\n126476461\n16788\n15584\n15338\n13381\n7942\n\n\nKorea\n51269185\n9304\n8428\n7382\n3828\n9768\n\n\nMongolia\n3278290\n0\n0\n0\n0\n1055\n\n\nTaiwan\n23816775\n72846\n68293\n79616\n50567\n45100"
  },
  {
    "objectID": "slides/micro/handling3.html#wide型からlong型へ",
    "href": "slides/micro/handling3.html#wide型からlong型へ",
    "title": "ミクロ政治データ分析実習",
    "section": "Wide型からLong型へ",
    "text": "Wide型からLong型へ\n\n整然なCOVID_dfの構造は?\n\n5列を1列にまとめるため、縦に長くなる\nWideからLongへ\n\n\n\n\n# A tibble: 25 × 4\n   Country Population Date       New_Cases\n   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1 China   1447470092 2022/06/09       819\n 2 China   1447470092 2022/06/10       848\n 3 China   1447470092 2022/06/11      1114\n 4 China   1447470092 2022/06/12       990\n 5 China   1447470092 2022/06/13       957\n 6 Japan    126476461 2022/06/09     16788\n 7 Japan    126476461 2022/06/10     15584\n 8 Japan    126476461 2022/06/11     15338\n 9 Japan    126476461 2022/06/12     13381\n10 Japan    126476461 2022/06/13      7942\n# ℹ 15 more rows"
  },
  {
    "objectID": "slides/micro/handling3.html#pivot_longer-wide-to-long",
    "href": "slides/micro/handling3.html#pivot_longer-wide-to-long",
    "title": "ミクロ政治データ分析実習",
    "section": "pivot_longer(): Wide to Long",
    "text": "pivot_longer(): Wide to Long\n\ncolsはdplyr::select()と同じ使い方\n\nc()で個別の変数名を指定することも、:やstarts_with()を使うこともOK\n注意: 変数名が数字で始まったり、記号が含まれている場合、変数名を`か\"で囲む\n\n列名が日付の場合、数字で始まったり、記号（/や-など）が含まれるケースが多い\n\n\n\n\nデータ |&gt;\n  pivot_longer(cols      = 変数が格納されている列,\n               names_to  = \"元の列名が入る変数名\",\n               values_to = \"変数の値が入る変数名\")"
  },
  {
    "objectID": "slides/micro/handling3.html#pivot_longer-wideからlongへ",
    "href": "slides/micro/handling3.html#pivot_longer-wideからlongへ",
    "title": "ミクロ政治データ分析実習",
    "section": "pivot_longer(): WideからLongへ",
    "text": "pivot_longer(): WideからLongへ\n\ncols = starts_with(\"2022\")もOK\n\n\nCOVID_Long &lt;- COVID_df |&gt; \n  pivot_longer(cols      = \"2022/06/09\":\"2022/06/13\",\n               names_to  = \"Date\",\n               values_to = \"New_Cases\")\nCOVID_Long\n\n# A tibble: 25 × 4\n   Country Population Date       New_Cases\n   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1 China   1447470092 2022/06/09       819\n 2 China   1447470092 2022/06/10       848\n 3 China   1447470092 2022/06/11      1114\n 4 China   1447470092 2022/06/12       990\n 5 China   1447470092 2022/06/13       957\n 6 Japan    126476461 2022/06/09     16788\n 7 Japan    126476461 2022/06/10     15584\n 8 Japan    126476461 2022/06/11     15338\n 9 Japan    126476461 2022/06/12     13381\n10 Japan    126476461 2022/06/13      7942\n# ℹ 15 more rows"
  },
  {
    "objectID": "slides/micro/handling3.html#pivot_wider-longからwideへ",
    "href": "slides/micro/handling3.html#pivot_wider-longからwideへ",
    "title": "ミクロ政治データ分析実習",
    "section": "pivot_wider(): LongからWideへ",
    "text": "pivot_wider(): LongからWideへ\n\nLong型をWide型へ戻す関数\n\n人間にとってはLong型よりWide型の方が読みやすいケースも多い\n1列に2つの変数が入っている場合もある\n\n\n\nCOVID_Long |&gt;\n  pivot_wider(names_from  = \"Date\",\n              values_from = \"New_Cases\")\n\n# A tibble: 5 × 7\n  Country  Population `2022/06/09` `2022/06/10` `2022/06/11` `2022/06/12`\n  &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 China    1447470092          819          848         1114          990\n2 Japan     126476461        16788        15584        15338        13381\n3 Korea      51269185         9304         8428         7382         3828\n4 Mongolia    3278290            0            0            0            0\n5 Taiwan     23816775        72846        68293        79616        50567\n# ℹ 1 more variable: `2022/06/13` &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/handling3.html#separate-列の分割",
    "href": "slides/micro/handling3.html#separate-列の分割",
    "title": "ミクロ政治データ分析実習",
    "section": "separate(): 列の分割",
    "text": "separate(): 列の分割\nCOVID_LongのDate列をYear、Month、Dayに分けたい\n\n例) Date列を\"/\"を基準に分割する\n\n\nデータ |&gt;\n  separate(col  = \"分割する列名\",\n           into = c(\"分割後の列名1\", \"分割後の列名2\", ...),\n           sep  = \"分割する基準\")"
  },
  {
    "objectID": "slides/micro/handling3.html#separate-列の分割-1",
    "href": "slides/micro/handling3.html#separate-列の分割-1",
    "title": "ミクロ政治データ分析実習",
    "section": "separate(): 列の分割",
    "text": "separate(): 列の分割\n\nCOVID_Long |&gt;\n  separate(col  = \"Date\",\n           into = c(\"Year\", \"Month\", \"Day\"),\n           sep  = \"/\")\n\n# A tibble: 25 × 6\n   Country Population Year  Month Day   New_Cases\n   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1 China   1447470092 2022  06    09          819\n 2 China   1447470092 2022  06    10          848\n 3 China   1447470092 2022  06    11         1114\n 4 China   1447470092 2022  06    12          990\n 5 China   1447470092 2022  06    13          957\n 6 Japan    126476461 2022  06    09        16788\n 7 Japan    126476461 2022  06    10        15584\n 8 Japan    126476461 2022  06    11        15338\n 9 Japan    126476461 2022  06    12        13381\n10 Japan    126476461 2022  06    13         7942\n# ℹ 15 more rows"
  },
  {
    "objectID": "slides/micro/handling3.html#列の分割番外編-特定の記号がない場合",
    "href": "slides/micro/handling3.html#列の分割番外編-特定の記号がない場合",
    "title": "ミクロ政治データ分析実習",
    "section": "列の分割（番外編）: 特定の記号がない場合",
    "text": "列の分割（番外編）: 特定の記号がない場合\n例) City_DataのCity列が「都道府県名+市区町村」\n\n「最初の3文字」と「残り」で分割することは出来ない（神奈川、和歌山、鹿児島）\n任意の2文字の後に「都」、「道」、「府」、「県」が付くか、任意の3文字の後に「県」が付く箇所を見つけて分割\n\nかなり複雑\n\n\n\n\n# A tibble: 4 × 2\n  City                Pop\n  &lt;chr&gt;             &lt;dbl&gt;\n1 北海道音威子府村    693\n2 大阪府高槻市     347424\n3 広島県府中市      36471\n4 鹿児島県指宿市    38207"
  },
  {
    "objectID": "slides/micro/handling3.html#列の分割番外編-特定の記号がない場合続",
    "href": "slides/micro/handling3.html#列の分割番外編-特定の記号がない場合続",
    "title": "ミクロ政治データ分析実習",
    "section": "列の分割（番外編）: 特定の記号がない場合（続）",
    "text": "列の分割（番外編）: 特定の記号がない場合（続）\n正規表現（regular expression; 正則表現）の知識が必要\n\nテキスト分析に興味があるなら必須（前期・後期含めて、本講義では解説しない）\n\n\nCity_Data |&gt;\n   # 任意の2文字の後に「都道府県」のいずれかが来るか、\n   # 任意の3文字の後に「県」が来たら、そこまでをブロック1、残りをブロック2とする\n   # Cityの値を「ブロック1-ブロック2」に置換する\n   mutate(City = str_replace(City, \"^(.{2}[都道府県]|.{3}県)(.+)\", \n                             \"\\\\1-\\\\2\")) |&gt;\n   # 「-」を基準に列を分割\n   separate(col  = \"City\", into = c(\"Pref\", \"City\"), sep  = \"-\")\n\n# A tibble: 4 × 3\n  Pref     City          Pop\n  &lt;chr&gt;    &lt;chr&gt;       &lt;dbl&gt;\n1 北海道   音威子府村    693\n2 大阪府   高槻市     347424\n3 広島県   府中市      36471\n4 鹿児島県 指宿市      38207"
  },
  {
    "objectID": "slides/micro/handling3.html#tidyrとdplyrの組み合わせ",
    "href": "slides/micro/handling3.html#tidyrとdplyrの組み合わせ",
    "title": "ミクロ政治データ分析実習",
    "section": "{tidyr}と{dplyr}の組み合わせ",
    "text": "{tidyr}と{dplyr}の組み合わせ\n{tidyr}と{dplyr}を組み合わせることも可能\n\n例) 100万人当たりの新規感染者数を計算し、国ごとに平均値を計算\n\n\nCOVID_df |&gt; \n  pivot_longer(cols      = \"2022/06/09\":\"2022/06/13\",\n               names_to  = \"Date\",\n               values_to = \"New_Cases\") |&gt;\n   mutate(New_Case_per_1M = New_Cases / Population * 1000000) |&gt;\n   group_by(Country) |&gt;\n   summarise(New_Case_per_1M = mean(New_Case_per_1M))\n\n# A tibble: 5 × 2\n  Country  New_Case_per_1M\n  &lt;chr&gt;              &lt;dbl&gt;\n1 China              0.653\n2 Japan            109.   \n3 Korea            151.   \n4 Mongolia          64.4  \n5 Taiwan          2657."
  },
  {
    "objectID": "slides/micro/handling3.html#データハンドリングに慣れるためには",
    "href": "slides/micro/handling3.html#データハンドリングに慣れるためには",
    "title": "ミクロ政治データ分析実習",
    "section": "データハンドリングに慣れるためには",
    "text": "データハンドリングに慣れるためには\n\nとりあえず、たくさんのデータをいじってみる\nたくさんのエラーメッセージに出会うこと\nパイプ（|&gt;）を使いすぎないように\n\n中級以上になると、自分が書いたコードの結果が予想できるため、たくさんのパイプを使っても問題は大きくない\n一方、初心者の場合、パイプを使いすぎず、2〜3回ごとに別途のオブジェクトとして保存したり、結果を確認していくこと\nパイプが多すぎるとどこがエラーの原因かの特定が困難に（慣れたらすぐに見つかるが）"
  },
  {
    "objectID": "slides/micro/handling3.html#長過ぎるコードブロックの例",
    "href": "slides/micro/handling3.html#長過ぎるコードブロックの例",
    "title": "ミクロ政治データ分析実習",
    "section": "長過ぎるコードブロックの例",
    "text": "長過ぎるコードブロックの例\n慣れたらこれくらいは長い方でもないが…\n\nCOVID_df |&gt; \n  pivot_longer(cols      = \"2022/06/09\":\"2022/06/13\",\n               names_to  = \"Date\",\n               values_to = \"New_Cases\") |&gt;\n  mutate(New_Case_per_1M = New_Cases / Population * 1000000,\n         Country         = case_when(Country == \"China\"    ~ \"中国\",\n                                     Country == \"Japan\"    ~ \"日本\",\n                                     Country == \"Korea\"    ~ \"韓国\",\n                                     Country == \"Mongolia\" ~ \"モンゴル\",\n                                     TRUE                  ~ \"台湾\"),\n         Country         = factor(Country, levels = c(\"中国\", \"日本\", \"韓国\", \"モンゴル\", \"台湾\")),\n         Date            = as.Date(Date),\n         Date            = format(Date, \"%Y-%m-%d\")) |&gt;\n  ggplot(aes(x = Date, y = New_Case_per_1M, group = Country)) +\n  geom_line(aes(color = Country), linewidth = 1) +\n  geom_point(aes(fill = Country), \n             shape = 21, color = \"white\", size = 3) +\n  labs(x = \"日付\", y = \"100万人当たり新規感染者数 (人)\", color = \"\") +\n  guides(fill = \"none\") +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/micro/handling3.html#学習方法について課題を含む",
    "href": "slides/micro/handling3.html#学習方法について課題を含む",
    "title": "ミクロ政治データ分析実習",
    "section": "学習方法について（課題を含む）",
    "text": "学習方法について（課題を含む）\n\n必要なコード、箇所だけを見ても分からない。\n\n講義スライド・資料・教科書は辞書ではない。\n第11章を理解するためには第1〜10章の内容が前提\nプログラミング言語は積み重ねと反復が重要\n授業で「1 + 5」を教えるのは「+」の意味を教えるためであり、課題・テストには「1 + 5」でなく、「3 + 99」が出る。\n\n「コード」の見方・構造に慣れること。\n\nコードをブロックの組み合わせとして考える。\nそのためにも空白、改行、字下げは重要\n\nスライドは説明がかなり省略されているため、講義資料と教科書も合わせて読むこと。"
  },
  {
    "objectID": "slides/micro/handling3.html#来週以降の内容",
    "href": "slides/micro/handling3.html#来週以降の内容",
    "title": "ミクロ政治データ分析実習",
    "section": "来週以降の内容",
    "text": "来週以降の内容\n次回からは{ggplot2}を利用したデータの可視化方法を紹介\n\n\n\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/handling1.html#授業開始前に",
    "href": "slides/micro/handling1.html#授業開始前に",
    "title": "ミクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データ（第9回実習用データ）をダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプトファイル、またはQuartoファイルを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\n\n# countries.csvのアップロード先に応じて、パスを適宜修正すること\ndf &lt;- read_csv(\"Data/countries.csv\")\n\n\nトラブルが生じた場合、速やかにTAを呼んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/micro/handling1.html#tidyverseの世界",
    "href": "slides/micro/handling1.html#tidyverseの世界",
    "title": "ミクロ政治データ分析実習",
    "section": "Tidyverseの世界",
    "text": "Tidyverseの世界\n\n\n\n\n\nデータサイエンスのために考案された、強い信念と思想に基づいたRパッケージの集合\n\n{tidyverse}をインストールすることで導入可能\nTidyverseに属するパッケージは思想、文法およびデータ構造を共有\n\n{dplyr}、{tidyr}、{readr}、{ggplot2}など\n\nオブジェクトをパイプ演算子 (|&gt; or %&gt;%)で繋ぐ\n\nRのコードはlibrary(tidyverse)で始めよう!"
  },
  {
    "objectID": "slides/micro/handling1.html#パイプ演算子",
    "href": "slides/micro/handling1.html#パイプ演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "パイプ演算子",
    "text": "パイプ演算子\nTidyverseにおいてオブジェクトは|&gt;で繋がっている。\n\n既存の書き方: 書き方と読み方が逆\n\n一般的なプログラミング言語共通\n書き方: print(sum(X)) (print、sum、Xの順で書く)\n読み方1: Xをsum()し、print()する (コードの順番と逆)\n読み方2: print()する内容はsum()で、sum()はXに対して行う（直感的でない読み方）\n\nTidyverseな書き方: 書き方と読み方が一致\n\n今どきのRの書き方\n書き方: X |&gt; sum() |&gt; print()\n読み方: Xをsum()し、print()する"
  },
  {
    "objectID": "slides/micro/handling1.html#パイプ演算子の仕組み",
    "href": "slides/micro/handling1.html#パイプ演算子の仕組み",
    "title": "ミクロ政治データ分析実習",
    "section": "パイプ演算子の仕組み",
    "text": "パイプ演算子の仕組み\n\n|&gt;の左側を右側の最初の引数として渡すだけ\nX |&gt; 関数(Y)は関数(X, Y)と同じ\n\nX |&gt; sum(na.rm = TRUE)はsum(X, na.rm = TRUE)と同じ\n\nショートカットキーを使えば簡単に入力可能\n\nmacOS: Command (⌘) + Shift + m\nWindows/Linux: Control (Ctrl) + Shift + m\n\n二番目以降の引数として渡すことも可能（適宜、解説）\n\n\n\n既存の書き方\n\nX &lt;- c(2, 3, 5, NA, 11)\nprint(sum(X, na.rm = TRUE))\n\n[1] 21\n\n\n\n\n\nTidyverseな書き方\n\nX &lt;- c(2, 3, 5, NA, 11)\nX |&gt; sum(na.rm = TRUE) |&gt; print()\n\n[1] 21"
  },
  {
    "objectID": "slides/micro/handling1.html#様々な書き方",
    "href": "slides/micro/handling1.html#様々な書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "様々な書き方",
    "text": "様々な書き方\n\n書き方1書き方2書き方3\n\n\n\n\n\n結果1 &lt;- 関数1(データ)\n結果2 &lt;- 関数2(結果1)\n結果  &lt;- 関数3(結果2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n結果 &lt;- 関数3(関数2(関数1(データ)))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n結果 &lt;- データ |&gt; \n  関数1() |&gt; \n  関数2() |&gt; \n  関数3()"
  },
  {
    "objectID": "slides/micro/handling1.html#参考もう一つのパイプ演算子",
    "href": "slides/micro/handling1.html#参考もう一つのパイプ演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "参考）%>%：もう一つのパイプ演算子",
    "text": "参考）%&gt;%：もう一つのパイプ演算子\nR内蔵演算子としてパイプ演算子（|&gt;）が追加\n\n2021年5月リリースされたR 4.1からR内蔵のパイプ演算子|&gt;が登場\nそれまでは{magrittr}パッケージが提供する%&gt;%を使用\n\n{magrittr}は{tidyverse}を読み込むと自動的に読み込まれる。\n\n使い方はほぼ同じ\n\nただし、演算子の左側のオブジェクトを右側の第一引数として渡す場合のみ\n第一引数以外の引数として渡す場合は使い方が異なる。\n\nインターネット、教科書などでは%&gt;%を使用するケースがまだ多いが、今後の主流は|&gt;になると予想されるため、本講義では|&gt;を使用する。\n\nむろん、現段階では%&gt;%を使っても良いし、%&gt;%を使ったコードを|&gt;に置換して使ってもほぼ問題にならない。"
  },
  {
    "objectID": "slides/micro/handling1.html#参考との比較",
    "href": "slides/micro/handling1.html#参考との比較",
    "title": "ミクロ政治データ分析実習",
    "section": "参考）%>%と|>の比較",
    "text": "参考）%&gt;%と|&gt;の比較\n渡す先が第一引数の場合\n\nR内蔵のパイプ（native pipe; |&gt;）、{magrittr}のパイプ（%&gt;%）の使い方は同じ\n\n\n# {magrittr}のパイプ演算子\nX %&gt;% sum(na.rm = TRUE) %&gt;% print()\n# R内蔵のパイプ演算子\nX |&gt; sum(na.rm = TRUE) |&gt; print()\n\n渡す先が第一引数でない場合\n\n実引数として渡す箇所に. (tidyverse)、_ (native pipe)を入力\n\n\n# {magrittr}のパイプ演算子\nmy_data %&gt;%\n  lm(y ~ x1 + x2 + x3, data = .)\n# R内蔵のパイプ演算子\nmy_data |&gt;\n  lm(y ~ x1 + x2 + x3, data = _)"
  },
  {
    "objectID": "slides/micro/handling1.html#dplyrとは",
    "href": "slides/micro/handling1.html#dplyrとは",
    "title": "ミクロ政治データ分析実習",
    "section": "{dplyr}とは",
    "text": "{dplyr}とは\n\n\n\n\n\n\n表形式データ (データフレームやtibble)を操作するパッケージ\n第8回の講義で解説した行・列の抽出も簡単に可能\n{tidyverse}を読み込む際に自動的に読み込まれる\n\n{tidyverse}はパッケージを集めたパッケージであり、{dplyr}もその一部\n\n\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "slides/micro/handling1.html#実習用データ",
    "href": "slides/micro/handling1.html#実習用データ",
    "title": "ミクロ政治データ分析実習",
    "section": "実習用データ",
    "text": "実習用データ\ncountries.csv: 186カ国の社会経済・政治体制のデータ\n\n# Dataフォルダー内のcountries.csvを読み込み、dfという名のオブジェクトとして作業環境に格納\ndf &lt;- read_csv(\"Data/countries.csv\")\ndf\n\n# A tibble: 186 × 18\n   Country  Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghani…   38928346 6.53e5 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2877797 2.74e4 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria    43851044 2.38e6 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra       77265 4.7 e2 3.15e3 NA              40821.            NA      0\n 5 Angola     32866272 1.25e6 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua…      97929 4.4 e2 1.73e3  2.08e3         17643.         21267.     0\n 7 Argenti…   45195774 2.74e6 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2963243 2.85e4 1.37e4  3.84e4          4614.         12974.     0\n 9 Austral…   25499884 7.68e6 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9006398 8.24e4 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 10 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#実習用データの確認",
    "href": "slides/micro/handling1.html#実習用データの確認",
    "title": "ミクロ政治データ分析実習",
    "section": "実習用データの確認",
    "text": "実習用データの確認\n186行、18列のデータ（= 186カ国、18変数）\n\ndim(df)\n\n[1] 186  18\n\n\n変数の一覧\n\nnames(df)\n\n [1] \"Country\"        \"Population\"     \"Area\"           \"GDP\"           \n [5] \"PPP\"            \"GDP_per_capita\" \"PPP_per_capita\" \"G7\"            \n [9] \"G20\"            \"OECD\"           \"HDI_2018\"       \"Polity_Score\"  \n[13] \"Polity_Type\"    \"FH_PR\"          \"FH_CL\"          \"FH_Total\"      \n[17] \"FH_Status\"      \"Continent\""
  },
  {
    "objectID": "slides/micro/handling1.html#各変数について",
    "href": "slides/micro/handling1.html#各変数について",
    "title": "ミクロ政治データ分析実習",
    "section": "各変数について",
    "text": "各変数について\n詳細は教科書第18.2章を参照\n\n\n\n変数名\n説明\n\n変数名\n説明\n\n\n\n\nCountry\n国名\n\nOECD\nOECD加盟有無\n\n\nPopulation\n人口\n\nHDI_2018\n人間開発指数 (2018年)\n\n\nArea\n面積( \\(\\text{km}^2\\) )\n\nPolity_Score\n政治体制のスコア\n\n\nGDP\n国内総生産（ドル）\n\nPolity_Type\n政治体制\n\n\nPPP\n購買力平価国内総生産\n\nFH_PR\n政治的自由\n\n\nGDP_per_capita\n一人当たりGDP\n\nFH_CL\n市民的自由\n\n\nPPP_per_capita\n一人当たりPPP\n\nFH_Total\nFH_PR + FH_CL\n\n\nG7\nG7加盟有無\n\nFH_Status\n自由の状態\n\n\nG20\nG20加盟有無\n\nContinent\n大陸"
  },
  {
    "objectID": "slides/micro/handling1.html#列の選択抽出-書き方",
    "href": "slides/micro/handling1.html#列の選択抽出-書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "列の選択（抽出）: 書き方",
    "text": "列の選択（抽出）: 書き方\nselect()関数を使用\n\n\nパイプを使わない書き方\n\nselect(データ, 変数名1, 変数名2, ...)\n\n\n\n\nパイプを使う書き方\n\nデータ |&gt;\n  select(変数名1, 変数名2, ...)\n\n\n\n\n\n\n注意: select()関数は複数ある!\n\n\nselect()関数は{dplyr}だけでなく、{MASS}からも提供されるが、別の関数である。\n\n{MASS}もデータ分析において頻繁に使われるパッケージであるため、select()だけだと、どのパッケージのselect()か分からなくなる場合がある。\nエラーが生じる場合は、dplyr::select()など、パッケージ名を指定すること"
  },
  {
    "objectID": "slides/micro/handling1.html#列の選択抽出-例",
    "href": "slides/micro/handling1.html#列の選択抽出-例",
    "title": "ミクロ政治データ分析実習",
    "section": "列の選択（抽出）: 例",
    "text": "列の選択（抽出）: 例\ndfからCountry、Population、HDI_2018列を抽出し、最初の5行のみ出力\n\ndf |&gt;                                      # dfから\n  select(Country, Population, HDI_2018) |&gt; # Country, Population, HDI_2018のみ抽出して\n  head(n = 5)                               # 最初の5行を出力する\n\n# A tibble: 5 × 3\n  Country     Population HDI_2018\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;\n1 Afghanistan   38928346    0.496\n2 Albania        2877797    0.791\n3 Algeria       43851044    0.759\n4 Andorra          77265    0.857\n5 Angola        32866272    0.574\n\n\nこの時点では抽出・出力されただけ。抽出した結果をdf2という名で作業環境内に格納するためには\n\ndf2 &lt;- df |&gt;\n  select(Country, Population, HDI_2018)\n\n\n\n\n課題では格納が必要な場合もある\n\n\n課題の問題には「出力せよ」だけでなく、「格納した上で出力せよ」といった形式もある。加工したデータを引き続き使うためには格納が必須であるため、問題文を注意深く読むこと。"
  },
  {
    "objectID": "slides/micro/handling1.html#列の選択と変数名の変更",
    "href": "slides/micro/handling1.html#列の選択と変数名の変更",
    "title": "ミクロ政治データ分析実習",
    "section": "列の選択と変数名の変更",
    "text": "列の選択と変数名の変更\n変数名の変更と抽出を同時に行うことも可能\n\n新しい変数名 = 既存の変数名\n\n例) HDI_2018の変数名をHDIに変更\n\ndf |&gt;\n  select(Country, Population, HDI = HDI_2018)\n\n# A tibble: 186 × 3\n   Country             Population   HDI\n   &lt;chr&gt;                    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan           38928346 0.496\n 2 Albania                2877797 0.791\n 3 Algeria               43851044 0.759\n 4 Andorra                  77265 0.857\n 5 Angola                32866272 0.574\n 6 Antigua and Barbuda      97929 0.776\n 7 Argentina             45195774 0.83 \n 8 Armenia                2963243 0.76 \n 9 Australia             25499884 0.938\n10 Austria                9006398 0.914\n# ℹ 176 more rows"
  },
  {
    "objectID": "slides/micro/handling1.html#抽出せず変数名のみ変更",
    "href": "slides/micro/handling1.html#抽出せず変数名のみ変更",
    "title": "ミクロ政治データ分析実習",
    "section": "抽出せず、変数名のみ変更",
    "text": "抽出せず、変数名のみ変更\nrename()関数を使用\n\nデータ |&gt;\n  rename(新しい変数名 = 既存の変数名)\n\n例) PopulationをJinkoに、AreaをMensekiに変更\n\ndf |&gt;\n  rename(Jinko = Population, Menseki = Area)\n\n# A tibble: 186 × 18\n   Country      Jinko Menseki    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 3.89e7  652860 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2.88e6   27400 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria     4.39e7 2381740 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra     7.73e4     470 3.15e3 NA              40821.            NA      0\n 5 Angola      3.29e7 1246700 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua an… 9.79e4     440 1.73e3  2.08e3         17643.         21267.     0\n 7 Argentina   4.52e7 2736690 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2.96e6   28470 1.37e4  3.84e4          4614.         12974.     0\n 9 Australia   2.55e7 7682300 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9.01e6   82409 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 10 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#列の除外",
    "href": "slides/micro/handling1.html#列の除外",
    "title": "ミクロ政治データ分析実習",
    "section": "列の除外",
    "text": "列の除外\n変数名の前に! (推奨)、または-を付ける\n\n2つ以上の変数を除外する場合、変数名をc()でまとめる。\n\n例) dfからGDP_per_capitaとPPP_per_capitaを除外\n\ndf |&gt;\n  select(!c(GDP_per_capita, PPP_per_capita))\n\n# A tibble: 186 × 16\n   Country           Population   Area    GDP     PPP    G7   G20  OECD HDI_2018\n   &lt;chr&gt;                  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan         38928346 6.53e5 1.91e4  8.27e4     0     0     0    0.496\n 2 Albania              2877797 2.74e4 1.53e4  3.97e4     0     0     0    0.791\n 3 Algeria             43851044 2.38e6 1.70e5  4.97e5     0     0     0    0.759\n 4 Andorra                77265 4.7 e2 3.15e3 NA          0     0     0    0.857\n 5 Angola              32866272 1.25e6 9.46e4  2.19e5     0     0     0    0.574\n 6 Antigua and Barb…      97929 4.4 e2 1.73e3  2.08e3     0     0     0    0.776\n 7 Argentina           45195774 2.74e6 4.50e5  1.04e6     0     1     0    0.83 \n 8 Armenia              2963243 2.85e4 1.37e4  3.84e4     0     0     0    0.76 \n 9 Australia           25499884 7.68e6 1.39e6  1.28e6     0     1     1    0.938\n10 Austria              9006398 8.24e4 4.46e5  5.03e5     0     0     1    0.914\n# ℹ 176 more rows\n# ℹ 7 more variables: Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;,\n#   FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#隣接する列の同時選択",
    "href": "slides/micro/handling1.html#隣接する列の同時選択",
    "title": "ミクロ政治データ分析実習",
    "section": "隣接する列の同時選択",
    "text": "隣接する列の同時選択\n:を使用\n\nCountryからPPPまでの列: Country:PPP\nCountry:PPPはCountry, Population, Area, GDP, PPPと同じ意味\n\n例) dfのCountry〜PPP, HDI_2018列を抽出\n\ndf |&gt;\n  select(Country:PPP, HDI_2018)\n\n# A tibble: 186 × 6\n   Country             Population    Area      GDP      PPP HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   19101.   82737.    0.496\n 2 Albania                2877797   27400   15278.   39658.    0.791\n 3 Algeria               43851044 2381740  169988.  496572.    0.759\n 4 Andorra                  77265     470    3154.      NA     0.857\n 5 Angola                32866272 1246700   94635.  218533.    0.574\n 6 Antigua and Barbuda      97929     440    1728.    2083.    0.776\n 7 Argentina             45195774 2736690  449663. 1036721.    0.83 \n 8 Armenia                2963243   28470   13673.   38446.    0.76 \n 9 Australia             25499884 7682300 1392681. 1275027.    0.938\n10 Austria                9006398   82409  446315.  502771.    0.914\n# ℹ 176 more rows"
  },
  {
    "objectID": "slides/micro/handling1.html#高度な変数選択",
    "href": "slides/micro/handling1.html#高度な変数選択",
    "title": "ミクロ政治データ分析実習",
    "section": "高度な変数選択",
    "text": "高度な変数選択\n\n特定の文字列で始まる列を選択: starts_with()\n\n例)FHで始まる列の選択: starts_with(\"FH\")\n\n特定の文字列で終わる列を選択: ends_with()\n特定の文字列を含む列を選択: contains()\n\n例) dfからCountry, \"FH\"で始まる列を抽出\n\ndf |&gt;\n  select(Country, starts_with(\"FH\"))\n\n# A tibble: 186 × 5\n   Country             FH_PR FH_CL FH_Total FH_Status\n   &lt;chr&gt;               &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1 Afghanistan            13    14       27 NF       \n 2 Albania                27    40       67 PF       \n 3 Algeria                10    24       34 NF       \n 4 Andorra                39    55       94 F        \n 5 Angola                 11    21       32 NF       \n 6 Antigua and Barbuda    33    52       85 F        \n 7 Argentina              35    50       85 F        \n 8 Armenia                21    32       53 PF       \n 9 Australia              40    57       97 F        \n10 Austria                37    56       93 F        \n# ℹ 176 more rows\n\n\n\n応用) !starts_with(\"FH\"): \"FH\"で始まる列を除外"
  },
  {
    "objectID": "slides/micro/handling1.html#列の順番変更-select使用",
    "href": "slides/micro/handling1.html#列の順番変更-select使用",
    "title": "ミクロ政治データ分析実習",
    "section": "列の順番変更: select()使用",
    "text": "列の順番変更: select()使用\n抽出後のデータフレームにおける変数はselect()内で指定された順番に\n例) G7からOECD列をCountryとPopulationの間へ移動\n\ndf |&gt;\n  select(Country, G7:OECD,\n         Population:PPP_per_capita, HDI_2018:Continent)\n\n# A tibble: 186 × 18\n   Country        G7   G20  OECD Population   Area    GDP     PPP GDP_per_capita\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan     0     0     0   38928346 6.53e5 1.91e4  8.27e4           491.\n 2 Albania         0     0     0    2877797 2.74e4 1.53e4  3.97e4          5309.\n 3 Algeria         0     0     0   43851044 2.38e6 1.70e5  4.97e5          3876.\n 4 Andorra         0     0     0      77265 4.7 e2 3.15e3 NA              40821.\n 5 Angola          0     0     0   32866272 1.25e6 9.46e4  2.19e5          2879.\n 6 Antigua an…     0     0     0      97929 4.4 e2 1.73e3  2.08e3         17643.\n 7 Argentina       0     1     0   45195774 2.74e6 4.50e5  1.04e6          9949.\n 8 Armenia         0     0     0    2963243 2.85e4 1.37e4  3.84e4          4614.\n 9 Australia       0     1     1   25499884 7.68e6 1.39e6  1.28e6         54615.\n10 Austria         0     0     1    9006398 8.24e4 4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 9 more variables: PPP_per_capita &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;,\n#   Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;,\n#   FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#列の順番変更-relocate使用",
    "href": "slides/micro/handling1.html#列の順番変更-relocate使用",
    "title": "ミクロ政治データ分析実習",
    "section": "列の順番変更: relocate()使用",
    "text": "列の順番変更: relocate()使用\nrelocate()の使い方\n\n.after = XXX: XXX列の後ろへ移動 / .before = YYY: YYY列の前へ移動\n\n\nデータ |&gt;\n  relocate(移動したい変数名, .after = 変更先)\n\n例) G7からOECD列をCountryの後ろへ移動\n\ndf |&gt;\n  relocate(G7:OECD, .after = Country) # .before = PopulationもOK\n\n# A tibble: 186 × 18\n   Country        G7   G20  OECD Population   Area    GDP     PPP GDP_per_capita\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan     0     0     0   38928346 6.53e5 1.91e4  8.27e4           491.\n 2 Albania         0     0     0    2877797 2.74e4 1.53e4  3.97e4          5309.\n 3 Algeria         0     0     0   43851044 2.38e6 1.70e5  4.97e5          3876.\n 4 Andorra         0     0     0      77265 4.7 e2 3.15e3 NA              40821.\n 5 Angola          0     0     0   32866272 1.25e6 9.46e4  2.19e5          2879.\n 6 Antigua an…     0     0     0      97929 4.4 e2 1.73e3  2.08e3         17643.\n 7 Argentina       0     1     0   45195774 2.74e6 4.50e5  1.04e6          9949.\n 8 Armenia         0     0     0    2963243 2.85e4 1.37e4  3.84e4          4614.\n 9 Australia       0     1     1   25499884 7.68e6 1.39e6  1.28e6         54615.\n10 Austria         0     0     1    9006398 8.24e4 4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 9 more variables: PPP_per_capita &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;,\n#   Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;,\n#   FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#行の抽出-書き方",
    "href": "slides/micro/handling1.html#行の抽出-書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "行の抽出: 書き方",
    "text": "行の抽出: 書き方\nfilter()関数を使用\nパイプを使わない書き方\n\nfilter(データ, 条件1, 条件2, ...)\n\nパイプを使う書き方\n\nデータ |&gt;\n  filter(条件1, 条件2, ...)"
  },
  {
    "objectID": "slides/micro/handling1.html#行の抽出-例",
    "href": "slides/micro/handling1.html#行の抽出-例",
    "title": "ミクロ政治データ分析実習",
    "section": "行の抽出: 例",
    "text": "行の抽出: 例\n例) dfからContinentが\"Europe\"の行を抽出し、Country〜PPP, HDI_2018列を抽出し、HDI_2018はHDIに変更\n\nfilter()とselect()の組み合わせ\n以下の例の場合、filter()とselect()の順番を逆にすることは不可\n\nselect()後、Continent変数がなくなるため\n\n\n\ndf |&gt;\n  filter(Continent == \"Oceania\") |&gt;\n  select(Country:PPP, HDI = HDI_2018)\n\n# A tibble: 4 × 6\n  Country          Population    Area      GDP      PPP   HDI\n  &lt;chr&gt;                 &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 Australia          25499884 7682300 1392681. 1275027. 0.938\n2 Fiji                 896445   18270    5536.   12496. 0.724\n3 New Zealand         4842780  263820  206929.  204260. 0.921\n4 Papua New Guinea    8947024  452860   24970.   37319. 0.543"
  },
  {
    "objectID": "slides/micro/handling1.html#行の抽出-2つ以上の条件and",
    "href": "slides/micro/handling1.html#行の抽出-2つ以上の条件and",
    "title": "ミクロ政治データ分析実習",
    "section": "行の抽出: 2つ以上の条件（AND）",
    "text": "行の抽出: 2つ以上の条件（AND）\n2つ以上の条件を同時に満たす行を抽出\n\n,で条件式を追加するだけ (&もOK; むしろ&を推奨)\n\n例) dfから「Continentが\"Asia\"（条件1）」、「HDI_2018が0.8以上（条件2）」の行を抽出し、CountryとHDI_2018列を抽出\n\n条件1 AND 条件2 \\(\\Rightarrow\\) 条件1 & 条件3\n\n\ndf |&gt;\n  filter(Continent == \"Asia\" & HDI_2018 &gt;= 0.8) |&gt;\n  select(Country, HDI_2018)\n\n# A tibble: 13 × 2\n   Country              HDI_2018\n   &lt;chr&gt;                   &lt;dbl&gt;\n 1 Bahrain                 0.838\n 2 Brunei                  0.845\n 3 Israel                  0.906\n 4 Japan                   0.915\n 5 Kazakhstan              0.817\n 6 South Korea             0.906\n 7 Kuwait                  0.808\n 8 Malaysia                0.804\n 9 Oman                    0.834\n10 Qatar                   0.848\n11 Saudi Arabia            0.857\n12 Singapore               0.935\n13 United Arab Emirates    0.866"
  },
  {
    "objectID": "slides/micro/handling1.html#行の抽出-2つ以上の条件or",
    "href": "slides/micro/handling1.html#行の抽出-2つ以上の条件or",
    "title": "ミクロ政治データ分析実習",
    "section": "行の抽出: 2つ以上の条件（OR）",
    "text": "行の抽出: 2つ以上の条件（OR）\n2つ以上の条件を片方か両方に満たす行を抽出\n\n|で条件式を追加するだけ\n\n例) dfから「Continentが\"Asia\"（条件1）か\"Oceania\"（条件2）」であり、かつ「HDI_2018が0.9以上（条件3）」の行を抽出し、CountryとHDI_2018、Continent列を抽出\n\n(条件1 OR 条件2) AND 条件3 \\(\\Rightarrow\\) (条件1 | 条件2) & 条件3\n\n\ndf |&gt;\n  filter((Continent == \"Asia\" | Continent == \"Oceania\") & HDI_2018 &gt;= 0.9) |&gt;\n  select(Country, HDI_2018, Continent)\n\n# A tibble: 6 × 3\n  Country     HDI_2018 Continent\n  &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;    \n1 Australia      0.938 Oceania  \n2 Israel         0.906 Asia     \n3 Japan          0.915 Asia     \n4 South Korea    0.906 Asia     \n5 New Zealand    0.921 Oceania  \n6 Singapore      0.935 Asia"
  },
  {
    "objectID": "slides/micro/handling1.html#in演算子",
    "href": "slides/micro/handling1.html#in演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "%in%演算子",
    "text": "%in%演算子\n%in%: |の代わりに使用可能な便利な演算子\n例) Continentの値がc(\"Asia\", \"Oceainia\")の要素に含まれている場合\n\ndf |&gt;\n  filter(Continent %in% c(\"Asia\", \"Oceania\") & HDI_2018 &gt;= 0.9) |&gt;\n  select(Country, HDI_2018, Continent)\n\n# A tibble: 6 × 3\n  Country     HDI_2018 Continent\n  &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;    \n1 Australia      0.938 Oceania  \n2 Israel         0.906 Asia     \n3 Japan          0.915 Asia     \n4 South Korea    0.906 Asia     \n5 New Zealand    0.921 Oceania  \n6 Singapore      0.935 Asia"
  },
  {
    "objectID": "slides/micro/handling1.html#欠損値が含まれた行の扱い",
    "href": "slides/micro/handling1.html#欠損値が含まれた行の扱い",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値が含まれた行の扱い",
    "text": "欠損値が含まれた行の扱い\ndfのPPPが欠損している行を抽出し、CountryからPPP列まで出力\n\n変数名 == NAを条件にしてはいけない\n\n\ndf |&gt;\n  filter(PPP == NA) |&gt;\n  select(Country:PPP)\n\n# A tibble: 0 × 5\n# ℹ 5 variables: Country &lt;chr&gt;, Population &lt;dbl&gt;, Area &lt;dbl&gt;, GDP &lt;dbl&gt;,\n#   PPP &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/handling1.html#欠損値が含まれた行の扱い-1",
    "href": "slides/micro/handling1.html#欠損値が含まれた行の扱い-1",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値が含まれた行の扱い",
    "text": "欠損値が含まれた行の扱い\ndfのPPPが欠損している行を抽出し、CountryからPPP列まで出力\n\n正解: is.na(変数名)\n\n\ndf |&gt;\n  filter(is.na(PPP)) |&gt;\n  select(Country:PPP)\n\n# A tibble: 8 × 5\n  Country        Population   Area     GDP   PPP\n  &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Andorra             77265    470   3154.    NA\n2 Cuba             11326616 106440 100023     NA\n3 Holy See              801      0     NA     NA\n4 Liechtenstein       38128    160   6553.    NA\n5 Monaco              39242      1   7188.    NA\n6 Somalia          15893222 627340    917.    NA\n7 Syria            17500658 183630  40405.    NA\n8 Western Sahara     597339 266000    909.    NA"
  },
  {
    "objectID": "slides/micro/handling1.html#欠損値が含まれた行の除外",
    "href": "slides/micro/handling1.html#欠損値が含まれた行の除外",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値が含まれた行の除外",
    "text": "欠損値が含まれた行の除外\ndfのPPPが欠損している行を除外し、CountryからPPP列まで出力\n\n否定を意味する!を使用する\n\n\ndf |&gt;\n  filter(!is.na(PPP)) |&gt;\n  select(Country:PPP)\n\n# A tibble: 178 × 5\n   Country             Population    Area      GDP      PPP\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   19101.   82737.\n 2 Albania                2877797   27400   15278.   39658.\n 3 Algeria               43851044 2381740  169988.  496572.\n 4 Angola                32866272 1246700   94635.  218533.\n 5 Antigua and Barbuda      97929     440    1728.    2083.\n 6 Argentina             45195774 2736690  449663. 1036721.\n 7 Armenia                2963243   28470   13673.   38446.\n 8 Australia             25499884 7682300 1392681. 1275027.\n 9 Austria                9006398   82409  446315.  502771.\n10 Azerbaijan            10139177   82658   48048.  144556.\n# ℹ 168 more rows"
  },
  {
    "objectID": "slides/micro/handling1.html#もう一つの方法",
    "href": "slides/micro/handling1.html#もう一つの方法",
    "title": "ミクロ政治データ分析実習",
    "section": "もう一つの方法",
    "text": "もう一つの方法\ndrop_na()関数を利用\n\n()内で指定した変数が欠損している行をすべて除外（複数指定可）\n\n\ndf |&gt;\n  drop_na(PPP, Polity_Score) |&gt; # PPPとPolity_Scoreどちらか欠損した行を除外\n  select(Country:PPP, Polity_Score)\n\n# A tibble: 155 × 6\n   Country     Population    Area      GDP      PPP Polity_Score\n   &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1 Afghanistan   38928346  652860   19101.   82737.           -1\n 2 Albania        2877797   27400   15278.   39658.            9\n 3 Algeria       43851044 2381740  169988.  496572.            2\n 4 Angola        32866272 1246700   94635.  218533.           -2\n 5 Argentina     45195774 2736690  449663. 1036721.            9\n 6 Armenia        2963243   28470   13673.   38446.            7\n 7 Australia     25499884 7682300 1392681. 1275027.           10\n 8 Austria        9006398   82409  446315.  502771.           10\n 9 Azerbaijan    10139177   82658   48048.  144556.           -7\n10 Bahrain        1701575     760   38574.   74230.          -10\n# ℹ 145 more rows"
  },
  {
    "objectID": "slides/micro/handling1.html#行のソート-書き方",
    "href": "slides/micro/handling1.html#行のソート-書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "行のソート: 書き方",
    "text": "行のソート: 書き方\narrange()関数を使用\nパイプを使わない書き方\n\narrange(データ, 変数名1, 変数名2, ...)\n\nパイプを使う書き方\n\nデータ |&gt; arrange(変数名1, 変数名2, ...)\n\n基本的には昇順 (値が小さい行が先にくる)\n\n降順にする場合はdesc(変数名)\n変数名1を基準にソートし、同点の場合は変数名2を基準に"
  },
  {
    "objectID": "slides/micro/handling1.html#行のソート-例",
    "href": "slides/micro/handling1.html#行のソート-例",
    "title": "ミクロ政治データ分析実習",
    "section": "行のソート: 例",
    "text": "行のソート: 例\n例) dfからContinentの値が\"Africa\"の行のみを抽出し、Polity_Scoreが高い行を上位にする。そして、CountryとPPP_per_capita、Polity_Score列のみ残す。\n\nPolity Scoreが高い (低い) = より民主主義 (権威主義)に近い\n\n\ndf |&gt;\n  filter(Continent == \"Africa\") |&gt;\n  arrange(desc(Polity_Score)) |&gt;\n  select(Country, PPP_per_capita, Polity_Score)\n\n# A tibble: 54 × 3\n   Country      PPP_per_capita Polity_Score\n   &lt;chr&gt;                 &lt;dbl&gt;        &lt;dbl&gt;\n 1 Mauritius            22637.           10\n 2 Kenya                 4105.            9\n 3 South Africa         12605.            9\n 4 Botswana             17311.            8\n 5 Ghana                 5097.            8\n 6 Lesotho               3019.            8\n 7 Benin                 3067.            7\n 8 Liberia               1461.            7\n 9 Nigeria               5018.            7\n10 Senegal               3248.            7\n# ℹ 44 more rows"
  },
  {
    "objectID": "slides/micro/handling1.html#行のソート-応用",
    "href": "slides/micro/handling1.html#行のソート-応用",
    "title": "ミクロ政治データ分析実習",
    "section": "行のソート: 応用",
    "text": "行のソート: 応用\n\ndfからアフリカのみを抽出し、Polity_Scoreが低い行を上位に\nPolity_Scoreが同点の場合、PPP_per_capitaが高い行を上位に\nCountryとPolity_Score, PPP_per_capita列のみ残す\nPolity_ScoreはPolityに、PPP_per_capitaはPPPと名前を変更\n\n\ndf |&gt;\n  filter(Continent == \"Africa\") |&gt;\n  arrange(Polity_Score, desc(PPP_per_capita)) |&gt;\n  select(Country, Polity = Polity_Score, PPP = PPP_per_capita)\n\n# A tibble: 54 × 3\n   Country             Polity    PPP\n   &lt;chr&gt;                &lt;dbl&gt;  &lt;dbl&gt;\n 1 Eswatini                -9  8634.\n 2 Eritrea                 -7  1860.\n 3 Equatorial Guinea       -6 19458.\n 4 Egypt                   -4 11198.\n 5 Morocco                 -4  7554.\n 6 Sudan                   -4  4063.\n 7 Cameroon                -4  3506.\n 8 Congo (Brazzaville)     -4  3191.\n 9 Comoros                 -3  3007.\n10 Rwanda                  -3  2008.\n# ℹ 44 more rows\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/datastructure.html#データ構造とは",
    "href": "slides/micro/datastructure.html#データ構造とは",
    "title": "ミクロ政治データ分析実習",
    "section": "データ構造とは",
    "text": "データ構造とは\n\nデータ構造 (data structure): 一つ以上のベクトルの集合\n\nベクトルはRにおけるデータの最小単位\n\n\"Cat\"や5も長さ1のベクトルであり、原子ベクトル (atomic vector) とも呼ばれ、中でもnumeric型の長さ1のベクトルはスカラー (scalar) とも呼ばれる。\n\n\n\n\n\n\n\n\n\nmatrix型\n\n\n\n\n \n\n\n\n\n\ndata.frame型\\(\\simeq\\)tibble型"
  },
  {
    "objectID": "slides/micro/datastructure.html#データ構造の種類",
    "href": "slides/micro/datastructure.html#データ構造の種類",
    "title": "ミクロ政治データ分析実習",
    "section": "データ構造の種類",
    "text": "データ構造の種類\n本講義で使うデータ構造は主にベクトル (vector) とデータ・フレーム (data.frame) とその拡張版のティブル (tibble) のみであるため、行列 (matrix) 、配列 (array) 、リスト (array) の説明は割愛する。\n\nベクトル (vector)\n行列 (matrix)\n\n配列 (array)\n行列は層 (layer) が1つのみの配列\n\nデータ・フレーム (data.frame)\n\nティブル (tibble): データ・フレームの拡張版\n\nリスト (list)\n\n他にもRには数百、数千種類のデータ構造があるが、その中身は実質リスト構造である場合が多い。"
  },
  {
    "objectID": "slides/micro/datastructure.html#ベクトル-vector",
    "href": "slides/micro/datastructure.html#ベクトル-vector",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトル (vector)",
    "text": "ベクトル (vector)\n同じデータ型が一つ以上格納されているオブジェクト\n\nRにおけるデータの最小単位\n\nRには数百、数千種類のデータ構造が存在するが、その最小単位はベクトルである。\n\n長さは1以上\n\n\nmy_vec1 &lt;- \"R is fun!\"      # 長さ1のcharacter型ベクトル\nmy_vec2 &lt;- c(1, 3, 5, 6, 7) # 長さ5のnumeric型ベクトル\n\n\n一つのベクトル内の全ての要素は同じデータ型\n\n優先順位はcharacter型 &gt; numeric型 &gt; logical型\n\n\n\n# 長さ6のベクトルであるが、2つのデータ型が混在しているため、character型が優先\nmy_vec3 &lt;- c(\"A\", \"B\", \"C\", 1, 2, 3)\nmy_vec3\n\n[1] \"A\" \"B\" \"C\" \"1\" \"2\" \"3\"\n\n# 長さ4のベクトルであるが、2つのデータ型が混在しているため、numeric型が優先される \n# 参考1) TRUEは1に、FALSEは0に変換される。\n# 参考2) logical -&gt; characterの場合、TRUEは\"TRUE\"に、FALSEは\"FALSE\"に\nmy_vec4 &lt;- c(10, 20, TRUE, FALSE)\nmy_vec4\n\n[1] 10 20  1  0"
  },
  {
    "objectID": "slides/micro/datastructure.html#ベクトルの操作-復習",
    "href": "slides/micro/datastructure.html#ベクトルの操作-復習",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトルの操作 (復習)",
    "text": "ベクトルの操作 (復習)\nデータ型、長さなど\n\nclass(オブジェクト名): データ型\nlength(オブジェクト名): ベクトルの長さ（要素数）\nnchar(オブジェクト名): Character型の場合、各要素の文字数\n\n要素の抽出\n\nオブジェクト名[n]: n番目の要素を抽出\nオブジェクト名[n:k]: n番目からk番目の要素を抽出\nオブジェクト名[c(i, j, k, ...)]: i、j、k、…番目の要素を抽出\nオブジェクト名[c(TRUE, FALSE, TRUE, ...)]: TRUEに対応する位置の要素を抽出"
  },
  {
    "objectID": "slides/micro/datastructure.html#numeric型ベクトルの演算-復習",
    "href": "slides/micro/datastructure.html#numeric型ベクトルの演算-復習",
    "title": "ミクロ政治データ分析実習",
    "section": "Numeric型ベクトルの演算 (復習)",
    "text": "Numeric型ベクトルの演算 (復習)\n\nケース1: 同じ長さのベクトル同士\n\n同じ位置の要素同士の演算\n\nケース2: 異なる長さのベクトル同士\n\n短い方のベクトルがリサイクルされる"
  },
  {
    "objectID": "slides/micro/datastructure.html#行列-matrix",
    "href": "slides/micro/datastructure.html#行列-matrix",
    "title": "ミクロ政治データ分析実習",
    "section": "行列 (matrix)",
    "text": "行列 (matrix)\n\nnumeric型、またはcomplex型の縦ベクトルを横に並べたデータ構造\n3 \\(\\times\\) 4の行列の例\n\n\nmy_mat1 &lt;- matrix(1:12, nrow = 3)\nmy_mat1\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n\n長さ3のnumeric型縦ベクトルが4つ並んでいる模様\n長さ4のnumeric型横ベクトルが3つ積まれているとも読めるが、データ分析では一般的に縦ベクトルの集合として行列を捉える。"
  },
  {
    "objectID": "slides/micro/datastructure.html#行列の作成",
    "href": "slides/micro/datastructure.html#行列の作成",
    "title": "ミクロ政治データ分析実習",
    "section": "行列の作成",
    "text": "行列の作成\n\nmatrix()関数を使用\n\n第1引数としてnumericまたはcomplex型ベクトル、nrow引数で行列の行数を指定\n要素が入る順番に注意\n\n\n\n\n\\[\n\\begin{bmatrix}\n5 & 2 & 9 & 6 \\\\\n5 & 4 & -8 & 2 \\\\\n-3 & 3 & 0 & 7\n\\end{bmatrix}\n\\]\n\nmy_mat2 &lt;- matrix(c(5, 5, -3, 2, 4, 3, \n                    9, -8, 0, 6, 2, 7), \n                  nrow = 3)\nmy_mat2\n\n     [,1] [,2] [,3] [,4]\n[1,]    5    2    9    6\n[2,]    5    4   -8    2\n[3,]   -3    3    0    7"
  },
  {
    "objectID": "slides/micro/datastructure.html#行列の操作",
    "href": "slides/micro/datastructure.html#行列の操作",
    "title": "ミクロ政治データ分析実習",
    "section": "行列の操作",
    "text": "行列の操作\n本講義では使用しないため、説明は割愛する。\n\nclass(my_mat1) # my_mat1のデータ構造\n\n[1] \"matrix\" \"array\" \n\ndim(my_mat1)   # 行列の行数と列数\n\n[1] 3 4\n\nnrow(my_mat1)  # 行列の行数\n\n[1] 3\n\nncol(my_mat1)  # 行列の列数\n\n[1] 4\n\nmy_mat1[1, ]   # my_matの1「行」目を抽出\n\n[1]  1  4  7 10\n\nmy_mat1[, 3]   # my_matの3「列」目を抽出\n\n[1] 7 8 9\n\nmy_mat1[2, 4]  # my_matの2「行」、4「列」目を抽出\n\n[1] 11"
  },
  {
    "objectID": "slides/micro/datastructure.html#行列の演算",
    "href": "slides/micro/datastructure.html#行列の演算",
    "title": "ミクロ政治データ分析実習",
    "section": "行列の演算",
    "text": "行列の演算\n本講義では使用しないため、説明は割愛する。\n\n線形代数を勉強する人には便利な演算子\n\n\n\n\n演算子/関数\n説明\n\n\n\n\n+\n行列の足し算\n\n\n-\n行列の引き算\n\n\n%*%\n行列の掛け算\n\n\n/\n行列の割り算\n\n\n*\n行列のアダマール積 (Hadamard product)\n\n\nt(オブジェクト名)\n行列の転置\n\n\nqr(オブジェクト名)$rank\n行列の階数\n\n\nsolve(オブジェクト名)\n逆行列\n\n\neigen(オブジェクト名)\n行列の固有値\n\n\ndiag(オブジェクト名)\n行列の対角成分"
  },
  {
    "objectID": "slides/micro/datastructure.html#配列-array",
    "href": "slides/micro/datastructure.html#配列-array",
    "title": "ミクロ政治データ分析実習",
    "section": "配列 (array)",
    "text": "配列 (array)\n行列を重ねたもの\n\n行列は層 (layer) が1つのみの配列\n3次元のデータ構造であり、要素抽出の際、[x, y, z]で指定する必要がある。\n\n配列から行列を抽出したら、あとは行列の同じ操作\n3番目のzが配列の層 (layer)を意味する\n\n各層の行列の大きさは全て同じ"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレーム-紹介",
    "href": "slides/micro/datastructure.html#データフレーム-紹介",
    "title": "ミクロ政治データ分析実習",
    "section": "データフレーム: 紹介",
    "text": "データフレーム: 紹介\n\n表形式データ\n縦ベクトルを横に並べたもの\n一つ一つの列はベクトルであるため、一つの列は同じデータ型\n\n全列が同じデータ型である必要はない。\n\n行列との違い\n\n列ごとに異なるデータ型が使用可能\n列に名前が付いている（変数名）。\n\n詳しい操作方法は次回以降（データ・ハンドリング）の講義で解説"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの作成-1",
    "href": "slides/micro/datastructure.html#データフレームの作成-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレームの作成 (1)",
    "text": "データ・フレームの作成 (1)\n自分で作成する場合\n\ndata.frame()、またはtibble()関数を使用\n\ntibble()関数を使う前に{tidyverse}パッケージを読み込む\n\n\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの作成-2",
    "href": "slides/micro/datastructure.html#データフレームの作成-2",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレームの作成 (2)",
    "text": "データ・フレームの作成 (2)\nデータ・フレームを直接作成する方法\n\nmy_df1 &lt;- tibble(Name       = c(\"Kansai\", \"Kangaku\", \"Doshisha\", \"Ritsumeikan\"),\n                 Foundation = c(1886, 1889, 1875, 1900),\n                 Students   = c(27736, 23671, 25974, 32467))\n\nmy_df1\n\n# A tibble: 4 × 3\n  Name        Foundation Students\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;\n1 Kansai            1886    27736\n2 Kangaku           1889    23671\n3 Doshisha          1875    25974\n4 Ritsumeikan       1900    32467"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの作成-3",
    "href": "slides/micro/datastructure.html#データフレームの作成-3",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレームの作成 (3)",
    "text": "データ・フレームの作成 (3)\nベクトルから作成する方法\n\nName &lt;- c(\"Tokyo\", \"Nagoya\", \"Osaka\", \"Fukuoka\")\nFood &lt;- c(\"Monja\", \"Tebasaki\", \"Takoyaki\", \"Ramen\")\nPop  &lt;- c(1396, 755, 882, 511)\nArea &lt;- c(2194, 5173, 1899, 4987)\n\nmy_df2 &lt;- tibble(Name, Pop, Area, Food)\n\nmy_df2\n\n# A tibble: 4 × 4\n  Name      Pop  Area Food    \n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   \n1 Tokyo    1396  2194 Monja   \n2 Nagoya    755  5173 Tebasaki\n3 Osaka     882  1899 Takoyaki\n4 Fukuoka   511  4987 Ramen"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの作成-4",
    "href": "slides/micro/datastructure.html#データフレームの作成-4",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレームの作成 (4)",
    "text": "データ・フレームの作成 (4)\n表形式ファイルの読み込み\n\nread_csv()を使用する前に{tidyverse}を読み込んでおく（今回は読み込み済み）。\n\n\nmy_df3 &lt;- read_csv(\"Data/BuildingData.csv\") # 第6回のデータ\n\nmy_df3\n\n# A tibble: 47 × 5\n      ID Pref   Finance Above65 Turnout\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道   0.446    32.3    54.0\n 2     2 青森県   0.342    33.7    49.5\n 3     3 岩手県   0.359    33.8    55.4\n 4     4 宮城県   0.597    28.4    48.8\n 5     5 秋田県   0.311    37.6    55.6\n 6     6 山形県   0.362    34.0    61.9\n 7     7 福島県   0.522    31.8    53.4\n 8     8 茨城県   0.631    30.3    47.2\n 9     9 栃木県   0.620    29.6    47.0\n10    10 群馬県   0.612    30.9    48.5\n# ℹ 37 more rows"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの確認-1",
    "href": "slides/micro/datastructure.html#データフレームの確認-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレームの確認 (1)",
    "text": "データ・フレームの確認 (1)\n\nclass(): データ構造の確認\n\n\nclass(my_df3) # my_df2のデータ構造\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\n\nis.data.frame(): データ・フレームか否かを判定\n\n\nis.data.frame(my_df3)\n\n[1] TRUE\n\n\n\nnrow(): データ・フレームの行数\n\n\nnrow(my_df1) # my_df1の行数\n\n[1] 4\n\n\n\nncol(): データ・フレームの列数\n\n\nncol(my_df2) # my_df2の列数\n\n[1] 4"
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレームの確認-2",
    "href": "slides/micro/datastructure.html#データフレームの確認-2",
    "title": "ミクロ政治データ分析実習",
    "section": "データフレームの確認 (2)",
    "text": "データフレームの確認 (2)\n\nhead(): 最初の6行のみ出力\ntail(): 最後の6行を出力\n\nn = 5を追加すると、最初 (最後) の5行を出力（任意の数字）\n\nnames(): 変数名のみ出力\n\n\nhead()tail()names()\n\n\n\n\n\nhead(my_df3)\n\n# A tibble: 6 × 5\n     ID Pref   Finance Above65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1     1 北海道   0.446    32.3    54.0\n2     2 青森県   0.342    33.7    49.5\n3     3 岩手県   0.359    33.8    55.4\n4     4 宮城県   0.597    28.4    48.8\n5     5 秋田県   0.311    37.6    55.6\n6     6 山形県   0.362    34.0    61.9\n\n\n\n\n\n\nhead(my_df3, n = 10)\n\n# A tibble: 10 × 5\n      ID Pref   Finance Above65 Turnout\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道   0.446    32.3    54.0\n 2     2 青森県   0.342    33.7    49.5\n 3     3 岩手県   0.359    33.8    55.4\n 4     4 宮城県   0.597    28.4    48.8\n 5     5 秋田県   0.311    37.6    55.6\n 6     6 山形県   0.362    34.0    61.9\n 7     7 福島県   0.522    31.8    53.4\n 8     8 茨城県   0.631    30.3    47.2\n 9     9 栃木県   0.620    29.6    47.0\n10    10 群馬県   0.612    30.9    48.5\n\n\n\n\n\n\n\n\n\ntail(my_df3)\n\n# A tibble: 6 × 5\n     ID Pref     Finance Above65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1    42 長崎県     0.335    33.2    48.7\n2    43 熊本県     0.403    31.7    49.1\n3    44 大分県     0.375    33.5    53.0\n4    45 宮崎県     0.342    32.9    47.5\n5    46 鹿児島県   0.338    32.7    48.6\n6    47 沖縄県     0.362    22.7    50.5\n\n\n\n\n\n\ntail(my_df3, n = 3)\n\n# A tibble: 3 × 5\n     ID Pref     Finance Above65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1    45 宮崎県     0.342    32.9    47.5\n2    46 鹿児島県   0.338    32.7    48.6\n3    47 沖縄県     0.362    22.7    50.5\n\n\n\n\n\n\n\nnames(my_df3)\n\n[1] \"ID\"      \"Pref\"    \"Finance\" \"Above65\" \"Turnout\""
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレーム-行の抽出",
    "href": "slides/micro/datastructure.html#データフレーム-行の抽出",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレーム: 行の抽出",
    "text": "データ・フレーム: 行の抽出\n\n\n\nmy_df3[27, ]\n\n# A tibble: 1 × 5\n     ID Pref   Finance Above65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1    27 大阪府   0.752    27.7    52.4\n\nclass(my_df3[27, ])\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n\n\nmy_df3[c(13, 27, 40), ]\n\n# A tibble: 3 × 5\n     ID Pref   Finance Above65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1    13 東京都   1.07     23.3    56.5\n2    27 大阪府   0.752    27.7    52.4\n3    40 福岡県   0.628    28.2    48.8\n\nclass(my_df3[c(13, 27, 40), ])\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレーム-列の抽出-1",
    "href": "slides/micro/datastructure.html#データフレーム-列の抽出-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレーム: 列の抽出 (1)",
    "text": "データ・フレーム: 列の抽出 (1)\n\n\n\nmy_df3[, 2]\n\n# A tibble: 47 × 1\n   Pref  \n   &lt;chr&gt; \n 1 北海道\n 2 青森県\n 3 岩手県\n 4 宮城県\n 5 秋田県\n 6 山形県\n 7 福島県\n 8 茨城県\n 9 栃木県\n10 群馬県\n# ℹ 37 more rows\n\nclass(my_df3[, 2])\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n\n\nmy_df3[, c(2, 4, 5)]\n\n# A tibble: 47 × 3\n   Pref   Above65 Turnout\n   &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1 北海道    32.3    54.0\n 2 青森県    33.7    49.5\n 3 岩手県    33.8    55.4\n 4 宮城県    28.4    48.8\n 5 秋田県    37.6    55.6\n 6 山形県    34.0    61.9\n 7 福島県    31.8    53.4\n 8 茨城県    30.3    47.2\n 9 栃木県    29.6    47.0\n10 群馬県    30.9    48.5\n# ℹ 37 more rows\n\nclass(my_df3[, c(2, 4, 5)])\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\""
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレーム-列の抽出-1-1",
    "href": "slides/micro/datastructure.html#データフレーム-列の抽出-1-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレーム: 列の抽出 (1)",
    "text": "データ・フレーム: 列の抽出 (1)\n\nmy_df3$Pref\n\n [1] \"北海道\"   \"青森県\"   \"岩手県\"   \"宮城県\"   \"秋田県\"   \"山形県\"  \n [7] \"福島県\"   \"茨城県\"   \"栃木県\"   \"群馬県\"   \"埼玉県\"   \"千葉県\"  \n[13] \"東京都\"   \"神奈川県\" \"新潟県\"   \"富山県\"   \"石川県\"   \"福井県\"  \n[19] \"山梨県\"   \"長野県\"   \"岐阜県\"   \"静岡県\"   \"愛知県\"   \"三重県\"  \n[25] \"滋賀県\"   \"京都府\"   \"大阪府\"   \"兵庫県\"   \"奈良県\"   \"和歌山県\"\n[31] \"鳥取県\"   \"島根県\"   \"岡山県\"   \"広島県\"   \"山口県\"   \"徳島県\"  \n[37] \"香川県\"   \"愛媛県\"   \"高知県\"   \"福岡県\"   \"佐賀県\"   \"長崎県\"  \n[43] \"熊本県\"   \"大分県\"   \"宮崎県\"   \"鹿児島県\" \"沖縄県\"  \n\n\n返り値はデータ・フレームでなく、ベクトル\n\nデータ構造がベクトルの場合、class()はデータ型が出力される。\n\n\nclass(my_df3$Pref)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/micro/datastructure.html#データフレーム-抽出方法の比較",
    "href": "slides/micro/datastructure.html#データフレーム-抽出方法の比較",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・フレーム: 抽出方法の比較",
    "text": "データ・フレーム: 抽出方法の比較\n抽出方法によって返り値のデータ構造が異なる。\n\n[]を用いた抽出は返り値がデータ・フレーム\n$を用いた抽出は返り値がベクトル\n\n\n\n\n\n\n\n\n\n\nコード\n意味\n返り値\n備考\n\n\n\n\nデータ・フレーム名[i, ]\ni番目の行を抽出\nデータ・フレーム\niは任意のベクトル\n\n\nデータ・フレーム名[, i]\ni番目の列を抽出\nデータ・フレーム\niは任意のベクトル\n\n\nデータ・フレーム名$列名\n当該列を抽出\nベクトル"
  },
  {
    "objectID": "slides/micro/datastructure.html#リスト-1",
    "href": "slides/micro/datastructure.html#リスト-1",
    "title": "ミクロ政治データ分析実習",
    "section": "リスト",
    "text": "リスト\n\nあらゆるデータ構造が格納できるデータ構造\n\nRに存在する多くのオブジェクトはリストであるため、Rでデータを自由自在に操るためにはリストの知識が必須\nただし、本講義ではリストは使わない。\n\n\n\n作成中身抽出 (1)抽出 (2)\n\n\n\nmy_list &lt;- list(Vector1 = my_vec1,\n                Vector2 = my_vec4,\n                Matrix  = my_mat1)\n\n\n\n\nmy_list\n\n$Vector1\n[1] \"R is fun!\"\n\n$Vector2\n[1] 10 20  1  0\n\n$Matrix\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n\n\nリスト名[[i]]の場合、リストのi番目要素が抽出される。\n\nmy_list[[2]]\n\n[1] 10 20  1  0\n\n\n\n\n要素に名前がついてある場合、リスト名$要素名でも抽出可能\n\nmy_list$Matrix\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/basic.html#プロジェクト機能のすゝめ",
    "href": "slides/micro/basic.html#プロジェクト機能のすゝめ",
    "title": "ミクロ政治データ分析実習",
    "section": "プロジェクト機能のすゝめ",
    "text": "プロジェクト機能のすゝめ\n\nファイルの読み込み/書き出しの際にパス問題が生じる場合が多い。\n毎回の実習、課題用にプロジェクトを作成することを強く推奨する。\n\nプロジェクトを使わない場合、本スライド/資料上のコードの再現性は保証しない。\n\nプロジェクトの作成方法はサポートページの「Rの使い方 &gt; プロジェクト管理」を参照"
  },
  {
    "objectID": "slides/micro/basic.html#電卓としてのrと算術演算子",
    "href": "slides/micro/basic.html#電卓としてのrと算術演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "電卓としてのRと算術演算子",
    "text": "電卓としてのRと算術演算子\n\nStep 1: File &gt; New File &gt; R Script\nStep 2: Sourceペインの大きさを最大化する。\nStep 3: Sourceペインに以下のように入力する\n\n\n1 + 2 + 3\n\n\nStep 4: Step 3で入力した行に移動し、「Cmd + Return（macOS）」または「Ctrl + Enter（Linux/Windows）」\n\nConsoleペインに以下のように出力されればOK\n\n\n\n\n[1] 6"
  },
  {
    "objectID": "slides/micro/basic.html#rの算術演算子",
    "href": "slides/micro/basic.html#rの算術演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "Rの算術演算子",
    "text": "Rの算術演算子\n\n結果として何らかの数字が返される\n累乗（^）を除き、演算子の前後にはスペースを入れるのがRの流儀\n\n必須ではないが、コードが読みやすくなる\n\n\n\n\n\n演算子\n意味\n例\n結果\n\n\n\n\n+\n和\n2 + 5\n7\n\n\n-\n差\n2 - 8\n-6\n\n\n*\n積\n7 * 3\n21\n\n\n/\n商\n16 / 5\n3.2\n\n\n^、**\n累乗（べき乗）\n2^3または2 ** 3\n8\n\n\n%%\n剰余 (モジュロ)\n18 %% 7\n4\n\n\n%/%\n整数商\n18 %/% 7\n2"
  },
  {
    "objectID": "slides/micro/basic.html#rの論理演算子",
    "href": "slides/micro/basic.html#rの論理演算子",
    "title": "ミクロ政治データ分析実習",
    "section": "Rの論理演算子",
    "text": "Rの論理演算子\n\n真（TRUE）か偽（FALSE）の値を返す演算子\n\n\n3 &gt; 2 # 3は2より大きいか\n\n[1] TRUE\n\n5 &lt;= 10 # 5は10以下か\n\n[1] TRUE\n\n2 + 3 == 1 # 2 + 3は1に等しいか\n\n[1] FALSE\n\n2 + 2 != 2 * 2 # 2 + 3は2 * 2と等しくないか\n\n[1] FALSE\n\n(2 + 2) != (2 * 2) # こっちの方がもう少し読みやすい\n\n[1] FALSE"
  },
  {
    "objectID": "slides/micro/basic.html#rの論理演算子まとめ",
    "href": "slides/micro/basic.html#rの論理演算子まとめ",
    "title": "ミクロ政治データ分析実習",
    "section": "Rの論理演算子（まとめ）",
    "text": "Rの論理演算子（まとめ）\n\n「等しい」は=でなく、==であることに注意すること\n\n=は代入演算子として機能する（他の言語と同じ）。\n\n\n\n\n\n演算子\n意味\n例\n結果\n\n\n\n\nx &lt; y\nxはyより小さい\n3 &lt; 1\nFALSE\n\n\nx &lt;= y\nxはyと等しいか、小さい\n2 &lt;= 2\nTRUE\n\n\nx &gt; y\nxはyより大きい\n6 &gt; 5\nTRUE\n\n\nx &gt;= y\nxはyと等しいか、大きい\n4 &gt;= 5\nFALSE\n\n\nx == y\nxとyは等しい\n(2 + 3) == (4 + 1)\nTRUE\n\n\nx != y\nxとyは等しくない\n((2 * 3) + 1) != (2 * (3 + 1))\nTRUE"
  },
  {
    "objectID": "slides/micro/basic.html#論理演算子-andとor",
    "href": "slides/micro/basic.html#論理演算子-andとor",
    "title": "ミクロ政治データ分析実習",
    "section": "論理演算子: ANDとOR",
    "text": "論理演算子: ANDとOR\nAND演算子: &\n\n&を挟む左右の両側がTRUEの場合のみTRUEを返す\n\n\n(2 + 3 == 5) & (1 * 2 == 3) # TRUE and FALSEだから\n\n[1] FALSE\n\n(2 + 2 == 4) & (2 * 2 == 4) # TRUE and TRUEだから\n\n[1] TRUE\n\n\n\nOR演算子: |\n\n|を挟む左右の片側、あるいは両側がTRUEの場合のみTRUEを返す\n\n\n(2 + 3 == 5) | (1 * 2 == 3) # TRUE or FALSEだから\n\n[1] TRUE\n\n(2 + 2 != 4) | (2 * 2 != 4) # FALSE or FALSEだから\n\n[1] FALSE"
  },
  {
    "objectID": "slides/micro/basic.html#練習問題",
    "href": "slides/micro/basic.html#練習問題",
    "title": "ミクロ政治データ分析実習",
    "section": "練習問題",
    "text": "練習問題\n\n\\(\\frac{1234 \\times 4321}{3}\\)\n\\(\\frac{1234 \\times 4321}{3}\\)の余りは？\n\n\\((1234 \\times 4321) \\text{ mod } 3\\)とも表記する\n\n\\(2 \\times 3\\) と \\(2 + 3\\) は等しいか\n\\(1009 \\text{ mod } 3\\) は0か\n\\(5^5\\) は100以上、かつ1000未満であるか"
  },
  {
    "objectID": "slides/micro/basic.html#練習問題答え",
    "href": "slides/micro/basic.html#練習問題答え",
    "title": "ミクロ政治データ分析実習",
    "section": "練習問題（答え）",
    "text": "練習問題（答え）\n\n(1234 * 4321) / 3\n\n[1] 1777371\n\n(1234 * 4321) %% 3\n\n[1] 1\n\n2 * 3 == 2 + 3\n\n[1] FALSE\n\n1009 %% 3 == 0\n\n[1] FALSE\n\n(5^5 &gt;= 100) & (5^5 &lt; 1000)\n\n[1] FALSE"
  },
  {
    "objectID": "slides/micro/basic.html#行のコードを書いてみよう",
    "href": "slides/micro/basic.html#行のコードを書いてみよう",
    "title": "ミクロ政治データ分析実習",
    "section": "200行のコードを書いてみよう",
    "text": "200行のコードを書いてみよう\n\n\n\n123454321 \\(\\times\\) 2を計算してみよう\n123454321 \\(\\times\\) 3を計算してみよう\n123454321 \\(\\times\\) 4を計算してみよう\n…\n123454321 \\(\\times\\) 199を計算してみよう\n123454321 \\(\\times\\) 200を計算してみよう\n\n\n\n123454321 * 2\n123454321 * 3\n123454321 * 4\n\n...\n\n123454321 * 199\n123454321 * 200\n\n\n\n\n効率的な方法は?\n\n123454321をコピーし貼り付けながら計算を繰り返す\n123454321にxという名前を付けて、x * 1のように表記する"
  },
  {
    "objectID": "slides/micro/basic.html#rにおけるベクトル",
    "href": "slides/micro/basic.html#rにおけるベクトル",
    "title": "ミクロ政治データ分析実習",
    "section": "Rにおけるベクトル",
    "text": "Rにおけるベクトル\nベクトル（vector）: Rにおけるデータの最小単位\n\n同じデータ型（数値、文字列など）\n\n数値と文字列が混在するベクトルは作成不可\n\n長さは1以上\n\n1や\"Cat\"は長さ1のベクトル\n\nc()関数で作成\n\n()の中にベクトルの要素を入力\n長さ1のベクトルの場合、c()は省略可能"
  },
  {
    "objectID": "slides/micro/basic.html#ベクトルの作成",
    "href": "slides/micro/basic.html#ベクトルの作成",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトルの作成",
    "text": "ベクトルの作成\n\n&lt;-演算子で格納\n\nベクトル名という名前のオブジェクト（object）が生成され、作業環境内に保存される。\n「作業環境」や「オブジェクト」の概念は次回解説\n\n格納しない場合、作業環境に保存されず、出力のみ\n\nベクトル名 &lt;- c(要素1, 要素2, ...)\n\n例1: 要素が1, 2, 3, 4, 5の長さ5の数値型ベクトル\n\nベクトルをmy_vector1という名前で作業環境に格納\n\n\nmy_vector1 &lt;- c(1, 2, 3, 4, 5)\n\n\n例2: 要素が”Cat”, “Lion”, “Tiger”の長さ3の文字型ベクトルをmy_vector2という名で格納\n\n文字は必ず\"か'で囲む\n\n\nmy_vector2 &lt;- c(\"Cat\", \"Lion\", \"Tiger\")"
  },
  {
    "objectID": "slides/micro/basic.html#オブジェクトの名前",
    "href": "slides/micro/basic.html#オブジェクトの名前",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクトの名前",
    "text": "オブジェクトの名前\n基本的にオブジェクト名は何でも良いが、いくつかの禁則事項がある\n\n特殊記号、スペース禁止（例外: _と.）\n\nスペースの代わりに_か.が使われるが、_を推奨\n\n数字、または_、.で始まるオブジェクト名\n予約語は使えない（forやifなど）\n\n使える予約語もあるが、非推奨\n\n日本語、ハングル、簡体字、アラビア文字も可能であるが、非推奨\n\n\n良いオブジェクト名は\n\nオブジェクト名を見るだけで、中身の内容が想像できる\n短いオブジェクト名"
  },
  {
    "objectID": "slides/micro/basic.html#オブジェクトの表示",
    "href": "slides/micro/basic.html#オブジェクトの表示",
    "title": "ミクロ政治データ分析実習",
    "section": "オブジェクトの表示",
    "text": "オブジェクトの表示\n現在の作業環境におけるオブジェクトリスト\n\n方法1：RStudioのEnvironmentペインで確認\n方法2：Consoleペインでls()を入力\n\n\nls()\n\n[1] \"has_annotations\" \"my_vector1\"      \"my_vector2\"     \n\n\n\nオブジェクトの出力\nオブジェクト名のみ入力（print(オブジェクト名)もOK）\n\nmy_vector1 # print(my_vector1) でもOK\n\n[1] 1 2 3 4 5\n\nmy_vector2 # print(my_vector2) でもOK\n\n[1] \"Cat\"   \"Lion\"  \"Tiger\"\n\n\n\nRを再起動すると作業環境が初期化されるため、もう一回作成する必要がある。\n\nコードを記録し、残すことが重要"
  },
  {
    "objectID": "slides/micro/basic.html#比較",
    "href": "slides/micro/basic.html#比較",
    "title": "ミクロ政治データ分析実習",
    "section": "比較",
    "text": "比較\nコードは一行増えたものの、全体的にはコードの量が著しく減る。\n\nただし、200行書かないといけない点は変わらない。\n\nより効率的な方法は?\n\\(\\rightarrow\\) ベクトル・リサイクル（vector recycle）\n\n\n\n\n\n123454321 * 2\n## [1] 246908642\n123454321 * 3\n## [1] 370362963\n123454321 * 4\n## [1] 493817284\n123454321 * 5\n## [1] 617271605\n\n\n\n\n\nx &lt;- 123454321\nx * 2\n## [1] 246908642\nx * 3\n## [1] 370362963\nx * 4\n## [1] 493817284\nx * 5\n## [1] 617271605"
  },
  {
    "objectID": "slides/micro/basic.html#等差数列ベクトルの作り方",
    "href": "slides/micro/basic.html#等差数列ベクトルの作り方",
    "title": "ミクロ政治データ分析実習",
    "section": "等差数列ベクトルの作り方",
    "text": "等差数列ベクトルの作り方\n\n\n公差 = 1の等差数列\n\n:演算子を利用\n\n\nc(1, 2, 3, 4, 5, 6, 7)\n\n[1] 1 2 3 4 5 6 7\n\n1:7\n\n[1] 1 2 3 4 5 6 7\n\n8:3\n\n[1] 8 7 6 5 4 3\n\n\n\n\n\n公差 \\(\\neq\\) 1の等差数列\n\nseq()関数の使用 (byで公差を指定)\n\n\nc(1, 3, 5, 7, 9)\n\n[1] 1 3 5 7 9\n\nseq(1, 9, by = 2)   # 1から9までの公差2の等差数列\n\n[1] 1 3 5 7 9\n\nseq(1, 5, by = 0.5) # 1から5までの公差0.5の等差数列\n\n[1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0\n\nseq(8, 3, by = -1)  # 8から3までの公差-1の等差数列\n\n[1] 8 7 6 5 4 3"
  },
  {
    "objectID": "slides/micro/basic.html#ベクトル同士の演算",
    "href": "slides/micro/basic.html#ベクトル同士の演算",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトル同士の演算",
    "text": "ベクトル同士の演算\n例) ベクトルXとベクトルY同士の演算\n\nケース1： Xの長さ = Yの長さ\nケース2： Xの長さ \\(\\neq\\) Yの長さ\n\n\n参考) ベクトルの長さの求め方\n\nlength()関数を使用\n\n\nlength(my_vector1) # c(1, 2, 3, 4, 5)\n\n[1] 5\n\nlength(my_vector2) # c(\"Cat\", \"Lion\", \"Tiger\")\n\n[1] 3"
  },
  {
    "objectID": "slides/micro/basic.html#ケース1-ベクトルの長さが同じ場合",
    "href": "slides/micro/basic.html#ケース1-ベクトルの長さが同じ場合",
    "title": "ミクロ政治データ分析実習",
    "section": "ケース1: ベクトルの長さが同じ場合",
    "text": "ケース1: ベクトルの長さが同じ場合\n\n同じ位置の要素同士の演算\n\n\n\n\nベクトル/位置\n1番目\n2番目\n3番目\n4番目\n5番目\n6番目\n\n\n\n\nmy_vec1\n1\n2\n3\n4\n5\n6\n\n\n\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\nmy_vec2\n0\n1\n2\n0\n1\n2\n\n\n結果\n0\n2\n6\n0\n5\n12\n\n\n\n\n\n# my_vec1とmy_vec2は同じ長さ\nmy_vec1 &lt;- c(1, 2, 3, 4, 5, 6) # 長さ6のベクトル\nmy_vec2 &lt;- c(0, 1, 2, 0, 1, 2) # 長さ6のベクトル\nmy_vec1 * my_vec2\n\n[1]  0  2  6  0  5 12"
  },
  {
    "objectID": "slides/micro/basic.html#ケース2-ベクトルの長さが異なる場合",
    "href": "slides/micro/basic.html#ケース2-ベクトルの長さが異なる場合",
    "title": "ミクロ政治データ分析実習",
    "section": "ケース2: ベクトルの長さが異なる場合",
    "text": "ケース2: ベクトルの長さが異なる場合\n\n短い方のベクトルがリサイクルされる（ベクトル・リサイクル）。\n\nmy_vec4の方が短いため、足りない分（太字の部分）はリサイクルされる。\n\n\n\n\n\nベクトル/位置\n1番目\n2番目\n3番目\n4番目\n5番目\n6番目\n\n\n\n\nmy_vec3\n1\n2\n3\n4\n5\n6\n\n\n\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\nmy_vec4\n0\n1\n0\n1\n0\n1\n\n\n結果\n0\n2\n0\n4\n0\n6\n\n\n\n\n\n# my_vec3とmy_vec4の長さは異なる\nmy_vec3 &lt;- c(1, 2, 3, 4, 5, 6) # 長さ6のベクトル\nmy_vec4 &lt;- c(0, 1)             # 長さ2のベクトル\nmy_vec3 * my_vec4\n\n[1] 0 2 0 4 0 6"
  },
  {
    "objectID": "slides/micro/basic.html#最初の問題",
    "href": "slides/micro/basic.html#最初の問題",
    "title": "ミクロ政治データ分析実習",
    "section": "最初の問題",
    "text": "最初の問題\n結果はどのコードでも同じ\n\nコード結果\n\n\n\n\n答え（3行 ver.）\n\nx &lt;- 123454321\ny &lt;- 2:200\nx * y\n\n\n\n\n答え（2行 ver.）\n\nx &lt;- 123454321\nx * 2:200\n\nまたは、\n\nx &lt;- 2:200\n123454321 * x\n\n\n\n\n答え（1行 ver.）\n\n123454321 * 2:200\n\n\n\n\n\n\n123454321 * 2:200\n\n  [1]   246908642   370362963   493817284   617271605   740725926   864180247\n  [7]   987634568  1111088889  1234543210  1357997531  1481451852  1604906173\n [13]  1728360494  1851814815  1975269136  2098723457  2222177778  2345632099\n [19]  2469086420  2592540741  2715995062  2839449383  2962903704  3086358025\n [25]  3209812346  3333266667  3456720988  3580175309  3703629630  3827083951\n [31]  3950538272  4073992593  4197446914  4320901235  4444355556  4567809877\n [37]  4691264198  4814718519  4938172840  5061627161  5185081482  5308535803\n [43]  5431990124  5555444445  5678898766  5802353087  5925807408  6049261729\n [49]  6172716050  6296170371  6419624692  6543079013  6666533334  6789987655\n [55]  6913441976  7036896297  7160350618  7283804939  7407259260  7530713581\n [61]  7654167902  7777622223  7901076544  8024530865  8147985186  8271439507\n [67]  8394893828  8518348149  8641802470  8765256791  8888711112  9012165433\n [73]  9135619754  9259074075  9382528396  9505982717  9629437038  9752891359\n [79]  9876345680  9999800001 10123254322 10246708643 10370162964 10493617285\n [85] 10617071606 10740525927 10863980248 10987434569 11110888890 11234343211\n [91] 11357797532 11481251853 11604706174 11728160495 11851614816 11975069137\n [97] 12098523458 12221977779 12345432100 12468886421 12592340742 12715795063\n[103] 12839249384 12962703705 13086158026 13209612347 13333066668 13456520989\n[109] 13579975310 13703429631 13826883952 13950338273 14073792594 14197246915\n[115] 14320701236 14444155557 14567609878 14691064199 14814518520 14937972841\n[121] 15061427162 15184881483 15308335804 15431790125 15555244446 15678698767\n[127] 15802153088 15925607409 16049061730 16172516051 16295970372 16419424693\n[133] 16542879014 16666333335 16789787656 16913241977 17036696298 17160150619\n[139] 17283604940 17407059261 17530513582 17653967903 17777422224 17900876545\n[145] 18024330866 18147785187 18271239508 18394693829 18518148150 18641602471\n[151] 18765056792 18888511113 19011965434 19135419755 19258874076 19382328397\n[157] 19505782718 19629237039 19752691360 19876145681 19999600002 20123054323\n[163] 20246508644 20369962965 20493417286 20616871607 20740325928 20863780249\n[169] 20987234570 21110688891 21234143212 21357597533 21481051854 21604506175\n[175] 21727960496 21851414817 21974869138 22098323459 22221777780 22345232101\n[181] 22468686422 22592140743 22715595064 22839049385 22962503706 23085958027\n[187] 23209412348 23332866669 23456320990 23579775311 23703229632 23826683953\n[193] 23950138274 24073592595 24197046916 24320501237 24443955558 24567409879\n[199] 24690864200"
  },
  {
    "objectID": "slides/micro/basic.html#ベクトル要素の抽出",
    "href": "slides/micro/basic.html#ベクトル要素の抽出",
    "title": "ミクロ政治データ分析実習",
    "section": "ベクトル要素の抽出",
    "text": "ベクトル要素の抽出\nベクトルから任意の要素を抽出する2つの方法\n\n方法1: 抽出する要素の位置を指定する。\n方法2: 論理演算子を利用する。\n\n\n例) 11, 12, 13, …, 19, 20が格納されたmy_vec5\n\nmy_vec5 &lt;- 11:20 # my_vec &lt;- seq(11, 20, by = 1) と同じ\nmy_vec5\n\n [1] 11 12 13 14 15 16 17 18 19 20\n\n\n\n\n\n\n位置\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n\nmy_vec5\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n\n他の言語と違い、位置の番号は0からでなく、1からスタートすることに注意"
  },
  {
    "objectID": "slides/micro/basic.html#要素の抽出-位置指定",
    "href": "slides/micro/basic.html#要素の抽出-位置指定",
    "title": "ミクロ政治データ分析実習",
    "section": "要素の抽出: 位置指定",
    "text": "要素の抽出: 位置指定\n\nベクトル名[抽出する要素の位置]\n\n例1) my_vec5の3番目の要素\n\nmy_vec5[3]\n\n[1] 13\n\n\n例2) my_vec5の2, 3, 4, 5番目の要素\n\n[]内に抽出する要素の位置を表すベクトルを指定\npos_vec、c(2, 3, 4, 5)、seq(2, 5, by = 1)、2:5はすべて同じ意味\n\n\npos_vec &lt;- c(2, 3, 4, 5)\nmy_vec5[pos_vec]\n\n[1] 12 13 14 15\n\nmy_vec5[c(2, 3, 4, 5)]\n\n[1] 12 13 14 15\n\nmy_vec5[seq(2, 5, by = 1)]\n\n[1] 12 13 14 15\n\nmy_vec5[2:5]\n\n[1] 12 13 14 15"
  },
  {
    "objectID": "slides/micro/basic.html#要素の抽出-論理演算子の利用",
    "href": "slides/micro/basic.html#要素の抽出-論理演算子の利用",
    "title": "ミクロ政治データ分析実習",
    "section": "要素の抽出: 論理演算子の利用",
    "text": "要素の抽出: 論理演算子の利用\n\nそれぞれの要素に対し、抽出するか（TRUE）しないか（FALSE）を指定\n表形式データにおける行の抽出を自由自在に操るためには必須知識（第9回）\n\n例1) my_vec5から1, 4, 7, 9, 10番目の要素を抽出\n\n[]内にベクトルの長さ分のベクトルを更に入力する必要があるため、あまり使わない方法\n\n\n# my_vec5[c(1, 4, 7, 9, 10)] と同じ結果\nmy_vec5[c(TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE)]\n\n[1] 11 14 17 19 20\n\n\n例2) my_vec5から奇数のみ抽出（論理演算子の利用）\n\n# my_vec5を2で割った場合、余りが1ならTRUE、その他はFALSE\nmy_vec5 %% 2 == 1\n\n [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\nmy_vec5[my_vec5 %% 2 == 1]\n\n[1] 11 13 15 17 19"
  },
  {
    "objectID": "slides/micro/basic.html#表形式データの読み込み",
    "href": "slides/micro/basic.html#表形式データの読み込み",
    "title": "ミクロ政治データ分析実習",
    "section": "表形式データの読み込み",
    "text": "表形式データの読み込み\n{tidyverse}パッケージが提供するread_csv()関数を利用\n\nオブジェクト名 &lt;- read_csv(\"パスを含むファイル名\")\n以下の例はプロジェクト・フォルダー内にDataという名の下位フォルダーがあり、その中にPref_Vote.csvが保存されている場合。\n\nパスは\"Data/Pref_Vote.csv\"\nJDCat分析ツールを使用する場合、予めデータをアップロードしておくこと。\n\nファイルアップロードの方法はサポートページの「Rの使い方 &gt; ファイル管理」を参照\nデータ（Pref_Vote.csv）はLMSから入手\n\n\n\n\nlibrary(tidyverse)\nmy_data &lt;- read_csv(\"Data/Pref_Vote.csv\")\n\n\n\n\n注意：read_csv()とread.csv()は区別しよう。\n\n\n　両方.csv形式データを読み込む関数であるが、read.csv()はR内蔵関数、read_csv()は{tidyverse}を読み込まないと使用できない関数である。後者の方が見やすいメリットがある。本講義ではread_csv()のみを使用する。課題の際、read.csv()関数を使うと減点とする。"
  },
  {
    "objectID": "slides/micro/basic.html#データの出力",
    "href": "slides/micro/basic.html#データの出力",
    "title": "ミクロ政治データ分析実習",
    "section": "データの出力",
    "text": "データの出力\n\nオブジェクト名、またはprint(オブジェクト名)\n\n\n# my_dataの中身の出力するコード\n# print(my_data) でもOK\nmy_data\n\n# A tibble: 47 × 13\n      ID Pref   Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 北海道  0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n 2     2 青森県  0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n 3     3 岩手県  0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n 4     4 宮城県  0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n 5     5 秋田県  0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n 6     6 山形県  0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n 7     7 福島県  0.509   28.7    25.2  33.8    28.3 11.0    3.43 10.4    3.24\n 8     8 茨城県  0.633   26.8    26.6  40.6    19.0 15.0    6.67 10.1    2.88\n 9     9 栃木県  0.622   25.9    26.8  38.8    21.6 12.4   10.9   7      2.05\n10    10 群馬県  0.603   27.6    26.6  42.1    19.3 13.8    5.61 10      2.44\n# ℹ 37 more rows\n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/basic.html#データが全部見えない",
    "href": "slides/micro/basic.html#データが全部見えない",
    "title": "ミクロ政治データ分析実習",
    "section": "データが全部見えない?",
    "text": "データが全部見えない?\n1行目\n\n意味: 47行13列の表形式データ\n\n# A tibble: 47 × 13\n\n最終行\n\n意味: 表示された行以外にも更に37行があり、Region2とRegion6は画面では省略されている。\n\n文字サイズが小さい or 画面が大きい場合は省略されず、13列がすべて出力される場合もある。\n\n\n# … with 37 more rows, and 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/basic.html#読み込んだデータの出力",
    "href": "slides/micro/basic.html#読み込んだデータの出力",
    "title": "ミクロ政治データ分析実習",
    "section": "読み込んだデータの出力",
    "text": "読み込んだデータの出力\n\nデフォルト出力行数の指定最後の6行最後のn行\n\n\n\nオブジェクト名、またはprint(オブジェクト名)\n\n\nmy_data\n\n# A tibble: 47 × 13\n      ID Pref   Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 北海道  0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n 2     2 青森県  0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n 3     3 岩手県  0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n 4     4 宮城県  0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n 5     5 秋田県  0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n 6     6 山形県  0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n 7     7 福島県  0.509   28.7    25.2  33.8    28.3 11.0    3.43 10.4    3.24\n 8     8 茨城県  0.633   26.8    26.6  40.6    19.0 15.0    6.67 10.1    2.88\n 9     9 栃木県  0.622   25.9    26.8  38.8    21.6 12.4   10.9   7      2.05\n10    10 群馬県  0.603   27.6    26.6  42.1    19.3 13.8    5.61 10      2.44\n# ℹ 37 more rows\n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n\n\n\nprint(オブジェクト名, n = 行数)\n\n\nprint(my_data, n = 15)\n\n# A tibble: 47 × 13\n      ID Pref     Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 北海道    0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n 2     2 青森県    0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n 3     3 岩手県    0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n 4     4 宮城県    0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n 5     5 秋田県    0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n 6     6 山形県    0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n 7     7 福島県    0.509   28.7    25.2  33.8    28.3 11.0    3.43 10.4    3.24\n 8     8 茨城県    0.633   26.8    26.6  40.6    19.0 15.0    6.67 10.1    2.88\n 9     9 栃木県    0.622   25.9    26.8  38.8    21.6 12.4   10.9   7      2.05\n10    10 群馬県    0.603   27.6    26.6  42.1    19.3 13.8    5.61 10      2.44\n11    11 埼玉県    0.765   24.8    27.7  32.3    20.4 16      7.23 13.9    1.91\n12    12 千葉県    0.777   25.9    26.7  37.8    21.7 14.0    5.46 11.3    2.01\n13    13 東京都    1.00    22.7    27.4  34.4    19.8 11.4    7.34 14.2    2.82\n14    14 神奈川県  0.917   23.9    27.8  34.9    21.5 12.2    7.77 12.5    2.79\n15    15 新潟県    0.435   29.9    25.2  43.7    25.2  8.27   4.39  8      3.76\n# ℹ 32 more rows\n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n\n\n\ntail(オブジェクト名)\n\n\ntail(my_data)\n\n# A tibble: 6 × 13\n     ID Pref     Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1    42 長崎県    0.316   29.6    25.8  41.7    20.7  16.9   5.12  6.27   3.48\n2    43 熊本県    0.387   28.8    27.2  46.5    19.3  15.3   4.53  6.32   2.6 \n3    44 大分県    0.358   30.4    25.6  39.4    18.4  13.3   4.42  6.85  13.0 \n4    45 宮崎県    0.320   29.5    26.3  40.1    14.5  17.1   5.74  7.27   6.81\n5    46 鹿児島県  0.321   29.4    26.0  46.0    16.2  14.5   6.47  6.52   3.62\n6    47 沖縄県    0.315   19.6    33.4  27.8    13.3  15.1   7.66 15.6   12.1 \n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n\n\n\ntail(オブジェクト名, n = 行数)\n\nhead()で使うと最初のn行の出力も可能\n\n\n\ntail(my_data, n = 10)\n\n# A tibble: 10 × 13\n      ID Pref     Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1    38 愛媛県    0.412   30.6    24.8  43.6    19.3  14.8   6.77  6.97   2.4 \n 2    39 高知県    0.245   32.8    23.6  37.0    17.0  15.8   3.93 17.4    2.91\n 3    40 福岡県    0.618   25.9    28.2  36.5    19.1  17.2   7.03 10.8    3.33\n 4    41 佐賀県    0.329   27.7    28.0  43.5    21.1  15.5   4.85  5.67   4.16\n 5    42 長崎県    0.316   29.6    25.8  41.7    20.7  16.9   5.12  6.27   3.48\n 6    43 熊本県    0.387   28.8    27.2  46.5    19.3  15.3   4.53  6.32   2.6 \n 7    44 大分県    0.358   30.4    25.6  39.4    18.4  13.3   4.42  6.85  13.0 \n 8    45 宮崎県    0.320   29.5    26.3  40.1    14.5  17.1   5.74  7.27   6.81\n 9    46 鹿児島県  0.321   29.4    26.0  46.0    16.2  14.5   6.47  6.52   3.62\n10    47 沖縄県    0.315   19.6    33.4  27.8    13.3  15.1   7.66 15.6   12.1 \n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/basic.html#csv以外の表形式データ",
    "href": "slides/micro/basic.html#csv以外の表形式データ",
    "title": "ミクロ政治データ分析実習",
    "section": ".csv以外の表形式データ",
    "text": ".csv以外の表形式データ\n.csv形式ファイルは表形式データの定番であり、標準\n\n他にも様々な形式のデータがあり、Rで読み込み可能（以下は一部の例）\n\n\n\n\nソフトウェア名\n拡張子\n使用パッケージ\n関数\n\n\n\n\nMicrosoft Excel\n.xls、.xlsx\n{readxl}\nread_excle()\n\n\nLibreOffice / OpenOffice\n.ods\n{readODS}\nread_ods()\n\n\nSPSS\n.sav\n{haven}\nread_stata()\n\n\nStata\n.dta\n{haven}\nread_spss()\n\n\nSAS\n.sas7bdat\n{haven}\nread_sas()\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/reporting.html#授業開始前に",
    "href": "slides/macro/reporting.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールのRStudioを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSからダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください（コピペ可）。\n\n\nlibrary(tidyverse)\nlibrary(marginaleffects)\n\ndf &lt;- read_csv(\"Data/M1.csv\")\n\nfit_lm     &lt;- lm(Score_Mean ~ Order + First + Duration, data = df)\nfit_logit  &lt;- glm(Final ~ Order + First + Duration, data = df, family = binomial(\"logit\"))\nfit_inter1 &lt;- lm(Score_Mean ~ Order * First + Duration, data = df)\nfit_inter2 &lt;- lm(Score_Mean ~ Order * Duration + First, data = df)\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/reporting.html#可視化の手順",
    "href": "slides/macro/reporting.html#可視化の手順",
    "title": "マクロ政治データ分析実習",
    "section": "可視化の手順",
    "text": "可視化の手順\n{marginaleffects}と{ggplot2}パッケージを使用（{ggplot2}は{tidyverse}と同時に自動的に読み込まれる）\n\npredictions()（予測値）、slopes()（限界効果）関数で予測値、または限界効果を計算し、オブジェクトとして格納\n\n表形式オブジェクトとして格納される。\n\n予測値・限界効果オブジェクトの加工（ラベル付け/factor化）\n\n予測値/限界効果はestimate列\n95%信頼区間の下限と上限はconf.lowとconf.high列\n\n{ggplot2}を用いた作図\n\n予測値 + 95%信頼区間 / 限界効果 + 95%信頼区間\n横軸上の値が少ない場合、geom_pointrange()\n横軸上の値が多い場合、geom_line() + geom_ribbon()"
  },
  {
    "objectID": "slides/macro/reporting.html#データの概要",
    "href": "slides/macro/reporting.html#データの概要",
    "title": "マクロ政治データ分析実習",
    "section": "データの概要",
    "text": "データの概要\n\nlibrary(tidyverse)\nlibrary(marginaleffects)\n\ndf &lt;- read_csv(\"Data/M1.csv\")\n\n\n\n\n変数名\n説明\n備考\n\n\n\n\nNo\n第X回大会\n\n\n\nYear\n大会年度\n\n\n\nName\nコンビ名\n\n\n\nDuration\n結成からの経過年数\n\n\n\nFirst\n初出場ダミー\n1 = 初出場 / 0 = その他\n\n\nFinal\nファイナルステージへの進出有無\n\n\n\nOrder\n出場順番\n1から10\n\n\nScore_Mean\n平均得点\n7人の審査委員からの評価の平均値"
  },
  {
    "objectID": "slides/macro/reporting.html#モデルの推定",
    "href": "slides/macro/reporting.html#モデルの推定",
    "title": "マクロ政治データ分析実習",
    "section": "モデルの推定",
    "text": "モデルの推定\n\nM-1グランプリにおける出場順番と得点の関係\n\nfit_lm: 線形回帰分析（応答変数: 平均得点）\nfit_logit: ロジスティック回帰分析（応答変数: ファイナルステージへの進出有無）\nfit_inter1: 線形回帰分析 + 交互作用（ダミー変数）\n\n初出場ダミー\n\nfit_inter2: 線形回帰分析 + 交互作用（連続変数）\n\nコンビー結成からの経過年数\n\n交互作用を仮定しない変数は統制変数として投入\n\n\n\nfit_lm     &lt;- lm(Score_Mean ~ Order + First + Duration, data = df)\nfit_logit  &lt;- glm(Final ~ Order + First + Duration, data = df, family = binomial(\"logit\"))\nfit_inter1 &lt;- lm(Score_Mean ~ Order * First + Duration, data = df)\nfit_inter2 &lt;- lm(Score_Mean ~ Order * Duration + First, data = df)"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の計算",
    "href": "slides/macro/reporting.html#予測値の計算",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の計算",
    "text": "予測値の計算\n\nコード1コード2\n\n\n\n予測値はEstimate列、95%信頼区間の下限と上限はそれぞれ2.5 %と97.5 %列\n\n\nlm_pred &lt;- predictions(fit_lm, newdata = datagrid(Order = 1:10))\nlm_pred\n\n\n Estimate Std. Error   z Pr(&gt;|z|) 2.5 % 97.5 % First Duration Order\n     90.2      0.553 163   &lt;0.001  89.1   91.2 0.517     10.6     1\n     90.4      0.468 193   &lt;0.001  89.5   91.3 0.517     10.6     2\n     90.7      0.393 231   &lt;0.001  89.9   91.5 0.517     10.6     3\n     90.9      0.333 273   &lt;0.001  90.3   91.6 0.517     10.6     4\n     91.2      0.299 305   &lt;0.001  90.6   91.8 0.517     10.6     5\n     91.5      0.299 306   &lt;0.001  90.9   92.0 0.517     10.6     6\n     91.7      0.333 275   &lt;0.001  91.1   92.4 0.517     10.6     7\n     92.0      0.393 234   &lt;0.001  91.2   92.7 0.517     10.6     8\n     92.2      0.468 197   &lt;0.001  91.3   93.1 0.517     10.6     9\n     92.5      0.553 167   &lt;0.001  91.4   93.6 0.517     10.6    10\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Score_Mean, First, Duration, Order \n\n\n\n\n\n作図の際の列名はdata.frame()関数で確認する。\n\n予測値はestimate、95%信頼区間の下限と上限はconf.lowとconf.high\n\n\n\ndata.frame(lm_pred)\n\n   rowid     type estimate std.error statistic p.value conf.low conf.high\n1      1 response 90.16668 0.5527105  163.1355       0 89.08339  91.24997\n2      2 response 90.42488 0.4679791  193.2242       0 89.50766  91.34210\n3      3 response 90.68308 0.3926080  230.9761       0 89.91358  91.45257\n4      4 response 90.94127 0.3330148  273.0848       0 90.28858  91.59397\n5      5 response 91.19947 0.2987938  305.2254       0 90.61385  91.78510\n6      6 response 91.45767 0.2987938  306.0896       0 90.87205  92.04330\n7      7 response 91.71587 0.3330148  275.4108       0 91.06317  92.36857\n8      8 response 91.97407 0.3926080  234.2643       0 91.20457  92.74356\n9      9 response 92.23226 0.4679791  197.0863       0 91.31504  93.14949\n10    10 response 92.49046 0.5527105  167.3398       0 91.40717  93.57375\n   Score_Mean     First Duration Order\n1    91.32857 0.5166667     10.6     1\n2    91.32857 0.5166667     10.6     2\n3    91.32857 0.5166667     10.6     3\n4    91.32857 0.5166667     10.6     4\n5    91.32857 0.5166667     10.6     5\n6    91.32857 0.5166667     10.6     6\n7    91.32857 0.5166667     10.6     7\n8    91.32857 0.5166667     10.6     8\n9    91.32857 0.5166667     10.6     9\n10   91.32857 0.5166667     10.6    10"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化",
    "href": "slides/macro/reporting.html#予測値の可視化",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化",
    "text": "予測値の可視化\n\nコード結果\n\n\n\nlm_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場順番\", y = \"平均得点（100点満点）\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) # Black & Whiteテーマを使用し、フォントサイズは14に\n\n\n参考: scale_x_continuous()について\n\n横軸上の変数が連続変数の場合、目盛りを調整する際に使用\nbreaksは目盛りの位置、lablesは目盛りのラベル\n\nbreaksとlabelsは同じ長さのベクトル"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の計算-1",
    "href": "slides/macro/reporting.html#予測値の計算-1",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の計算",
    "text": "予測値の計算\n\nlogit_pred &lt;- predictions(fit_logit, newdata = datagrid(Order = 1:10))\n\ndata.frame(logit_pred)\n\n   rowid type   estimate      p.value   conf.low conf.high Final     First\n1      1 link 0.09377992 0.0015122632 0.02484884 0.2959036   0.3 0.5166667\n2      2 link 0.11999376 0.0010328651 0.03982630 0.3095141   0.3 0.5166667\n3      3 link 0.15230355 0.0006962887 0.06245367 0.3264132   0.3 0.5166667\n4      4 link 0.19142073 0.0005522069 0.09462983 0.3490452   0.3 0.5166667\n5      5 link 0.23776669 0.0008474549 0.13596282 0.3820889   0.3 0.5166667\n6      6 link 0.29129134 0.0049144469 0.18113035 0.4330217   0.3 0.5166667\n7      7 link 0.35131170 0.0621843082 0.22135429 0.5078080   0.3 0.5166667\n8      8 link 0.41643237 0.3779831545 0.25206946 0.6017430   0.3 0.5166667\n9      9 link 0.48460633 0.8943248529 0.27479749 0.6999854   0.3 0.5166667\n10    10 link 0.55335806 0.7020656528 0.29245683 0.7878439   0.3 0.5166667\n   Duration Order\n1      10.6     1\n2      10.6     2\n3      10.6     3\n4      10.6     4\n5      10.6     5\n6      10.6     6\n7      10.6     7\n8      10.6     8\n9      10.6     9\n10     10.6    10"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化-1",
    "href": "slides/macro/reporting.html#予測値の可視化-1",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化",
    "text": "予測値の可視化\n\nコード結果\n\n\n\nlogit_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw()"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の計算調整変数がダミー変数",
    "href": "slides/macro/reporting.html#予測値の計算調整変数がダミー変数",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の計算（調整変数がダミー変数）",
    "text": "予測値の計算（調整変数がダミー変数）\n\nコードコード（2）\n\n\n\nOrderだけでなく、調整変数（First）も残すこと\n\n\ninter1_pred &lt;- predictions(fit_inter1, newdata = datagrid(Order = 1:10,\n                                                          First = 0:1))\n\ndata.frame(inter1_pred)\n\n   rowid     type estimate std.error statistic p.value conf.low conf.high\n1      1 response 90.86470 0.8053717  112.8233       0 89.28620  92.44320\n2      2 response 89.52837 0.7705319  116.1903       0 88.01815  91.03858\n3      3 response 91.07488 0.6783848  134.2525       0 89.74527  92.40449\n4      4 response 89.82365 0.6588679  136.3303       0 88.53229  91.11501\n5      5 response 91.28506 0.5672576  160.9235       0 90.17325  92.39686\n6      6 response 90.11893 0.5596164  161.0370       0 89.02210  91.21576\n7      7 response 91.49524 0.4830628  189.4065       0 90.54845  92.44203\n8      8 response 90.41421 0.4805313  188.1547       0 89.47239  91.35604\n9      9 response 91.70542 0.4414875  207.7192       0 90.84012  92.57072\n10    10 response 90.70950 0.4328119  209.5818       0 89.86120  91.55779\n11    11 response 91.91560 0.4543851  202.2857       0 91.02502  92.80618\n12    12 response 91.00478 0.4271044  213.0739       0 90.16767  91.84189\n13    13 response 92.12578 0.5177003  177.9520       0 91.11111  93.14045\n14    14 response 91.30006 0.4649583  196.3618       0 90.38876  92.21136\n15    15 response 92.33596 0.6160799  149.8766       0 91.12847  93.54345\n16    16 response 91.59534 0.5372434  170.4913       0 90.54236  92.64832\n17    17 response 92.54614 0.7355871  125.8126       0 91.10442  93.98786\n18    18 response 91.89062 0.6322585  145.3371       0 90.65142  93.12983\n19    19 response 92.75632 0.8675341  106.9195       0 91.05598  94.45666\n20    20 response 92.18591 0.7413145  124.3546       0 90.73296  93.63886\n   Score_Mean Duration Order First\n1    91.32857     10.6     1     0\n2    91.32857     10.6     1     1\n3    91.32857     10.6     2     0\n4    91.32857     10.6     2     1\n5    91.32857     10.6     3     0\n6    91.32857     10.6     3     1\n7    91.32857     10.6     4     0\n8    91.32857     10.6     4     1\n9    91.32857     10.6     5     0\n10   91.32857     10.6     5     1\n11   91.32857     10.6     6     0\n12   91.32857     10.6     6     1\n13   91.32857     10.6     7     0\n14   91.32857     10.6     7     1\n15   91.32857     10.6     8     0\n16   91.32857     10.6     8     1\n17   91.32857     10.6     9     0\n18   91.32857     10.6     9     1\n19   91.32857     10.6    10     0\n20   91.32857     10.6    10     1\n\n\n\n\n\nFirstにラベルを付け、factor化\n\n\ninter1_pred &lt;- inter1_pred %&gt;%\n  mutate(First = factor(First, levels = 0:1, labels = c(\"初出場\", \"出場経験あり\")))\n\ndata.frame(inter1_pred)\n\n   rowid     type estimate std.error statistic p.value conf.low conf.high\n1      1 response 90.86470 0.8053717  112.8233       0 89.28620  92.44320\n2      2 response 89.52837 0.7705319  116.1903       0 88.01815  91.03858\n3      3 response 91.07488 0.6783848  134.2525       0 89.74527  92.40449\n4      4 response 89.82365 0.6588679  136.3303       0 88.53229  91.11501\n5      5 response 91.28506 0.5672576  160.9235       0 90.17325  92.39686\n6      6 response 90.11893 0.5596164  161.0370       0 89.02210  91.21576\n7      7 response 91.49524 0.4830628  189.4065       0 90.54845  92.44203\n8      8 response 90.41421 0.4805313  188.1547       0 89.47239  91.35604\n9      9 response 91.70542 0.4414875  207.7192       0 90.84012  92.57072\n10    10 response 90.70950 0.4328119  209.5818       0 89.86120  91.55779\n11    11 response 91.91560 0.4543851  202.2857       0 91.02502  92.80618\n12    12 response 91.00478 0.4271044  213.0739       0 90.16767  91.84189\n13    13 response 92.12578 0.5177003  177.9520       0 91.11111  93.14045\n14    14 response 91.30006 0.4649583  196.3618       0 90.38876  92.21136\n15    15 response 92.33596 0.6160799  149.8766       0 91.12847  93.54345\n16    16 response 91.59534 0.5372434  170.4913       0 90.54236  92.64832\n17    17 response 92.54614 0.7355871  125.8126       0 91.10442  93.98786\n18    18 response 91.89062 0.6322585  145.3371       0 90.65142  93.12983\n19    19 response 92.75632 0.8675341  106.9195       0 91.05598  94.45666\n20    20 response 92.18591 0.7413145  124.3546       0 90.73296  93.63886\n   Score_Mean Duration Order        First\n1    91.32857     10.6     1       初出場\n2    91.32857     10.6     1 出場経験あり\n3    91.32857     10.6     2       初出場\n4    91.32857     10.6     2 出場経験あり\n5    91.32857     10.6     3       初出場\n6    91.32857     10.6     3 出場経験あり\n7    91.32857     10.6     4       初出場\n8    91.32857     10.6     4 出場経験あり\n9    91.32857     10.6     5       初出場\n10   91.32857     10.6     5 出場経験あり\n11   91.32857     10.6     6       初出場\n12   91.32857     10.6     6 出場経験あり\n13   91.32857     10.6     7       初出場\n14   91.32857     10.6     7 出場経験あり\n15   91.32857     10.6     8       初出場\n16   91.32857     10.6     8 出場経験あり\n17   91.32857     10.6     9       初出場\n18   91.32857     10.6     9 出場経験あり\n19   91.32857     10.6    10       初出場\n20   91.32857     10.6    10 出場経験あり"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数",
    "href": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化（調整変数がダミー変数）",
    "text": "予測値の可視化（調整変数がダミー変数）\n\nコード結果\n\n\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, ymin = conf.low, ymax = conf.high,\n                      color = First)) + # color引数で色分け\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", color = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n信頼区間が被っているため、読みにくい"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-1",
    "href": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-1",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化（調整変数がダミー変数）",
    "text": "予測値の可視化（調整変数がダミー変数）\n\nコード結果\n\n\n\n折れ線グラフを使用（線の太さはlinewidthで調整）\n\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_line(aes(x = Order, y = estimate, color = First), linewidth = 1) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", color = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n95%信頼区間は?"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-2",
    "href": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-2",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化（調整変数がダミー変数）",
    "text": "予測値の可視化（調整変数がダミー変数）\n\nコード結果\n\n\n\ngeom_ribbon()で95%区間を線でなく面で表現する。\n\n面の色はcolorでなく、fillにマッピング\n半透明にするためにalpha = 0.3を指定（0に近いほど透明）\n\n\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_line(aes(x = Order, y = estimate, color = First), linewidth = 1) +\n  geom_ribbon(aes(x = Order, ymin = conf.low, ymax = conf.high, fill = First), alpha = 0.3) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"\", fill = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-3",
    "href": "slides/macro/reporting.html#予測値の可視化調整変数がダミー変数-3",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化（調整変数がダミー変数）",
    "text": "予測値の可視化（調整変数がダミー変数）\n\nコード結果\n\n\n\ngeom_line()とgeom_ribbon()はxに対してマッピングを共有しているため、ggplot()内でマッピングした方がより効率的\n\n\ninter1_pred %&gt;%\n  ggplot(aes(x = Order)) +\n  geom_line(aes(y = estimate, color = First), linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = First), alpha = 0.3) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"\", fill = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の計算調整変数が連続変数",
    "href": "slides/macro/reporting.html#予測値の計算調整変数が連続変数",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の計算（調整変数が連続変数）",
    "text": "予測値の計算（調整変数が連続変数）\n\nコード（1）コード（2）\n\n\n\n結成からの経過年数（Duration） = 1、2、3、…全てに対して線を引くと表が読みにくくなるため、経過年数が2年、9年、16年のみの予測値を計算\n\n\ninter2_pred &lt;- predictions(fit_inter2, newdata = datagrid(Order = 1:10,\n                                                          Duration = c(2, 9, 16)))\n\ndata.frame(inter2_pred)\n\n   rowid     type estimate std.error statistic p.value conf.low conf.high\n1      1 response 88.75862 1.5824450  56.08954       0 85.65708  91.86015\n2      2 response 89.86234 0.6614179 135.86319       0 88.56599  91.15870\n3      3 response 90.96607 0.9336240  97.43330       0 89.13620  92.79594\n4      4 response 89.18246 1.3389996  66.60380       0 86.55807  91.80685\n5      5 response 90.15477 0.5613941 160.59088       0 89.05446  91.25509\n6      6 response 91.12709 0.7872184 115.75834       0 89.58417  92.67001\n7      7 response 89.60630 1.1184767  80.11459       0 87.41413  91.79848\n8      8 response 90.44721 0.4701238 192.39020       0 89.52578  91.36863\n9      9 response 91.28811 0.6636047 137.56400       0 89.98747  92.58875\n10    10 response 90.03015 0.9371995  96.06295       0 88.19327  91.86703\n11    11 response 90.73964 0.3937419 230.45463       0 89.96792  91.51136\n12    12 response 91.44913 0.5776064 158.32432       0 90.31705  92.58122\n13    13 response 90.45399 0.8215707 110.09886       0 88.84374  92.06424\n14    14 response 91.03207 0.3423627 265.89363       0 90.36106  91.70309\n15    15 response 91.61016 0.5472536 167.39981       0 90.53756  92.68275\n16    16 response 90.87784 0.8005600 113.51783       0 89.30877  92.44691\n17    17 response 91.32451 0.3279559 278.46578       0 90.68173  91.96729\n18    18 response 91.77118 0.5813291 157.86443       0 90.63180  92.91056\n19    19 response 91.30168 0.8809637 103.63842       0 89.57502  93.02834\n20    20 response 91.61694 0.3550510 258.03880       0 90.92105  92.31283\n21    21 response 91.93220 0.6700746 137.19697       0 90.61888  93.24552\n22    22 response 91.72552 1.0395096  88.23923       0 89.68812  93.76293\n23    23 response 91.90937 0.4156087 221.14398       0 91.09480  92.72395\n24    24 response 92.09322 0.7953967 115.78276       0 90.53428  93.65217\n25    25 response 92.14937 1.2467341  73.91261       0 89.70581  94.59292\n26    26 response 92.20181 0.4975573 185.30891       0 91.22661  93.17700\n27    27 response 92.25425 0.9428209  97.84917       0 90.40635  94.10214\n28    28 response 92.57321 1.4823610  62.44984       0 89.66784  95.47859\n29    29 response 92.49424 0.5920804 156.21904       0 91.33378  93.65470\n30    30 response 92.41527 1.1035245  83.74556       0 90.25240  94.57814\n   Score_Mean     First Order Duration\n1    91.32857 0.5166667     1        2\n2    91.32857 0.5166667     1        9\n3    91.32857 0.5166667     1       16\n4    91.32857 0.5166667     2        2\n5    91.32857 0.5166667     2        9\n6    91.32857 0.5166667     2       16\n7    91.32857 0.5166667     3        2\n8    91.32857 0.5166667     3        9\n9    91.32857 0.5166667     3       16\n10   91.32857 0.5166667     4        2\n11   91.32857 0.5166667     4        9\n12   91.32857 0.5166667     4       16\n13   91.32857 0.5166667     5        2\n14   91.32857 0.5166667     5        9\n15   91.32857 0.5166667     5       16\n16   91.32857 0.5166667     6        2\n17   91.32857 0.5166667     6        9\n18   91.32857 0.5166667     6       16\n19   91.32857 0.5166667     7        2\n20   91.32857 0.5166667     7        9\n21   91.32857 0.5166667     7       16\n22   91.32857 0.5166667     8        2\n23   91.32857 0.5166667     8        9\n24   91.32857 0.5166667     8       16\n25   91.32857 0.5166667     9        2\n26   91.32857 0.5166667     9        9\n27   91.32857 0.5166667     9       16\n28   91.32857 0.5166667    10        2\n29   91.32857 0.5166667    10        9\n30   91.32857 0.5166667    10       16\n\n\n\n\n\nDurationにラベルを付け、factor化\n\n\ninter2_pred &lt;- inter2_pred %&gt;%\n  mutate(Duration = factor(Duration, levels = c(2, 9, 16), \n                           labels = c(\"2年目\", \"9年目\", \"16年目\")))\n\ndata.frame(inter2_pred)\n\n   rowid     type estimate std.error statistic p.value conf.low conf.high\n1      1 response 88.75862 1.5824450  56.08954       0 85.65708  91.86015\n2      2 response 89.86234 0.6614179 135.86319       0 88.56599  91.15870\n3      3 response 90.96607 0.9336240  97.43330       0 89.13620  92.79594\n4      4 response 89.18246 1.3389996  66.60380       0 86.55807  91.80685\n5      5 response 90.15477 0.5613941 160.59088       0 89.05446  91.25509\n6      6 response 91.12709 0.7872184 115.75834       0 89.58417  92.67001\n7      7 response 89.60630 1.1184767  80.11459       0 87.41413  91.79848\n8      8 response 90.44721 0.4701238 192.39020       0 89.52578  91.36863\n9      9 response 91.28811 0.6636047 137.56400       0 89.98747  92.58875\n10    10 response 90.03015 0.9371995  96.06295       0 88.19327  91.86703\n11    11 response 90.73964 0.3937419 230.45463       0 89.96792  91.51136\n12    12 response 91.44913 0.5776064 158.32432       0 90.31705  92.58122\n13    13 response 90.45399 0.8215707 110.09886       0 88.84374  92.06424\n14    14 response 91.03207 0.3423627 265.89363       0 90.36106  91.70309\n15    15 response 91.61016 0.5472536 167.39981       0 90.53756  92.68275\n16    16 response 90.87784 0.8005600 113.51783       0 89.30877  92.44691\n17    17 response 91.32451 0.3279559 278.46578       0 90.68173  91.96729\n18    18 response 91.77118 0.5813291 157.86443       0 90.63180  92.91056\n19    19 response 91.30168 0.8809637 103.63842       0 89.57502  93.02834\n20    20 response 91.61694 0.3550510 258.03880       0 90.92105  92.31283\n21    21 response 91.93220 0.6700746 137.19697       0 90.61888  93.24552\n22    22 response 91.72552 1.0395096  88.23923       0 89.68812  93.76293\n23    23 response 91.90937 0.4156087 221.14398       0 91.09480  92.72395\n24    24 response 92.09322 0.7953967 115.78276       0 90.53428  93.65217\n25    25 response 92.14937 1.2467341  73.91261       0 89.70581  94.59292\n26    26 response 92.20181 0.4975573 185.30891       0 91.22661  93.17700\n27    27 response 92.25425 0.9428209  97.84917       0 90.40635  94.10214\n28    28 response 92.57321 1.4823610  62.44984       0 89.66784  95.47859\n29    29 response 92.49424 0.5920804 156.21904       0 91.33378  93.65470\n30    30 response 92.41527 1.1035245  83.74556       0 90.25240  94.57814\n   Score_Mean     First Order Duration\n1    91.32857 0.5166667     1    2年目\n2    91.32857 0.5166667     1    9年目\n3    91.32857 0.5166667     1   16年目\n4    91.32857 0.5166667     2    2年目\n5    91.32857 0.5166667     2    9年目\n6    91.32857 0.5166667     2   16年目\n7    91.32857 0.5166667     3    2年目\n8    91.32857 0.5166667     3    9年目\n9    91.32857 0.5166667     3   16年目\n10   91.32857 0.5166667     4    2年目\n11   91.32857 0.5166667     4    9年目\n12   91.32857 0.5166667     4   16年目\n13   91.32857 0.5166667     5    2年目\n14   91.32857 0.5166667     5    9年目\n15   91.32857 0.5166667     5   16年目\n16   91.32857 0.5166667     6    2年目\n17   91.32857 0.5166667     6    9年目\n18   91.32857 0.5166667     6   16年目\n19   91.32857 0.5166667     7    2年目\n20   91.32857 0.5166667     7    9年目\n21   91.32857 0.5166667     7   16年目\n22   91.32857 0.5166667     8    2年目\n23   91.32857 0.5166667     8    9年目\n24   91.32857 0.5166667     8   16年目\n25   91.32857 0.5166667     9    2年目\n26   91.32857 0.5166667     9    9年目\n27   91.32857 0.5166667     9   16年目\n28   91.32857 0.5166667    10    2年目\n29   91.32857 0.5166667    10    9年目\n30   91.32857 0.5166667    10   16年目"
  },
  {
    "objectID": "slides/macro/reporting.html#予測値の可視化調整変数が連続変数",
    "href": "slides/macro/reporting.html#予測値の可視化調整変数が連続変数",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化（調整変数が連続変数）",
    "text": "予測値の可視化（調整変数が連続変数）\n\nコード結果\n\n\n\ninter2_pred %&gt;%\n  ggplot(aes(x = Order)) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = Duration), \n              alpha = 0.3) +\n  geom_line(aes(y = estimate, color = Duration), linewidth = 1) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"結成からの経過年数\", fill = \"結成からの経過年数\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "slides/macro/reporting.html#限界効果の計算調整変数がダミー変数",
    "href": "slides/macro/reporting.html#限界効果の計算調整変数がダミー変数",
    "title": "マクロ政治データ分析実習",
    "section": "限界効果の計算（調整変数がダミー変数）",
    "text": "限界効果の計算（調整変数がダミー変数）\n\nコード（1）コード（2）\n\n\n\n主な説明変数（ここではOrder列）は抽出しなくても良い\n\n\ninter1_ame &lt;- slopes(fit_inter1, variables = \"Order\",\n                     newdata = datagrid(First = 0:1))\ninter1_ame &lt;- inter1_ame %&gt;%\n  select(First, predicted, std.error, conf.low, conf.high)\n\ninter1_ame\n\n\n Std. Error  CI low CI high\n      0.158 -0.0997   0.520\n      0.139  0.0227   0.568\n\nPrediction type:  \nColumns: First, predicted, std.error, conf.low, conf.high \n\n\n\n\n\nFirstにラベルを付け、factor化\n\n\ninter1_ame &lt;- inter1_ame %&gt;%\n  mutate(First = factor(First, levels = 0:1, labels = c(\"初出場\", \"出場経験あり\")))\n\ninter1_ame\n\n\n Std. Error  CI low CI high\n      0.158 -0.0997   0.520\n      0.139  0.0227   0.568\n\nPrediction type:  \nColumns: First, predicted, std.error, conf.low, conf.high"
  },
  {
    "objectID": "slides/macro/reporting.html#限界効果の可視化調整変数がダミー変数",
    "href": "slides/macro/reporting.html#限界効果の可視化調整変数がダミー変数",
    "title": "マクロ政治データ分析実習",
    "section": "限界効果の可視化（調整変数がダミー変数）",
    "text": "限界効果の可視化（調整変数がダミー変数）\n\nコード結果\n\n\n\ninter1_ame %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = First, y = predicted, ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場経験\", y = \"出場順番の平均限界効果\") +\n  theme_bw(base_size = 12)"
  },
  {
    "objectID": "slides/macro/reporting.html#限界効果の計算調整変数が連続変数",
    "href": "slides/macro/reporting.html#限界効果の計算調整変数が連続変数",
    "title": "マクロ政治データ分析実習",
    "section": "限界効果の計算（調整変数が連続変数）",
    "text": "限界効果の計算（調整変数が連続変数）\n\n調整変数が連続変数の場合、調整変数のfactor化は不要（やっても良い）\n\n\ninter2_ame &lt;- slopes(fit_inter2, variables = \"Order\",\n                     newdata = datagrid(Duration = 2:16))\n\ninter2_ame &lt;- inter2_ame %&gt;%\n  select(Duration, predicted, std.error, conf.low, conf.high)\n\ninter2_ame\n\n\n Std. Error   CI low CI high\n      0.291 -0.14637   0.994\n      0.262 -0.10932   0.919\n      0.235 -0.07341   0.846\n      0.207 -0.03909   0.774\n      0.182 -0.00708   0.705\n      0.157  0.02149   0.638\n      0.136  0.04474   0.578\n      0.119  0.05986   0.525\n      0.108  0.06279   0.485\n      0.105  0.04968   0.460\n      0.111  0.01925   0.453\n      0.124 -0.02602   0.461\n      0.143 -0.08195   0.479\n      0.166 -0.14491   0.504\n      0.191 -0.21240   0.534\n\nPrediction type:  \nColumns: Duration, predicted, std.error, conf.low, conf.high"
  },
  {
    "objectID": "slides/macro/reporting.html#限界効果の可視化調整変数が連続変数",
    "href": "slides/macro/reporting.html#限界効果の可視化調整変数が連続変数",
    "title": "マクロ政治データ分析実習",
    "section": "限界効果の可視化（調整変数が連続変数）",
    "text": "限界効果の可視化（調整変数が連続変数）\n\nコード結果\n\n\n\ninter2_ame %&gt;%\n  ggplot(aes(x = Duration)) +\n  geom_hline(yintercept = 0) +\n  geom_ribbon(aes(y = predicted, ymin = conf.low, ymax = conf.high),\n              alpha = 0.3) +\n  geom_line(aes(y = predicted), linewidth = 1) +\n  labs(x = \"結成からの経過年数\", y = \"出場順番の平均限界効果\") +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/regression2.html#授業開始前に",
    "href": "slides/macro/regression2.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールのRStudioを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\nlibrary(fastDummies)\nlibrary(summarytools)\nlibrary(modelsummary)\n\njes_df  &lt;- read_csv(\"Data/JES6_W1.csv\")\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/regression2.html#回帰分析における仮説検定",
    "href": "slides/macro/regression2.html#回帰分析における仮説検定",
    "title": "マクロ政治データ分析実習",
    "section": "回帰分析における仮説検定",
    "text": "回帰分析における仮説検定\n問い: 説明変数Xは応答変数Yの変化をもたらすか。\n\n例1) 気温が上がればビールの売上も上がる。\n\nビールの売上 = \\(\\alpha\\) + \\(\\beta\\) \\(\\times\\) 気温\n\n例2) 高齢者の割合が上がれば自民党の得票率も上がる。\n\n自民党の得票率 = \\(\\alpha\\) + \\(\\beta\\) \\(\\times\\) 高齢者の割合\n\n例3) 都道府県の投票率が上がれば、その都道府県がもらう補助金額も上がる。\n\n補助金額 = \\(\\alpha\\) + \\(\\beta\\) \\(\\times\\) 投票率\n\n\n\n\n\\(\\beta = 0\\) の場合、説明変数は応答変数の変化をもたらすとは言えない"
  },
  {
    "objectID": "slides/macro/regression2.html#帰無仮説と対立仮説",
    "href": "slides/macro/regression2.html#帰無仮説と対立仮説",
    "title": "マクロ政治データ分析実習",
    "section": "帰無仮説と対立仮説",
    "text": "帰無仮説と対立仮説\n例) 他の条件が同じ場合、高齢者の割合が上がれば自民党の得票率も上がる。\n\n自民党の得票率 = \\(\\alpha\\) + \\(\\beta_1\\) \\(\\times\\) 高齢者の割合 + \\(\\beta_2\\) \\(\\times\\) 財政力指数\n\n\n帰無仮説 ( \\(H_0\\) ): 高齢者の割合は自民党の得票率を変化させない。\n\n「高齢者の割合」の傾き係数 ( \\(\\beta_1\\) )は0である ( \\(\\beta_1 = 0\\) )。\n\n対立仮説 ( \\(H_a\\) ): 高齢者の割合は自民党の得票率を変化させる。\n\n「高齢者の割合」の傾き係数 ( \\(\\beta_1\\) )は0ではない ( \\(\\beta_1 \\neq 0\\) )。\n\n\n\n\n傾きの係数が0か否かを検証する。\n\n使用する確率分布は自由度 \\(n - k - 1\\) の \\(t\\) 分布\n\n\\(n\\) は標本サイズ、 \\(k\\) は説明変数の数\n\n第13講で紹介するロジスティック回帰分析の場合は正規分布を使用\n\nただし、 \\(n\\) が十分大きい場合、 \\(t\\) 分布は正規分布に近似する。"
  },
  {
    "objectID": "slides/macro/regression2.html#検定統計量",
    "href": "slides/macro/regression2.html#検定統計量",
    "title": "マクロ政治データ分析実習",
    "section": "検定統計量",
    "text": "検定統計量\n\n\nlm()で回帰分析を行うと、以下のような推定結果が得られる。\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n15.8910\n11.3983\n1.3942\n0.1703\n\n\nOver65\n0.8810\n0.3366\n2.6170\n0.0121\n\n\nZaisei\n−4.5472\n4.8211\n−0.9432\n0.3507\n\n\n\n\n\n\n\n\n\n\n\nestimate: 切片・傾きの推定値（\\(\\hat{\\alpha}\\)、\\(\\hat{\\beta_1}\\)、\\(\\hat{\\beta_2}\\)）\nstd.error: 推定値の標準誤差\nstatistic: 検定統計量（\\(T\\)統計量）\n\n\n0.8810 / 0.3366 # 係数を標準誤差で割る\n\n[1] 2.61735\n\n\n\np.value: \\(p\\)値\n\n\\(p &lt; \\alpha\\)の場合、帰無仮説を棄却\n\\(p \\geq \\alpha\\)の場合、帰無仮説を受容\n\n\n\n\n\n\\(\\alpha = 0.05\\)を仮定\n\n\\(p\\)値は約0.0121であり、\\(p &lt; \\alpha\\)であるため、帰無仮説を棄却する。したがって、他の条件が同じであれば、高齢者の割合は自民党の得票率を変化させると言える (or 高齢者の割合が高い都道府県ほど自民党の得票率も上がる)。"
  },
  {
    "objectID": "slides/macro/regression2.html#実習用データ",
    "href": "slides/macro/regression2.html#実習用データ",
    "title": "マクロ政治データ分析実習",
    "section": "実習用データ",
    "text": "実習用データ\n\njes_df &lt;- read_csv(\"Data/JES6_W1.csv\")\n\njes_df\n\n# A tibble: 3,000 × 8\n   Temp_Rikken Ideology Interest Gender   Age Education   Job  Income\n         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1          30        9        1      2    69         4     5 4333994\n 2          50        7        4      2    47         3     1  979181\n 3           0       11        2      2    37         2     1 8498127\n 4          50       11        2      1    51         4     2 7572654\n 5          30        7        2      1    38         4     1 6436713\n 6           0       11        1      1    71         2     5 3410276\n 7          10        9        2      1    47         3     2 8652860\n 8           0       11        1      1    71         2     5  927703\n 9          50        9        1      1    75         4     1 4497693\n10          55        6        2      2    66         3     4 2419573\n# … with 2,990 more rows"
  },
  {
    "objectID": "slides/macro/regression2.html#データの概要",
    "href": "slides/macro/regression2.html#データの概要",
    "title": "マクロ政治データ分析実習",
    "section": "データの概要",
    "text": "データの概要\n\n\n\n\n\n\n\n\n変数名\n説明\n備考\n\n\n\n\nTemp_Rikken\n立憲民主党に対する感情温度\n高いほど好感\n\n\nIdeology\n回答者のイデオロギー\n高いほど保守\n\n\nInterest\n回答者の政治関心\n高いほど無関心\n\n\nGender\n回答者の性別\n1: 男性 / 2: 女性\n\n\nAge\n回答者の年齢\n\n\n\nEducation\n回答者の最終学歴\n1: 中卒以下 / 2: 高校卒 / 3: 高専・短大卒 / 4: 大卒以上\n\n\nJob\n回答者の職業\n1: 勤め / 2: 自営業 / 3: 学生 / 4: 専業主婦・主夫 / 5: 無職 / 6: その他\n\n\nIncome\n回答者の世帯収入\n円"
  },
  {
    "objectID": "slides/macro/regression2.html#記述統計",
    "href": "slides/macro/regression2.html#記述統計",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計",
    "text": "記述統計\n\n名目変数（GenderとJob）はダミー変数に変換\n\n\njes_df %&gt;%\n  dummy_cols(c(\"Gender\", \"Job\")) %&gt;%\n  relocate(Gender_1:Gender_2, .before = Gender) %&gt;% # Gender_1と_2列をGenderの前に\n  relocate(Job_1:Job_6, .before = Job) %&gt;%          # Job_1から_6列をJobの前に\n  select(-c(Gender, Job)) %&gt;%                       # GenderとJob列を除外してからdscer()に渡す\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\nDescriptive Statistics  \njes_df  \nN: 3000  \n\n                          Mean      Std.Dev         Min           Max   N.Valid\n----------------- ------------ ------------ ----------- ------------- ---------\n      Temp_Rikken        34.25        25.95        0.00        100.00   3000.00\n         Ideology         6.34         2.10        1.00         11.00   3000.00\n         Interest         2.26         0.83        1.00          4.00   3000.00\n         Gender_1         0.50         0.50        0.00          1.00   3000.00\n         Gender_2         0.50         0.50        0.00          1.00   3000.00\n              Age        47.34        15.63       18.00         75.00   3000.00\n        Education         3.11         0.89        1.00          4.00   3000.00\n            Job_1         0.50         0.50        0.00          1.00   3000.00\n            Job_2         0.08         0.28        0.00          1.00   3000.00\n            Job_3         0.05         0.21        0.00          1.00   3000.00\n            Job_4         0.20         0.40        0.00          1.00   3000.00\n            Job_5         0.15         0.35        0.00          1.00   3000.00\n            Job_6         0.02         0.14        0.00          1.00   3000.00\n           Income   6190334.00   4233639.26   643629.00   25286751.00   3000.00"
  },
  {
    "objectID": "slides/macro/regression2.html#記述統計-1",
    "href": "slides/macro/regression2.html#記述統計-1",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計",
    "text": "記述統計\n論文・レポートに掲載する際には、読者に読みやすく加工すること。\n\nとりわけ、読者から見ればJob_1とかJob_2は意味がわからない\n\n\n\n\n変数\n平均値\n標準偏差\n最小値\n最大値\n有効ケース数\n\n\n\n\n立憲民主党に対する感情温度\n34.25\n25.95\n0\n100\n3000\n\n\nイデオロギー\n6.34\n2.10\n1\n11\n3000\n\n\n政治関心\n2.26\n0.83\n1\n4\n3000\n\n\n性別：男性\n0.50\n0.50\n0\n1\n3000\n\n\n性別：女性\n0.50\n0.50\n0\n1\n3000\n\n\n年齢\n47.34\n15.63\n18\n75\n3000\n\n\n最終学歴\n3.11\n0.89\n1\n4\n3000\n\n\n職業：勤め\n0.50\n0.50\n0\n1\n3000\n\n\n職業：自営業\n0.08\n0.28\n0\n1\n3000\n\n\n職業：学生\n0.05\n0.21\n0\n1\n3000\n\n\n職業：専業主婦（夫）\n0.20\n0.40\n0\n1\n3000\n\n\n職業：無職・引退\n0.15\n0.35\n0\n1\n3000\n\n\n職業：その他\n0.02\n0.14\n0\n1\n3000\n\n\n世帯収入\n6190334.00\n4233639.26\n643629\n25286751\n3000"
  },
  {
    "objectID": "slides/macro/regression2.html#回帰モデルに名目変数を投入する方法1",
    "href": "slides/macro/regression2.html#回帰モデルに名目変数を投入する方法1",
    "title": "マクロ政治データ分析実習",
    "section": "回帰モデルに名目変数を投入する方法（1）",
    "text": "回帰モデルに名目変数を投入する方法（1）\nlm()関数内のformulaにfactor化した名目変数を追加するだけ\n\nfactor型変数が説明変数として投入されると、自動的にダミー変数に変換されてから投入される。\n\n注意: ただし、全てのダミー変数が投入されるわけではなく、\\(k-1\\)個のダミー変数が投入される（\\(k\\)は当該factor型変数の水準数）。\n\n性別の場合、2つのダミー変数になるが、1つのみ投入される。\n職業の場合、6つのダミー変数になるが、5つのみ投入される。\n\n除外されたカテゴリーは「ベース・カテゴリー (base category)」、「参照カテゴリー/レファレンス・カテゴリー (reference category)」、「ベースライン (baseline)」などと呼ばれる（どの水準がベース・カテゴリーになるかは後述）。\n解釈は「\\(\\bigcirc\\bigcirc\\) (ベース・カテゴリー)に比べ、〜」となる。\n\n\n\njes_df &lt;- jes_df %&gt;%\n  mutate(Gender = factor(Gender, levels = 1:2, labels = c(\"Male\", \"Female\")),\n         Job    = factor(Job, levels = 1:6, labels = c(\"Salary\", \"Self\", \"Student\", \"House\",\n                                                       \"Retire\", \"Etc\")))\n\ndummy_fit1 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + Education + Job + Income, \n                 data = jes_df)"
  },
  {
    "objectID": "slides/macro/regression2.html#推定結果",
    "href": "slides/macro/regression2.html#推定結果",
    "title": "マクロ政治データ分析実習",
    "section": "推定結果",
    "text": "推定結果\n\n\n\nsummary(dummy_fit1)\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\nt統計量\np値\n\n\n\n\n(Intercept)\n34.774\n3.558\n9.772\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome\n0.000\n0.000\n−1.343\n0.179\n\n\n\n\n\n\n\n\n\n\n\nIdeology: 保守的であるほど、立民に対する感情温度が低くなる。\n\nイデオロギーが1単位上がると、立民に対する感情温度は約2.113度下がる。\n\nInterest: 政治関心がないほど、立民に対する感情温度が低くなる。\nAge: 年齢が高いほど、立民に対する感情温度が高くなる。\nEducation: 高学歴ほど、立民に対する感情温度が低くなる。"
  },
  {
    "objectID": "slides/macro/regression2.html#ダミー変数の解釈",
    "href": "slides/macro/regression2.html#ダミー変数の解釈",
    "title": "マクロ政治データ分析実習",
    "section": "ダミー変数の解釈",
    "text": "ダミー変数の解釈\n解釈の例\n\nGender変数：投入されなかったのは女性ダミー（GenderFemale）であるため、男性ダミー（GenderMale）がベース・カテゴリー\n\n解釈の際は「男性に比べ〜」\nGenderFemale：男性に比べ、女性は立民に対する感情温度が約3.4度高い。\n\nJob変数：投入されなかったのは勤めダミー（JobSalary）であるため、勤めダミー（JobSalary）がベース・カテゴリー\n\n解釈の際は「勤めの人に比べ〜」\nJobSelf：勤めの人に比べ、自営業の人は立民に対する感情温度が約2.2度低い。\nJobStudent：勤めの人に比べ、学生は立民に対する感情温度が約5.8度高い。\n\n\n\n\nダミー変数はベース・カテゴリーによって統計的有意性が変わり得る。\n\n統制変数として投入しただけであれば、そもそも解釈は不要\n研究において主要説明変数であれば、ベース・カテゴリーの設定は慎重に行う。\n\n「何と何を比べたいか」に注目"
  },
  {
    "objectID": "slides/macro/regression2.html#ベースカテゴリーの話",
    "href": "slides/macro/regression2.html#ベースカテゴリーの話",
    "title": "マクロ政治データ分析実習",
    "section": "ベース・カテゴリーの話",
    "text": "ベース・カテゴリーの話\n\nFactor型変数の最初の水準（level）がベース・カテゴリーとなる。\n\n\nlevels(jes_df$Gender) # jes_dfのGender列の水準\n\n[1] \"Male\"   \"Female\"\n\nlevels(jes_df$Job) # jes_dfのJob列の水準\n\n[1] \"Salary\"  \"Self\"    \"Student\" \"House\"   \"Retire\"  \"Etc\"    \n\n\n\nベース・カテゴリーの変更\n\nFactor型変数の特定の水準を最初の水準にする場合は、fct_relevel()を使用\n\nFactor化済みの変数に使用\n2番目以降の水準は既存の順番そのまま\n\n\n\njes_df2 &lt;- jes_df %&gt;%\n  mutate(Gender = fct_relevel(Gender, \"Female\"), # Femaleを第1水準に\n         Job    = fct_relevel(Job, \"Etc\"))       # Etcを第1水準に\n\nlevels(jes_df2$Gender) # jes_dfのGender列の水準\n\n[1] \"Female\" \"Male\"  \n\nlevels(jes_df2$Job) # jes_dfのJob列の水準\n\n[1] \"Etc\"     \"Salary\"  \"Self\"    \"Student\" \"House\"   \"Retire\""
  },
  {
    "objectID": "slides/macro/regression2.html#ベースカテゴリーと推定結果",
    "href": "slides/macro/regression2.html#ベースカテゴリーと推定結果",
    "title": "マクロ政治データ分析実習",
    "section": "ベース・カテゴリーと推定結果",
    "text": "ベース・カテゴリーと推定結果\nダミー変数の係数のみ変化することに注目（切片も変わるものの、切片はそもそも解釈しない）\n\ndummy_fit2 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + Education + Job + Income, \n                 data = jes_df2)\n\n\n\n\nsummary(dummy_fit1)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n34.774\n3.558\n9.772\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome\n0.000\n0.000\n−1.343\n0.179\n\n\n\n\n\n\n\n\n\n\n\nsummary(dummy_fit2)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n37.362\n4.936\n7.570\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderMale\n−3.395\n1.071\n−3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSalary\n0.807\n3.393\n0.238\n0.812\n\n\nJobSelf\n−1.380\n3.677\n−0.375\n0.707\n\n\nJobStudent\n6.582\n4.111\n1.601\n0.109\n\n\nJobHouse\n2.979\n3.483\n0.855\n0.392\n\n\nJobRetire\n−0.353\n3.547\n−0.100\n0.921\n\n\nIncome\n0.000\n0.000\n−1.343\n0.179"
  },
  {
    "objectID": "slides/macro/regression2.html#線形変換",
    "href": "slides/macro/regression2.html#線形変換",
    "title": "マクロ政治データ分析実習",
    "section": "線形変換",
    "text": "線形変換\nある変数を1次関数を用いて変換すること。\n\n主な使い道は「説明変数をある定数で割る/引く」\n\n例) 1円単位で測定された所得を100万円単位に変換する (= 所得を100万で割る)。\n\n説明変数の単位が変わる。\n\n例) 1、2、3、4で測定された変数を5から引く。\n\n説明変数のスケールが逆転される。\n\n\n線形変換を行うと、より解釈しやすくなる。"
  },
  {
    "objectID": "slides/macro/regression2.html#結果の解釈",
    "href": "slides/macro/regression2.html#結果の解釈",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\ndummy_fit1の世帯収入（Income）の傾き係数は約-1.538790e-07\n\n-1.538790e-07 = -1.538790 \\(\\times\\) 10-7 = -1.538790 \\(\\times\\) 0.0000001 = -0.000000153879\n\n参考）10-1 = 0.1 / 10-2 = 0.01 / …\n\n\n問題点\n\n係数の解釈1: 「世帯収入が1円上がると、立憲民主党への感情温度が約0.000000153879度下がる。」\n\nIncomeの単位は1円であるため、そのまま解釈可能\nこれで良いのか???\n\n係数の解釈2: 「世帯収入が100万円上がると、立憲民主党への感情温度が-0.154度下がる。」\n\nIncomeの単位は1円であるため、係数に100万をかける。\n\n-0.000000153879 \\(\\times\\) 1000000 = -0.153879\n\nまだこっちの方がマシ\nただ、毎回、係数に100万をかけて解釈する必要がある。\\(\\rightarrow\\) 面倒\n\nIncomeの単位を100万円に変えてしまったらいいんじゃない?"
  },
  {
    "objectID": "slides/macro/regression2.html#単位変換",
    "href": "slides/macro/regression2.html#単位変換",
    "title": "マクロ政治データ分析実習",
    "section": "単位変換",
    "text": "単位変換\n\nIncomeを100万単位にするためには、Incomeを100万で割るだけで良い\n\n\n# jes_dfのIncomeの値を100万で割り、Income_mという新しい変数として追加し、jes_df3という新しいデータフレームを作成。\n# 変数名は何でも良いが、ここではmillionの頭文字を使用\njes_df3 &lt;- jes_df %&gt;%\n  mutate(Income_m = Income / 1000000)\n\n# 使用するデータは jes_df3 、Incomeの代わりにIncome_mを投入\nfit3 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + Education + Job + Income_m, \n           data = jes_df3)"
  },
  {
    "objectID": "slides/macro/regression2.html#結果の比較",
    "href": "slides/macro/regression2.html#結果の比較",
    "title": "マクロ政治データ分析実習",
    "section": "結果の比較",
    "text": "結果の比較\n他の係数は一切変わらず、線形変換された変数の係数（と標準誤差）のみ変わる。\n\n\n\n# 世帯収入が1円単位の場合\nsummary(dummy_fit1)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n34.774\n3.558\n9.772\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome\n0.000\n0.000\n−1.343\n0.179\n\n\n\n\n\n\n\n\n\n\n\n# 世帯収入が100万円単位の場合\nsummary(fit3)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n34.774\n3.558\n9.772\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome_m\n−0.154\n0.115\n−1.343\n0.179"
  },
  {
    "objectID": "slides/macro/regression2.html#結果の解釈-1",
    "href": "slides/macro/regression2.html#結果の解釈-1",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\ndummy_fit1の政治関心の傾き係数は約-1.404\n問題点\n\n係数の解釈1: 「Interestが1単位上がると、立憲民主党への感情温度が約1.404度下がる。」\n\nこれだけだと「政治関心が高い人ほど、立憲民主党に反感を持つ」イメージ\nしかし、政治関心（Interest）の値は1が関心あり、2がやや関心あり、…、4が関心なし\nつまり、「Interestが1単位上がる」ということは、「政治関心が1単位下がる」ことを意味する。\nしたがって、「Interestが1単位上がると、立憲民主党への感情温度が約1.404度下がる。」の意味は…\n\n政治関心が1単位下がると、立憲民主党への感情温度が約1.404度下がる。\n政治関心が1単位上がると、立憲民主党への感情温度が約1.404度上がる。\n\n\\(\\Rightarrow\\) ややこしい\n\n最初からInterestの値を逆転させておけば良いのでは??"
  },
  {
    "objectID": "slides/macro/regression2.html#スケールの逆転",
    "href": "slides/macro/regression2.html#スケールの逆転",
    "title": "マクロ政治データ分析実習",
    "section": "スケールの逆転",
    "text": "スケールの逆転\n\n1〜\\(m\\)のスケールで測定された変数は\\(m + 1\\)から引くと、逆転される。\n\nInterestは1〜4であるため、5から引く\n「5 - 1 = 4」、「5 - 2 = 3」、「5 - 3 = 2」、「5 - 4 = 1」\n\n0〜\\(m\\)のスケールで測定された変数は\\(m\\)から引くと、逆転される。\n\\(-m\\)〜\\(m\\)のスケールで測定された変数は-1をかけると、逆転される。\n\n\n# jes_df3のInterestの値を5から引き、Interest_rという新しい変数として追加し、jes_df3を上書きする。\n# 変数名は何でも良いが、ここではreverseの頭文字を使用\njes_df3 &lt;- jes_df3 %&gt;%\n  mutate(Interest_r = 5 - Interest)\n\n# 使用するデータは jes_df3 、Interestの代わりにInterest_rを投入\nfit4 &lt;- lm(Temp_Rikken ~ Ideology + Interest_r + Gender + Age + Education + Job + Income_m, \n           data = jes_df3)"
  },
  {
    "objectID": "slides/macro/regression2.html#結果の比較-1",
    "href": "slides/macro/regression2.html#結果の比較-1",
    "title": "マクロ政治データ分析実習",
    "section": "結果の比較",
    "text": "結果の比較\n他の係数は一切変わらず、線形変換された変数の係数（と標準誤差）の符号のみ変わる。\n\n\n\n# スケール逆転前\nsummary(fit3)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n34.774\n3.558\n9.772\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest\n−1.404\n0.610\n−2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome_m\n−0.154\n0.115\n−1.343\n0.179\n\n\n\n\n\n\n\n\n\n\n\n# スケール逆転後\nsummary(fit4)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n27.753\n3.078\n9.015\n0.000\n\n\nIdeology\n−2.117\n0.220\n−9.616\n0.000\n\n\nInterest_r\n1.404\n0.610\n2.302\n0.021\n\n\nGenderFemale\n3.395\n1.071\n3.170\n0.002\n\n\nAge\n0.187\n0.037\n5.026\n0.000\n\n\nEducation\n1.970\n0.540\n3.648\n0.000\n\n\nJobSelf\n−2.187\n1.737\n−1.259\n0.208\n\n\nJobStudent\n5.775\n2.369\n2.438\n0.015\n\n\nJobHouse\n2.172\n1.415\n1.535\n0.125\n\n\nJobRetire\n−1.160\n1.519\n−0.764\n0.445\n\n\nJobEtc\n−0.807\n3.393\n−0.238\n0.812\n\n\nIncome_m\n−0.154\n0.115\n−1.343\n0.179"
  },
  {
    "objectID": "slides/macro/regression2.html#その他の線形変換",
    "href": "slides/macro/regression2.html#その他の線形変換",
    "title": "マクロ政治データ分析実習",
    "section": "その他の線形変換",
    "text": "その他の線形変換\nいずれもデータ分析の場面ではよく使われる方法\n\n単位変換\nスケールの変換\n\nスケールの逆転\n\\(\\frac{x - \\mbox{min}(x)}{\\mbox{max}(x) - \\mbox{min}(x)}\\)をすると、最小値0、最大値1となる（\\(x \\geq 0\\)の場合）。\n\n係数の解釈は「\\(x\\)が最小値から最大値へ変化した場合…」となる。\n\n\n中心化と標準化\n\n中心化: ある変数の値からその変数の平均値を引く\n標準化: 中心化した変数を更に標準偏差で割る\n\n対数変数"
  },
  {
    "objectID": "slides/macro/regression2.html#課題-1",
    "href": "slides/macro/regression2.html#課題-1",
    "title": "マクロ政治データ分析実習",
    "section": "課題",
    "text": "課題\n\n教科書（『Rによる計量政治学』）を読む\n\n第10〜13章\n第12章では回帰分析の信頼性/妥当性に関わる非常に重要な内容\n第13章では本講義で紹介しなかった線形変換の一つである「中心化」を紹介\n\n本講義は「90分の授業でRでデータ分析ができるようになる」ことを想定していない。「Rでデータ分析ができるようになる」には\n\n講義の受講と課題の提出\n教科書の熟読とコードの実行\nサポートページを活用した予習 or 復習\n\n予習は授業/実習をスムーズにしてくれる。\n復習はh授業内容を頭に定着させてくれる。\n予習/復習両方することをおすすめはするが、少なくとも片方はしよう。\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/nhts.html#授業開始前に",
    "href": "slides/macro/nhts.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成するか、既存のプロジェクトを開いておいてください。\n授業サポートページから実習用データをダウンロードしておいてください。\n\n実習用データはGacha.csvです。\n\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしておいてください。\n実習用コードを入力するスクリプト、またはR Markdownを開いておいてください。\n\n{tidyverse}パッケージに読み込み、データの読み込みまでやっておきましょう (p.5)。\n時間が余ったら、p.6のコードも書いておきましょう。\n\n\n\n\nトラブルが生じた場合、速やかにTAを読んでください。"
  },
  {
    "objectID": "slides/macro/nhts.html#統計的仮説検定の手順",
    "href": "slides/macro/nhts.html#統計的仮説検定の手順",
    "title": "マクロ政治データ分析実習",
    "section": "統計的仮説検定の手順",
    "text": "統計的仮説検定の手順\n\n検定の対象となる仮説を設定する。\n検定の基準となる有意水準（= \\(\\alpha\\)）を設定する。\n検定に利用する統計量（=検定統計量）の値を計算する。\n利用する検定統計量の標本分布と有意水準に従って棄却域を決める。\n検定統計量の値が棄却域に入るかどうかによって仮説検定を行う。\n検定の結論を述べる。"
  },
  {
    "objectID": "slides/macro/nhts.html#データの読み込み",
    "href": "slides/macro/nhts.html#データの読み込み",
    "title": "マクロ政治データ分析実習",
    "section": "データの読み込み",
    "text": "データの読み込み\n\n\n\nlibrary(tidyverse)\ngacha_df &lt;- read_csv(\"data/Gacha.csv\")\ngacha_df\n\n# A tibble: 4,772 × 4\n   player trial stone_type result\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; \n 1      1     1 Paid       R     \n 2      1     2 Paid       R     \n 3      1     3 Paid       SR    \n 4      1     4 Free       R     \n 5      1     5 Paid       N     \n 6      1     6 Free       N     \n 7      1     7 Free       SSR   \n 8      1     8 Free       N     \n 9      1     9 Free       N     \n10      1    10 Free       N     \n# ℹ 4,762 more rows\n\n\n\n\n\n\n\n\n\n\n表 3:  データの詳細 \n  \n    \n    \n      変数\n      説明\n    \n  \n  \n    player\nプレイヤーのID\n    trial\n当該プレイヤーの何番目のガチャか\n    stone_type\n使用した石のタイプ (Free: 無料石、Paid: 有償石)\n    result\nガチャの結果 (N, R, SR, SSR)"
  },
  {
    "objectID": "slides/macro/nhts.html#ガチャ結果をダミー変換するifelse使用",
    "href": "slides/macro/nhts.html#ガチャ結果をダミー変換するifelse使用",
    "title": "マクロ政治データ分析実習",
    "section": "ガチャ結果をダミー変換する（ifelse()使用）",
    "text": "ガチャ結果をダミー変換する（ifelse()使用）\n\ngacha_df &lt;- gacha_df %&gt;%\n  mutate(result_N   = ifelse(result == \"N\", 1, 0),\n         result_R   = ifelse(result == \"R\", 1, 0),\n         result_SR  = ifelse(result == \"SR\", 1, 0),\n         result_SSR = ifelse(result == \"SSR\", 1, 0))\n\ngacha_df\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# ℹ 4,762 more rows"
  },
  {
    "objectID": "slides/macro/nhts.html#ガチャ結果をダミー変換するdummy_cols使用",
    "href": "slides/macro/nhts.html#ガチャ結果をダミー変換するdummy_cols使用",
    "title": "マクロ政治データ分析実習",
    "section": "ガチャ結果をダミー変換する（dummy_cols()使用）",
    "text": "ガチャ結果をダミー変換する（dummy_cols()使用）\n\nlibrary(fastDummies)\ngacha_df &lt;- gacha_df %&gt;%\n  dummy_cols(select_columns = \"result\", ignore_na = TRUE)\n\ngacha_df\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;int&gt;    &lt;int&gt;     &lt;int&gt;      &lt;int&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# ℹ 4,762 more rows"
  },
  {
    "objectID": "slides/macro/nhts.html#度数分布表統計量の確認",
    "href": "slides/macro/nhts.html#度数分布表統計量の確認",
    "title": "マクロ政治データ分析実習",
    "section": "度数分布表、統計量の確認",
    "text": "度数分布表、統計量の確認\n\nガチャ結果の度数分布表\n\n\ntable(gacha_df$result)\n\n\n   N    R   SR  SSR \n2657 1188  700  227 \n\n\n\n\\(\\bar{x}\\): SSR出現の平均値\n\n\nmean(gacha_df$result_SSR)\n\n[1] 0.04756915\n\n\n\n\\(u\\): SSR出現の標本不偏分散の平方根\n\n\nsd(gacha_df$result_SSR)\n\n[1] 0.2128751"
  },
  {
    "objectID": "slides/macro/nhts.html#仮説の設定",
    "href": "slides/macro/nhts.html#仮説の設定",
    "title": "マクロ政治データ分析実習",
    "section": "仮説の設定",
    "text": "仮説の設定\n仮説: SSRキャラクターの本当の出現確率（=母平均\\(\\mu\\)）は5%（=0.05）ではない。\\(\\Rightarrow \\mu \\neq 0.05\\)\n\n母平均の一致&不偏推定量である標本平均（= \\(\\bar{x}\\)）は0.048\nしかし、本当の出現確率が0.05でも、ガチャ4772回の結果、SSRの出現割合が0.048である可能性は十分あるのでは?\n\n帰無仮説と対立仮説\n\n一般的な統計的仮説検定の場合、仮説を直接検証することはしない\n帰無仮説（null hypothesis）：否定されることによって別の仮説が支持されるような仮説\n\nSSRキャラクターの本当の出現確率は5%である（\\(H_0: \\mu = 0.05\\)）。\n\n対立仮説（alternative hypothesis）：帰無仮説が否定されることによって妥当性が高められるような仮説\n\nSSRキャラクターの本当の出現確率は5%ではない（\\(H_a: \\mu \\neq 0.05\\)）。\n\n\\(\\Rightarrow\\)帰無仮説を検定し、帰無仮説を否定することで対立仮説の妥当性が高いことを示す。\n注意1: 帰無仮説と対立仮説は互いに排反な仮説のペア"
  },
  {
    "objectID": "slides/macro/nhts.html#有意水準の設定",
    "href": "slides/macro/nhts.html#有意水準の設定",
    "title": "マクロ政治データ分析実習",
    "section": "有意水準の設定",
    "text": "有意水準の設定\n「どんな時に帰無仮説を棄却するか」について考える段階\n\n帰無仮説が仮定する母数が正しい（\\(\\mu_0 = \\mu = 0.05\\)）としても、標本から得られる統計量\\(\\bar{x}\\)は\\(\\mu_0\\)と一致しない可能性が十分あり得る。\n\nぴったり5%の割合でSSRが得られるとは言えない。\n\\(\\mu_0\\)は帰無仮説が仮定する母数\n\nただし、\\(\\mu = 0.05\\)なら、標本内のSSRの割合はぴったり5%でなくても、5%から大きく離れた値は得られないはず\n\nどれくらいかけ離れていれば帰無仮説は間違っていると言えるか?\n\n出現しうる統計量をすべて並べる\n\nガチャを4772回引いた場合の得られる結果（すべてSSR〜すべてSSR以外）を並べ、帰無仮説が仮定する母数（\\(\\mu_0 = 0.5\\)）からA%分離れている場合、「帰無仮説から十分に離れている」と判断し、このA%が「有意水準（significance level）」\n有意水準: 帰無仮説が正しいにもかかわらず、誤って帰無仮説を棄却してしまう確率\n有意水準は通常、\\(\\alpha\\)と表記し、有意水準が5%なら\\(\\alpha = 0.05\\)\n社会科学では\\(\\alpha = 0.05\\)を採用するケースが多い。"
  },
  {
    "objectID": "slides/macro/nhts.html#統計量がt分布に従っている場合",
    "href": "slides/macro/nhts.html#統計量がt分布に従っている場合",
    "title": "マクロ政治データ分析実習",
    "section": "統計量が\\(t\\)分布に従っている場合",
    "text": "統計量が\\(t\\)分布に従っている場合\n標本平均を変形した\\(T = \\frac{\\bar{x} - \\mu}{\\text{SE}}\\)は自由度\\(n-1\\)の\\(t\\)分布に従う。\n\n帰無仮説が正しければ（\\(\\mu = \\mu_0\\)）、 \\(T = \\frac{\\bar{x} - \\mu_0}{\\text{SE}}\\)も\\(t\\)分布に従う。\n\n\\(t\\) 分布の中心は0\nもし、標本から得られた統計量（標本平均\\(\\bar{x}\\)）が0.05（\\(\\mu_0\\)）なら、\\(T = 0\\)となり、帰無仮説の妥当性は高いと判断される。\n\\(\\bar{x}\\)が0.05から離れるほど、統計量\\(T\\)も0から離れるようになる。\n\nどれくらい離れている場合、「帰無仮説は怪しいぞ」と言えるだろうか。\n\n帰無仮説が正しいと仮定した場合、こんなことが起こる確率はA%未満だよ!"
  },
  {
    "objectID": "slides/macro/nhts.html#統計量がt分布に従っている場合-1",
    "href": "slides/macro/nhts.html#統計量がt分布に従っている場合-1",
    "title": "マクロ政治データ分析実習",
    "section": "統計量が\\(t\\)分布に従っている場合",
    "text": "統計量が\\(t\\)分布に従っている場合"
  },
  {
    "objectID": "slides/macro/nhts.html#検定統計量の計算",
    "href": "slides/macro/nhts.html#検定統計量の計算",
    "title": "マクロ政治データ分析実習",
    "section": "検定統計量の計算",
    "text": "検定統計量の計算\n平均値に関する統計的仮説検定の場合、検定統計量として標本平均（\\(\\bar{x}\\)）よりも\\(T\\)統計量を使用。\n\\[\nt = \\frac{\\bar{x} - \\mu}{\\text{SE}} = \\frac{\\bar{x} - \\mu_0}{\\text{SE}} = \\frac{\\bar{x} - \\mu_0}{\\frac{s}{\\sqrt{n}}}\n\\]\n\nx_bar &lt;- mean(gacha_df$result_SSR, na.rm = TRUE)          # 標本平均\nn     &lt;- sum(!is.na(gacha_df$result_SSR))                 # サンプルサイズ\nse    &lt;- sd(gacha_df$result_SSR, na.rm = TRUE) / sqrt(n)  # 標準誤差\n(x_bar - 0.05) / se                                       # T統計量\n\n[1] -0.7888289\n\n\n\n\\(T\\)統計量は\\(-\\infty\\)〜\\(\\infty\\)の値を取るが、今回得られた\\(t\\)の絶対値\\(|t|\\)よりも極端な値をとる確率は? \\(\\Rightarrow\\) \\(p\\)値\n\n対立仮説は「\\(\\mu_0\\)ではない（\\(\\mu_0 \\neq 0\\)）」であるため、\\(\\mu_0\\)から負の方向に離れる可能性も、正の方向に離れる可能性もある。したがって、\\(t\\)ではなく\\(|t|\\)より極端な値を取る確率を求める。"
  },
  {
    "objectID": "slides/macro/nhts.html#検定統計量とp値-面積の合計",
    "href": "slides/macro/nhts.html#検定統計量とp値-面積の合計",
    "title": "マクロ政治データ分析実習",
    "section": "検定統計量と\\(p\\)値 (=面積の合計)",
    "text": "検定統計量と\\(p\\)値 (=面積の合計)"
  },
  {
    "objectID": "slides/macro/nhts.html#tが0から大きく離れると",
    "href": "slides/macro/nhts.html#tが0から大きく離れると",
    "title": "マクロ政治データ分析実習",
    "section": "\\(t\\)が0から大きく離れると…",
    "text": "\\(t\\)が0から大きく離れると…\n\\(p\\)値が小さくなる"
  },
  {
    "objectID": "slides/macro/nhts.html#tが0に近いと",
    "href": "slides/macro/nhts.html#tが0に近いと",
    "title": "マクロ政治データ分析実習",
    "section": "\\(t\\)が0に近いと…",
    "text": "\\(t\\)が0に近いと…\n\\(p\\)値が大きくなる"
  },
  {
    "objectID": "slides/macro/nhts.html#p値の意味",
    "href": "slides/macro/nhts.html#p値の意味",
    "title": "マクロ政治データ分析実習",
    "section": "\\(p\\)値の意味",
    "text": "\\(p\\)値の意味\n\n\\(p\\)値とは、帰無仮説が正しいとき、検定統計量が手元のデータから得られた値\\(|t|\\)以上に、分布の中心からかけ離れた値を取る確率\n\n帰無仮説の下でのサンプルから得られた\\(t\\)の異常性を表す指標であり、\\(p\\)値が小さいほど、今回得られた\\(t\\)は異常な値であることを意味\n\n今回の\\(t\\)が異常なのは「帰無仮説が正しい」という仮定の下での判断であるため、帰無仮説が間違っていると考えるのが自然\n\\(\\Rightarrow\\) \\(p\\)値が十分小さい場合 (=\\(t\\)の異常性が十分大きい場合)、帰無仮説は棄却される。\n\n\n参考) 今回の\\(p\\)値は0.431\n\n# pt()の第一引数は「tの絶対値にマイナスをかけた値」にする\n# dfには自由度を割り当てる\n# 最終的には2をかける\npt(-0.7888289, df = 4771) * 2\n\n[1] 0.4302512"
  },
  {
    "objectID": "slides/macro/nhts.html#棄却域の設定",
    "href": "slides/macro/nhts.html#棄却域の設定",
    "title": "マクロ政治データ分析実習",
    "section": "棄却域の設定",
    "text": "棄却域の設定\n「検定統計量がこの領域に入ると帰無仮説は棄却される」における「領域」を決める段階\n\n\\(p\\)値が有意水準 (\\(\\alpha\\))より小さくなるような境界線: 臨界値 (critical value)\n\\(t\\)分布の場合、左右対称であり、下側臨界値 (\\(C_L\\))と上側臨界値 (\\(C_U\\))が存在。\n\n分布によっては臨界値が一つのみ存在するケースもある (\\(\\chi^2\\)分布など)。\n\n\n\n# 下側臨界値: 第一引数には「有意水準 / 2」\nqt(0.025, df = 4771) # 有意水準が5% (0.05)の場合の下側臨界値\n\n[1] -1.960461\n\n# 上側臨界値: 第一引数には「1 - (有意水準 / 2)」\nqt(0.975, df = 4771) # 有意水準が5% (0.05)の場合の上側臨界値\n\n[1] 1.960461\n\n\n\n受容域 (acceptance region): [\\(C_L\\), \\(C_U\\)]\n\n検定統計量が受容域に含まれると、帰無仮説を受容する。\n\n棄却域 (rejection region): (\\(\\infty\\), \\(C_L\\))と(\\(C_U\\), \\(\\infty\\))\n\n検定統計量が棄却域に含まれると、帰無仮説を棄却し、対立仮説を支持する。"
  },
  {
    "objectID": "slides/macro/nhts.html#棄却域と受容域",
    "href": "slides/macro/nhts.html#棄却域と受容域",
    "title": "マクロ政治データ分析実習",
    "section": "棄却域と受容域",
    "text": "棄却域と受容域"
  },
  {
    "objectID": "slides/macro/nhts.html#検定統計量と棄却域の比較",
    "href": "slides/macro/nhts.html#検定統計量と棄却域の比較",
    "title": "マクロ政治データ分析実習",
    "section": "検定統計量と棄却域の比較",
    "text": "検定統計量と棄却域の比較\n帰無仮説の棄却有無を判断する2つの方法\n\n\\(p\\)値と有意水準 (\\(\\alpha\\))の比較\n\n\\(p &lt; \\alpha\\): 帰無仮説を棄却する。\n\\(p \\geq \\alpha\\): 帰無仮説を受容する。\n\n検定統計量と棄却域の比較\n\n検定統計量が棄却域に含まれると、帰無仮説を棄却し、対立仮説を支持する。\n検定統計量が受容域に含まれると、帰無仮説を受容する。\n\n\n注意事項\n\n有意水準 (\\(\\alpha\\))を大きく設定すると、帰無仮説は棄却されやすくなる (=対立仮説が支持されやすくなる)。\n\nつまり、自分の主張が支持されやすくなる。\n\n\\(\\alpha\\)は検定統計量を求める前に予め決めておく。\n\n分析後に\\(\\alpha\\)を決めることは研究倫理に反する。"
  },
  {
    "objectID": "slides/macro/nhts.html#検定統計量はどこに含まれる",
    "href": "slides/macro/nhts.html#検定統計量はどこに含まれる",
    "title": "マクロ政治データ分析実習",
    "section": "検定統計量はどこに含まれる…?",
    "text": "検定統計量はどこに含まれる…?"
  },
  {
    "objectID": "slides/macro/nhts.html#ガチャの例",
    "href": "slides/macro/nhts.html#ガチャの例",
    "title": "マクロ政治データ分析実習",
    "section": "ガチャの例",
    "text": "ガチャの例\nいずれかの方法で判定する。\n\n\\(p\\)値による判定\n\n\\(p = 0.430\\)であり、\\(p \\geq \\alpha\\)であるため、帰無仮説を棄却できない (=帰無仮説を受容する)。\n\n検定統計量による判定\n\n\\(t = -0.789\\)であり、受容域に含まれる。\n帰無仮説を棄却できない (=帰無仮説を受容する)。\n\n\n意味\n\n帰無仮説が正しい場合、\\(\\bar{x}\\)と\\(\\mu_0\\)の差は0であるため、\\(t = 0\\)である。\n\nただし、「帰無仮説が正しい」ことは検証できない（後述）。\n帰無仮説が棄却できなかった (=受容された)場合、「現時点では対立仮説が正しいとは言えない」だけであり、帰無仮説が正しいことを意味するものではない。\n\n帰無仮説が棄却された場合、\\(t \\neq 0\\)であり、\\(\\bar{x}\\)と\\(\\mu_0\\)の間には統計的に有意味な差が存在することを意味する。"
  },
  {
    "objectID": "slides/macro/nhts.html#検定の結論の提示",
    "href": "slides/macro/nhts.html#検定の結論の提示",
    "title": "マクロ政治データ分析実習",
    "section": "検定の結論の提示",
    "text": "検定の結論の提示\n\n帰無仮説 (\\(H_0\\)): SSRキャラクターの本当の出現確率は5%である。\n対立仮説 (\\(H_a\\)): SSRキャラクターの本当の出現確率は5%ではない。\n\n\n\n\\(p\\)値は0.430であり、\\(\\alpha\\) (= 0.05) 以上であるため、帰無仮説は棄却されない。\n\nSSRキャラクターの出現確率は5%である。 \\(\\leftarrow \\times\\)\nSSRキャラクターの出現確率は5%であるとは言えない。 \\(\\leftarrow \\bigcirc\\)\n\n開発元を訴えることは難しいかも知れない。\n\n\n\nもし、\\(p &lt; \\alpha\\)なら帰無仮説は棄却され、「SSRキャラクターの本当の出現確率は5%ではない。」と結論づけることが可能。\n\n弁護士を見つけ、集団訴訟を準備しよう。"
  },
  {
    "objectID": "slides/macro/nhts.html#統計的有意性の罠",
    "href": "slides/macro/nhts.html#統計的有意性の罠",
    "title": "マクロ政治データ分析実習",
    "section": "「統計的」有意性の罠",
    "text": "「統計的」有意性の罠\n自分の主張が支持される = 対立仮説が支持される = \\(|t|\\)が大きい = \\(p\\)が小さい\n\n人間であれば、\\(p\\)を小さくしたいという誘引を持つ。\n\\(t = \\frac{\\bar{x} - \\mu_0}{\\frac{u}{\\sqrt{n}}}\\)を考えると、\\(|t|\\)が大きくなる条件とは\n\n\\(|\\bar{x}|\\)が大きい\n\\(u\\)が小さい\n\\(n\\)が大きい\n\nこの中で研究者が決めることができるのは\\(n\\)のみ\n\n\\(n\\)が大きいほど、\\(p\\)値が小さくなり、帰無仮説が棄却されやすくなる（\\(n\\)を4倍にすると\\(p\\)値は約半分に）。\n\nただし、統計的推論は「母集団」が対象となるが、「標本」の大きさが仮説の支持有無に影響を与える。\n\n\\(p &lt; \\alpha\\)（帰無仮説を棄却）は\\(\\bar{x}\\)と\\(\\mu_0\\)の間に「統計的」に有意な差があることを意味し、\\(p \\geq \\alpha\\)（帰無仮説を受容）は「差がない」ことを意味しない。"
  },
  {
    "objectID": "slides/macro/nhts.html#帰無仮説を受容することの意味",
    "href": "slides/macro/nhts.html#帰無仮説を受容することの意味",
    "title": "マクロ政治データ分析実習",
    "section": "帰無仮説を受容することの意味",
    "text": "帰無仮説を受容することの意味\n刑事裁判における無罪推定の原則\n\n無罪であることを前提に、裁判を進める仕組み\n\n\\(H_0\\): 容疑者Xは罪を犯していない (= 容疑者Xは無実)。\n\\(H_a\\): 容疑者Xは罪を犯した (= 容疑者Xは犯人)。\n\n\n\n\n検察側の立証によって\\(H_0\\)が棄却されると、Xは有罪\n検察側が立証できなかった場合…\n\nXは無罪ではあるが、罪を犯したかも知れない。\n完全犯罪なら検察の立証はできないが、罪を起こした事実はある\n\n\n\n\n帰無仮説を棄却: 対立仮説の正当性を強く主張できる。\n帰無仮説を受容: 「対立仮説が正しいとは言えない」といった非常に弱い結論"
  },
  {
    "objectID": "slides/macro/nhts.html#例-男女の身長差",
    "href": "slides/macro/nhts.html#例-男女の身長差",
    "title": "マクロ政治データ分析実習",
    "section": "例) 男女の身長差",
    "text": "例) 男女の身長差\n\n\\(H_0\\): 男性と女性の間に身長差はない。\n\\(H_a\\): 男性と女性の間に身長差はない。\n\n\n\n日本国民から男性と女性、それぞれ3人ずつ無作為抽出し、平均身長を比較した結果、男性の平均身長が女性より約1cm高いものの、統計的に有意な差ではなかったら?\n\n帰無仮説「男性と女性の間に身長差はない。」は正しい?\n\n多分、母集団レベルでは男女間の身長差はあるはず\n\n今回の標本ではその差を検証することができなかったことに過ぎず、母集団においては身長の差があるはず。\n\n例えば、3人でなく、300人を抽出して仮説検定を行えば…?\n\\(n\\)が大きくなるほど、\\(SE\\)が小さくなるため、\\(|t|\\)が大きくなり、\\(p\\)が小さくなる。"
  },
  {
    "objectID": "slides/macro/nhts.html#関数の使用",
    "href": "slides/macro/nhts.html#関数の使用",
    "title": "マクロ政治データ分析実習",
    "section": "関数の使用",
    "text": "関数の使用\nt.test()関数を使用\n\n第一引数は変数のベクトル、mu引数には帰無仮説上の母数（\\(\\mu_0\\)）を指定する。\n\n\n# 帰無仮説においてSSRの確率は5%であるため、mu = 0.05\nt.test(gacha_df$result_SSR, mu = 0.05)\n\n\n    One Sample t-test\n\ndata:  gacha_df$result_SSR\nt = -0.78883, df = 4771, p-value = 0.4303\nalternative hypothesis: true mean is not equal to 0.05\n95 percent confidence interval:\n 0.04152782 0.05361049\nsample estimates:\n mean of x \n0.04756915"
  },
  {
    "objectID": "slides/macro/nhts.html#参考母比率の検定",
    "href": "slides/macro/nhts.html#参考母比率の検定",
    "title": "マクロ政治データ分析実習",
    "section": "参考）母比率の検定",
    "text": "参考）母比率の検定\nprop.test()関数を使用: 詳細は講義資料を参照すること。\n\n# x: SSRが得られた回数\n# n: ガチャの回数\n# p: 帰無仮説におけるSSRの出現確率 (0 ~ 1)\nprop.test(x = 227, n = 4772, p = 0.05, correct = FALSE)\n\n\n    1-sample proportions test without continuity correction\n\ndata:  227 out of 4772, null probability 0.05\nX-squared = 0.59364, df = 1, p-value = 0.441\nalternative hypothesis: true p is not equal to 0.05\n95 percent confidence interval:\n 0.04188537 0.05398077\nsample estimates:\n         p \n0.04756915 \n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/introduction.html#講義概要-1",
    "href": "slides/macro/introduction.html#講義概要-1",
    "title": "マクロ政治データ分析実習",
    "section": "講義概要",
    "text": "講義概要\n\n講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: 社会科学のリサーチデザイン & Rを用いたデータ分析の基礎\n\nリサーチデザイン\n統計的推論・仮説検定\n平均値の（差の）検定\n相関分析\n独立性の検定\n線形回帰分析\nロジスティック回帰分析\n\nRの使い方そのものについては解説しない。\n\nRの使い方は前期の「ミクロ政治データ分析実習」で解説済み\n\n前提知識: 前期の「ミクロ政治データ分析実習」を履修すること。\n\n未修の場合、{dplyr}、{tidyr}、{ggplot2}に関する知識が必要。\nブラインドタッチが出来ること。"
  },
  {
    "objectID": "slides/macro/introduction.html#講義内容",
    "href": "slides/macro/introduction.html#講義内容",
    "title": "マクロ政治データ分析実習",
    "section": "講義内容",
    "text": "講義内容\n\n第1回: ガイダンス\n第2回: リサーチデザイン（1）\n第3回: リサーチデザイン（2）\n第4回: 記述統計\n第5回: 統計的推定\n第6回: 統計的仮説検定\n第7回: 変数間の関係\n第8回: 回帰分析（1）\n第9回: 回帰分析（2）\n第10回: 回帰分析（3）\n第11回: 交互作用\n第12回: 分析結果の可視化\n第13回: ロジスティック回帰分析\n第14回: 期末レポートの執筆\n\n第15回: 期末レポートの執筆"
  },
  {
    "objectID": "slides/macro/introduction.html#使用ツール-r",
    "href": "slides/macro/introduction.html#使用ツール-r",
    "title": "マクロ政治データ分析実習",
    "section": "使用ツール: R",
    "text": "使用ツール: R\nR/RStudioのインストール方法は紹介しない\n\n使用するR/RStudioはJDCat分析ツール\n\n使い方は「ミクロ政治データ分析実習」（前期）で紹介\n使い方の復習は「ミクロ政治データ分析実習」のサポートページ、教科書を参照すること\n「ミクロ政治データ分析実習」未修者の場合は速やかに宋に相談\n\n期末レポートを除く課題は全てR Markdown\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\nRStudio\n\n\n\n\n\n\n\nR Markdown"
  },
  {
    "objectID": "slides/macro/introduction.html#重要前提知識",
    "href": "slides/macro/introduction.html#重要前提知識",
    "title": "マクロ政治データ分析実習",
    "section": "【重要】前提知識",
    "text": "【重要】前提知識\n\n前期の「ミクロ政治データ分析実習」が履修済みか、それに相当する知識を持っていること\n\nRを使うのは第4回（10月13日）から\n未修者の場合は10月12日まで以下の内容を習得しておくこと。\n\n\n\n\n\n\n\n\n\n\n内容\n『私たちのR』\n「ミクロ政治データ分析実習」\n\n\n\n\nデータの入出力\n第6、7章\n第3回\n\n\nデータ型とデータ構造\n第8、9章\n第7、8回\n\n\nR Markdown\n第21章\n第5回\n\n\n{dplyr}と{tidyr}を用いたデータハンドリング\n第12、13、14、15章\n第9、10、11回\n\n\n{ggplot2}を用いた可視化\n第17、18、19章\n第12、13、14回\n\n\n\n\n\n\n\n\n\nブラインド・タッチが出来ること。\n\nできない場合は、第4回まで習得しておくこと。\nグーグルで「タイビング 練習」で検索"
  },
  {
    "objectID": "slides/macro/introduction.html#教科書",
    "href": "slides/macro/introduction.html#教科書",
    "title": "マクロ政治データ分析実習",
    "section": "教科書",
    "text": "教科書\n浅野正彦・矢内勇生. 2018.『Rによる計量政治学』オーム社.\n\nサポートページ: https://github.com/yukiyanai/quant-methods-R\n\nデータ、解説資料、正誤表など"
  },
  {
    "objectID": "slides/macro/introduction.html#参考書",
    "href": "slides/macro/introduction.html#参考書",
    "title": "マクロ政治データ分析実習",
    "section": "参考書",
    "text": "参考書\n\n飯田健. 2013. 『計量政治分析』共立出版\n今井耕介 (著). 粕谷祐子・原田勝孝・久保浩樹（訳）. 2018. 『社会科学のためのデータ分析入門（上/下）』岩波書店"
  },
  {
    "objectID": "slides/macro/introduction.html#副読本",
    "href": "slides/macro/introduction.html#副読本",
    "title": "マクロ政治データ分析実習",
    "section": "副読本",
    "text": "副読本\nRの使い方については以下の本がおすすめ\n\nSong Jaehyun・矢内勇生.『私たちのR: ベストプラクティスの探究』(web-book)\n\n無料: https:/www.jaysong.net/RBook/\n\n松村優哉・湯谷啓明・紀ノ定保礼・前田和寛. 2021. 『改訂2版 RユーザのためのRStudio[実践]入門』技術評論社\nGarrett Grolemund and Hadley Wickham. 2017. R for Data Science. O’Reilly.\n\n邦訳『Rではじめるデータサイエンス』\n原著は無料: https://r4ds.had.co.nz/\n\nJared P. Lander. 2018. R for Everyone. Addison-Wesley Professional.\n\n邦訳『みんなのR』"
  },
  {
    "objectID": "slides/macro/introduction.html#成績評価",
    "href": "slides/macro/introduction.html#成績評価",
    "title": "マクロ政治データ分析実習",
    "section": "成績評価",
    "text": "成績評価\n\n平常点 (30%)\n\n欠席4回以上は評価の対象外（3回まで評価対象）\n45分以上欠席は出席0.5回扱い\n欠席届を提出した場合は出席扱い\n\n課題 (40%)\n\n課題は計5〜6回を予定\n3回以上未提出は評価の対象外（2回未提出までは評価対象）\n課題提出期限の延長はない (提出までの期間が長めであるため)\n\n提出期限は次回講義の前日23時59分まで\n期限内に提出出来なかった場合でも宋に連絡する必要はない (どうせ延ばしてくれない)。\n\n\n期末レポート (30%)\n\n自分独自の問いを立て、その問いに答えるための過程と結果を記録したレポート\n未提出者は評価対象外\n授業の第14・15回は期末レポートの執筆\n\n「評価対象」とは「採点の対象」であることを意味し、単位を保障するものではない。\n不正行為厳禁"
  },
  {
    "objectID": "slides/macro/introduction.html#オフィスアワー",
    "href": "slides/macro/introduction.html#オフィスアワー",
    "title": "マクロ政治データ分析実習",
    "section": "オフィス・アワー",
    "text": "オフィス・アワー\n宋、またはTAが研究室に待機し、事前予約なしに相談、質問などが可能な時間\n\n毎週水曜日2限（10時40分〜12時10分）\n\n宋が対応\n\n毎週木曜日3・5限（13時00分〜14時30分/16時20分〜17時50分）\n\n宋とTAが対応\n\n場所：TA227研究室（A棟の2階）\n上記の時間外は事前予約が必要（LMS、メール、対面）\n\nメール: song@kansai-u.ac.jp"
  },
  {
    "objectID": "slides/macro/introduction.html#フィードバックについて",
    "href": "slides/macro/introduction.html#フィードバックについて",
    "title": "マクロ政治データ分析実習",
    "section": "フィードバックについて",
    "text": "フィードバックについて\n授業内容に関する質問・相談の窓口\n\nオフィスアワーの利用\n\n最も確実な方法\n\nLMSの質問コーナー（匿名投稿可能）\nLMSのメッセージ\n\nメッセージの1行目は宛先を明記すること\n\nZoom\n\nLMSの質問コーナー、メッセージを使って事前に日程調整が必要\n\nDiscord\n\n今後、Discordを使って相談する予定がある場合は宋に自分のユーザー名とタグを事前に伝えておくこと。宋がDiscordオンライン状態であれば、いつでも質問・相談可\n\n\n\n\n\nLMSを使用する場合\n\n\n17時以降の質問に対する回答はなるべく早めにするが、翌日になる可能性もあることに注意すること。質問コーナーは宋・TAが確認できるため、メッセージよりも早めに回答が得られるかも知れない。とりわけ、課題提出日には質問が非常に多く寄せられている。全ての質問に回答する場合、提出期限を過ぎて回答するケースも多いため、課題は余裕を持って取り組むこと。\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/inference.html#知りたい対象は",
    "href": "slides/macro/inference.html#知りたい対象は",
    "title": "マクロ政治データ分析実習",
    "section": "知りたい対象は?",
    "text": "知りたい対象は?\n\n問い: 経済成長は国の民主化をもたらす。\n\n研究の対象は世界におけるすべての国（約180）\n\n問い: 日本において高学歴者は投票する傾向がある。\n\n研究の対象は約1億2千万人の日本人\n\n問い: 日本において高齢者の多い市区町村は投票率が高い。\n\n研究の対象は日本の全市区町村（約1700）\n\n\n\n\n母集団 (population): リサーチクエスチョンにおける研究の対象"
  },
  {
    "objectID": "slides/macro/inference.html#問いが決まれば母集団も決まる",
    "href": "slides/macro/inference.html#問いが決まれば母集団も決まる",
    "title": "マクロ政治データ分析実習",
    "section": "問いが決まれば母集団も決まる",
    "text": "問いが決まれば母集団も決まる\n\n\n\n\n\n  \n    \n    \n      問い\n      母集団\n    \n  \n  \n    岸田内閣の支持率は?\n有権者全体\n    女性に人気のある大臣は誰か\n女性有権者全体\n    若者に人気のある政党は何か\n若者有権者全体\n    高槻市長の支持率は?\n高槻市における有権者全体"
  },
  {
    "objectID": "slides/macro/inference.html#母集団における推論の例",
    "href": "slides/macro/inference.html#母集団における推論の例",
    "title": "マクロ政治データ分析実習",
    "section": "母集団における推論の例",
    "text": "母集団における推論の例\n\n岸田内閣の支持率は?\n\n有権者全員 (約1億600万人)に内閣支持の有無を尋ね、支持する人の数を有権者数で割る。\n\n女性に人気のある大臣は誰か\n\n女性有権者全員 (約5300万人)に好きな大臣を尋ね、最も多い選択肢を計算する。\n\n若者に人気のある政党は何か\n\n18〜35歳の有権者 (約2300万人)に支持政党を尋ね、最も多い選択肢を計算する。\n\n高槻市長の支持率は?\n\n18歳以上の高槻市民 (約29万人)に濱田剛史市長の支持有無を尋ね、支持する人の数を有権者数で割る。\n\n\n\n\n母集団は一般的に非常に大きいため、全対象への調査（全数調査）は困難\n\n例) 全国民を対象とする2015年国勢調査の場合、調査費用は約720億円"
  },
  {
    "objectID": "slides/macro/inference.html#標本の利用",
    "href": "slides/macro/inference.html#標本の利用",
    "title": "マクロ政治データ分析実習",
    "section": "標本の利用",
    "text": "標本の利用\n標本 (sample): 母集団から抜き出された一部のこと\n\n母集団は研究の対象であり、標本は分析の対象\n標本を構成するケースの数は標本サイズ (sample size)と呼ばれ、一般的に \\(n\\) と表記する。\n\n注意: 標本サイズ \\(\\neq\\) 標本数\n\n標本における内閣支持率(標本比率)から母集団の内閣支持率(母比率)を推定 (inference)"
  },
  {
    "objectID": "slides/macro/inference.html#母数と統計量",
    "href": "slides/macro/inference.html#母数と統計量",
    "title": "マクロ政治データ分析実習",
    "section": "母数と統計量",
    "text": "母数と統計量\n\n母数 (parameter): 母集団における特徴\n\n一つの値として存在するものの、未知の値\n\n統計量 (statistics): 標本から得られたデータに対し、一定の計算ルールを適用して得られた値\n\nルールの例) 「標本内の内閣支持者の数を標本サイズで割る」\\(\\rightarrow\\) 標本比率\n統計量は様々であり、母数の推定に使用されるものを推定量 (estimator)と呼ぶ"
  },
  {
    "objectID": "slides/macro/inference.html#母集団と標本の関係",
    "href": "slides/macro/inference.html#母集団と標本の関係",
    "title": "マクロ政治データ分析実習",
    "section": "母集団と標本の関係",
    "text": "母集団と標本の関係"
  },
  {
    "objectID": "slides/macro/inference.html#母数と統計量-1",
    "href": "slides/macro/inference.html#母数と統計量-1",
    "title": "マクロ政治データ分析実習",
    "section": "母数と統計量",
    "text": "母数と統計量\n一般的に母数はギリシャ文字、統計量はラテン文字で表記\n\nケース数の場合、母集団の大きさは\\(N\\)、標本の大きさは\\(n\\)と表記する。\n\n\n\n\n母数\n統計量\n\n\n\n\n母平均 (\\(\\mu\\))\n標本平均 (\\(\\bar{x}\\))\n\n\n母比率 (\\(\\pi\\))\n標本比率 (\\(p\\))\n\n\n母分散 (\\(\\sigma^2\\))\n標本分散（\\(s^2\\)）・標本不偏分散 (\\(u^2\\))\n\n\n母標準偏差 (\\(\\sigma\\))\n標本標準偏差（\\(s\\)）・標本不偏分散の平方根 (\\(u\\))"
  },
  {
    "objectID": "slides/macro/inference.html#標本で母集団を推定することは可能か",
    "href": "slides/macro/inference.html#標本で母集団を推定することは可能か",
    "title": "マクロ政治データ分析実習",
    "section": "標本で母集団を推定することは可能か",
    "text": "標本で母集団を推定することは可能か\n内閣支持率が30%の場合、母集団において約3千万人が内閣を支持する。\n\n標本サイズが3000である場合、標本は母集団の約0.0003%\n極端な例だと、標本内の3000人全員が内閣を支持する可能性もあり\nこのような危険性があるにもかかわらず、なぜ標本を使うことが許されるか。\n\n標本抽出（sampling）\n標本から母集団を推論するためには、母集団から適切な方法で標本を抽出する必要がある\n\n例) 標本のほとんどが山口県長門市の居住者である場合、そこから得られた自民党の支持率は母集団を代表せず、偏り（bias）が生じる。\n偏りをなくす抽出方法: 単純無作為抽出法\n\n母集団に属するすべてのケースにおいて標本として抽出される確率が等しい"
  },
  {
    "objectID": "slides/macro/inference.html#偏りをなくしても誤差は存在する",
    "href": "slides/macro/inference.html#偏りをなくしても誤差は存在する",
    "title": "マクロ政治データ分析実習",
    "section": "偏りをなくしても誤差は存在する",
    "text": "偏りをなくしても誤差は存在する\n無作為抽出された標本の平均（標本平均）と母平均が一致するケースはほとんどあり得ず、ズレが存在する。\n\n偏りのない標本における標本平均と母平均のズレ: 誤差 (error)\n\n\n\n\n\n# 1が300個, 0が700個のベクトルを作成し、\n# 母集団と定義する\npop_vec &lt;- c(rep(1, 300), rep(0, 700))\nmean(pop_vec) # 母平均\n\n[1] 0.3\n\n# pop_vecから100個のケースを無作為抽出\nsample1 &lt;- sample(pop_vec, 100)\nmean(sample1) # 標本平均 1\n\n[1] 0.33\n\nsample2 &lt;- sample(pop_vec, 100)\nmean(sample2) # 標本平均 2\n\n[1] 0.29\n\n\n\n\n\n\nsample3 &lt;- sample(pop_vec, 100)\nmean(sample3) # 標本平均 3\n\n[1] 0.31\n\nsample4 &lt;- sample(pop_vec, 100)\nmean(sample4) # 標本平均 4\n\n[1] 0.31\n\nsample5 &lt;- sample(pop_vec, 100)\nmean(sample5) # 標本平均 5\n\n[1] 0.27\n\nsample6 &lt;- sample(pop_vec, 100)\nmean(sample6) # 標本平均 6\n\n[1] 0.3"
  },
  {
    "objectID": "slides/macro/inference.html#偏り-neq-誤差",
    "href": "slides/macro/inference.html#偏り-neq-誤差",
    "title": "マクロ政治データ分析実習",
    "section": "偏り \\(\\neq\\) 誤差",
    "text": "偏り \\(\\neq\\) 誤差\n標本平均の場合、偏り（bias）も誤差（error）も母平均と標本平均とのズレを意味する。\n\nしかし、バイアス \\(\\neq\\) エラー\n母集団からの抽出 \\(\\rightarrow\\) 標本平均の計算を繰り返す場合\n\n偏りのある標本の場合、母平均と大きく離れた値が得られる\n\n長門市から抽出を行い、標本平均の平均の計算を繰り返しても母平均（日本人全体の特徴）から大きく離れた値が得られる。\n\n偏りのない標本の場合、母平均と大きく離れた値が得られるケースがほとんどない。\n\nズレが小さい範囲内（=いわゆる「誤差の範囲内」）に収まる"
  },
  {
    "objectID": "slides/macro/inference.html#全数調査の場合",
    "href": "slides/macro/inference.html#全数調査の場合",
    "title": "マクロ政治データ分析実習",
    "section": "全数調査の場合",
    "text": "全数調査の場合\n標本から母集団を推論することが「統計的推定」の目的\n\n母集団のデータがあれば、推定は不要?\n研究の対象が都道府県、または選挙区の場合、これらのデータを入手することは可能\n\n約300選挙区のデータ = 母集団?\n\n一般的に研究対象のケースがすべて揃ったデータでも、それを母集団として扱うことはない\n\n今回得られた300選挙区のデータは無数の可能性の一つとして考える。\n\n\n\n超母集団（superpopulation）を想定\n\n超母集団は観察不可能であり、我々が母集団と考えるものも超母集団から抽出された一つの事象（event）に過ぎない\n観察された値でなく、そのような値を生み出すメカニズムと、そのメカニズムの中心にある未知の母数についての知識を得ることが目的"
  },
  {
    "objectID": "slides/macro/inference.html#母集団と標本の関係-1",
    "href": "slides/macro/inference.html#母集団と標本の関係-1",
    "title": "マクロ政治データ分析実習",
    "section": "母集団と標本の関係",
    "text": "母集団と標本の関係"
  },
  {
    "objectID": "slides/macro/inference.html#標本を選ぶ方法は無限に存在する",
    "href": "slides/macro/inference.html#標本を選ぶ方法は無限に存在する",
    "title": "マクロ政治データ分析実習",
    "section": "標本を選ぶ方法は無限に存在する",
    "text": "標本を選ぶ方法は無限に存在する\n\n例1）母集団が3人（A, B, C）で、 \\(n\\) = 2の標本を無作為抽出する方法\n\n計9通り（\\(3^2\\) = 9）\\(\\Rightarrow\\) {A, A}、{B, B}、{C, C}、{A, B}、{B ,A}、{A, C}、{C, A}、{B, C}、{C, B}\n注意\n\n同じ人がもう一度抽出されることがあり得る：復元抽出\n{A, C}と{C, A}は異なる組み合わせ：順序あり\n\n\n「非復元抽出 + 順序なし」なら計3通り（{A, B}、{A, C}、{B, C}）\n\n\n\n\n3^2 # 3人から2人を選ぶ方法\n\n[1] 9\n\n\n\n例2）母集団が10人で、 \\(n\\) = 4の標本を無作為抽出する方法\n\n\\(10^4 = 10000\\)\n\n\n\n10^4 # 10人から4人を選ぶ方法\n\n[1] 10000\n\n\n\n例3）1億2千万人から \\(n\\) = 3000の標本を無作為抽出する方法\n\n有限ではあるが、実質、無限と考えられる\n\n\n\n120000000^3000 # 1億2千万のケースから3000個を選ぶ場合、あり得る組み合わせは...\n\n[1] Inf"
  },
  {
    "objectID": "slides/macro/inference.html#標本分布-1",
    "href": "slides/macro/inference.html#標本分布-1",
    "title": "マクロ政治データ分析実習",
    "section": "標本分布",
    "text": "標本分布\n\n母集団が10人で、 \\(n\\) = 4の標本を選ぶ方法は10000通りであり、そこから得られる統計量（標本平均など）は一致せず、分布する（=ばらつきがある）。\n標本分布: 一定の標本サイズを保ちながら理論的に考えられるすべての組み合わせで標本を抽出したとき、そこから得られる統計量の分布\n\n統計量と母数の間を確率で繋いでくれるものであり、統計的推定の仕組みを理解するための最重要概念\n最も頻繁に用いられる統計量は標本平均であり、標本分布と言えば標本平均の分布を意味することが多い。"
  },
  {
    "objectID": "slides/macro/inference.html#標本分布の例",
    "href": "slides/macro/inference.html#標本分布の例",
    "title": "マクロ政治データ分析実習",
    "section": "標本分布の例",
    "text": "標本分布の例\n学生5人（母集団）から \\(n\\) = 2の標本を無作為抽出し、身長を測定（25通り）\n\nRのvar()関数は\\(n-1\\)で割る標本不偏分散であるため、\\(\\frac{n-1}{n}\\)をかけて母分散を算出する。\n\n\n\n\nheight_df &lt;- data.frame(\n  ID     = c(\"A\", \"B\", \"C\", \"D\", \"E\"),\n  Height = c(151, 169, 183, 160, 171)\n)\nheight_df\n\n  ID Height\n1  A    151\n2  B    169\n3  C    183\n4  D    160\n5  E    171\n\nmean(height_df$Height) # 母平均\n\n[1] 166.8\n\nvar(height_df$Height) * 4/5 # 母分散\n\n[1] 116.16\n\n\n\n\n\n\n\n\n\n\n  \n    \n    \n      標本ID\n      組み合わせ\n      標本平均\n      標本不偏分散\n    \n  \n  \n    1\n{A, A}\n151.00\n0.00\n    2\n{A, B}\n160.00\n162.00\n    3\n{A, C}\n167.00\n512.00\n    4\n{A, D}\n155.50\n40.50\n    5\n{A, E}\n161.00\n200.00\n    6\n{B, A}\n160.00\n162.00\n    7\n{B, B}\n169.00\n0.00\n    8\n{B, C}\n176.00\n98.00\n    9\n{B, D}\n164.50\n40.50\n    10\n{B, E}\n170.00\n2.00\n    11\n{C, A}\n167.00\n512.00\n    12\n{C, B}\n176.00\n98.00\n    13\n{C, C}\n183.00\n0.00\n    14\n{C, D}\n171.50\n264.50\n    15\n{C, E}\n177.00\n72.00\n    16\n{D, A}\n155.50\n40.50\n    17\n{D, B}\n164.50\n40.50\n    18\n{D, C}\n171.50\n264.50\n    19\n{D, D}\n160.00\n0.00\n    20\n{D, E}\n165.50\n60.50\n    21\n{E, A}\n161.00\n200.00\n    22\n{E, B}\n170.00\n2.00\n    23\n{E, C}\n177.00\n72.00\n    24\n{E, D}\n165.50\n60.50\n    25\n{E, E}\n171.00\n0.00\n    \n平均\n166.80\n116.16"
  },
  {
    "objectID": "slides/macro/inference.html#偏りがないことの意味",
    "href": "slides/macro/inference.html#偏りがないことの意味",
    "title": "マクロ政治データ分析実習",
    "section": "「偏りがない」ことの意味",
    "text": "「偏りがない」ことの意味\n不偏性（unbiasedness）: 実現し得る統計量の平均値が母数と一致\n\n椎定量として望ましい性質の一つ\n\n不偏推定量（unbiased estimator）: 不偏性のある推定量\n\n例) 標本平均の平均は母平均と一致（\\(\\mathbb{E}(\\bar{x}) = \\mu\\)）するため、標本平均（\\(\\bar{x}\\)）は母平均（\\(\\mu\\)）の不偏推定量\n\nただし、これは標本抽出を繰り返し行えば平均的に正しい値が得られるという性質を意味し、分析に用いる標本（手元の標本）にズレが存在しないことを保証するわけではない。\n\n標本不偏分散（\\(u^2\\)）も母分散の不偏推定量（\\(\\mathbb{E}(u^2) = \\sigma^2\\)）\n\n標本分散（\\(s^2\\)）の計算式は母分散（\\(\\sigma^2\\)）と同じ\\(\\frac{1}{n}\\sum (x - \\bar{x})^2\\)であるが、これは母分散の不偏推定量ではない。母分散（\\(\\sigma^2\\)）の不偏推定量は標本不偏分散（\\(u^2\\)）であり、標本不偏分散（\\(u^2\\)）は\\(\\frac{1}{n}\\)の代わりに\\(\\frac{1}{n - 1}\\)を使用する。\n\n不偏性の詳細はhttps://www.jaysong.net/notes/simulation/consistency.htmlを参照\n\n\n\n\n\\(u\\)は不偏推定量ではない！\n\n\n標本不偏分散\\(u^2\\)は母分散の不偏推定量ではあるが、\\(u\\)は母標準偏差の不偏推定量ではない。したがって、\\(u\\)は混同を避けるために「標本不偏標準偏差」でなく、「標本不偏分散の平方根」と呼ばれる。母標準偏差の不偏推定量はもっと複雑な計算が必要。"
  },
  {
    "objectID": "slides/macro/inference.html#大きい母集団で考える",
    "href": "slides/macro/inference.html#大きい母集団で考える",
    "title": "マクロ政治データ分析実習",
    "section": "大きい母集団で考える",
    "text": "大きい母集団で考える\n成人男性1000人の身長データ（架空のデータ）\n\nこの1000人が母集団であると仮定する。\n\n\n\n\n\nheight_df &lt;- read_csv(\"Data/heights.csv\")\nheight_df\n\n# A tibble: 1,000 × 2\n      ID Height\n   &lt;dbl&gt;  &lt;dbl&gt;\n 1     1    166\n 2     2    161\n 3     3    160\n 4     4    180\n 5     5    170\n 6     6    174\n 7     7    164\n 8     8    179\n 9     9    173\n10    10    173\n# ℹ 990 more rows\n\n\n\n\n\n母数（パラメーター）\n\n母平均と母標準偏差\n\n\n# 母平均\nmean(height_df$Height)\n\n[1] 170.12\n\n# 母標準偏差\nsd(height_df$Height) * sqrt(999/1000)\n\n[1] 6.215432"
  },
  {
    "objectID": "slides/macro/inference.html#母集団の分布",
    "href": "slides/macro/inference.html#母集団の分布",
    "title": "マクロ政治データ分析実習",
    "section": "母集団の分布",
    "text": "母集団の分布\nggplot(height_df) +\n  geom_histogram(aes(x = Height), binwidth = 2, color = \"white\")"
  },
  {
    "objectID": "slides/macro/inference.html#n-10-の無作為抽出を繰り返す",
    "href": "slides/macro/inference.html#n-10-の無作為抽出を繰り返す",
    "title": "マクロ政治データ分析実習",
    "section": "\\(n = 10\\) の無作為抽出を繰り返す",
    "text": "\\(n = 10\\) の無作為抽出を繰り返す\n\\(n = 10\\)の標本を無作為抽出し、標本平均を計算することを500回繰り返す。\n\n計算された500個の標本平均を保存し、ヒストグラム化する。\n\n\n非効率的なやり方効率的なやり方\n\n\n\n1001行のコードが必要\n\nsample_mean &lt;- c() # 空ベクトルの作成\n\nsample001 &lt;- sample(height_df$Height, 10)\nsample002 &lt;- sample(height_df$Height, 10)\nsample003 &lt;- sample(height_df$Height, 10)\n...\nsample500 &lt;- sample(height_df$Height, 10)\n\nsample_mean[1]   &lt;- mean(sample001)\nsample_mean[2]   &lt;- mean(sample002)\nsample_mean[3]   &lt;- mean(sample003)\n...\nsample_mean[500] &lt;- mean(sample500)\n\n\n\nsample_mean &lt;- c() # 標本平均を格納する空ベクトルの作成\n\n# for文で標本抽出&標本平均の計算を繰り返す\nfor (i in 1:500) {\n  temp_sample &lt;- sample(height_df$Height, 10, replace = TRUE)\n  sample_mean[i] &lt;- mean(temp_sample)\n}\n\nlength(sample_mean) # sample_meanベクトルの長さ\n\n[1] 500\n\nhead(sample_mean) # sample_meanの最初の6つの要素\n\n[1] 166.7 169.5 169.8 171.9 173.3 172.4"
  },
  {
    "objectID": "slides/macro/inference.html#標本平均の分布-n-10",
    "href": "slides/macro/inference.html#標本平均の分布-n-10",
    "title": "マクロ政治データ分析実習",
    "section": "標本平均の分布 (\\(n = 10\\))",
    "text": "標本平均の分布 (\\(n = 10\\))\n\n\n\n# 標本平均の平均値\nmean(sample_mean)\n\n[1] 170.0494\n\n# 標本平均の標準偏差\nsd(sample_mean)\n\n[1] 1.936181\n\n\n\n\n\nenframe(sample_mean) %&gt;% # ベクトルをデータフレームに変換\n  ggplot(aes(x = value)) +\n  geom_histogram(binwidth = 1, color = \"white\")"
  },
  {
    "objectID": "slides/macro/inference.html#標本平均の分布から分かること",
    "href": "slides/macro/inference.html#標本平均の分布から分かること",
    "title": "マクロ政治データ分析実習",
    "section": "標本平均の分布から分かること",
    "text": "標本平均の分布から分かること\n\n標本平均の分布は左右対称のベル(鐘)形（正規分布）\\(\\leftarrow\\) 中心極限定理\n標本平均の平均値は母平均と同じ \\(\\rightarrow\\) 標本平均は母平均の不偏推定量\n標本平均のばらつきは母集団のばらつきよりも小さい（母集団より狭い範囲に分布する）\n\n標本平均のばらつき（= \\(\\bar{x}\\)の標準偏差）は\n\n\n\\[\n\\mbox{SE}(x) = \\mbox{SD}(\\bar{x}) = \\sqrt{\\frac{\\sigma^2}{n}}\n\\]\n\n母分散（\\(\\sigma^2\\)）が約6.2、標本サイズ（\\(n\\)）が10であるため、標準誤差は\\(\\frac{6.2}{\\sqrt{10}} \\simeq 1.96\\)（標本平均の標準偏差は約1.9）\n標本サイズが大きくなるほど、標本平均と母平均のズレは小さくなり（大数の弱法則）、標本平均の分散/標準偏差は小さくなる。\n\n一致性（consistency）：標本のサイズを大きくするほど、一つの標本から得られる統計量が母数の近くの値をとる確率が大きくなる。\n一致性は不偏性とともに、推定量の望ましい性質の一つ\n詳細は https://www.jaysong.net/notes/simulation/consistency.html"
  },
  {
    "objectID": "slides/macro/inference.html#標本平均の分布-n-50",
    "href": "slides/macro/inference.html#標本平均の分布-n-50",
    "title": "マクロ政治データ分析実習",
    "section": "標本平均の分布 (\\(n = 50\\))",
    "text": "標本平均の分布 (\\(n = 50\\))\nサンプルサイズが大きいほど、標準誤差も小さくなる（標本平均の平均値はいずれも約170.1）。\n\n\n\n\\(n = 10\\)の場合の標準誤差\n\n\n6.215432 / sqrt(10)\n\n[1] 1.965492\n\n\n\n\n\n\n\\(n = 50\\)の場合の標準誤差\n\n\n6.215432 / sqrt(50)\n\n[1] 0.8789948"
  },
  {
    "objectID": "slides/macro/inference.html#問題設定",
    "href": "slides/macro/inference.html#問題設定",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n2021年9月に行われた有権者調査から測定された日本維新の会に対する感情温度（0度 \\(\\sim\\) 100度）\n\n\n\nishin_df &lt;- read_csv(\"Data/inference_data.csv\")\n# Temp_Ishinが欠損したケースもあるため、後ほど除去\nishin_df\n\n# A tibble: 2,746 × 4\n      ID Female   Age Temp_Ishin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1      0    44         NA\n 2     2      1    32         50\n 3     3      1    53         20\n 4     4      1    22          0\n 5     5      1    27         NA\n 6     6      1    28         NA\n 7     7      0    28         30\n 8     8      1    45         NA\n 9     9      1    33         50\n10    10      0    30         NA\n# ℹ 2,736 more rows\n\n\n\n\n\n\n# Temp_Ishinが欠損した行を除去\nishin_df &lt;- ishin_df |&gt; \n  filter(!is.na(Temp_Ishin))\n# 標本サイズ (= n)\nlength(ishin_df$Temp_Ishin)\n\n[1] 1998\n\n# Temp_Ishinの平均値\nmean(ishin_df$Temp_Ishin)\n\n[1] 42.73273\n\n# Temp_Ishinの標本不偏分散の平方根\nsd(ishin_df$Temp_Ishin)\n\n[1] 23.86197"
  },
  {
    "objectID": "slides/macro/inference.html#日本人全体における感情温度は",
    "href": "slides/macro/inference.html#日本人全体における感情温度は",
    "title": "マクロ政治データ分析実習",
    "section": "日本人全体における感情温度は?",
    "text": "日本人全体における感情温度は?\n\n標本平均は母平均の一致推定量であるため、母集団（日本人全体）における維新に対する感情温度の平均値（母平均）は約42.7度であると考えられる。\n\n\n点推定と区間推定\n\n「母平均は42.7度だろう」 \\(\\rightarrow\\) 点推定（point estimation）\nしかし、もう一回標本抽出を行えば、標本平均は変わる可能性が高い。\n\nもう一回、調査を行えば、39や44なども出るかも知れない。\n今回得られた標本平均42.7は無数の組み合わせの中の一つから得られた結果に過ぎない。\n\n「42.7度はどの程度確かな推定か」 \\(\\rightarrow\\) 推定における不確実性に注目\n\n「母平均はXX度以上、YY度以下である」 \\(\\rightarrow\\) 区間推定（interval estimation）\n標本平均の不確実性は…?"
  },
  {
    "objectID": "slides/macro/inference.html#標準誤差-不確実性の指標",
    "href": "slides/macro/inference.html#標準誤差-不確実性の指標",
    "title": "マクロ政治データ分析実習",
    "section": "標準誤差: 不確実性の指標",
    "text": "標準誤差: 不確実性の指標\n標本平均（\\(\\bar{x}\\)）の標準偏差（SD）は\n\\[\n\\mbox{SD}(\\bar{x}) = \\sqrt{\\frac{\\sigma^2}{n}} = \\frac{\\sigma}{\\sqrt{n}} = \\mbox{SE}(x)\n\\]\n\nただし、\\(\\sigma\\)は未知の母数であるため、\\(\\sigma\\)の代わりに\\(u\\)（標本不偏分散の平方根）を使用（sd()関数）\n\nRのsd()関数は「標本不偏分散の平方根」の関数\n母標準偏差を求める場合はsd(ベクトル) * sqrt((標本サイズ - 1) / 標本サイズ)で計算\n\n標準誤差 (standard error; SE): \\(\\mbox{SE} = \\sqrt{\\frac{u^2}{n}} = \\frac{u}{\\sqrt{n}}\\)\n\\(\\mbox{SD}(\\bar{x})\\)の推定値として\\(\\mbox{SE}(x)\\)を用いる。\n\n通常、標本は一つしかない（=\\(\\bar{x}\\)が一つしかない）ため、\\(\\mbox{SD}(\\bar{x})\\)は計算できない。"
  },
  {
    "objectID": "slides/macro/inference.html#確率分布の例-t分布",
    "href": "slides/macro/inference.html#確率分布の例-t分布",
    "title": "マクロ政治データ分析実習",
    "section": "確率分布の例) \\(t\\)分布",
    "text": "確率分布の例) \\(t\\)分布\n標準誤差を用い、標本平均を以下のように変形したものを\\(T\\)統計量と呼ぶ。\n\\[\nT = \\frac{\\bar{x} - \\mu}{\\mbox{SE}(x)}\n\\]\n\n\\(T\\)は\\(t\\)分布という確率分布に従う。\n\n\\(t\\)分布は0を中心に左右対称のベル (bell)型確率分布\n\\(t\\)分布の性質は既知であるため、様々な活用が可能となる。\n\\(t\\)分布は自由度 (degree of freedom; df)によって形が変わる。\n\n自由度が\\(\\infty\\)になると\\(t\\)分布は標準正規分布と一致する。\n\n\n標本平均の区間推定の場合、自由度は\\(n-1\\)\n\n今回の例の場合、自由度は1997 (= 1998 - 1)\n自由度が小さいほど、両端の裾が厚い。\n\n確率分布における面積は必ず1 (= 100%)\n\n左右対称で\\(T\\)の\\(\\bigcirc\\bigcirc\\)%が入る区間を調べる。"
  },
  {
    "objectID": "slides/macro/inference.html#自由度とt分布",
    "href": "slides/macro/inference.html#自由度とt分布",
    "title": "マクロ政治データ分析実習",
    "section": "自由度と\\(t\\)分布",
    "text": "自由度と\\(t\\)分布"
  },
  {
    "objectID": "slides/macro/inference.html#区間の調べ方",
    "href": "slides/macro/inference.html#区間の調べ方",
    "title": "マクロ政治データ分析実習",
    "section": "区間の調べ方",
    "text": "区間の調べ方\n\\(T\\)が95%収まる範囲を調べるためには、\\(t\\)分布における下限と上限を計算する。\n\nqt(p, df)で計算可能。\n\n自由度dfの\\(t\\)分布において\\(t = \\bigcirc\\bigcirc\\)なら\\(t &lt; T\\)の領域の面積がp \\(\\times\\) 100%となる、\\(t\\)の値を計算\n\n\n\n\n\nqt(0.025, df = 1997) # 下限\n\n[1] -1.961153\n\nqt(0.975, df = 1997) # 上限\n\n[1] 1.961153\n\n\n\n\\(t_{1997, 0.025}\\) = -1.961143\n\\(t_{1997, 0.975}\\) = 1.961143"
  },
  {
    "objectID": "slides/macro/inference.html#母平均muの95信頼区間の求め方",
    "href": "slides/macro/inference.html#母平均muの95信頼区間の求め方",
    "title": "マクロ政治データ分析実習",
    "section": "母平均\\(\\mu\\)の95%信頼区間の求め方",
    "text": "母平均\\(\\mu\\)の95%信頼区間の求め方\n\n\\(-1.961143 \\leq T \\leq 1.961143\\)\n\nqt(0.025, df = 1997)とqt(0.975, df = 1997)で計算\n\n\\(-1.961143 \\leq \\frac{\\bar{x} - \\mu}{\\mbox{SE}(x)} \\leq 1.961143\\)\n\\(-1.961143 \\cdot \\mbox{SE}(x) \\leq \\bar{x} - \\mu \\leq 1.961143 \\cdot \\mbox{SE}(x)\\)\n\\(-1.961143 \\cdot \\mbox{SE}(x) - \\bar{x} \\leq -\\mu \\leq 1.961143 \\cdot \\mbox{SE}(x) - \\bar{x}\\)\n\\(-1.961143 \\cdot \\mbox{SE}(x) + \\bar{x} \\leq \\mu \\leq 1.961143 \\cdot \\mbox{SE}(x) + \\bar{x}\\)\n\\(\\bar{x} - 1.961143 \\cdot \\mbox{SE}(x) \\leq \\mu \\leq \\bar{x} + 1.961143 \\cdot \\mbox{SE}(x)\\)\n\n\n\n\\((1 - \\alpha) \\cdot 100\\)%信頼区間を計算する場合 (95%の場合、\\(\\alpha\\)は0.05)\n\nqt()内で0.025、0.975の代わりに\\(\\alpha / 2\\) と \\(1 - (\\alpha / 2)\\)を使用\n\n標本サイズ\\(n\\)における母平均の\\((1 - \\alpha) \\cdot 100\\)%信頼区間\n\n\\(\\bar{x} + t_{n - 1, \\alpha / 2} \\cdot \\mbox{SE}(x) \\leq \\mu \\leq \\bar{x} + t_{n - 1, 1 - (\\alpha / 2)} \\cdot \\mbox{SE}(x)\\)\n標本サイズ（\\(n\\)）、標本平均（\\(\\bar{x}\\)）、標本不偏分散（\\(u^2\\)）があれば計算可能"
  },
  {
    "objectID": "slides/macro/inference.html#rによる信頼区間の推定-1",
    "href": "slides/macro/inference.html#rによる信頼区間の推定-1",
    "title": "マクロ政治データ分析実習",
    "section": "Rによる信頼区間の推定 (1)",
    "text": "Rによる信頼区間の推定 (1)\n\n\n\n# 標本平均\nmean(ishin_df$Temp_Ishin)\n\n[1] 42.73273\n\n# 標本不偏分散の平方根\nsd(ishin_df$Temp_Ishin)\n\n[1] 23.86197\n\n# 標本サイズ\nlength(ishin_df$Temp_Ishin)\n\n[1] 1998\n\n# 標準誤差\n23.86197 / sqrt(1998)\n\n[1] 0.5338369\n\n\n\n\n\n95%信頼区間の計算\n\n\\(t\\) 分布の自由度は \\(n-1\\) であることに注意\n\n\n# 95%信頼区間の下限\n42.73273 + qt(0.025, df = 1997) * 0.5338369\n\n[1] 41.68579\n\n# 95%信頼区間の上限\n42.73273 + qt(0.975, df = 1997) * 0.5338369\n\n[1] 43.77967\n\n\n\n母平均\\(\\mu\\)の点推定値は42.733度、95%信頼区間は[41.686, 43.780]である。\n点推定値は母平均から \\(\\pm\\) 1.047度程度ズレている可能性がある（後述）。"
  },
  {
    "objectID": "slides/macro/inference.html#rによる信頼区間の推定-2",
    "href": "slides/macro/inference.html#rによる信頼区間の推定-2",
    "title": "マクロ政治データ分析実習",
    "section": "Rによる信頼区間の推定 (2)",
    "text": "Rによる信頼区間の推定 (2)\nt.test(ベクトル名, conf.level = 区間)で推定\n\nt.test()の後ろに$conf.intを付けると、信頼区間のみ出力\n95%信頼区間の場合、conf.levelは0.95（既定値）\n\n\n\n50%信頼区間\n\nt.test(ishin_df$Temp_Ishin, conf.level = 0.5)\n\n\n    One Sample t-test\n\ndata:  ishin_df$Temp_Ishin\nt = 80.048, df = 1997, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n50 percent confidence interval:\n 42.37260 43.09287\nsample estimates:\nmean of x \n 42.73273 \n\n\n\n\n\n95%信頼区間\n\nt.test(ishin_df$Temp_Ishin, conf.level = 0.95)\n\n\n    One Sample t-test\n\ndata:  ishin_df$Temp_Ishin\nt = 80.048, df = 1997, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 41.68580 43.77967\nsample estimates:\nmean of x \n 42.73273"
  },
  {
    "objectID": "slides/macro/inference.html#信頼区間の意味",
    "href": "slides/macro/inference.html#信頼区間の意味",
    "title": "マクロ政治データ分析実習",
    "section": "95%信頼区間の意味",
    "text": "95%信頼区間の意味\n\n間違った解釈: 「母数がこの区間に含まれている確率が95%である。」\n正しい解釈: 「95%の95%信頼区間に母数が含まれる。」\n\n\n\n# pop_vecを母集団とした場合、母平均は0.3\n# n = 30の標本抽出を100回行う\nsample1   &lt;- sample(pop_vec, 30)\nsample2   &lt;- sample(pop_vec, 30)\nsample3   &lt;- sample(pop_vec, 30)\n...\nsample100 &lt;- sample(pop_vec, 30)\n\n# それぞれの標本から95%信頼区間を求める\nt.test(sample1, conf.level = 0.95)\nt.test(sample2, conf.level = 0.95)\nt.test(sample3, conf.level = 0.95)\n...\nt.test(sample100, conf.level = 0.95)"
  },
  {
    "objectID": "slides/macro/inference.html#信頼区間の意味-続き",
    "href": "slides/macro/inference.html#信頼区間の意味-続き",
    "title": "マクロ政治データ分析実習",
    "section": "95%信頼区間の意味 (続き)",
    "text": "95%信頼区間の意味 (続き)\n今回の例\n\n日本人の中から無作為に1998人を抽出し、日本維新の会に対する感情温度を測定する。\n95%信頼区間を求める。\n1 \\(\\sim\\) 2の作業を1万回繰り返す（できれば無限回）\n\n\n以上の手順で1万個の95%信頼区間が得られ、その内、約9500個の95%信頼区間には母平均（=日本人全体における日本維新の会に対する感情温度の真の平均値）が含まれる。\n一方、残りの約500個の95%信頼区間は母平均を含まない。\n\n\n\n\nなぜ「95%」か\n\n\n\n理論的な根拠はなく単なる慣習に過ぎない。\n他にも使われるのは90%、99%、99.9%などがあるが、50%でも、97%でも良い。\n\nただし、変なものを使うと突っ込まれるかも知れない。\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/association.html#授業開始前に",
    "href": "slides/macro/association.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データ（3つ）をダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\n\ngacha_df   &lt;- read_csv(\"Data/Gacha2.csv\")\nsubsidy_df &lt;- read_csv(\"Data/Subsidy.csv\")\npasta_df   &lt;- read_csv(\"Data/Pasta.csv\")\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/association.html#データの読み込み",
    "href": "slides/macro/association.html#データの読み込み",
    "title": "マクロ政治データ分析実習",
    "section": "データの読み込み",
    "text": "データの読み込み\n\nlibrary(tidyverse)\n# 作業フォルダーの下のDataフォルダー内になるGacha2.csvを読み込み、gacha_dfという名で格納\n# 今回のデータは先週と同じであるが、result変数のダミー化済み\ngacha_df &lt;- read_csv(\"Data/Gacha2.csv\")\n\ngacha_df # gacha_dfの出力\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# … with 4,762 more rows"
  },
  {
    "objectID": "slides/macro/association.html#問題設定",
    "href": "slides/macro/association.html#問題設定",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　あるソシャゲのガチャ確率を見ると、SSR (★5)の出現確率は5%と記載されている。しかし、ガチャでSSRが出現する確率が有償石か無料石かによって変わる噂を聞いた。これが本当なら大炎上するだろう。この噂は本当だろうか。\n\n\n帰無仮説（\\(H_0\\)）：無償石のSSRの確率と有償石のSSRの確率の差は0である。\n\n2つの確率が同じなら、その差分は0であるため\n\n対立仮説（\\(H_a\\)）：無償石のSSRの確率と有償石のSSRの確率の差は0ではない。\n\n\n\n2つの考え方があり得る（本質的には同じ）\n\n無償石のガチャと有償石のガチャを別途の標本として考える。\n名目変数（石の種類）と連続変数（SSRの出現割合）間の関係\n\n\n\n\n注意: 変数が0または1の値のみを取る場合、これから紹介する「\\(t\\)検定」でなく、「母比率の差の検定」を使うのが適切であるが、ここではより汎用性の高い\\(t\\)検定の例で紹介する。"
  },
  {
    "objectID": "slides/macro/association.html#点推定値",
    "href": "slides/macro/association.html#点推定値",
    "title": "マクロ政治データ分析実習",
    "section": "点推定値",
    "text": "点推定値\n\n約-1.5%ポイントの差が存在\n\n無料石の場合のresult_SSRの平均値（\\(\\bar{x}_{\\mbox{free}}\\)）は0.0425（4.25%）\n有償石の場合のresult_SSRの平均値（\\(\\bar{x}_{\\mbox{paid}}\\)）は0.0572（5.72%）\n\n無料石でガチャを引くと有償石で引いた場合より、SSRが出現する確率が約1.5%ポイント低い \\(\\Rightarrow\\) 点推定値\n\nこれは統計的に有意な差か\n\n\n\ngacha_df %&gt;%\n  group_by(stone_type) %&gt;%\n  summarise(SSR = mean(result_SSR) * 100)\n\n# A tibble: 2 × 2\n  stone_type   SSR\n  &lt;chr&gt;      &lt;dbl&gt;\n1 Free        4.25\n2 Paid        5.72"
  },
  {
    "objectID": "slides/macro/association.html#平均値の差の検定の考え方",
    "href": "slides/macro/association.html#平均値の差の検定の考え方",
    "title": "マクロ政治データ分析実習",
    "section": "平均値の差の検定の考え方",
    "text": "平均値の差の検定の考え方\n\n標本平均（\\(\\bar{x}_{\\mbox{free}}\\)と\\(\\bar{x}_{\\mbox{paid}}\\)）は正規分布に従う（= 中心極限定理）\n正規分布を従う2つの値の差分（\\(\\delta = \\bar{x}_{\\mbox{free}} - \\bar{x}_{\\mbox{paid}}\\)）も正規分布に従う\n\n帰無仮説（\\(H_0\\)）は\\(\\delta = 0\\)\n\n\\(\\delta\\)は正規分布に従うため、 \\(\\frac{\\delta - \\delta_0}{\\mbox{SE}_\\delta}\\)は\\(t\\)分布に従う\n\n帰無仮説上の\\(\\delta\\)（=\\(\\delta_0\\)）は0であるため、\\(\\delta_0 = 0\\)\n\\(\\mbox{SE}_{\\delta}\\)と検定に使用する\\(t\\)分布の自由度の計算はやや複雑\nパソコンに任せる\n\n後は先週の内容と同じ手順\n\nt.test()関数を使えば簡単"
  },
  {
    "objectID": "slides/macro/association.html#t.test関数の使用",
    "href": "slides/macro/association.html#t.test関数の使用",
    "title": "マクロ政治データ分析実習",
    "section": "t.test()関数の使用",
    "text": "t.test()関数の使用\n\n第1引数は「平均値を計算する変数名 ~ グループ変数名」(今回はresult_SSR ~ stone_type)\n第2引数は「data = データ名」(今回はdata = gacha_df)\n\n\nt.test(result_SSR ~ stone_type, data = gacha_df)\n\n\n    Welch Two Sample t-test\n\ndata:  result_SSR by stone_type\nt = -2.1653, df = 2960.6, p-value = 0.03045\nalternative hypothesis: true difference in means between group Free and group Paid is not equal to 0\n95 percent confidence interval:\n -0.027932426 -0.001384442\nsample estimates:\nmean in group Free mean in group Paid \n        0.04251918         0.05717762"
  },
  {
    "objectID": "slides/macro/association.html#結果の解釈",
    "href": "slides/macro/association.html#結果の解釈",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\n\n点推定値：\\(\\hat{\\delta} = \\bar{x}_{\\mbox{free}} - \\bar{x}_{\\mbox{paid}} \\simeq -0.15\\)（約-1.5%ポイント）\n\n帰無仮説の棄却有無を確認する3つの方法\n\n有意水準（\\(\\alpha\\)）は0.05と設定\n\n検定統計量：約-2.165 / 棄却域：(\\(-\\infty\\), \\(-1.961\\)]と[\\(1.961\\), \\(\\infty\\))\n\n検定統計量は棄却域に含まれる \\(\\rightarrow\\) 帰無仮説を棄却\n\n点推定値の95%信頼区間: [-0.028, -0.001] (-2.8%ポイント〜-0.1%ポイント)\n\n95%信頼区間に帰無仮説の値 (0)が含まれていない \\(\\rightarrow\\) 帰無仮説を棄却\n\n\\(p\\)値：0.030\n\n\\(p &lt; \\alpha\\) \\(\\rightarrow\\)帰無仮説を棄却\n\n\n\n結論\n\n「無償石のSSRの確率と有償石のSSRの確率の差はない」という帰無仮説を棄却する。したがって、有意水準5%で無償石のSSRの確率と有償石のSSRの確率には差がある。"
  },
  {
    "objectID": "slides/macro/association.html#参考母比率の差の検定prop.testの使用",
    "href": "slides/macro/association.html#参考母比率の差の検定prop.testの使用",
    "title": "マクロ政治データ分析実習",
    "section": "参考）母比率の差の検定：prop.test()の使用",
    "text": "参考）母比率の差の検定：prop.test()の使用\n\nx: SSRの出現枚数（無償石ガチャで133枚、有償石ガチャで94枚）\nn: 試行回数（無償石ガチャ3128回、有償石ガチャ1644回）\n\n\nprop.test(x = c(133, 94), n = c(3128, 1644))\n\n\n    2-sample test for equality of proportions with continuity correction\n\ndata:  c(133, 94) out of c(3128, 1644)\nX-squared = 4.7923, df = 1, p-value = 0.02859\nalternative hypothesis: two.sided\n95 percent confidence interval:\n -0.0283874901 -0.0009293778\nsample estimates:\n    prop 1     prop 2 \n0.04251918 0.05717762"
  },
  {
    "objectID": "slides/macro/association.html#問題設定-1",
    "href": "slides/macro/association.html#問題設定-1",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　政治家・政党にとって「投票率の高い地域」は「票になる地域」であるため、補助金などで優遇されているかも知れない。一方、投票率の低い地域は票にならないため、政治家・政党にとって、関心が払われていない可能性もある。これは本当だろうか。仮説検定の際、\\(\\alpha = 0.05\\)を用いる。\n\n2つの連続変数間の関係: 「投票率」と「補助金額」\n\n\n\nsubsidy_df &lt;- read_csv(\"Data/Subsidy.csv\")\n\nsubsidy_df\n\n# A tibble: 47 × 4\n      ID Pref   Turnout Subsidy\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道    60.3   134. \n 2     2 青森県    54.2   193. \n 3     3 岩手県    59.1   265. \n 4     4 宮城県    52.8    98.2\n 5     5 秋田県    60.6   219. \n 6     6 山形県    64.1   187. \n 7     7 福島県    56.7   166. \n 8     8 茨城県    51.5    76.3\n 9     9 栃木県    51.7    72.8\n10    10 群馬県    52.0    76.6\n# … with 37 more rows\n\n\n\n\n\n\n\n\n変数\n説明\n\n\n\n\nID\n都道府県ID\n\n\nPref\n都道府県名\n\n\nTurnout\n投票率 (%)\n\n\nSubsidy\n人口1万人当たり地方交付税額 (万円)\n\n\n\n\n\n\n\n注意： 変数が「順序変数」の場合もこれから紹介する方法で相関係数の計算ができるものの、基本的には「ノンパラメトリック相関係数」が推奨される。詳細はGoogleなどで調べてみること"
  },
  {
    "objectID": "slides/macro/association.html#正の相関負の相関無相関",
    "href": "slides/macro/association.html#正の相関負の相関無相関",
    "title": "マクロ政治データ分析実習",
    "section": "正の相関、負の相関、無相関",
    "text": "正の相関、負の相関、無相関\n\n正の相関：変数1が大きくなれば、変数2も大きくなる\n負の相関：変数1が大きくなれば、変数2は小さくなる\n無相関：変数1が大きくなっても、変数2は変わらない"
  },
  {
    "objectID": "slides/macro/association.html#相関係数",
    "href": "slides/macro/association.html#相関係数",
    "title": "マクロ政治データ分析実習",
    "section": "相関係数",
    "text": "相関係数\n相関係数（\\(\\rho\\)）: 2つの変数間の相関関係の強さを表す指標\n\n相関係数は-1以上1以下（\\(-1 \\leq \\rho \\leq 1\\)）\n\n-1: 完全な負の相関 / 0: 無相関 / 1: 完全な正の相関\n\n母集団における相関係数は\\(\\rho\\)（ロー）、標本における相関係数は\\(r\\)と表記するのが一般的\n「相関関係の強さ」とは?\n\n2つの変数間の関係を直線で表した場合、点が直線から近いか、離れているか。"
  },
  {
    "objectID": "slides/macro/association.html#相関関係の強さ",
    "href": "slides/macro/association.html#相関関係の強さ",
    "title": "マクロ政治データ分析実習",
    "section": "相関関係の強さ",
    "text": "相関関係の強さ\n変数1（\\(x\\)）と変数2（\\(y\\)）の関係（青い線）はいずれも\\(y = 1.5 \\times x\\)の直線（若干のズレはある）\n\n青の直線 = 回帰直線（次回にて解説）"
  },
  {
    "objectID": "slides/macro/association.html#散布図の確認",
    "href": "slides/macro/association.html#散布図の確認",
    "title": "マクロ政治データ分析実習",
    "section": "散布図の確認",
    "text": "散布図の確認\n\n\n正の相関関係\n\n相関係数は?\n（超）母集団においても相関しているだろうか。\n\n\nsubsidy_df %&gt;%\n  ggplot(aes(x = Turnout, y = Subsidy)) +\n  geom_point() +\n  # 回帰直線を追加したい場合は以下のレイヤーを足す\n  #geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"投票率 (%)\",\n       y = \"1万人当り地方交付税額 (万円)\") +\n  theme_bw()"
  },
  {
    "objectID": "slides/macro/association.html#相関係数の求め方",
    "href": "slides/macro/association.html#相関係数の求め方",
    "title": "マクロ政治データ分析実習",
    "section": "相関係数の求め方",
    "text": "相関係数の求め方\n\n\n変数1（\\(x\\)）と変数2（\\(y\\)）の相関係数\n\\[\n\\begin{align}\nr_{x, y} = \\frac{\\mbox{Cov}_{x, y}}{s_x \\cdot s_y}\n\\end{align}\n\\]\n\n\\(\\mbox{Cov}_{x, y}\\) : 変数 \\(x\\) と \\(y\\) の共分散（cov()）\n\n共分散の求め方、意味は適宜Google検索\n\n\\(s_x\\): 変数\\(x\\)の不偏分散の平方根（sd()）\n\\(s_y\\): 変数\\(y\\)の不偏分散の平方根（sd()）\n\n\n\n\n\ncov_xy &lt;- cov(subsidy_df$Turnout, subsidy_df$Subsidy)\ncov_xy # 投票率と補助金額の共分散\n\n[1] 121.2589\n\nsd_x &lt;- sd(subsidy_df$Turnout)\nsd_x # 投票率の不偏分散の平方根\n\n[1] 4.012424\n\nsd_y &lt;- sd(subsidy_df$Subsidy)\nsd_y # 補助金額の不偏分散の平方根\n\n[1] 75.87643\n\nr &lt;- cov_xy / (sd_x * sd_y)\nr # 相関係数\n\n[1] 0.3982905"
  },
  {
    "objectID": "slides/macro/association.html#相関係数の仮説検定",
    "href": "slides/macro/association.html#相関係数の仮説検定",
    "title": "マクロ政治データ分析実習",
    "section": "相関係数の仮説検定",
    "text": "相関係数の仮説検定\n\n帰無仮説（\\(H_0\\)）: 都道府県の投票率と補助金額には相関関係がない（\\(\\rho = 0\\)） 。\n対立仮説（\\(H_a\\)）: 都道府県の投票率と補助金額には相関関係がある（\\(\\rho \\neq 0\\)）。\n\n\\[\nt = \\frac{r_{x, y}}{\\sqrt{1 - r_{x, y}}} \\sqrt{n - 2}\n\\]\n\\(t\\)は自由度\\(n-2\\)の\\(t\\)分布に従うため、統計的仮説検定が可能（第7回参照）\n\nt_value &lt;- r / (sqrt(1 - r^2)) * sqrt(47 - 2)\nt_value\n\n[1] 2.912823\n\npt(-abs(t_value), df = 45) * 2 # p値\n\n[1] 0.005558258"
  },
  {
    "objectID": "slides/macro/association.html#cor.testの使用",
    "href": "slides/macro/association.html#cor.testの使用",
    "title": "マクロ政治データ分析実習",
    "section": "cor.test()の使用",
    "text": "cor.test()の使用\n第一引数として変数1のベクトル、第二引数として変数2のベクトルを指定（順番は逆でも可）\n\n順序変数の相関係数を計算する際は、第3引数としてmethod = \"kendall\"（Kendallの順位相関係数\\(\\tau\\)）、またはmethod = \"spearman\"（Spearmanの順位相関係数\\(\\rho\\)）を指定することを推奨\n\nデフォルトは連続変数の相関係数であるPearsonの積率相関係数（method = \"pearson\"）\n\n\n\ncor.test(subsidy_df$Turnout, subsidy_df$Subsidy)\n\n\n    Pearson's product-moment correlation\n\ndata:  subsidy_df$Turnout and subsidy_df$Subsidy\nt = 2.9128, df = 45, p-value = 0.005558\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.1254750 0.6151042\nsample estimates:\n      cor \n0.3982905"
  },
  {
    "objectID": "slides/macro/association.html#結果の解釈-1",
    "href": "slides/macro/association.html#結果の解釈-1",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\n相関係数の\\(p\\)値は約0.006であり、予め決めておいた\\(\\alpha\\)（= 0.05）より小さい（\\(p &lt; \\alpha\\)）。\n\n帰無仮説は棄却され、対立仮説が支持される。\n解釈1) 都道府県の投票率と補助金額の間には相関関係がある。\n\nこれだけだと、ちょっと物足りない。\n\n解釈2) 都道府県の投票率と補助金額の間には正の相関関係がある。つまり、投票率が高い都道府県は、政府からもらう補助金額も高い傾向がある。\n\n注意: 相関関係 \\(\\neq\\) 因果関係\n都道府県の投票率が高くなると、政府からもらう補助金額も増える \\(\\leftarrow\\) 間違った解釈!!\n相関関係は因果関係の十分条件ではない（というか、必要条件ですらない）。\n\n\n\nもし、 \\(p \\geq \\alpha\\) なら…\n\n都道府県の投票率と補助金額の間には相関関係があるとは言えない。"
  },
  {
    "objectID": "slides/macro/association.html#参考相関係数の大きさの解釈",
    "href": "slides/macro/association.html#参考相関係数の大きさの解釈",
    "title": "マクロ政治データ分析実習",
    "section": "参考）相関係数の大きさの解釈",
    "text": "参考）相関係数の大きさの解釈\nHinkle, Dennis E., William Wiersma, and Stephen G. Jurs. 2003. Applied Statistics for the Behavioral Sciences. 5th ed., Houghton Mifflin.\n\nただし、社会科学の場合、相関係数が0.3、-0.3程度であってもそこそこの強さと判断したりもする。\n\\(\\Rightarrow\\) 絶対的な基準はない\n\n\n\n\n相関係数\n説明\n\n\n\n\n\\(0.9 &lt; r \\leq 1.0\\)\nとても強い正の相関関係\n\n\n\\(0.7 &lt; r \\leq 0.9\\)\n強い正の相関関係\n\n\n\\(0.5 &lt; r \\leq 0.7\\)\n中程度の正の相関関係\n\n\n\\(0.3 &lt; r \\leq 0.5\\)\n弱い正の相関関係\n\n\n\\(0.0 \\leq r \\leq 0.3\\)\nわずかな正の相関関係\n\n\n\\(-0.3 \\leq r \\leq 0.0\\)\nわずかな負の相関関係\n\n\n\\(-0.5 \\leq r &lt; -0.3\\)\n弱い負の相関関係\n\n\n\\(-0.7 \\leq r &lt; -0.5\\)\n中程度の負の相関関係\n\n\n\\(-0.9 \\leq r &lt; -0.7\\)\n強い負の相関関係\n\n\n\\(-1.0 \\leq r &lt; -0.9\\)\nとても強い負の相関関係"
  },
  {
    "objectID": "slides/macro/association.html#問題設定-2",
    "href": "slides/macro/association.html#問題設定-2",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　ミートソース、ナポリタン、ペペロンチーノ、カルボナーラ、…。みんなが大好きなパスタだが、性別によって好きなパスタは異なるだろうか。これが分かれば気になる彼（彼女）とのデートに参考にしたい。あるいは、性別よりも年齢によって好きなパスタが異なるかも知れない。実際はどうだろう。仮説検定の際、 \\(\\alpha = 0.05\\) を用いる。\n\n2つのカテゴリー変数間の関係: 「性別」と「好きなパスタ」/「40歳以上か否か」と「好きなパスタ」\n\n\n\npasta_df &lt;- read_csv(\"Data/Pasta.csv\")\n\npasta_df\n\n# A tibble: 1,135 × 4\n      ID Female Over40 Pasta      \n   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;      \n 1     1      0      0 Naporitan  \n 2     2      1      0 Naporitan  \n 3     3      0      0 Naporitan  \n 4     4      0      0 Carbonara  \n 5     5      0      0 Naporitan  \n 6     6      0      1 MeatSauce  \n 7     7      0      1 Peperoncino\n 8     8      0      1 MeatSauce  \n 9     9      1      0 Carbonara  \n10    10      0      0 Carbonara  \n# … with 1,125 more rows\n\n\n\n\n\n\n\n\n変数\n説明\n\n\n\n\nID\n回答者番号\n\n\nFemale\n女性なら1、男性なら0\n\n\nOver40\n40歳以上なら1、未満なら0\n\n\nPasta\n好きなパスタ"
  },
  {
    "objectID": "slides/macro/association.html#クロス表を確認する",
    "href": "slides/macro/association.html#クロス表を確認する",
    "title": "マクロ政治データ分析実習",
    "section": "クロス表を確認する",
    "text": "クロス表を確認する\ntable()関数を使用（2つのベクトルオブジェクト名を指定）\n\n\n性別と好きなパスタの関係\n\n# with(pasta_df, table(Female, Pasta)) もOK\ntable(pasta_df$Female, pasta_df$Pasta)\n\n   \n    Carbonara MeatSauce Naporitan Peperoncino\n  0       139       201       145         105\n  1       139       160       153          93\n\n\n\n\n\n年齢と好きなパスタの関係\n\n# with(pasta_df, table(Over40, Pasta)) もOK\ntable(pasta_df$Over40, pasta_df$Pasta)\n\n   \n    Carbonara MeatSauce Naporitan Peperoncino\n  0       138       177       160          65\n  1       140       184       138         133\n\n\n\n\n\nどのような場合、「性別 (or 年齢)と好きなパスタには何らかの関係がある」と言えるだろうか。"
  },
  {
    "objectID": "slides/macro/association.html#カテゴリー変数間の独立と連関",
    "href": "slides/macro/association.html#カテゴリー変数間の独立と連関",
    "title": "マクロ政治データ分析実習",
    "section": "カテゴリー変数間の「独立」と「連関」",
    "text": "カテゴリー変数間の「独立」と「連関」\n「独立 (independent)」と「連関 (association)」の例\n\n\n出身地と好きな飲物が「独立」している例\n\n度数で表した場合\n\n\n\n\n\n\n\n\n\n出身\nコーヒー\nソース\n計\n\n\n\n\n大阪\n10\n10\n20\n\n\n神戸\n10\n10\n20\n\n\n計\n20\n20\n40\n\n\n\n\n\n\n\n\n割合で表した場合\n\n\n\n\n\n\n\n\n\n出身\nコーヒー\nソース\n計\n\n\n\n\n大阪\n0.25\n0.25\n0.5\n\n\n神戸\n0.25\n0.25\n0.5\n\n\n計\n0.50\n0.50\n1.0\n\n\n\n\n\n\n\n\n\n\n出身地と好きな飲物が「連関」している例\n\n度数で表した場合\n\n\n\n\n\n\n\n\n\n出身\nコーヒー\nソース\n計\n\n\n\n\n大阪\n0\n20\n20\n\n\n神戸\n20\n0\n20\n\n\n計\n20\n20\n40\n\n\n\n\n\n\n\n\n割合で表した場合\n\n\n\n\n\n\n\n\n\n出身\nコーヒー\nソース\n計\n\n\n\n\n大阪\n0.0\n0.5\n0.5\n\n\n神戸\n0.5\n0.0\n0.5\n\n\n計\n0.5\n0.5\n1.0\n\n\n\n\n\n\n\n\n\n\n独立: 同時分布が周辺分布の積と一致する場合\n連関: 独立ではない場合"
  },
  {
    "objectID": "slides/macro/association.html#同時分布と周辺分布",
    "href": "slides/macro/association.html#同時分布と周辺分布",
    "title": "マクロ政治データ分析実習",
    "section": "同時分布と周辺分布",
    "text": "同時分布と周辺分布"
  },
  {
    "objectID": "slides/macro/association.html#クロス表における独立の意味",
    "href": "slides/macro/association.html#クロス表における独立の意味",
    "title": "マクロ政治データ分析実習",
    "section": "クロス表における「独立」の意味",
    "text": "クロス表における「独立」の意味\n同時分布が周辺分布の積と一致すること\n\n前の表 (出身地と好きな飲物)の場合、どれも周辺分布は同じ\n左側表の場合、同時分布が周辺分布の積と一致\n右側表の場合、同時分布が周辺分布の積と不一致\n\n\n\n期待割合: 周辺分布の積\n\n独立であれば、このセルの値 (割合)は0.XXだろう。\n\n期待度数: 標本サイズに期待割合をかけたもの\n\n独立であれば、このセルの値 (度数)はZZだろう。\n\n\n\n\n注意： 期待度数が5未満のセルが存在する場合、これから紹介する \\(\\chi^2\\) 検定より、Fisher’s exact test（フィッシャーの正確検定）の方が望ましいと知られている。詳細は教科書p.184を参照すること。"
  },
  {
    "objectID": "slides/macro/association.html#期待度数の計算",
    "href": "slides/macro/association.html#期待度数の計算",
    "title": "マクロ政治データ分析実習",
    "section": "期待度数の計算",
    "text": "期待度数の計算\n\n\n\nStep 1: 度数のクロス表を作成する\n\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n計\n\n\n\n\n40歳未満\n138\n177\n160\n65\n540\n\n\n40歳以上\n140\n184\n138\n133\n595\n\n\n計\n278\n361\n298\n198\n1135\n\n\n\n\n\n\n\n\nStep 2: 割合に変換\n\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n計\n\n\n\n\n40歳未満\n0.122\n0.156\n0.141\n0.057\n0.476\n\n\n40歳以上\n0.123\n0.162\n0.122\n0.117\n0.524\n\n\n計\n0.245\n0.318\n0.263\n0.174\n1.000\n\n\n\n\n\n\n\n\n\n\n\nStep 3: 同時分布を周辺分布の積に置換 \\(\\rightarrow\\) 期待割合\n\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n計\n\n\n\n\n40歳未満\n0.117\n0.151\n0.125\n0.083\n0.476\n\n\n40歳以上\n0.128\n0.167\n0.138\n0.091\n0.524\n\n\n計\n0.245\n0.318\n0.263\n0.174\n1.000\n\n\n\n\n\n\n\n\nStep 4: 上の表に標本サイズ (1135)をかける \\(\\rightarrow\\) 期待度数\n\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n計\n\n\n\n\n40歳未満\n133\n171\n142\n94\n540\n\n\n40歳以上\n145\n190\n157\n103\n595\n\n\n計\n278\n361\n299\n197\n1,135"
  },
  {
    "objectID": "slides/macro/association.html#期待度数からのズレを計算",
    "href": "slides/macro/association.html#期待度数からのズレを計算",
    "title": "マクロ政治データ分析実習",
    "section": "期待度数からのズレを計算",
    "text": "期待度数からのズレを計算\nStep 1: クロス表の値から期待度数の値を引く (周辺分布のセルは不要)。\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n\n\n\n\n40歳未満\n138 - 133 = 5\n177 - 171 = 6\n160 - 142 = 18\n65 - 94 = -29\n\n\n40歳以上\n140 - 145 = -5\n184 - 190 = -6\n138 - 157 = -19\n133 - 103 = 30\n\n\n\n\n\n\n\n\nStep 2: ズレを2乗し、期待度数で割る。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n年齢\nカルボナーラ\nミートソース\nナポリタン\nペペロンチーノ\n\n\n\n\n40歳未満\n\n52 / 133 = 0.19\n\n\n62 / 171 = 0.21\n\n\n182 / 142 = 2.28\n\n\n-292 / 94 = 8.95\n\n\n\n40歳以上\n\n-52 / 145 = 0.17\n\n\n-62 / 190 = 0.19\n\n\n-192 / 157 = 2.30\n\n\n302 / 103 = 8.74\n\n\n\n\n\n\n\n\n\nStep 3: セルの値の合計を計算する\n\n0.19 + 0.17 + 0.21 + 0.19 + 2.28 + 2.30 + 8.95 + 8.74 \\(\\simeq\\) 23.03　\\(\\leftarrow\\)　 \\(\\chi^2\\) 統計量 (検定統計量)\n小数点を丸めず、厳密に計算すると約22.51549"
  },
  {
    "objectID": "slides/macro/association.html#chi2統計量",
    "href": "slides/macro/association.html#chi2統計量",
    "title": "マクロ政治データ分析実習",
    "section": "\\(\\chi^2\\)統計量",
    "text": "\\(\\chi^2\\)統計量\n各セルの期待度数からのズレを二乗し、期待度数で割った値の和 \\(\\rightarrow\\) \\(\\chi^2\\) 統計量\n\n「カイ二乗」、「カイ自乗」、「カイ・スクェアード (chi squared)」と読む\n\\(\\chi^2\\) 統計量は \\(\\chi^2\\) 分布と呼ばれる確率分布に従う\n\n与えられた表 ( \\(i\\) 行 \\(\\times\\) \\(j\\) 列)と、周辺分布、標本サイズ ( \\(n\\) ) におけるあらゆる可能性から計算された \\(\\chi^2\\) 統計量でヒストグラムを描くと 自由度 \\((i-1)(j-1)\\) の \\(\\chi^2\\) 分布の形をする。\n\n\n\\(\\chi^2\\)分布の特徴\n\n下限が0、上限が \\(\\infty\\) の非対称の分布\n\n\\(\\chi^2\\) は常に0以上であるため、対立仮説は \\(\\chi^2 \\neq 0\\) でなく、 \\(\\chi^2 &gt; 0\\)\n\n自由度によって分布の形が変わる\n\n独立性の検定における \\(\\chi^2\\) 分布の自由度: (行数 - 1) \\(\\times\\) (列数 - 1)\n2行4列表の場合、 \\((2 - 1) \\times (4 - 1) = 1 \\times 3 = 3\\)\n\n2つの変数が独立の場合、 \\(\\chi^2 = 0\\) であり、 \\(\\chi^2\\)が大きいほど2つの変数は連関する。\n\n\\(\\chi^2\\) がいくつ以上なら、独立でないと言えるか \\(\\rightarrow\\) 臨界値"
  },
  {
    "objectID": "slides/macro/association.html#chi2分布の例",
    "href": "slides/macro/association.html#chi2分布の例",
    "title": "マクロ政治データ分析実習",
    "section": "\\(\\chi^2\\)分布の例",
    "text": "\\(\\chi^2\\)分布の例"
  },
  {
    "objectID": "slides/macro/association.html#chi2分布の臨界値-自由度3-alpha-0.05",
    "href": "slides/macro/association.html#chi2分布の臨界値-自由度3-alpha-0.05",
    "title": "マクロ政治データ分析実習",
    "section": "\\(\\chi^2\\)分布の臨界値 (自由度3, \\(\\alpha = 0.05\\))",
    "text": "\\(\\chi^2\\)分布の臨界値 (自由度3, \\(\\alpha = 0.05\\))\n臨界値はqchisq()で計算可能\n\nqchisq(0.95, df = 3) # 0.95は「1 - 有意水準」、dfは自由度\n\n[1] 7.814728"
  },
  {
    "objectID": "slides/macro/association.html#chisq.test関数の使用",
    "href": "slides/macro/association.html#chisq.test関数の使用",
    "title": "マクロ政治データ分析実習",
    "section": "chisq.test()関数の使用",
    "text": "chisq.test()関数の使用\n\n\n性別と好きなパスタの関係\n\ntable(pasta_df$Female, pasta_df$Pasta) %&gt;%\n  chisq.test()\n\n\n    Pearson's Chi-squared test\n\ndata:  .\nX-squared = 3.8204, df = 3, p-value = 0.2815\n\n# p値の計算は以下のようなやり方でもOK\n1 - pchisq(3.820412, df = 3)\n\n[1] 0.2815208\n\n\n\n\n\n年齢と好きなパスタの関係\n\ntable(pasta_df$Over40, pasta_df$Pasta) %&gt;%\n  chisq.test() \n\n\n    Pearson's Chi-squared test\n\ndata:  .\nX-squared = 22.515, df = 3, p-value = 5.095e-05\n\n# p値の計算は以下のようなやり方でもOK\n1 - pchisq(22.51549, df = 3)\n\n[1] 5.095027e-05\n\n\n\n5.095e-05は「 \\(5.095 \\times 10^{-5}\\) 」の意味\n\n= 0.00005095"
  },
  {
    "objectID": "slides/macro/association.html#結果の解釈-2",
    "href": "slides/macro/association.html#結果の解釈-2",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\n\n\n性別と好きなパスタの関係\n\n\\(H_0\\): 性別と好きなパスタの間には関係がない（\\(\\chi^2 = 0\\)）。\n\\(H_a\\): 性別と好きなパスタの間には関係がある（\\(\\chi^2 &gt; 0\\)）。\n結果: \\(p \\geq \\alpha\\) により、帰無仮説は受容される。\n\n性別と好きなパスタの間には関係があるとは言えない。\n性別と好きなパスタの間に違いがあるとは言えない。\n\n\n\n\n\n年齢と好きなパスタの関係\n\n\\(H_0\\): 年齢と好きなパスタの間には関係がない（\\(\\chi^2 = 0\\)）。\n\\(H_a\\): 年齢と好きなパスタの間には関係がある（\\(\\chi^2 &gt; 0\\)）。\n結果: \\(p &lt; \\alpha\\)により、帰無仮説は棄却される。\n\n年齢と好きなパスタの間には有意水準5%で (何らかの)関係がある。\n年齢と好きなパスタの間には有意水準5%で (何らかの)違いがある。"
  },
  {
    "objectID": "slides/macro/association.html#解釈の際の注意点",
    "href": "slides/macro/association.html#解釈の際の注意点",
    "title": "マクロ政治データ分析実習",
    "section": "解釈の際の注意点",
    "text": "解釈の際の注意点\n独立性の検定は2つのカテゴリ変数が「独立」しているか、「連関」しているかを検定するものであり、変数間の具体的な関係を示すものではない。\n\n性別とパスタの例\n\n帰無仮説が棄却されなかったため、「性別と好きなパスタは連関しているとは言えない」、または「性別と好きなパスタの間には何らかの関係があるとは言えない」\n「性別と好きなパスタは関係がない」　\\(\\leftarrow\\)　間違い!\n\n年齢とパスタの例\n\n帰無仮説が棄却されたため、「年齢と好きなパスタは連関している」、または「年齢と好きなパスタの間には何らかの関係がある」\nその「何らかの関係」とは?　\\(\\leftarrow\\)　分析する側の解釈が必要\n\nズレが大きいセルに注目（たとえば、ペペロンチーノとナポリタン）\n例) 若年層（40歳未満）の方が高年層（40歳以上）に比べペペロンチーノを好み、高年層は若年層にくらべナポリタンを好む。一方、ミートソースとカルボナーラの場合、年齢と好みの違いは見られない。"
  },
  {
    "objectID": "slides/macro/association.html#課題について",
    "href": "slides/macro/association.html#課題について",
    "title": "マクロ政治データ分析実習",
    "section": "課題について",
    "text": "課題について\n\n詳細はサポートページを確認\n\nデータハンドリング\n\n.csvファイルの読み込み（read_csv()）\n列の抽出（select()）と行の抽出（filter()）\n列の操作（mutate()）\n変数のfactor化（factor()）\n\n記述統計（{summarytools}のdescr()）\n平均値の差の検定（\\(t\\)検定）\n\nグループごとの平均値（group_by()とsummarise()）\n\n相関分析\n\n散布図の作成（{ggplot2}パッケージ）\n\n独立性の検定（\\(\\chi^2\\)検定）\n\n提出期限: 11月23日（水）の23時59分\n\n遅れた場合、宋に連絡は不要（期限の延長は絶対ない）\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "materials/micro/visualization2.html",
    "href": "materials/micro/visualization2.html",
    "title": "第13回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization2.html#スライド",
    "href": "materials/micro/visualization2.html#スライド",
    "title": "第13回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization2.html#グラフ作成の手順",
    "href": "materials/micro/visualization2.html#グラフ作成の手順",
    "title": "第13回講義資料",
    "section": "グラフ作成の手順",
    "text": "グラフ作成の手順\n　{ggplot2}を用いた作図は以下の手順で行われる。\n\n作成したいグラフを決める\n作成したいグラフの完成図を想像する or 描いてみる\nグラフ上の要素（点、線、面）が持つ情報を考える\n3の情報が一つの変数（列）と対応するような整然データを作成する\n{ggplot2}で作図\n図のカスタマイズ\n図の保存\n\n　今回は第9回の実習用データ（countries.csv）を使用する。{tidyverse}パッケージを読み込んだ後、read_csv()関数でデータを読み込む。\n\n\n\nCode 01\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")"
  },
  {
    "objectID": "materials/micro/visualization2.html#棒グラフ",
    "href": "materials/micro/visualization2.html#棒グラフ",
    "title": "第13回講義資料",
    "section": "棒グラフ",
    "text": "棒グラフ\n　まずは、棒グラフについて解説する。ここに紙と鉛筆があるとし、棒グラフを描くとしよう。棒グラフは適当なもので良い。棒グラフには通常、2つ以上の棒が並んでいる。それぞれの棒から我々は何が分かるだろうか。\n\n\n\n\n\n\n\n\n\n　この棒から分かるのは「ある人の成績」である。成績は棒の高さで分かり、それが誰の成績なのかは棒の横軸上の位置から分かる。つまり、棒グラフには棒の横軸上の位置、高さといった2つの次元で構成され、それぞれ人と成績に対応する。この位置と高さは棒グラフを作成する際に必要な最低限の情報である。むろん、以下の 図 1 (b) のように位置を縦軸上の位置に、人間開発指数の平均値を棒の長さとして定義することできる。いずれにせよ、以下のような棒グラフを作成するためには「大陸」と「人間開発指数の平均値」といった2つの変数が必要だ。\n\n\n\n\n\n\n\n(a) xが大陸、yが人間開発指数\n\n\n\n\n\n\n\n(b) yが大陸、xが人間開発指数\n\n\n\n\n図 1: 2つの棒グラフ\n\n\n\n棒グラフの作成\n　それではデータを作成してみよう。{dplyr}を使用し、大陸 (Continent)ごとの人間開発指数 (HDI_2018)の平均値を計算し、df2という名で格納しておく。\n\n\n\nCode 02\n\ndf2 &lt;- df |&gt;\n   group_by(Continent) |&gt;\n   summarise(HDI = mean(HDI_2018, na.rm = TRUE))\n\ndf2\n\n\n# A tibble: 5 × 2\n  Continent   HDI\n  &lt;chr&gt;     &lt;dbl&gt;\n1 Africa    0.553\n2 America   0.742\n3 Asia      0.723\n4 Europe    0.861\n5 Oceania   0.782\n\n\n　棒グラフに必要な2つの変数が揃った。ただし、データがこの2つの変数のみで構成される必要はない。含まれていれば問題ない。それでは作図に移ろう。棒グラフを作成するときに使用する幾何オブジェクトgeom_bar()である。また、aes()内に指定するマッピングは棒の横軸上の位置を意味するxと棒の高さを意味するyである。そして、棒の横軸上の位置は大陸 (Continent)、棒の高さは人間開発指数の平均値 (HDI)なので、マッピングはx = Continent, y = HDIとなる。もし、図 1 (b) のような図を作成するなら、xとyを逆にすれば良い。最後に、geom_bar()内、かつaes()の外にstat = \"identity\"と描く。stat引数は初心者には難しい引数なので、ここでは説明を割愛する。\n　それでは図を作成しbar_plot1という名のオブジェクトとして格納しておこう。格納された図を出力する場合はオブジェクト名のみ入力すれば良い。\n\n\n\nCode 03\n\nbar_plot1 &lt;- df2 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Continent, y = HDI), stat = \"identity\")\n\nbar_plot1\n\n\n\n\n\n\n\n\n\n　もし、論文・レポートの使用言語が日本語であるなら図表も日本語にする必要がある。bar_plot1を日本語にする場合、修正が必要な箇所は大陸名とそれぞれの軸のタイトルである。まず、df2のContinent列を日本語にリコーディングし、Continent_Jという名の列として追加する。\n\n\n\nCode 04\n\ndf2 &lt;- df2 |&gt;\n   mutate(Continent_J = case_when(Continent == \"Asia\"    ~ \"アジア\",\n                                  Continent == \"Africa\"  ~ \"アフリカ\",\n                                  Continent == \"America\" ~ \"アメリカ\",\n                                  Continent == \"Europe\"  ~ \"ヨーロッパ\",\n                                  TRUE                   ~ \"オセアニア\"))\n\ndf2\n\n\n# A tibble: 5 × 3\n  Continent   HDI Continent_J\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      \n1 Africa    0.553 アフリカ   \n2 America   0.742 アメリカ   \n3 Asia      0.723 アジア     \n4 Europe    0.861 ヨーロッパ \n5 Oceania   0.782 オセアニア \n\n\n　作図の際、Continentの代わりにContinent_Jを使用する。また、X軸とY軸のタイトルを修正するためにlabs()レイヤーを追加し、軸のタイトルを指定する。\n\n\n\nCode 05\n\ndf2 |&gt;\n   ggplot() +\n   geom_bar(aes(x = Continent_J, y = HDI), stat = \"identity\") +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\")\n\n\n\n\n\n\n\n\n\n　JDCat分析ツールを使用する場合、以上のような図が得られるはずである。しかし、自分のPCにインストールしたR/RStudioを使用する場合、文字化けは生じる可能性がある。この場合、theme_*()レイヤーを追加し、引数としてbase_family = \"日本語フォント\"を指定する必要がある。theme_*()はtheme_で始まる関数の総称であり、theme_gray()（{ggplot2}のデフォルトテーマ）、theme_bw()、theme_minimal()などがある。日本語フォントは好きなものを使えば良いが、macOSの場合は\"HiraginoSans-W3\"、Windowsの場合は\"Yu Gothic\"が無難だろう。以下のコードはmacOSで文字化けが生じた場合のコードの改善例である。\n\n\n\nCode 06\n\ndf2 |&gt;\n   ggplot() +\n   geom_bar(aes(x = Continent_J, y = HDI), stat = \"identity\") +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\") +\n   theme_gray(base_family = \"HiraginoSans-W3\")\n\n\n　先ほどのグラフを見ると、大陸がアジア、アフリカ、アメリカ、オセアニア、ヨーロッパ順となっている。これをアルファベット順に並べ替える、つまり、アフリカ、アメリカ、アジア、ヨーロッパ、オセアニアの順番にするにはどうすれば良いだろうか。答えはContinet_J列をfactor化し、アフリカ、アメリカ、アジア、ヨーロッパ、オセアニア順にすることだ。df2をggplot()関数に渡す前にmutate()を入れ、そこでContinent_J列をfactor化すれば良い。\n\n\n\nCode 07\n\ndf2 |&gt;\n   mutate(Continent_J = factor(Continent_J, \n                               levels = c(\"アフリカ\", \"アメリカ\", \"アジア\", \n                                          \"ヨーロッパ\", \"オセアニア\"))) |&gt; \n   ggplot() +\n   geom_bar(aes(x = Continent_J, y = HDI), stat = \"identity\") +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\") +\n   theme_bw() # Black and Whiteテーマも使ってみよう\n\n\n\n\n\n\n\n\n\n　ただし、df2を見ると表の順番はアルファベット順になっている。\n\n\n\nCode 08\n\ndf2\n\n\n# A tibble: 5 × 3\n  Continent   HDI Continent_J\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;      \n1 Africa    0.553 アフリカ   \n2 America   0.742 アメリカ   \n3 Asia      0.723 アジア     \n4 Europe    0.861 ヨーロッパ \n5 Oceania   0.782 オセアニア \n\n\n　このように表で表示されている順番は作図の際の順番は一致しない場合がある。この順番を調整するためには、当該変数を予めfactor化しておく必要がある。\n　ここで一つ便利な関数を紹介しよう。それはfct_inorder()関数だ。この関数は{forcats}パッケージに含まれている関数であり、{tidyverse}を読み込む際、一緒に読み込まれるので{tidyverse}を読み込んだら別途読み込む必要はない。このfct_inorder()は()内の変数をfactor化し、各要素順番を表で登場した順番にしてくれる関数だ。現在、df2はアルファベット順になっているので、この表の順番通りにContinent_Jの要素の順番が固定される。\n\n\n\nCode 09\n\ndf2 |&gt;\n   mutate(Continent_J = fct_inorder(Continent_J)) |&gt;\n   ggplot() +\n   geom_bar(aes(x = Continent_J, y = HDI), \n            stat = \"identity\") +\n   labs(x = \"大陸\", y = \"人間開発指数の平均値\")\n\n\n\n\n\n\n\n\n\n\n\n次元の追加\n　通常の棒グラフはX軸とY軸のみで構成される2次元グラフである。棒グラフ上の棒には「ある大陸 (X軸) のHDIの平均値 (Y軸)」といった2つの情報が含まれている。つまり、一部の例外を除き、グラフの次元数は情報量を意味し、これは{ggplot2}の幾何オブジェクト内のaes()内で指定する引数の数でもある。以下では次元を増やす方法について紹介する。\n　まず、各政治体制（Polity_Type）に属する国家数の棒グラフを作ってみよう。作図に必要なdata.frameをdf3として用意しておく。\n\n\n\nCode 10\n\ndf3 &lt;- df |&gt;\n   drop_na(Polity_Type) |&gt;\n   mutate(Polity_Type = factor(Polity_Type,\n                               levels = c(\"Autocracy\", \"Closed Anocracy\",\n                                          \"Open Anocracy\", \"Democracy\",\n                                          \"Full Democracy\"))) |&gt;\n   group_by(Polity_Type) |&gt;\n   summarise(N = n())\n\ndf3\n\n\n# A tibble: 5 × 2\n  Polity_Type         N\n  &lt;fct&gt;           &lt;int&gt;\n1 Autocracy          19\n2 Closed Anocracy    23\n3 Open Anocracy      20\n4 Democracy          65\n5 Full Democracy     31\n\n\n　棒グラフの作り方はこれまでのやり方と同じである。\n\n\n\nCode 11\n\ndf3 |&gt;\n   ggplot() +\n   geom_bar(aes(x = Polity_Type, y = N), stat = \"identity\")\n\n\n\n\n\n\n\n\n\n　この棒グラフが持つ情報は2つである。まず、xで指定した政治体制のタイプ (Polity_Type)、そしてyで指定した国家数 (N)だ。ここに更にもう一つの次元を使いすると使用。たとえば、もう一つの次元として大陸（Continent）を使いするとしよう。この場合、作図に使用するデータには大陸の変数（列）も必要だ。一方、先ほど作成したdf3には大陸の情報がない。まずは、政治体制\\(\\times\\)大陸ごとの国家数を計算し、df4として格納しておく。\n\n\n\nCode 12\n\ndf4 &lt;- df |&gt;\n   drop_na(Polity_Type) |&gt;\n   mutate(Polity_Type = factor(Polity_Type,\n                               levels = c(\"Autocracy\", \"Closed Anocracy\",\n                                          \"Open Anocracy\", \"Democracy\",\n                                          \"Full Democracy\"))) |&gt;\n   group_by(Polity_Type, Continent) |&gt;\n   summarise(N       = n(),\n             .groups = \"drop\")\n\ndf4\n\n\n# A tibble: 20 × 3\n   Polity_Type     Continent     N\n   &lt;fct&gt;           &lt;chr&gt;     &lt;int&gt;\n 1 Autocracy       Africa        3\n 2 Autocracy       Asia         14\n 3 Autocracy       Europe        2\n 4 Closed Anocracy Africa       14\n 5 Closed Anocracy America       2\n 6 Closed Anocracy Asia          6\n 7 Closed Anocracy Europe        1\n 8 Open Anocracy   Africa       12\n 9 Open Anocracy   America       4\n10 Open Anocracy   Europe        2\n11 Open Anocracy   Oceania       2\n12 Democracy       Africa       18\n13 Democracy       America      16\n14 Democracy       Asia         15\n15 Democracy       Europe       16\n16 Full Democracy  Africa        1\n17 Full Democracy  America       5\n18 Full Democracy  Asia          3\n19 Full Democracy  Europe       20\n20 Full Democracy  Oceania       2\n\n\n　次元を追加するときにはaes()内に引数を追加すれば良い。棒グラフの棒に更に情報を持たせるのであれば、どうすれば良いだろうか。棒は点・線・面のうち、面に該当する。面であるならば、面の色（fill）、枠線の色（color）、枠線のタイプ（linetype）、透明度（alpha）などがある。xとyのみと構成された多くの図において、もう一つの次元を追加するのであれば、定番は色である。棒グラフの場合、面の色と枠線の色をそれぞれ指定することができるが、ここでは面の色（fill）にマッピングする。やり方はaes()内にfill = Continentを追加するだけだ。\n\n\n\nCode 13\n\ndf4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Polity_Type, y = N, fill = Continent), stat = \"identity\")\n\n\n\n\n\n\n\n\n\n　このような図を想像した人もいれば、少し違うと思う人もいるだろう。沖積されている形の棒グラフは世の中でそこそこ見るものであるが、実は分かりにくい図でもある。たとえば、民主主義（Democracy）の国の中で最も国家数が多い大陸はどこだろうか。この図ではどの大陸もだいたい同じ国家数にも見える。したがって、色分けした棒グラフは通所湯、棒の位置をずらす必要がある。ずらす方法はgeom_bar()内にposition = \"dodge\"を指定するだけだ。注意する点はaes()の中でなく、外に指定することだ。\n\n\n\nCode 14\n\ndf4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Polity_Type, y = N, fill = Continent), stat = \"identity\",\n           position = \"dodge\")\n\n\n\n\n\n\n\n\n\n　あとは図を少しずつ調整してだけであるが、ここでは凡例の位置を変更する方法について紹介する。グラフ全体の見た目などを細かく調整するレイヤーはtheme()である。このtheme()内にlegend.position = \"bottom\"を指定すると、凡例が図の下段へ移動する。デフォルトは\"right\"であり、 　\"top\"は上段、\"none\"は削除を意味する。\"left\"も可能だが、あまり使われない。このtheme()はかなり奥深く、コンソール上で?themeを入力してみれば分かるだろうが、引数の数も数十種類以上だ。これをすべて覚えて使う人は少数だろう。多分、これは{ggplot2}の開発者にとっても同じはずである。必要に応じてヘルプやインターネット検索を活用すれば良い。\n\n\n\nCode 15\n\ndf4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Polity_Type, y = N, fill = Continent), stat = \"identity\",\n           position = \"dodge\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　続いて、全く同じ情報を持つグラフでありながら、だいぶ印象が変わるものを紹介しよう。これまで作成した棒グラフは「ある政治体制内の大陸の分布」を知ることに特化している。つまり、「権威主義国家内にはアフリカがXカ国、アジアが…」といったメッセージを伝えるに効果的である。一方、「ある大陸内の政治体制の分布」を見るにはどうすれば良いだろうか。つまり、「アフリカには権威主義がXカ国、民主主義が…」のメッセージを伝えることである。いずれも必要な変数は同じはずである。異なるのはマッピングだけである。たとえば、xとfillを交換してみよう。厳密に言えば棒を並び替えただけなのに、かなり印象が変わってくる。可視化は「伝えたいメッセージを効果的に伝える」ことが重要であり、そのためには試行錯誤が必要だろう。\n\n\n\nCode 16\n\ndf4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Continent, y = N, fill = Polity_Type), stat = \"identity\",\n           position = \"dodge\", color = \"white\") +\n  theme_bw() +\n  labs(x = \"Continent\", y = \"Number of Countries\", fill = \"Polity Type\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　最後に次元を追加するもう一つの方法として、ファセット（facet）分割について紹介する。これは色分けを出来る限り抑えたい時に効果的である。特に白黒印刷の場合、識別可能な色は白・グレー・黒の3つくらいだろう。しかし、色の種類は増えると、白黒印刷では識別するのが難しくなる。この場合、プロットの面（=ファセット）を分割することで色の増加が抑制できる。使い方はfacet_wrap(~ 分割の基準となる変数名)のレイヤーを入れるだけだ。df4を使い、政治体制ごとの国家数の棒グラフを作成する。ただし、それぞれの棒グラフは大陸ごとに独立したファセットを持つとする。\n\n\n\nCode 17\n\nbar_plot2 &lt;- df4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = Polity_Type, y = N), stat = \"identity\") +\n  facet_wrap(~ Continent, ncol = 5) # ncol/nrowで列/行数の指定が可能\n\nbar_plot2\n\n\n\n\n\n\n\n\n\n　ただし、このbar_plot2は値のラベルが重なっており、非常に読みにくい。この場合、ラベルを回転すると読みやすくなるだろう。横軸の目盛りラベルを修正するためにはtheme()レイヤーを追加し、axis.text.xを指定する必要がある。しかし、theme()レイヤーの中身はかなり複雑であるため、これを覚える必要はない。必要に応じてググれば良いだろう。今後、ラベルの回転が必要な場合は以下のコードからangleだけを修正すれば良い。以下の例は35度回転の例である。\n\n\n\nCode 18\n\nbar_plot3 &lt;- bar_plot2 +\n   labs(x = \"Number of Countries\", y = \"Poltiy Type\") + # ラベル修正\n   theme_minimal() + # テーマを変えてみよう\n   theme(axis.text.x        = element_text(angle = 35, vjust = 1, hjust = 1), # 35度回転\n         panel.grid.major.x = element_blank()) # 横軸のグリッドを削除するおまじない\n\nbar_plot3\n\n\n\n\n\n\n\n\n\n　もう一つの方法としてマッピング交換が考えられる。今の横軸を縦軸にすれば、長い文字列でも問題なく出力できるだろう。\n\n\n\nCode 19\n\nbar_plot4 &lt;- df4 |&gt;\n  ggplot() +\n  geom_bar(aes(x = N, y = Polity_Type), stat = \"identity\") +\n  labs(x = \"Number of Countries\", y = \"Poltiy Type\") +\n  facet_wrap(~ Continent, ncol = 5) + # 5列のファセット分割\n  theme_minimal(base_size = 12) +     # フォントサイズの調整も可能\n  theme(panel.grid.major.y = element_blank()) # 縦軸のグリッドを削除するおまじない\n   \nbar_plot4"
  },
  {
    "objectID": "materials/micro/visualization2.html#図の保存",
    "href": "materials/micro/visualization2.html#図の保存",
    "title": "第13回講義資料",
    "section": "図の保存",
    "text": "図の保存\n　作成した図をファイルとして保存する時には、まずベクトルとビットマップ、どのフォーマットで保存するかを考える必要がある。ベクトル画像（ 図 2 (a) ）の拡張子は.pdf（推奨）、.svgなどがあり、これらのファイルは図をいくら拡大しても図が綺麗なままだという利点がある。また、複雑な図（例えば、点が数百万個ある散布図など）でないなら、ファイルサイズも比較的小さい。ビットマップ画像（ 図 2 (b) ）の拡張子は.png（推奨）、.bmp、.jpg（= .jpeg）などがあり、図がいくら複雑でもファイルサイズが安定するといったメリットがある。しかし、拡大すると図がカクカクする場合がある。高い解像度（DPI）にすると、拡大しても綺麗だが、ファイルサイズに注意する必要がある。基本的にベクトル画像を推奨するが、使用するワードソフトによってはPDFの図の埋め込みができない場合もある。ビートマップ画像はどのソフトでも確実に埋め込める。\n\n\n\n\n\n\n\n(a) ベクトル画像\n\n\n\n\n \n\n\n\n\n\n(b) ビットマップ画像\n\n\n\n\n図 2: ベクトル画像とビットマップ画像\n\n\n　ここではbar_plot3を高解像度の.png形式で保存する方法について解説する。{ggplot2}で作図した図の保存にはggsave()関数が便利だ。たとえば、作業フォルダー内のFigsフォルダにFigure1.pngという名でbar_plot3を保存するとしよう。ただし、予め作業フォルダー内にFigsフォルダーを作成しておく必要がある。図のサイズは幅6インチ、高さ3インチとし、解像度（DPI）は400とする。解像度が高いほどファイルサイズは大きくなるため、適切な解像度を選ぶのが重要だ。モニター画面に表示するだけなら最低150、印刷目的なら最低300はほしい。また、図の保存時、文字化けを防いでくれる{ragg}パッケージがあるが、これも予めインストールしておこう（JDCat分析ツールでは導入済み）。ggsave()の使い方の例は以下の通りである。\n\n\n\nCode 20\n\nggsave(filename = \"Figs/Figure1.png\", # 保存先とファイル名\n       plot     = bar_plot3,          # 保存する図のオブジェクト名\n       width    = 6,                  # 図の幅 (インチ)\n       height   = 3,                  # 図の高さ (インチ)\n       dpi      = 400,                # 解像度\n       device   = ragg::agg_png)      # 文字化け防止"
  },
  {
    "objectID": "materials/micro/visualization2.html#ヒストグラム",
    "href": "materials/micro/visualization2.html#ヒストグラム",
    "title": "第13回講義資料",
    "section": "ヒストグラム",
    "text": "ヒストグラム\n\n変数の分布\n　ヒストグラムは連続変数（=間隔尺度と比率尺度）の分布を確認する普遍的な可視化方法です。実習用データの例だと、大陸（Continent）列は離散変数（=名目尺度と順序尺度）であり、名目変数の分布は「アジアはXXカ国、アフリカはXXカ国、…」といった形で示され、これまで見てきた棒グラフで可視化する事ができる。一方、変数が連続変数の場合はヒストグラムと箱ひげ図が頻繁に使われる。\n　以上の例はあくまでも一つの変数の分布を確認するものである。変数が2つになると、分布よりも2つの変数間の関係を確認することとなる。これは次回に紹介する散布図（連続変数\\(\\times\\)連続変数）と折れ線グラフ（順序変数\\(\\times\\)連続変数）で可視化することができる1。\n\n\nヒストグラムの作成\n　ヒストグラムの見た目は棒グラフと非常に似ている。棒グラフとヒストグラムの違いは棒と棒の間に隙間があるかないかである。棒グラフの場合は隙間がある。横軸が大陸の棒グラフの場合、アフリカとアジアの間の値というものは存在しない。なぜなら、名目尺度はそもそも数字でないか、数値であってもその数値の値に意味がないからだ。また、順序変数の場合、1位と2位の間の値は存在しない。つまり、1.5位といった順位は存在しない。一方、人間開発指数のような連続変数は0.1と0.2の間には無数の値が存在する。棒を並べるとしたら隙間なく棒を並べる必要があろう。\n\n\n\n\n\n\n\n\n\n　それでも見た目は棒グラフと非常に似ているため、それぞれの棒には棒の横軸上の位置と高さという情報が含まれている。ただし、{ggplot2}を使ったヒストグラムの作成は非常に簡単である。{ggplot2}ではgeom_histogram()を使用するが、ヒストグラムを出力する変数をxにマッピングするだけで、棒の高さは自動的に計算される。つまり、yに対してマッピングを行う必要はなく、xのみで十分である。それではdf内の人間開発指数（HDI_2018）のヒストグラムを作成してみよう。\n\n\n\nCode 21\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018)) # HDI_2018のヒストグラム\n\n\n\n\n\n\n\n\n\n　ヒストグラムは連続変数の分布を素早く確認することが目的である。たとえば、分布において峰がいくつか、峰がある場合、どの辺が最も度数/密度が高いかを素早く判断できれば良いヒストグラムと言えよう。棒の数を調整する。\n　以下の3つのヒストグラムを比較してみよう。 図 3 (a) はヒストグラムが非常にギザギザしている。峰が10個くらいはありそうだ。一方、 図 3 (b) だと0.5と0.8周辺に大きな2つの峰があるように見える。最後に 図 3 (c) では0.8周辺に1つの峰が確認できる。\n\n\n\n\n\n\n\n(a) 棒の幅が狭いヒストグラム\n\n\n\n\n\n\n\n(b) 棒の幅が中程度のヒストグラム\n\n\n\n\n\n\n\n(c) 棒の幅が広いヒストグラム\n\n\n\n\n図 3: 3つのヒストグラム\n\n\n　この3つの図の中で、良い図はなんだろうか。まず、 図 3 (c) はあまりにも多くの情報が失われている。たとえば、0.5周辺の峰という情報がない。一方、 図 3 (b) は情報が多すぎる。その意味で 図 3 (b) が適切だろう。しかし、これは作図する側の人が決めるものであり、いくつかの図を出して比較してみるのが良いだろう。以上の3つの図は、ヒストグラムの棒の数を調整したものである。棒の数はgeom_histogram()内、aes()の外にbins引数を指定することで変更することができる。たとえば、 図 3 (b) は棒が10本のヒストグラムである2。これを再現するためにはbins = 10を指定すれば良い3。ちなみに、デフォルトはbins = 30となっている。\n\n\n\nCode 22\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), bins = 10) # 棒を10本にする\n\n\n\n\n\n\n\n\n\n　棒の本数が少ないことは、棒の幅が広いことを意味する。これは棒の数でなく、棒の幅から見た目を調整することもできることを意味し、geom_histogram()内、aes()の外にbinwidth引数を指定することで調整可能である。注意点としてはbinsとbinswidthは片方のみ指定可能で両方指定することは出来ないことだ。\n\n\n\nCode 23\n\ndf |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), binwidth = 0.05) # 棒の幅を0.05にする\n\n\n\n\n\n\n\n\n\n　ヒストグラムをより見やすくするコツとして、棒の枠線を追加することも考えられる。データ・インク比の観点から見ると枠線という視覚情報が追加されるので余計なものかも知れないが、枠線を入れるかどうかは作図する側が判断すれば良い。棒の枠線はgeom_histogram()内、aes()の外にcolor引数を指定可能であり、棒の面の色が黒に近いので枠線は白（\"white\"）に指定してみよう。\n\n\n\nCode 24\n\nhist_plot1 &lt;- df |&gt;\n  ggplot() +\n  geom_histogram(aes(x = HDI_2018), binwidth = 0.05, color = \"white\") +\n  labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\")\n\nhist_plot1\n\n\n\n\n\n\n\n\n\n　最後に、横軸の目盛りを変更してみよう。今は目盛りが0.4、0.6、0.8、1.0の0.2kあん描くとなっている。この目盛りを調整するレイヤーはX軸の場合はscale_x_*()、Y軸の場合はscale_y_*()を使う。*の箇所には各軸の尺度を指定する。ヒストグラムは横軸も縦軸も連続した値であるので、scale_x_continuous()、scale_y_continuous()を使う。ここではX軸の目盛りを変更するのでscale_x_continuous()を使ってみよう。必要な引数は目盛りの位置を指定するbreaks引数、目盛りのラベルを意味するlabels引数だ。それぞれ長さ1以上のベクトルを指定すれば良いが、breaksとlabelsに使用する実引数（=ベクトル）の長さは同じ長さである必要がある。また、labelsにはcharacter型ベクトルを指定することもできる。\n　先ほど作成したhist_plot1に目盛り変更のレイヤを追加してみよう。目盛りは0.4から1.0まで0.1間隔で付け、目盛りラベルもそれぞれ対応する値を指定する。公差0.1の等差数列ベクトルなのでseq()関数が便利だろう。目盛り調整済みのヒストグラムはhist_plot2として格納、出力してみよう。\n\n\n\nCode 25\n\nhist_plot2 &lt;- hist_plot1 +\n   scale_x_continuous(breaks = seq(0.4, 1.0, by = 0.1),\n                      labels = seq(0.4, 1.0, by = 0.1))\n\nhist_plot2\n\n\n\n\n\n\n\n\n\n\n\n次元の追加\n　ヒストグラムにもう一つの次元を追加する場合、棒グラフと同じ技が使える。つまり、面の色分け、またはファセット分割である。棒グラフと異なる点は色分けよりもファセット分割の方が圧倒的に推奨される点だ。\n　まずはファセット分割から見よう。hist_plot2のヒストグラムは大陸（Continent）ごとに分ける場合、棒グラフと同様facet_wrap(~Continent)で分割できる。今回は2行3列で出力してみよう。facet_wrap()内にnrow = 2、またはncol = 3を追加するだけだ。\n\n\n\nCode 26\n\nhist_plot2 +\n   facet_wrap(~Continent, nrow = 2)\n\n\n\n\n\n\n\n\n\n　それでは色分けの例を見てみよう。棒グラフと同様、aes()内にfillを指定すれば良いが、注意すべき点としては棒グラフのようにposition = \"identity\"を追加する必要がある点だ。それではdfのOECDをリコーディング（1なら\"OECD Members\"、それ以外は\"Others\"）し、OECDの値ごとにヒストグラムの色分けをしてみよう。\n\n\n\nCode 27\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"OECD Members\", \"Others\")) |&gt;\n   ggplot() +\n   geom_histogram(aes(x = HDI_2018, fill = OECD), position = \"identity\",\n                  binwidth = 0.05, color = \"white\") +\n   labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\",\n        fill = \"\")\n\n\n\n\n\n\n\n\n\n　このヒストグラムには深刻な問題がある。それはOECD加盟国の棒が非加盟国の棒の後ろに存在するため、一部の棒が消えているということだ。これを避けるためには棒をやや透明にする必要がある。透明度の調整はalphaで引数で行う。今回は全ての棒に対して適用するのでaes()の外側にalphaを指定する。alphaが1なら不透明、0なら透明となる。今回はalpha = 0.5程度に調整してみよう。\n\n\n\nCode 28\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"OECD Members\", \"Others\")) |&gt;\n   ggplot() +\n   geom_histogram(aes(x = HDI_2018, fill = OECD), position = \"identity\",\n                  binwidth = 0.05, color = \"white\", alpha = 0.5) +\n   labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\",\n        fill = \"\")\n\n\n\n\n\n\n\n\n\n　このように非加盟国の棒の後ろに加盟国の棒が隠されていることが分かる。人によってはこのような色分けヒストグラムでも良いと思うかも知れない。しかし、色分けのヒストグラムはせいぜい2色までが限界である。もし、3色以上ならどうなるだろうか。たとえば、大陸（Continent）の値ごとに色分けをすればどうなるだろうか。\n\n\n\nCode 29\n\ndf |&gt;\n   ggplot() +\n   geom_histogram(aes(x = HDI_2018, fill = Continent), position = \"identity\",\n                  binwidth = 0.05, color = \"white\", alpha = 0.5) +\n   labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\",\n        fill = \"\")\n\n\n\n\n\n\n\n\n\n　我々はこのヒストグラムから一体どのような情報が読み取れるだろうか。\n　ちなみに、position = \"identity\"がない場合、一つのヒストグラムのうち、各大陸が占める割合を見せることができる。ただし、これも読みづらい図であることには変わりない。\n\n\n\nCode 30\n\ndf |&gt;\n   ggplot() +\n   geom_histogram(aes(x = HDI_2018, fill = Continent), \n                  binwidth = 0.05, color = \"white\") +\n   labs(x = \"Human Development Index (2018)\", y = \"Number of Countries\",\n        fill = \"\")\n\n\n\n\n\n\n\n\n\n　どうしても3つ以上のグループの分布を一つのファセットでオーバーラップしたい場合は、geom_histogram()の代わりにgeom_density()の使用を推奨する。これは密度曲線を出力する幾何オブジェクトであり、マッピングはヒストグラムと同じである。ただし、ヒストグラムではないためbinwidthやbins引数は不要であり、代わりにadjust引数を使う。デフォルトは1であるが、小さいほどギザギザの密度曲線が、大きいほど滑らかな密度曲線になる。また、縦軸が数（count）でなく、密度（density）になるため、解釈の際は注意が必要だ。\n\n\n\nCode 31\n\ndf |&gt;\n   ggplot() +\n   geom_density(aes(x = HDI_2018, fill = Continent), \n                alpha = 0.5, adjust = 0.8) +\n   labs(x = \"Human Development Index (2018)\", y = \"Density\", fill = \"\")"
  },
  {
    "objectID": "materials/micro/visualization2.html#教科書",
    "href": "materials/micro/visualization2.html#教科書",
    "title": "第13回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「可視化[基礎]」\n「可視化[応用]」"
  },
  {
    "objectID": "materials/micro/r.html",
    "href": "materials/micro/r.html",
    "title": "第2回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/r.html#スライド",
    "href": "materials/micro/r.html#スライド",
    "title": "第2回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/programming.html",
    "href": "materials/micro/programming.html",
    "title": "第4回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/programming.html#スライド",
    "href": "materials/micro/programming.html#スライド",
    "title": "第4回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling3.html",
    "href": "materials/micro/handling3.html",
    "title": "第11回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling3.html#スライド",
    "href": "materials/micro/handling3.html#スライド",
    "title": "第11回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling3.html#データの結合",
    "href": "materials/micro/handling3.html#データの結合",
    "title": "第11回講義資料",
    "section": "データの結合",
    "text": "データの結合\n　実習に使用する{tidyverse}パッケージも読み込んでおく。\n\n\n\nCode 01\n\nlibrary(tidyverse)\n\n\n\n行の結合\n　複数のdata.frameを縦に結合する場合は、bind_rows()を利用する。たとえば、以下のような2つのdata.frameがあるとする。\n\n\n\nCode 02\n\nData1 &lt;- data.frame(ID    = 1:3, \n                    Name  = c(\"Aさん\", \"Bさん\", \"Cさん\"),\n                    Score = c(77, 89, 41))\nData2 &lt;- data.frame(ID    = 4:5, \n                    Name  = c(\"Xさん\", \"Yさん\"),\n                    Score = c(98, 78))\n\n\n\n\n\n\n\nCode 03-a\n\nData1\n\n\n  ID  Name Score\n1  1 Aさん    77\n2  2 Bさん    89\n3  3 Cさん    41\n\n\n\n\n\n\n\n\nCode 03-b\n\nData2\n\n\n  ID  Name Score\n1  4 Xさん    98\n2  5 Yさん    78\n\n\n\n\n　2つのdata.frameは同じ変数名を共有しているため、縦に積み重ねることができる。このようにデータを縦に結合する時にはそれぞれのdata.frameの変数名が一致する必要がある。今回の例では以下の例はいずれのdata.frameもID、Name、Scoreで構成されている。ただし、ID、Name、Scoreの順番は一致しなくても良いが、上のdata.frameの順番に調整される。bind_rows()の使い方は簡単である。bind_rows()の中に結合するdata.frameのオブジェクト名を入れるだけだ。\n\n\n\nCode 04\n\nbind_rows(Data1, Data2)\n\n\n  ID  Name Score\n1  1 Aさん    77\n2  2 Bさん    89\n3  3 Cさん    41\n4  4 Xさん    98\n5  5 Yさん    78\n\n\n　このData1とData2がそれぞれ1組と2組の学生データだとしよう。結合後はどの生徒がどの組に所属しているかが分からない。結合と同時に各data.frameの識別変数を追加するためには結合するデータをlist()でまとめ、.id引数を追加する。ただし、list()の内部では以下のように\"識別変数の値\" = 結合するデータと定義する必要がある。\n\n\n\nCode 05\n\nbind_rows(list(\"1組\" = Data1, \"2組\" = Data2),\n          .id = \"Class\")\n\n\n  Class ID  Name Score\n1   1組  1 Aさん    77\n2   1組  2 Bさん    89\n3   1組  3 Cさん    41\n4   2組  4 Xさん    98\n5   2組  5 Yさん    78\n\n\n　.idで指定した名前の変数が第1列として追加され、それぞれどの組のデータであるかが分かるようになる。\n\n\n列の結合\n一方、データを横に結合することはいくつかのバリエーションがある。これらの作業は*_join()関数を使用する。ここで重要なのは結合に使う識別用の変数（キー変数）が必要ということであり、以下の例ではCityはキー変数である。\n\n\n\nCode 06\n\nData1 &lt;- data.frame(City  = c(\"Tokyo\", \"Osaka\", \"Kochi\"),\n                    Pop   = c(927, 148, 76),\n                    Area  = c(2194, 828, 7104))\n\nData2 &lt;- data.frame(City  = c(\"Kochi\", \"Osaka\", \"Tokyo\"),\n                    Food  = c(\"Katsuo\", \"Takoyaki\", \"Ramen\"))\n\n\n\n\n\n\n\nCode 07-a\n\nData1\n\n\n   City Pop Area\n1 Tokyo 927 2194\n2 Osaka 148  828\n3 Kochi  76 7104\n\n\n\n\n\n\n\n\nCode 07-b\n\nData2\n\n\n   City     Food\n1 Kochi   Katsuo\n2 Osaka Takoyaki\n3 Tokyo    Ramen\n\n\n\n\n　この2つのデータを結合する時にはleft_join()、right_join()、inner_join()、full_join()などを使用するが、いずれも使い方は同じである。まず、結合する2つのdata.frameのオブジェクト名を入力し、by = \"キー変数名\"の引数を追加する。\n\n\n\nCode 08\n\nleft_join(Data1, Data2, by = \"City\")\n\n\n   City Pop Area     Food\n1 Tokyo 927 2194    Ramen\n2 Osaka 148  828 Takoyaki\n3 Kochi  76 7104   Katsuo\n\n\n　ただし、キー変数は両データに含まれているが、一致しないケースがある。たとえば、以下の例ではCityとToshiがキー変数である。\n\n\n\nCode 09\n\nData1 &lt;- data.frame(City  = c(\"Tokyo\", \"Osaka\", \"Kochi\"),\n                    Pop   = c(927, 148, 76),\n                    Area  = c(2194, 828, 7104))\n\nData2 &lt;- data.frame(Toshi    = c(\"Kochi\", \"Osaka\", \"Tokyo\"),\n                    Tabemono = c(\"Katsuo\", \"Takoyaki\", \"Ramen\"))\n\n\n\n\n\n\n\nCode 10-a\n\nData1\n\n\n   City Pop Area\n1 Tokyo 927 2194\n2 Osaka 148  828\n3 Kochi  76 7104\n\n\n\n\n\n\n\n\nCode 10-b\n\nData2\n\n\n  Toshi Tabemono\n1 Kochi   Katsuo\n2 Osaka Takoyaki\n3 Tokyo    Ramen\n\n\n\n\n　この場合、by = c(\"データ1のキー変数名\" = \"データ2のキー変数名\")と指定する必要がある。\n\n\n\nCode 11\n\nleft_join(Data1, Data2, by = c(\"City\" = \"Toshi\"))\n\n\n   City Pop Area Tabemono\n1 Tokyo 927 2194    Ramen\n2 Osaka 148  828 Takoyaki\n3 Kochi  76 7104   Katsuo\n\n\n　それでは4種類の*_join()関数についてそれぞれの特徴を見てみよう。\n　まず、left_join()はデータ1を温存させる関数である。たとえば、上の例だと、データ1には東京、大阪、高知が、データ2には高知、大阪、京都のデータが含まれている。大阪と高知は問題なく結合できるが、余っているデータ1の東京、データ2の京都はどうなるだろうか。left_join()を使う場合、データ1の東京が温存される。ただし、データ2に東京のデータがないため、東京のTabemonoは欠損値（NA）で埋められる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　一方、right_join()はデータ2が温存される。つまり、京都の行が残り、京都のPopとAreaは欠損値となる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　inner_join()は両データに同時に存在する行のみが結合対象となるため、大阪と高知の行のみが結合される。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　最後に、full_join()はデータ1とデータ2すべてを温存させ、欠損しているセルは欠損値（NA）で埋められる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nそれでは以下のデータで実際に比較してみよう。\n\n\n\nCode 12\n\ndf1 &lt;- tibble(Pref  = c(\"東京\", \"大阪\", \"京都\"),\n              Score = c(3.5, 4, 4.2))\ndf2 &lt;- tibble(Pref  = c(\"東京\", \"大阪\", \"高知\"),\n              N     = c(3220, 1325, 111))\n\n\n\n\n\n\n\nCode 13-a\n\ndf1\n\n\n# A tibble: 3 × 2\n  Pref  Score\n  &lt;chr&gt; &lt;dbl&gt;\n1 東京    3.5\n2 大阪    4  \n3 京都    4.2\n\n\n\n\n\n\n\n\nCode 13-b\n\ndf2\n\n\n# A tibble: 3 × 2\n  Pref      N\n  &lt;chr&gt; &lt;dbl&gt;\n1 東京   3220\n2 大阪   1325\n3 高知    111\n\n\n\n\n　それぞれの*_join()関数の動きを実際に確認してみよう。\n\n\n\n\n\nCode 14-a\n\nleft_join(df1, df2, by = \"Pref\")\n\n\n# A tibble: 3 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 京都    4.2    NA\n\n\n\n\n\n\n\n\nCode 14-b\n\nright_join(df1, df2, by = \"Pref\")\n\n\n# A tibble: 3 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 高知   NA     111\n\n\n\n\n\n\n\n\n\nCode 14-c\n\ninner_join(df1, df2, by = \"Pref\")\n\n\n# A tibble: 2 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n\n\n\n\n\n\n\n\nCode 14-d\n\nfull_join(df1, df2, by = \"Pref\")\n\n\n# A tibble: 4 × 3\n  Pref  Score     N\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 東京    3.5  3220\n2 大阪    4    1325\n3 京都    4.2    NA\n4 高知   NA     111\n\n\n\n\n　キー変数が複数あることもある。たとえば、以下のように分析の単位（=行）が地域\\(\\times\\)年度である可能性もあろう。\n\n\n\n\n\nCode 15-a\n\ndf3 &lt;- tibble(Country = c(\"A\", \"A\", \"A\", \n                          \"B\", \"B\", \"B\",\n                          \"C\", \"C\", \"C\"),\n              Year    = c(2020, 2021, 2022, \n                          2020, 2021, 2022,\n                          2020, 2021, 2022),\n              GDP     = c(100, 150, 200,\n                          100, 120, 120,\n                          200, 180, 90))\n\ndf3\n\n\n# A tibble: 9 × 3\n  Country  Year   GDP\n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 A        2020   100\n2 A        2021   150\n3 A        2022   200\n4 B        2020   100\n5 B        2021   120\n6 B        2022   120\n7 C        2020   200\n8 C        2021   180\n9 C        2022    90\n\n\n\n\n\n\n\n\nCode 15-b\n\ndf4 &lt;- tibble(Country = c(\"A\", \"B\", \"C\", \n                          \"A\", \"B\", \"C\",\n                          \"A\", \"B\", \"C\"),\n              Year    = c(2020, 2020, 2020, \n                          2021, 2021, 2021,\n                          2022, 2022, 2022),\n              Pop     = c(1000, 8000, 5000,\n                          1100, 7000, 6000,\n                          1100, 8000, 7800))\n\ndf4\n\n\n# A tibble: 9 × 3\n  Country  Year   Pop\n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 A        2020  1000\n2 B        2020  8000\n3 C        2020  5000\n4 A        2021  1100\n5 B        2021  7000\n6 C        2021  6000\n7 A        2022  1100\n8 B        2022  8000\n9 C        2022  7800\n\n\n\n\n　この場合、Country、またはYearのみをキー変数として使うのではなく、両方をキー変数として使う必要がある。複数のキー変数を指定するときにはby = c(\"キー変数1\", \"キー変数2\")のように指定する。\n\n\n\nCode 16\n\nleft_join(df3, df4, by = c(\"Country\", \"Year\"))\n\n\n# A tibble: 9 × 4\n  Country  Year   GDP   Pop\n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 A        2020   100  1000\n2 A        2021   150  1100\n3 A        2022   200  1100\n4 B        2020   100  8000\n5 B        2021   120  7000\n6 B        2022   120  8000\n7 C        2020   200  5000\n8 C        2021   180  6000\n9 C        2022    90  7800"
  },
  {
    "objectID": "materials/micro/handling3.html#整然データ構造",
    "href": "materials/micro/handling3.html#整然データ構造",
    "title": "第11回講義資料",
    "section": "整然データ構造",
    "text": "整然データ構造\n　Tidy dataとはHadley Wickhamが提唱したデータ分析に適したデータ構造であり、日本語では整然データ、または簡潔データとも訳される。整然データはパソコンにとって読みやすいデータであり、Rにおける多くの分析はこの整然データを基づいて行われる。ただし、パソコンにとって読みやすいデータが必ずしも人間にとって読みやすいデータであることを意味するわけではない。2つが一致する場合もあれば、一致しない場合もある。{tidyr}パッケージは整然ではないデータ（=雑然データ）を整然データへ変形するパッケージであり、次回紹介する{ggplot2}は整然データを前提として開発されたパッケージである。\n\n4つの原則\n　整然データには4つの原則がある。\n\n1つの列は、1つの変数を表す\n1つの行は、1つの観測を表す\n1つのセルは、1つの値を表す\n1つの表は、1つの観測単位をもつ\n\n　以下ではそれぞれの原則について解説する。\n原則1: 1列1変数\n　これは1つの列は1つの変数を意味するといった、一見当たり前のように見える原則であるが、実は雑然データのほとんどは、この原則1を満たしていない。たとえば、以下のようなデータを考えてみよう。これは3人の被験者に対し、薬を飲む前後の数学成績を測定したデータである。このデータを構成する変数は、被験者名、処置の前後、数学成績の3つである。薬を飲む前の数学関席はControl列、薬を飲んだ後の数学成績がTreatment列である。\n\n\n\n\n\n　このデータの問題は「数学成績」といった一つの変数が2列に分かれていることである。実はこのデータは以下の原則2も満たしてない。原則2を満たしていないデータはほとんど原則1を満たしていないケースが多い。\n原則2: 1行1観察\n　1行に1つの観察が入るということも当たり前のように思える。しかし、「1つの観察 = 1つの値」を意味するわけではない。先ほどのデータもそれぞれのセルには1つの値のみ入っている。ここでの「観察」とは観察単位ごとに測定された値の集合であり、観察単位は人、企業、国、時間などがある。このデータの観察単位は「人」ではない。今回のデータにおける観察単位は「人 \\(\\times\\) 時間」である。たとえば、「投薬前のXさんの数学成績」が一つの観察である。しかし、以下の左側のデータは一つの行にある学生の投薬前の数学成績と投薬後の数学成績、つまり2つの観察が混じっていることとなる。\n\n\n\n\n\n原則3: 1セル1値\n　1つのセルに1つの値のみが含まれるといった原則3は、これに反するケースは多くない。以下のように「Hadleyさんは投薬前後で数学成績が変わらないから、一つのセルにまとめよう」といったことはめったにないだろう。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　しかし、一部の例外も存在する。たとえば、1つのセルに2020/8/24という値があるとしよう。このセルには「年」と「月」、「日」といった3つの値が含まれている。分析の目的によっては年月日を全て異なるセルに割り当てる必要もあるが、このままで問題とならないケースもある。分析単位が日であれば、このままで問題ないが、分析単位が「年\\(\\times\\)月\\(\\times\\)日」であれば、3つのセルに分ける必要があろう。\n原則4: 1表1単位\n　最後の原則4は1つの表は1単位を表すことである。実は1つの表に複数の分析単位が含まれるケースがかなり多い。以下の図は政府統計の例であるが、1つの表に「国」、「都道府県」、「市区町村」、「行政区」の単位が混在していることが分かる。\n\n\n\n\n\n　また、最後の行に「合計」や「平均」が入るケースも多い。最後の行以外は個人が単位であるが、最後の行のみクラスになっている。「1表1単位」原則を満たさない場合、filter()関数等で、異なる単位の行を除外することができる。\n\n\n\n\n\n\n\n{tidyr}パッケージ\n\n\n\n\n\n　{tidyr}パッケージは雑然データから整然データへ変形をサポートするパッケージである。主に使う関数は以下の3つである。\n\n\n\n\n\n\n\n関数名\n機能\n\n\n\n\npivot_longer()\nWide型データ　\\(\\rightarrow\\)　Long型データ\n\n\npivot_wider()\nLong型データ　\\(\\rightarrow\\)　Wide型データ\n\n\nseparate()\nセルの分割（例:「年月日」から「年」、「月」、「日」へ）\n\n\n\n　それでは、LMSから実習用データ（covid_sample.csv）をダウンロードし、読み込んでみよう。このデータは中国、日本、韓国、モンゴル、台湾（アルファベット順）の5日間COVID-19新規感染者数データであり、Johns Hopkins University Center for Systems Science and Engineeringから入手したものである。\n\n\n\nCode 17\n\nCOVID_df &lt;- read_csv(\"Data/covid_sample.csv\")\nCOVID_df\n\n\n# A tibble: 5 × 7\n  Country  Population `2022/06/09` `2022/06/10` `2022/06/11` `2022/06/12`\n  &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 China    1447470092          819          848         1114          990\n2 Japan     126476461        16788        15584        15338        13381\n3 Korea      51269185         9304         8428         7382         3828\n4 Mongolia    3278290            0            0            0            0\n5 Taiwan     23816775        72846        68293        79616        50567\n# ℹ 1 more variable: `2022/06/13` &lt;dbl&gt;\n\n\n　このデータは整然データだろうか、あるいは雑然データだろうか。まずは、本データの観察単位を明らかにする必要がある。これらのデータは「時点XにおけるY地域の新規感染者数と人口」を測定したものである。したがって、このデータの観察単位は「地域\\(\\times\\)時間」であり、測定されたものは新規感染者数と人口である。したがって、整然データであるためには、「地域名」、「時間」、「人口」、「新規感染者数」の4つの変数で構成される必要がある。一方、現在のデータでは新規感染者数が5列に渡って格納されており、計7列のデータである。\n　このデータを整然データに変えるには、7列のデータを4列のデータに変形する必要がある。2つのデータが同じ情報を持つのであれば、列が多いデータは行が少なく、行が多いデータは列が少なくなるはずである。ここで相対的な横長のデータをwide型、縦長のデータをlong型と呼ぶ。今回の場合はwide型データをlong型データへ変換する必要があり、多くの雑然データの扱いはwide型\\(\\rightarrow\\)long型の整形が必要となる。\n　ここで使う関数がpivot_longer()関数である。使い方は以下の通りである。\n\n\n\nCode 18\n\nデータ |&gt;\n  pivot_longer(cols      = 変数が格納されている列,\n               names_to  = \"元の列名が入る変数名\",\n               values_to = \"変数の値が入る変数名\")\n\n\n　我々がやりたい作業は2022/06/09列から2022/06/13列までの5列を1つの列としてまとめることである。まとめる列はcols引数で指定する。そして、これまで変数名だったもの（たとえば、2022/06/11など）が入る新しい列名と、値が入る新しい列名を、それぞれnames_toとvalues_toで指定する。ここでは時点はDate、新規感染者数はNew_Casesという列として格納するとしよう。注意すべき点としては、これらの新しい変数名は\"で囲むことである。\n　ただし、colsの場合、\"で囲んでも、囲まなくても良い。ただし、列名に記号が入っていたり、数字で始まる列名は\"で囲む必要がある。また、colsでは隣接した列を選択する:やstarts_with()なども使用可能である。\n\n\n\nCode 19\n\nCOVID_Long &lt;- COVID_df |&gt; \n  # cols = starts_with(\"2022\") でも良い\n  pivot_longer(cols      = \"2022/06/09\":\"2022/06/13\",\n               names_to  = \"Date\",\n               values_to = \"New_Cases\")\nCOVID_Long\n\n\n# A tibble: 25 × 4\n   Country Population Date       New_Cases\n   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1 China   1447470092 2022/06/09       819\n 2 China   1447470092 2022/06/10       848\n 3 China   1447470092 2022/06/11      1114\n 4 China   1447470092 2022/06/12       990\n 5 China   1447470092 2022/06/13       957\n 6 Japan    126476461 2022/06/09     16788\n 7 Japan    126476461 2022/06/10     15584\n 8 Japan    126476461 2022/06/11     15338\n 9 Japan    126476461 2022/06/12     13381\n10 Japan    126476461 2022/06/13      7942\n# ℹ 15 more rows\n\n\n逆に、long型データをwide型データへ整形する際はpivot_wider()を使用する。雑然データはwide型データが多いとは既に説明したが、雑然データの方が人間にとっては読みやすい場合もある。上の新型コロナのデータもwide型の方が読みやすい人もいるだろう。データ分析に適したデータは整然データであるが、報告に適したデータとしては必ずしもこの関係は成立しない。図表を作成する際は常に読む側の立場から考える必要があろう。\n　このpivot_wider()関数の使い方はpivot_longer()の類似している。names_toとvalues_toがそれぞれnames_fromとvalues_fromに変わっただけである。\n\n\n\nCode 20\n\nCOVID_Long |&gt;\n  pivot_wider(names_from  = \"Date\",\n              values_from = \"New_Cases\")\n\n\n# A tibble: 5 × 7\n  Country  Population `2022/06/09` `2022/06/10` `2022/06/11` `2022/06/12`\n  &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1 China    1447470092          819          848         1114          990\n2 Japan     126476461        16788        15584        15338        13381\n3 Korea      51269185         9304         8428         7382         3828\n4 Mongolia    3278290            0            0            0            0\n5 Taiwan     23816775        72846        68293        79616        50567\n# ℹ 1 more variable: `2022/06/13` &lt;dbl&gt;\n\n\n　以上のpivot_longer()とpivot_wider()の関係を示したものが以下の画像です。\n\n\n\n\n\n　最後にセルの値を分割するseparate()関数について解説する。たとえば、月や曜日ごとの新規感染者数をまとめようとした場合、時点の列が「YYYY年MM月DD日」になっていては困る。これらの年、月、日に分割する必要があろう。先ほど作成したCOVID_LongのDate列をYear、Month、Dayに分けてみよう。\n　colは分割する列の名前を、intoには分割後の列名を、sepは分割の区切りとなる記号などを指定する。\n\n\n\nCode 21\n\nデータ |&gt;\n  separate(col  = \"分割する列名\",\n           into = c(\"分割後の列名1\", \"分割後の列名2\", ...),\n           sep  = \"分割する基準\")\n\n\n　\"2022/10/08\"の場合、\"/\"で分ければ、\"2022\"、\"10\"、\"08\"に分割されるだろう。これあらをそれぞれ、Year、Month、Dayといった3つの列に分割してみよう。\n\n\n\nCode 22\n\nCOVID_Long |&gt;\n  separate(col  = \"Date\",\n           into = c(\"Year\", \"Month\", \"Day\"),\n           sep  = \"/\")\n\n\n# A tibble: 25 × 6\n   Country Population Year  Month Day   New_Cases\n   &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1 China   1447470092 2022  06    09          819\n 2 China   1447470092 2022  06    10          848\n 3 China   1447470092 2022  06    11         1114\n 4 China   1447470092 2022  06    12          990\n 5 China   1447470092 2022  06    13          957\n 6 Japan    126476461 2022  06    09        16788\n 7 Japan    126476461 2022  06    10        15584\n 8 Japan    126476461 2022  06    11        15338\n 9 Japan    126476461 2022  06    12        13381\n10 Japan    126476461 2022  06    13         7942\n# ℹ 15 more rows\n\n\n　もし、区切りとなる記号が存在しない場合は、正規表現（regular expression; 「正則表現」とも訳される）の知識が必要となる。テキスト分析に興味があるなら必須の知識であるが、本講義の射程外である。ここでは都道府県と市区町村を分けるサンプルコードのみ紹介する。\n\n\n\nCode 23\n\nCity_Data &lt;- tibble(City = c(\"北海道音威子府村\",\n                             \"大阪府高槻市\",\n                             \"広島県府中市\",\n                             \"鹿児島県指宿市\"),\n                    Pop  = c(693, 347424, 36471, 38207))\n\nCity_Data\n\n\n# A tibble: 4 × 2\n  City                Pop\n  &lt;chr&gt;             &lt;dbl&gt;\n1 北海道音威子府村    693\n2 大阪府高槻市     347424\n3 広島県府中市      36471\n4 鹿児島県指宿市    38207\n\n\n\n\n\nCode 24\n\nCity_Data |&gt;\n   # 任意の2文字の後に「都道府県」のいずれかが来るか、\n   # 任意の3文字の後に「県」が来たら、そこまでをブロック1、残りをブロック2とする\n   # Cityの値を「ブロック1-ブロック2」に置換する\n   mutate(City = str_replace(City, \"^(.{2}[都道府県]|.{3}県)(.+)\", \n                             \"\\\\1-\\\\2\")) |&gt;\n   # 「-」を基準に列を分割\n   separate(col  = \"City\", into = c(\"Pref\", \"City\"), sep  = \"-\")\n\n\n# A tibble: 4 × 3\n  Pref     City          Pop\n  &lt;chr&gt;    &lt;chr&gt;       &lt;dbl&gt;\n1 北海道   音威子府村    693\n2 大阪府   高槻市     347424\n3 広島県   府中市      36471\n4 鹿児島県 指宿市      38207\n\n\n\n\n{tidyr}と{dplyr}\n　これまでの例で見てきたように、{tidyr}の各関数を通して得られた結果はいずれもdata.frame（厳密にはtibble）構造である。また、{tidyr}の各関数の第一引数はdata.frameである。これは{tidyr}と{dplyr}を組み合わせることが可能であることを意味する。つまり、{tidyr}の関数から{dplyr}の関数、またがその逆の方向でパイプ演算子を使うこともできる。たとえば、今回の実習データをlong型へ整形し、100万人当たりの新規感染者数をNew_Case_per_1Mという列として格納し、国・地域（Country）ごとにNew_Case_per_1Mの平均とを計算する作業を、全てパイプで繋ぐこともできる。\n\n\n\nCode 25\n\nCOVID_df |&gt; \n  # Wide to Long\n  pivot_longer(cols      = \"2022/06/09\":\"2022/06/13\",\n               names_to  = \"Date\",\n               values_to = \"New_Cases\") |&gt;\n  # 新規感染者数を人口であり、100万をかける\n  mutate(New_Case_per_1M = New_Cases / Population * 1000000) |&gt;\n  # Countryでグルーピング\n  group_by(Country) |&gt;\n  # New_Case_per_1Mの平均値を計算\n  summarise(New_Case_per_1M = mean(New_Case_per_1M))\n\n\n# A tibble: 5 × 2\n  Country  New_Case_per_1M\n  &lt;chr&gt;              &lt;dbl&gt;\n1 China              0.653\n2 Japan            109.   \n3 Korea            151.   \n4 Mongolia          64.4  \n5 Taiwan          2657."
  },
  {
    "objectID": "materials/micro/handling3.html#教科書",
    "href": "materials/micro/handling3.html#教科書",
    "title": "第11回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\nデータハンドリング[拡張]\n整然データ構造\n\n{tidyr}の公式ホームページ：https://tidyr.tidyverse.org/\n{dplyr}の公式ホームページ：https://dplyr.tidyverse.org/"
  },
  {
    "objectID": "materials/micro/handling1.html",
    "href": "materials/micro/handling1.html",
    "title": "第9回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling1.html#スライド",
    "href": "materials/micro/handling1.html#スライド",
    "title": "第9回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling1.html#tidyverseとパイプ演算子",
    "href": "materials/micro/handling1.html#tidyverseとパイプ演算子",
    "title": "第9回講義資料",
    "section": "Tidyverseとパイプ演算子",
    "text": "Tidyverseとパイプ演算子\n\nTidyverseとは\n\n\n\n\n\n　Tidyverse（たいでぃばーす）とはデータサイエンスのために考案された、強い信念と思想に基づいたRパッケージの集合である。具体的には{dplyr}、{tidyr}、{readr}、{ggplot2}など数十パッケージで構成されており、Tidyverseに属するパッケージは思想、文法およびデータ構造（tidy data; 整然データ）を共有しる。また、ベクトルやデータフレーム、関数などのオブジェクトをパイプ演算子 (|&gt;)で繋ぐという点が特徴である。これらのパッケージ群は{tidyverse}をインストールすることで導入可能であり、JDCat分析ツールでは既に導入済みである。\n　2010年代中盤以降、Rの書き方はtidyverseな書き方が定着しているため、Rのコードを作成する際はlibrary(tidyverse)から始めよう。\n\n\nパイプ演算子\n　Tidyverseにおいてオブジェクトはパイプ演算子（|&gt;）で繋がっている。なぜパイプ演算子を使うのだろうか。一般的なプログラミング言語に共通する書き方は書き方と読み方が逆という特徴を持つ。たとえば、「ベクトルXの和を出力する」コードはprint(sum(X))であり、print、sum、Xの順で書く。このコードの読み方には二通りがある。\n\n読み方1: Xをsum()し、print()する。\n読み方2: print()する内容はsum()で、sum()はXに対して行う。\n\n　1は人間にとって自然な読み方であるが、書き方と逆である。一方、2は書き方と順番は一致するものの、直感的ではない。しかし、Tidyverseな書き方、つまりパイプ演算子を用いた書き方は書き方と読み方が一致するメリットがある。たとえば、先ほどのコードはパイプ演算子を使うとX |&gt; sum() |&gt; print()と書く。\n　このパイプ演算子、実はごく簡単な仕組みである。|&gt;の左側のオブジェクトを右側オブジェクトの最初の引数として渡すだけであり、X |&gt; 関数(Y)は関数(X, Y)と同じだ。つまり、X |&gt; sum(na.rm = TRUE)はsum(X, na.rm = TRUE)と同じコードである。\n\n\n\n既存の書き方\n\n\n\nCode 01-a\n\nX &lt;- c(2, 3, 5, NA, 11)\nprint(sum(X, na.rm = TRUE))\n\n\n[1] 21\n\n\n\n\n\n\n\nTidyverseな書き方\n\n\n\nCode 01-b\n\nlibrary(tidyverse)\nX |&gt; sum(na.rm = TRUE) |&gt; print()\n\n\n[1] 21\n\n\n\n\n\n　|&gt;演算子はパイプ左側オブジェクトを右側オブジェクトの最初の引数として渡すと説明したたが、第2、3、…引数として渡すことも可能である。ただし、この場合はパイプ左側のオブジェクトが入る箇所に_と記入する必要がある。詳細は割愛するが、線形回帰分析の関数lm()は最初の引数が数式（formula型）であるため、データフレームをlm()に渡すためには、lm()内にdata = _と書く必要がある。これは_の箇所にパイプ左側のオブジェクトが入ることを意味する。\n\n\n\nCode 02\n\n# 以下のコードは lm(y ~ x1 + x2 + x3, data = my_data) と同じ\nmy_data |&gt; \n  lm(y ~ x1 + x2 + x3, data = _)\n\n\n　このパイプ演算子（|&gt;）、実は2021年5月リリースされたR 4.1から使用可能な比較的新しいものである。しかし、パイプ演算子そのものの歴史は短くはない。R 4.1がリリースされるまではRにパイプ演算子は存在しなかったものの、{magrittr}というパッケージが独自のパイプ演算子（%&gt;%）を提供してきた。%&gt;%パイプ演算子の使い方は|&gt;と同じであるため、現段階では何を使っても問題ない。しかし、R界隈の神様であるHadley Wickham先生も現在は%&gt;%から|&gt;へ乗り換え済みであることから、これからの主流は|&gt;になっていくと予想される。現時点に存在する教科書、インターネット記事では%&gt;%が主流になっているが、それらのコードのパイプ演算子は基本的に|&gt;に置換しても問題ない。ただし、第一引数以外に使う位置指定子（place holder）が異なる点に注意しておこう。%&gt;%の位置指定子は.であり、|&gt;の位置指定子は_である。本講義ではパイプ演算子として|&gt;を使用するが、|&gt;を使っても同じ結果が得られる。少なくとも本講義に限定した場合、%&gt;%と|&gt;は同じものであると考えても良い。\n\n\n\n\n\n\n|&gt;が打ちにくい…!!\n\n\n\n　旧パイプ演算子%&gt;%に比べ、|&gt;は打ちにくいかも知れない。しかし、RStudioを使うのであればショートカットを活用しよう。macOSなら「⌘ + Shift + m」、Windows/Linuxなら「Control (Ctrl) + Shift + m」を同時に押すと、自動的に|&gt;が入力される（RStudioの設定によっては|&gt;でなく、%&gt;%が入力される）。"
  },
  {
    "objectID": "materials/micro/handling1.html#dplyrとは",
    "href": "materials/micro/handling1.html#dplyrとは",
    "title": "第9回講義資料",
    "section": "{dplyr}とは",
    "text": "{dplyr}とは\n\n\n\n\n\n　{dplyr}はTidyverseパッケージ群のコア・パッケージの一つである、表形式データ (データフレームやtibble)を操作するパッケージである。{dplyr}を使えば、第8回の講義で解説した行・列の抽出も簡単に可能となる。{dplyr}を使うためには別途library(dplyr)を実行する必要はなく、{tidyverse}を読み込む際に自動的に読み込まれる。\n　まずは本講義に使用するデータを読み込んでみよう。サポートページからcountries.csvをダウンロードし、プロジェクト・フォルダーにアップロードする。宋はプロジェクト・フォルダー内にDataという名のフォルダーを作成し、そこにデータをアップロードした。\n\n\n\nCode 03\n\nlibrary(tidyverse) # {tidyverse}の読み込み\n# Dataフォルダー内のcountries.csvを読み込み、dfという名のオブジェクトとして作業環境に格納\ndf &lt;- read_csv(\"Data/countries.csv\")\n\n\n　読み込んだデータを出力してみよう。\n\n\n\nCode 04\n\ndf\n\n\n# A tibble: 186 × 18\n   Country  Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghani…   38928346 6.53e5 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2877797 2.74e4 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria    43851044 2.38e6 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra       77265 4.7 e2 3.15e3 NA              40821.            NA      0\n 5 Angola     32866272 1.25e6 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua…      97929 4.4 e2 1.73e3  2.08e3         17643.         21267.     0\n 7 Argenti…   45195774 2.74e6 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2963243 2.85e4 1.37e4  3.84e4          4614.         12974.     0\n 9 Austral…   25499884 7.68e6 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9006398 8.24e4 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 10 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　dim()関数を使うとdfは186行、18列のデータであることが分かる。\n\n\n\nCode 05\n\ndim(df)\n\n\n[1] 186  18\n\n\n　また、18個の変数名のみを出力するためにはnames()関数を使う。\n\n\n\nCode 06\n\nnames(df)\n\n\n [1] \"Country\"        \"Population\"     \"Area\"           \"GDP\"           \n [5] \"PPP\"            \"GDP_per_capita\" \"PPP_per_capita\" \"G7\"            \n [9] \"G20\"            \"OECD\"           \"HDI_2018\"       \"Polity_Score\"  \n[13] \"Polity_Type\"    \"FH_PR\"          \"FH_CL\"          \"FH_Total\"      \n[17] \"FH_Status\"      \"Continent\"     \n\n\n　この実習用データは186カ国の社会経済・政治体制のデータであり、18個の変数で構成されている。詳細は以下の通りである。\n\n\n\n変数名\n説明\n\n変数名\n説明\n\n\n\n\nCountry\n国名\n\nOECD\nOECD加盟有無\n\n\nPopulation\n人口\n\nHDI_2018\n人間開発指数 (2018年)\n\n\nArea\n面積( \\(\\text{km}^2\\) )\n\nPolity_Score\n政治体制のスコア\n\n\nGDP\n国内総生産（ドル）\n\nPolity_Type\n政治体制\n\n\nPPP\n購買力平価国内総生産\n\nFH_PR\n政治的自由\n\n\nGDP_per_capita\n一人当たりGDP\n\nFH_CL\n市民的自由\n\n\nPPP_per_capita\n一人当たりPPP\n\nFH_Total\nFH_PR + FH_CL\n\n\nG7\nG7加盟有無\n\nFH_Status\n自由の状態\n\n\nG20\nG20加盟有無\n\nContinent\n大陸"
  },
  {
    "objectID": "materials/micro/handling1.html#列の抽出",
    "href": "materials/micro/handling1.html#列の抽出",
    "title": "第9回講義資料",
    "section": "列の抽出",
    "text": "列の抽出\n　データフレームから特定の列（column）を抽出する際はselect()関数を使用する。select()関数の第一引数はデータフレームのオブジェクト名であり、第二引数以降では抽出する列名を記入する。第一引数がデータフレームであるため、パイプ演算子を使うことが可能である。\n\n\n\nパイプを使わない書き方\n\n\n\nCode 07-a\n\nselect(データ, 変数名1, 変数名2, ...)\n\n\n\n\n\n\n\nパイプを使う書き方\n\n\n\nCode 07-b\n\nデータ |&gt;\n  select(変数名1, 変数名2, ...)\n\n\n\n\n\n\n\n\n\n\n\n注意: select()関数は複数ある!\n\n\n\nselect()関数は{dplyr}だけでなく、{MASS}からも提供されるが、別の関数である。\n\n{MASS}もデータ分析において頻繁に使われるパッケージであるため、select()だけだと、どのパッケージのselect()か分からなくなる場合がある。\nエラーが生じる場合は、dplyr::select()など、パッケージ名を指定すること\n\n\n\n　それではいくつかの例を紹介しよう。まずはdfからCountry、Population、HDI_2018列を抽出してみよう。\n\n\n\nCode 08\n\ndf |&gt;                                   # dfから\n  select(Country, Population, HDI_2018) # Country, Population, HDI_2018のみ抽出する\n\n\n# A tibble: 186 × 3\n   Country             Population HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346    0.496\n 2 Albania                2877797    0.791\n 3 Algeria               43851044    0.759\n 4 Andorra                  77265    0.857\n 5 Angola                32866272    0.574\n 6 Antigua and Barbuda      97929    0.776\n 7 Argentina             45195774    0.83 \n 8 Armenia                2963243    0.76 \n 9 Australia             25499884    0.938\n10 Austria                9006398    0.914\n# ℹ 176 more rows\n\n\n　この操作を第8回で紹介した方法で行う場合、以下のようなコードとなる。どちらの方が可読性が良いかは一目瞭然だろう。\n\n\n\n既存の書き方\n\n\n\nCode 09-a\n\ndf[, c(\"Country\", \"Population\", \"HDI_2018\")]\n\n\n# A tibble: 186 × 3\n   Country             Population HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346    0.496\n 2 Albania                2877797    0.791\n 3 Algeria               43851044    0.759\n 4 Andorra                  77265    0.857\n 5 Angola                32866272    0.574\n 6 Antigua and Barbuda      97929    0.776\n 7 Argentina             45195774    0.83 \n 8 Armenia                2963243    0.76 \n 9 Australia             25499884    0.938\n10 Austria                9006398    0.914\n# ℹ 176 more rows\n\n\n\n\n\n\n\nTidyverseな書き方\n\n\n\nCode 09-b\n\ndf |&gt;\n  select(Country, Population, HDI_2018)\n\n\n# A tibble: 186 × 3\n   Country             Population HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346    0.496\n 2 Albania                2877797    0.791\n 3 Algeria               43851044    0.759\n 4 Andorra                  77265    0.857\n 5 Angola                32866272    0.574\n 6 Antigua and Barbuda      97929    0.776\n 7 Argentina             45195774    0.83 \n 8 Armenia                2963243    0.76 \n 9 Australia             25499884    0.938\n10 Austria                9006398    0.914\n# ℹ 176 more rows\n\n\n\n\n\n　注意すべき点として、この時点では抽出・出力されただけだということだ。抽出したデータを引き続き使うためには、代入演算子（&lt;-）を使って、抽出した結果を別途のオブジェクトとして格納する必要がある1。たとえば、dfから3つの変数を抽出したものをdf2という名で作業環境内に格納するためには以下のように入力する。\n\n\n\nCode 10\n\ndf2 &lt;- df |&gt;\n  select(Country, Population, HDI_2018)\n\n\n　ls()で現在の作業環境内のオブジェクトの一覧を出力するとdf2がある。\n\n\n\nCode 11\n\nls()\n\n\n[1] \"df\"              \"df2\"             \"has_annotations\" \"X\"              \n\n\n　df2を出力してみるとdfから3つの列のみ抽出されたものがdf2という新しい名のオブジェクトとして格納されていることが分かる。\n\n\n\nCode 12\n\ndf2\n\n\n# A tibble: 186 × 3\n   Country             Population HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346    0.496\n 2 Albania                2877797    0.791\n 3 Algeria               43851044    0.759\n 4 Andorra                  77265    0.857\n 5 Angola                32866272    0.574\n 6 Antigua and Barbuda      97929    0.776\n 7 Argentina             45195774    0.83 \n 8 Armenia                2963243    0.76 \n 9 Australia             25499884    0.938\n10 Austria                9006398    0.914\n# ℹ 176 more rows\n\n\n\n\n\n\n\n\n課題では格納が必要な場合もある\n\n\n\n課題の問題には「出力せよ」だけでなく、「格納した上で出力せよ」といった形式もある。加工したデータを引き続き使うためには格納が必須であるため、問題文を注意深く読むこと。\n\n\n　select()関数のもう一つの特徴は、変数名の変更と抽出を同時に行えることだ。抽出する際、新しい変数名 = 既存の変数名と記入すれば、抽出と同時に変数名も変更できる。たとえば、dfからCountry、Population、HDI_2018を抽出し、HDI_2018の変数名をHDIに変更したい場合は以下のように書く。\n\n\n\nCode 13\n\ndf |&gt;\n  select(Country, Population, HDI = HDI_2018)\n\n\n# A tibble: 186 × 3\n   Country             Population   HDI\n   &lt;chr&gt;                    &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan           38928346 0.496\n 2 Albania                2877797 0.791\n 3 Algeria               43851044 0.759\n 4 Andorra                  77265 0.857\n 5 Angola                32866272 0.574\n 6 Antigua and Barbuda      97929 0.776\n 7 Argentina             45195774 0.83 \n 8 Armenia                2963243 0.76 \n 9 Australia             25499884 0.938\n10 Austria                9006398 0.914\n# ℹ 176 more rows\n\n\n　抽出は行わず、変数名のみを変更したい場合はrename()関数を使用する。使い方はselect()関数と同じである。たとえば、dfのPopulationをJinkoに、AreaをMensekiに変更し、18列は温存する場合は以下のように書く。\n\n\n\nCode 14\n\ndf |&gt;\n  rename(Jinko = Population, Menseki = Area)\n\n\n# A tibble: 186 × 18\n   Country      Jinko Menseki    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghanistan 3.89e7  652860 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2.88e6   27400 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria     4.39e7 2381740 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra     7.73e4     470 3.15e3 NA              40821.            NA      0\n 5 Angola      3.29e7 1246700 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua an… 9.79e4     440 1.73e3  2.08e3         17643.         21267.     0\n 7 Argentina   4.52e7 2736690 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2.96e6   28470 1.37e4  3.84e4          4614.         12974.     0\n 9 Australia   2.55e7 7682300 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9.01e6   82409 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 10 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　18の変数の中から17個を抽出したい場合はselect()内に17つの変数名を入れれば良いが、これは非効率的である。select()関数は変数名の前に! (推奨)、または-を付けることで、特定の列を除外することができる。また、2つ以上の変数を除外する場合、変数名をc()や、後述する:でまとめることもできる。。\n　たとえば、dfからPopulationとArea、GDP、PPP列を除外するコードは以下の通りである。\n\n\n\nCode 15\n\ndf |&gt;\n  select(!c(Population, Area, GDP, PPP))\n\n\n# A tibble: 186 × 14\n   Country GDP_per_capita PPP_per_capita    G7   G20  OECD HDI_2018 Polity_Score\n   &lt;chr&gt;            &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1 Afghan…           491.          2125.     0     0     0    0.496           -1\n 2 Albania          5309.         13781.     0     0     0    0.791            9\n 3 Algeria          3876.         11324.     0     0     0    0.759            2\n 4 Andorra         40821.            NA      0     0     0    0.857           NA\n 5 Angola           2879.          6649.     0     0     0    0.574           -2\n 6 Antigu…         17643.         21267.     0     0     0    0.776           NA\n 7 Argent…          9949.         22938.     0     1     0    0.83             9\n 8 Armenia          4614.         12974.     0     0     0    0.76             7\n 9 Austra…         54615.         50001.     0     1     1    0.938           10\n10 Austria         49555.         55824.     0     0     1    0.914           10\n# ℹ 176 more rows\n# ℹ 6 more variables: Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　以上の例だと、PopulationからPPPは連続して位置する変数であるが、{dplyr}では:演算子を使うと、XXからYYまでといった選択ができる。たとえば、「PopulationからPPPまで」は「Population:PPP」と表記する。つまり、上記のコードは以下のように書くこともできる。\n\n\n\nCode 16\n\ndf |&gt;\n  select(!c(Population:PPP))\n\n\n# A tibble: 186 × 14\n   Country GDP_per_capita PPP_per_capita    G7   G20  OECD HDI_2018 Polity_Score\n   &lt;chr&gt;            &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1 Afghan…           491.          2125.     0     0     0    0.496           -1\n 2 Albania          5309.         13781.     0     0     0    0.791            9\n 3 Algeria          3876.         11324.     0     0     0    0.759            2\n 4 Andorra         40821.            NA      0     0     0    0.857           NA\n 5 Angola           2879.          6649.     0     0     0    0.574           -2\n 6 Antigu…         17643.         21267.     0     0     0    0.776           NA\n 7 Argent…          9949.         22938.     0     1     0    0.83             9\n 8 Armenia          4614.         12974.     0     0     0    0.76             7\n 9 Austra…         54615.         50001.     0     1     1    0.938           10\n10 Austria         49555.         55824.     0     0     1    0.914           10\n# ℹ 176 more rows\n# ℹ 6 more variables: Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　むろん、:は否定演算子じゃなくても使える。dfのCountry〜PPP, HDI_2018列を抽出するコードは以下の通りである。\n\n\n\nCode 17\n\ndf |&gt;\n  select(Country:PPP, HDI_2018)\n\n\n# A tibble: 186 × 6\n   Country             Population    Area      GDP      PPP HDI_2018\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   19101.   82737.    0.496\n 2 Albania                2877797   27400   15278.   39658.    0.791\n 3 Algeria               43851044 2381740  169988.  496572.    0.759\n 4 Andorra                  77265     470    3154.      NA     0.857\n 5 Angola                32866272 1246700   94635.  218533.    0.574\n 6 Antigua and Barbuda      97929     440    1728.    2083.    0.776\n 7 Argentina             45195774 2736690  449663. 1036721.    0.83 \n 8 Armenia                2963243   28470   13673.   38446.    0.76 \n 9 Australia             25499884 7682300 1392681. 1275027.    0.938\n10 Austria                9006398   82409  446315.  502771.    0.914\n# ℹ 176 more rows\n\n\n　以下では変数を選択するより洗練された方法について解説する。変数名が特定の文字列で始まる列を選択する関数としてstarts_with()がある。たとえば、dfからCountry, \"FH\"で始まる列を抽出する場合は以下のように書く。\n\n\n\nCode 18\n\ndf |&gt;\n  select(Country, starts_with(\"FH\"))\n\n\n# A tibble: 186 × 5\n   Country             FH_PR FH_CL FH_Total FH_Status\n   &lt;chr&gt;               &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1 Afghanistan            13    14       27 NF       \n 2 Albania                27    40       67 PF       \n 3 Algeria                10    24       34 NF       \n 4 Andorra                39    55       94 F        \n 5 Angola                 11    21       32 NF       \n 6 Antigua and Barbuda    33    52       85 F        \n 7 Argentina              35    50       85 F        \n 8 Armenia                21    32       53 PF       \n 9 Australia              40    57       97 F        \n10 Austria                37    56       93 F        \n# ℹ 176 more rows\n\n\n　starts_with()の前に!を付けると該当する列が除外される。たとえば、\"GDP\"と\"PPP\"で始まる列を除外する場合はstarts_with()内にcharacter型ベクトルを入れる。\n\n\n\nCode 19\n\ndf |&gt;\n  select(!starts_with(c(\"GDP\", \"PPP\")))\n\n\n# A tibble: 186 × 14\n   Country Population   Area    G7   G20  OECD HDI_2018 Polity_Score Polity_Type\n   &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;      \n 1 Afghan…   38928346 6.53e5     0     0     0    0.496           -1 Closed Ano…\n 2 Albania    2877797 2.74e4     0     0     0    0.791            9 Democracy  \n 3 Algeria   43851044 2.38e6     0     0     0    0.759            2 Open Anocr…\n 4 Andorra      77265 4.7 e2     0     0     0    0.857           NA &lt;NA&gt;       \n 5 Angola    32866272 1.25e6     0     0     0    0.574           -2 Closed Ano…\n 6 Antigu…      97929 4.4 e2     0     0     0    0.776           NA &lt;NA&gt;       \n 7 Argent…   45195774 2.74e6     0     1     0    0.83             9 Democracy  \n 8 Armenia    2963243 2.85e4     0     0     0    0.76             7 Democracy  \n 9 Austra…   25499884 7.68e6     0     1     1    0.938           10 Full Democ…\n10 Austria    9006398 8.24e4     0     0     1    0.914           10 Full Democ…\n# ℹ 176 more rows\n# ℹ 5 more variables: FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;,\n#   FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　starts_with()に似たような機能をする関数として特定の文字列で終わる列を選択するends_with()と特定の文字列を含む列を選択するcontains()がある。これらの使い方はstarts_with()と同じだ。\n　続いて、列の順番を変更する方法を紹介する。実はselect()関数は書かれた順番で列を抽出する。たとえば、G7からOECD列をCountryとPopulationの間へ移動する場合は以下のように書く。\n\n\n\nCode 20\n\ndf |&gt;\n  select(Country, G7:OECD,\n         Population:PPP_per_capita, HDI_2018:Continent)\n\n\n# A tibble: 186 × 18\n   Country        G7   G20  OECD Population   Area    GDP     PPP GDP_per_capita\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan     0     0     0   38928346 6.53e5 1.91e4  8.27e4           491.\n 2 Albania         0     0     0    2877797 2.74e4 1.53e4  3.97e4          5309.\n 3 Algeria         0     0     0   43851044 2.38e6 1.70e5  4.97e5          3876.\n 4 Andorra         0     0     0      77265 4.7 e2 3.15e3 NA              40821.\n 5 Angola          0     0     0   32866272 1.25e6 9.46e4  2.19e5          2879.\n 6 Antigua an…     0     0     0      97929 4.4 e2 1.73e3  2.08e3         17643.\n 7 Argentina       0     1     0   45195774 2.74e6 4.50e5  1.04e6          9949.\n 8 Armenia         0     0     0    2963243 2.85e4 1.37e4  3.84e4          4614.\n 9 Australia       0     1     1   25499884 7.68e6 1.39e6  1.28e6         54615.\n10 Austria         0     0     1    9006398 8.24e4 4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 9 more variables: PPP_per_capita &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;,\n#   Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;,\n#   FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　しかし、いくら:演算子があるとはいえ、全ての変数名を書く必要がある。抽出と同時に順番を変更するならselect()が便利だが、順番のみを変更するならrelocate()関数がおすすめである。relocate()関数は移動する変数を指定し、.afterまたは.beforeで移動先を指定する必要がある。\n\n\n\nCode 21\n\n# 特定の変数の後ろへ移動\nデータ |&gt;\n  relocate(移動したい変数名, .after = 変更先)\n# 特定の変数の前へ移動\nデータ |&gt;\n  relocate(移動したい変数名, .before = 変更先)\n\n\n　たとえば、G7からOECD列をCountryの後ろへ移動させる場合は以下のように書く。\n\n\n\nCode 22\n\ndf |&gt;\n  relocate(G7:OECD, .after = Country) # .before = PopulationもOK\n\n\n# A tibble: 186 × 18\n   Country        G7   G20  OECD Population   Area    GDP     PPP GDP_per_capita\n   &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan     0     0     0   38928346 6.53e5 1.91e4  8.27e4           491.\n 2 Albania         0     0     0    2877797 2.74e4 1.53e4  3.97e4          5309.\n 3 Algeria         0     0     0   43851044 2.38e6 1.70e5  4.97e5          3876.\n 4 Andorra         0     0     0      77265 4.7 e2 3.15e3 NA              40821.\n 5 Angola          0     0     0   32866272 1.25e6 9.46e4  2.19e5          2879.\n 6 Antigua an…     0     0     0      97929 4.4 e2 1.73e3  2.08e3         17643.\n 7 Argentina       0     1     0   45195774 2.74e6 4.50e5  1.04e6          9949.\n 8 Armenia         0     0     0    2963243 2.85e4 1.37e4  3.84e4          4614.\n 9 Australia       0     1     1   25499884 7.68e6 1.39e6  1.28e6         54615.\n10 Austria         0     0     1    9006398 8.24e4 4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 9 more variables: PPP_per_capita &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;,\n#   Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;,\n#   FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "materials/micro/handling1.html#行の抽出",
    "href": "materials/micro/handling1.html#行の抽出",
    "title": "第9回講義資料",
    "section": "行の抽出",
    "text": "行の抽出\n　列の抽出はselect()関数を使うが、行の抽出にはfilter()関数を使う。行の抽出は基本的に、指定された条件に合致する行を抽出することを意味する。したがって、filter()関数を使うためには論理演算子（==、&gt;、&など）の理解が必須だ。\n　filter()関数の使い方は以下の通りである。パイプを使わずデータオブジェクト名をfilter()の第一引数として使っても良い。\n\n\n\nCode 23\n\nデータ |&gt;\n  filter(条件1, 条件2, ...)\n\n\n　たとえば、dfからContinentの値が\"Europe\"である行を抽出し、Country〜PPP, HDI_2018列を抽出し、HDI_2018はHDIに変更するコードは以下の通りである。行の抽出と列の抽出を同時に行っているため、filter()関数とselect()関数を組み合わせる必要がある。\n\n\n\nCode 24\n\ndf |&gt;\n  filter(Continent == \"Oceania\") |&gt;\n  select(Country:PPP, HDI = HDI_2018)\n\n\n# A tibble: 4 × 6\n  Country          Population    Area      GDP      PPP   HDI\n  &lt;chr&gt;                 &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 Australia          25499884 7682300 1392681. 1275027. 0.938\n2 Fiji                 896445   18270    5536.   12496. 0.724\n3 New Zealand         4842780  263820  206929.  204260. 0.921\n4 Papua New Guinea    8947024  452860   24970.   37319. 0.543\n\n\n　ただし、filter()とselect()の順番に注意しよう。filter()が3行目、select()が2行目に位置する場合、以下のコードは走らない。なぜなら、select()関数を通すことでContinent列が除外されるからだ。\n　filter()内の条件式は二つ以上でも使える。たとえば、二つの条件を同時に満たす行を抽出するとしよう。この場合はAND演算子（&）を使う。たとえば、dfからContinentが\"Asia\" (条件1)、HDI_2018が0.8以上 (条件2)の行を抽出し、CountryとHDI_2018列を抽出する場合、以下のように書く。\n\n\n\nCode 25\n\ndf |&gt;\n  filter(Continent == \"Asia\" & HDI_2018 &gt;= 0.8) |&gt;\n  select(Country, HDI_2018)\n\n\n# A tibble: 13 × 2\n   Country              HDI_2018\n   &lt;chr&gt;                   &lt;dbl&gt;\n 1 Bahrain                 0.838\n 2 Brunei                  0.845\n 3 Israel                  0.906\n 4 Japan                   0.915\n 5 Kazakhstan              0.817\n 6 South Korea             0.906\n 7 Kuwait                  0.808\n 8 Malaysia                0.804\n 9 Oman                    0.834\n10 Qatar                   0.848\n11 Saudi Arabia            0.857\n12 Singapore               0.935\n13 United Arab Emirates    0.866\n\n\n　二つの条件式を&で繋いだことに注意されたい。filter()関数で複数の条件式を使う場合は,、&、|のいずれかを使うが、,と&は同じ（=AND演算子）である。混乱を避けるために&の使用を推奨するが、,を使っても良い。\n　もう一つの演算子はOR演算子（|）である。これは2つ以上の条件のうち、一つ以上の条件を満たす行を抽出することを意味する。たとえば、dfからContinentが\"Asia\"（条件1）か\"Oceania\"（条件2）の行を抽出し、CountryとHDI_2018、Continent列を抽出する場合、以下のように書く。\n\n\n\nCode 26\n\ndf |&gt;\n  filter(Continent == \"Asia\" | Continent == \"Oceania\") |&gt;\n  select(Country, HDI_2018, Continent)\n\n\n# A tibble: 46 × 3\n   Country     HDI_2018 Continent\n   &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;    \n 1 Afghanistan    0.496 Asia     \n 2 Australia      0.938 Oceania  \n 3 Bahrain        0.838 Asia     \n 4 Bangladesh     0.614 Asia     \n 5 Bhutan         0.617 Asia     \n 6 Brunei         0.845 Asia     \n 7 Burma          0.584 Asia     \n 8 Cambodia       0.581 Asia     \n 9 China          0.758 Asia     \n10 Fiji           0.724 Oceania  \n# ℹ 36 more rows\n\n\n　AND演算子とOR演算子は同時に使うこともできる。たとえば、dfからContinentが\"Asia\"（条件1）か\"Oceania\"（条件2）でありながら、HDI_2018が0.9以上 (条件3)の行を抽出し、CountryとHDI_2018、Continent列を抽出する場合は以下のようになる。ただし、AND演算子とOR演算子を同時に使用する場合は適切な箇所にカッコ（()）を付ける必要がある。\n\n\n\nCode 27\n\ndf |&gt;\n  filter((Continent == \"Asia\" | Continent == \"Oceania\"), \n         HDI_2018 &gt;= 0.9) |&gt;\n  select(Country, HDI_2018, Continent)\n\n\n# A tibble: 6 × 3\n  Country     HDI_2018 Continent\n  &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;    \n1 Australia      0.938 Oceania  \n2 Israel         0.906 Asia     \n3 Japan          0.915 Asia     \n4 South Korea    0.906 Asia     \n5 New Zealand    0.921 Oceania  \n6 Singapore      0.935 Asia     \n\n\n　実は上記のコード、もう少し効率化することもできる。そのためには%in%演算子を使う必要があるが、==を用いる複数の条件式がOR演算子で繋がっている場合、大変便利な演算子である。たとえば、Continentの値がc(\"Asia\", \"Oceainia\")のいずれかに該当するかどうかを判定する場合は、これまで(Continent == \"Asia\" | Continent == \"Oceania\")と書いたが、これはContinent %in% c(\"Asia\", \"Oceania\")と同じコードである。したがって、上記のコードは以下のように簡素化することもできる。\n\n\n\nCode 28\n\ndf |&gt;\n  filter(Continent %in% c(\"Asia\", \"Oceania\"), \n         HDI_2018 &gt;= 0.9) |&gt;\n  select(Country, HDI_2018, Continent)\n\n\n# A tibble: 6 × 3\n  Country     HDI_2018 Continent\n  &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;    \n1 Australia      0.938 Oceania  \n2 Israel         0.906 Asia     \n3 Japan          0.915 Asia     \n4 South Korea    0.906 Asia     \n5 New Zealand    0.921 Oceania  \n6 Singapore      0.935 Asia"
  },
  {
    "objectID": "materials/micro/handling1.html#欠損値の扱い",
    "href": "materials/micro/handling1.html#欠損値の扱い",
    "title": "第9回講義資料",
    "section": "欠損値の扱い",
    "text": "欠損値の扱い\n　データには欠損値が含まれていることが多く、Rでは欠損値をNAと表記する。欠損値が含まれている場合、多重代入法（multiple imputation）などの処理を施すことも可能だが、これはかなり高度の知識を要する。多重代入法を使わない場合は、欠損値を含むケースを除外することが有効である。なぜなら欠損値を含まれている場合、関数が使えないケースも多いからだ2。たとえば、一人あたり購買力平価GDP（PPP_per_capita）には欠損値が含まれている。この場合、平均値を計算するmean()関数はそのまま使えない。\n\n\n\nCode 29\n\nmean(df$PPP_per_capita)\n\n\n[1] NA\n\n\n　この場合、mean()関数内にna.rm = TRUEを付けて欠損していない値の平均値を求めるように指定するか、予め欠損値が含まれているケースを除外する必要がある。ここでは後者について説明する。\n　まず、dfのPPPが欠損している行を抽出し、CountryからPPP列まで出力してみよう。PPPが欠損している場合はNAの値を取るため、filter()内にPPP == NAと条件式を書けば動くかも知れない。\n\n\n\nCode 30\n\ndf |&gt;\n  filter(PPP == NA) |&gt;\n  select(Country:PPP)\n\n\n# A tibble: 0 × 5\n# ℹ 5 variables: Country &lt;chr&gt;, Population &lt;dbl&gt;, Area &lt;dbl&gt;, GDP &lt;dbl&gt;,\n#   PPP &lt;dbl&gt;\n\n\n　いや、そうでもなかった。実はある値がNAか否かを判定するために==演算子は使えない。代わりにis.na()関数を使用する。\n\n\n\nCode 31\n\ndf |&gt;\n  filter(is.na(PPP)) |&gt;\n  select(Country:PPP)\n\n\n# A tibble: 8 × 5\n  Country        Population   Area     GDP   PPP\n  &lt;chr&gt;               &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;\n1 Andorra             77265    470   3154.    NA\n2 Cuba             11326616 106440 100023     NA\n3 Holy See              801      0     NA     NA\n4 Liechtenstein       38128    160   6553.    NA\n5 Monaco              39242      1   7188.    NA\n6 Somalia          15893222 627340    917.    NA\n7 Syria            17500658 183630  40405.    NA\n8 Western Sahara     597339 266000    909.    NA\n\n\n　しかし、我々が本当にやりたいことはPPPが欠損している行のみ抽出するのではなく、 PPPが欠損している行を除外することだ。ここでも否定を意味する!が使える。\n\n\n\nCode 32\n\ndf |&gt;\n  filter(!is.na(PPP)) |&gt;\n  select(Country:PPP)\n\n\n# A tibble: 178 × 5\n   Country             Population    Area      GDP      PPP\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   19101.   82737.\n 2 Albania                2877797   27400   15278.   39658.\n 3 Algeria               43851044 2381740  169988.  496572.\n 4 Angola                32866272 1246700   94635.  218533.\n 5 Antigua and Barbuda      97929     440    1728.    2083.\n 6 Argentina             45195774 2736690  449663. 1036721.\n 7 Armenia                2963243   28470   13673.   38446.\n 8 Australia             25499884 7682300 1392681. 1275027.\n 9 Austria                9006398   82409  446315.  502771.\n10 Azerbaijan            10139177   82658   48048.  144556.\n# ℹ 168 more rows\n\n\n　このようにPPPが欠損していない行だけが抽出された。また、より簡単な方法としてdrop_na()関数を使うこともできる。これは()内で指定した変数が欠損している行をすべて除外する関数であり、複数の変数を同時に指定できるので便利である。たとえば、dfからPPPとPolity_Scoreが欠損していない行だけを抽出し、CountryからPPP、そしてPolity_Score列を残してみよう。\n\n\n\nCode 33\n\ndf |&gt;\n  drop_na(PPP, Polity_Score) |&gt;\n  select(Country:PPP, Polity_Score)\n\n\n# A tibble: 155 × 6\n   Country     Population    Area      GDP      PPP Polity_Score\n   &lt;chr&gt;            &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;        &lt;dbl&gt;\n 1 Afghanistan   38928346  652860   19101.   82737.           -1\n 2 Albania        2877797   27400   15278.   39658.            9\n 3 Algeria       43851044 2381740  169988.  496572.            2\n 4 Angola        32866272 1246700   94635.  218533.           -2\n 5 Argentina     45195774 2736690  449663. 1036721.            9\n 6 Armenia        2963243   28470   13673.   38446.            7\n 7 Australia     25499884 7682300 1392681. 1275027.           10\n 8 Austria        9006398   82409  446315.  502771.           10\n 9 Azerbaijan    10139177   82658   48048.  144556.           -7\n10 Bahrain        1701575     760   38574.   74230.          -10\n# ℹ 145 more rows"
  },
  {
    "objectID": "materials/micro/handling1.html#行のソート",
    "href": "materials/micro/handling1.html#行のソート",
    "title": "第9回講義資料",
    "section": "行のソート",
    "text": "行のソート\n　最後に行のソート（並び替え）について解説する。行のソートにはarrange()関数を使用する。第一引数はデータフレームのオブジェクトであり、第二引数以降は並び替えの基準となる変数名である。ソートは基本的には昇順、つまり値が小さい行が上に表示される。\n　たとえば、dfからContinentの値が\"Africa\"の行のみを抽出し、Polity_Scoreが小さい国3を上位にする。そして、CountryとPPP_per_capita、Polity_Score列のみ残すコードは以下の通りである。\n\n\n\nCode 34\n\ndf |&gt;\n  filter(Continent == \"Africa\") |&gt;\n  arrange(Polity_Score) |&gt;\n  select(Country, PPP_per_capita, Polity_Score)\n\n\n# A tibble: 54 × 3\n   Country             PPP_per_capita Polity_Score\n   &lt;chr&gt;                        &lt;dbl&gt;        &lt;dbl&gt;\n 1 Eswatini                     8634.           -9\n 2 Eritrea                      1860.           -7\n 3 Equatorial Guinea           19458.           -6\n 4 Cameroon                     3506.           -4\n 5 Congo (Brazzaville)          3191.           -4\n 6 Egypt                       11198.           -4\n 7 Morocco                      7554.           -4\n 8 Sudan                        4063.           -4\n 9 Comoros                      3007.           -3\n10 Congo (Kinshasa)             1043.           -3\n# ℹ 44 more rows\n\n\n　もし、Polity_Scoreが高い国を上位にしたい場合は、変数名をdesc()関数で囲む。\n\n\n\nCode 35\n\ndf |&gt;\n  filter(Continent == \"Africa\") |&gt;\n  arrange(desc(Polity_Score)) |&gt;\n  select(Country, PPP_per_capita, Polity_Score)\n\n\n# A tibble: 54 × 3\n   Country      PPP_per_capita Polity_Score\n   &lt;chr&gt;                 &lt;dbl&gt;        &lt;dbl&gt;\n 1 Mauritius            22637.           10\n 2 Kenya                 4105.            9\n 3 South Africa         12605.            9\n 4 Botswana             17311.            8\n 5 Ghana                 5097.            8\n 6 Lesotho               3019.            8\n 7 Benin                 3067.            7\n 8 Liberia               1461.            7\n 9 Nigeria               5018.            7\n10 Senegal               3248.            7\n# ℹ 44 more rows\n\n\n　しかし、Polity_Scoreが同点の場合はどうなるだろうか。この場合、第2の基準となる変数を指定すると、第1基準が同点の場合、第2基準変数の値に応じてソートされる。以下は、Polity_Scoreが高い国を上位にし、同点の場合はPPP_per_capitaが高い国を上位にするコード（さらに、変数名も変更）である。\n\n\n\nCode 36\n\ndf |&gt;\n  filter(Continent == \"Africa\") |&gt;\n  arrange(desc(Polity_Score), desc(PPP_per_capita)) |&gt;\n  select(Country, PPP = PPP_per_capita, Polity = Polity_Score)\n\n\n# A tibble: 54 × 3\n   Country         PPP Polity\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1 Mauritius    22637.     10\n 2 South Africa 12605.      9\n 3 Kenya         4105.      9\n 4 Botswana     17311.      8\n 5 Ghana         5097.      8\n 6 Lesotho       3019.      8\n 7 Tunisia      10773.      7\n 8 Nigeria       5018.      7\n 9 Senegal       3248.      7\n10 Benin         3067.      7\n# ℹ 44 more rows"
  },
  {
    "objectID": "materials/micro/handling1.html#教科書",
    "href": "materials/micro/handling1.html#教科書",
    "title": "第9回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「データハンドリング[抽出]」"
  },
  {
    "objectID": "materials/micro/datastructure.html",
    "href": "materials/micro/datastructure.html",
    "title": "第8回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/datastructure.html#スライド",
    "href": "materials/micro/datastructure.html#スライド",
    "title": "第8回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/datastructure.html#データ構造とは",
    "href": "materials/micro/datastructure.html#データ構造とは",
    "title": "第8回講義資料",
    "section": "データ構造とは",
    "text": "データ構造とは\n　Rにおけるデータの最小単位はベクトルである1。そして、これらのベクトルが集合として行列や表などが出来上がる。ベクトルの集合の在り方をRではデータ構造 (data structure)と呼ぶ。\n　たとえば、同じ長さのnumeric型（数値型）、またはcomplex型（複素数型）の縦ベクトルが横に並んでいる構造（図 1）をRではmatrix構造（行列構造）と呼ぶ。Matrix構造の場合「同じ長さ、かつnumeric/complex型の縦ベクトル」の集合と言えよう。データ型の制約のない「同じ長さの縦ベクトル」の集合はRでdata.frame構造（データフレーム構造）と呼ばれる。また、data.frame構造は各列には名前が付くといった特徴がある。\n\n\n\n\n\n\n図 1: 行列構造の例\n\n\n\n\n\n\n\n図 2: データフレーム構造の例\n\n\n\n\n\n　本講義で使うデータ構造は主にベクトル (vector) とデータ・フレーム (data.frame) とその拡張版のティブル (tibble) のみであるため、行列 (matrix) 、配列 (array) 、リスト (array) の説明は割愛する。"
  },
  {
    "objectID": "materials/micro/datastructure.html#ベクトル",
    "href": "materials/micro/datastructure.html#ベクトル",
    "title": "第8回講義資料",
    "section": "ベクトル",
    "text": "ベクトル\n　ベクトル構造は同じデータ型が一つ以上格納されているオブジェクトであり、これまで何回も登場したデータ構造である。ベクトルはRにおけるデータの最小単位である。Rには数百、数千種類のデータ構造が存在するが、これら全てのデータ構造の最小単位はベクトルである。\n\n\n\nCode 01\n\nmy_vec1 &lt;- \"R is fun!\" # 長さ1のcharacter型ベクトル\nmy_vec1\n\n\n[1] \"R is fun!\"\n\n\n\n\n\nCode 02\n\nmy_vec2 &lt;- c(1, 3, 5, 6, 7) # 長さ5のnumeric型ベクトル\nmy_vec2\n\n\n[1] 1 3 5 6 7\n\n\n　ベクトルを作成する際、注意しないといけないことは一つのベクトル内の全ての要素は同じデータ型である点である。もし、複数のデータ型が混在している場合、優先順位の高いデータ型へ強制的に変換される。頻繁に使われるデータ型の場合、優先順位はcharacter型 &gt; numeric型 &gt; logical型であり、character型の優先順位が最も高い。\n　たとえば、character型とnumeric型の要素が混在したベクトルを考えてみよう。my_vec3は長さ6のベクトルであるが、2つのデータ型が混在しているため、character型が優先される。\n\n\n\nCode 03\n\nmy_vec3 &lt;- c(\"A\", \"B\", \"C\", 1, 2, 3)\nmy_vec3\n\n\n[1] \"A\" \"B\" \"C\" \"1\" \"2\" \"3\"\n\n\n\n\n\nCode 04\n\nclass(my_vec3)\n\n\n[1] \"character\"\n\n\n　Numeric型とlogical型が混在している場合、logical型の要素はnumeric型へ変換される。変換される際、TRUEは1、FALSEは0に変換される。\n\n\n\nCode 05\n\nmy_vec4 &lt;- c(10, 20, TRUE, FALSE)\nmy_vec4\n\n\n[1] 10 20  1  0\n\n\n\n\n\nCode 06\n\nclass(my_vec4)\n\n\n[1] \"numeric\"\n\n\n　Character型とlogical型が混在している場合、logical型の要素はcharacter型へ変換される。変換される際、TRUEは\"TRUE\"、FALSEは\"FALSE\"に変換される。\n\n\n\nCode 07\n\nmy_vec5 &lt;- c(\"Miyakura\", \"Seki\", TRUE, FALSE)\nmy_vec5\n\n\n[1] \"Miyakura\" \"Seki\"     \"TRUE\"     \"FALSE\"   \n\n\n\n\n\nCode 08\n\nclass(my_vec5)\n\n\n[1] \"character\"\n\n\n　その他、ベクトルの操作（演算、要素の抽出など）についてはこれまでの講義資料を参照すること。"
  },
  {
    "objectID": "materials/micro/datastructure.html#行列",
    "href": "materials/micro/datastructure.html#行列",
    "title": "第8回講義資料",
    "section": "行列",
    "text": "行列\n　行列構造とはnumeric型、またはcomplex型の縦ベクトルを横に並べたデータ構造である。以下のmy_mat1は3行4列（3 \\(\\times\\) 4）の行列である。\n\n\n\nCode 09\n\nmy_mat1 &lt;- matrix(1:12, nrow = 3)\nmy_mat1\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n　このmy_mat1は長さ3のnumeric型縦ベクトルが4つ並んでいる。4つの縦ベクトルとはc(1, 2, 3)、c(4, 5, 6)、c(7, 8, 9)、c(10, 11, 12)である。他にも長さ4のnumeric型横ベクトルが3つ（c(1, 4, 7, 10)、c(2, 5, 8, 11)、c(3, 6, 9, 12)）積まれているとも読めるが、データ分析では一般的に縦ベクトルの集合として行列を捉える。\n\n行列の作成\n　行列を作成する際はmatrix()関数を使用する。第1引数としてnumericまたはcomplex型ベクトル、nrow引数で行列の行数を指定する。たとえば、以下のような行列を作成し、my_mat2という名のオブジェクトとして作業環境内に格納するとしよう。\n\\[\n\\begin{bmatrix}\n5 & 2 & 9 & 6 \\\\\n5 & 4 & -8 & 2 \\\\\n-3 & 3 & 0 & 7\n\\end{bmatrix}\n\\]\n\n\n\nCode 10\n\nmy_mat2 &lt;- matrix(c(5, 5, -3, 2, 4, 3, 9, -8, 0, 6, 2, 7), nrow = 3)\nmy_mat2\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    5    2    9    6\n[2,]    5    4   -8    2\n[3,]   -3    3    0    7\n\n\n　第1引数はベクトルはベクトル構造のオブジェクトであるため、予めベクトルを作成し、ベクトル名を入れることも可能である。\n\n\n\nCode 11\n\nmy_vec6 &lt;- c(5, 5, -3, 2, 4, 3, 9, -8, 0, 6, 2, 7)\nmy_mat3 &lt;- matrix(my_vec6, nrow = 3)\nmy_mat3\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    5    2    9    6\n[2,]    5    4   -8    2\n[3,]   -3    3    0    7\n\n\n　ここで注意すべき点は要素が入る順番である。我々は通常「左から右へ」、「上から下へ」文字列を読むが、行列はその逆、つまり「上から下へ」、「左から右へ」の順番となる（図 3）。行列が「縦ベクトルの集合」ということを意識すれば、予め混乱は避けられるだろう。\n\n\n\n図 3: 行列の要素の順番\n\n\n\n\n行列の操作\n　行列構造のデータは本講義では使用しないため、説明は割愛し、ここでは行列の確認と要素の抽出するコードのみ紹介する。\n\n\n\nCode 12\n\nclass(my_mat1) # my_mat1のデータ構造\n\n\n[1] \"matrix\" \"array\" \n\n\n\n\n\nCode 13\n\ndim(my_mat1)   # 行列の行数と列数\n\n\n[1] 3 4\n\n\n\n\n\nCode 14\n\nnrow(my_mat1)  # 行列の行数\n\n\n[1] 3\n\n\n\n\n\nCode 15\n\nncol(my_mat1)  # 行列の列数\n\n\n[1] 4\n\n\n\n\n\nCode 16\n\nmy_mat1[1, ]   # my_matの1「行」目を抽出\n\n\n[1]  1  4  7 10\n\n\n\n\n\nCode 17\n\nmy_mat1[, 3]   # my_matの3「列」目を抽出\n\n\n[1] 7 8 9\n\n\n\n\n\nCode 18\n\nmy_mat1[2, 4]  # my_matの2「行」、4「列」目を抽出\n\n\n[1] 11\n\n\n\n\n行列の演算\n　行列構造のデータは本講義では使用しないため、説明は割愛するが、これらは線形代数を勉強する人には便利な演算子である。\n\n\n\n演算子/関数\n説明\n\n\n\n\n+\n行列の足し算\n\n\n-\n行列の引き算\n\n\n%*%\n行列の掛け算\n\n\n/\n行列の割り算\n\n\n*\n行列のアダマール積 (Hadamard product)\n\n\nt(オブジェクト名)\n行列の転置\n\n\nqr(オブジェクト名)$rank\n行列の階数\n\n\nsolve(オブジェクト名)\n逆行列\n\n\neigen(オブジェクト名)\n行列の固有値\n\n\n\n　solve()とeigen()は正方行列 (\\(n \\times n\\)の行列)でないと使えないことに注意しよう。\n\n\n配列\n　行列と似たようなデータ構造として、配列（array）構造がある。これは同じ大きさ行列を重ねたものであり（図 4）、行列は層 (layer) が1つのみの配列である。つまり、行列構造は配列構造の一種であり、実際、class()で行列構造のデータ構造を確認すると\"matrix\"だけでなく、\"array\"も同時に出力される。2次元である行列を重ねたものであるため、配列構造は3次元のデータ構造であり、要素抽出の際、[x, y, z]で指定する必要がある（3番目のzが配列の層 (layer)を意味する）。\n\n\n\n図 4: 配列構造のイメージ"
  },
  {
    "objectID": "materials/micro/datastructure.html#データフレーム",
    "href": "materials/micro/datastructure.html#データフレーム",
    "title": "第8回講義資料",
    "section": "データ・フレーム",
    "text": "データ・フレーム\n　データ・フレーム構造（data.frame）は行列構造と同様、縦ベクトルを横に並べたものである。しかし、以下の2点が異なる。\n\nデータ・フレーム構造の場合、すべてのベクトルが同じデータ型である必要がない。\n\n図 5 の場合、character型（1列目）とnumeric型（2、3、4列目）ベクトルが混在している。\n\nデータ・フレーム構造の場合、各列に名前が付いている。\n\n図 5 の場合、Name、Foundation、Students、Facultiesが列名である。\n\n\n\n\n\n図 5: 行列の要素の順番\n\n\n　データ・フレーム構造は我々が頻繁に接する表形式データ、そのものである。前期・後期の講義全体を通じて最も頻繁に扱うこととなるデータ構造であるため、非常に重要なデータ構造である。詳しい操作方法は次回以降（データ・ハンドリング）の講義で解説するが、ここでは作成方法、確認方法、簡単な抽出方法について解説する。\n\nデータ・フレームの作成\n　データ・フレームを作成する方法は大きく分けて2通りある。小さい表であれば（1）自分で作成することも可能だが、ある程度の規模のあるデータならダウンロードしたデータや表計算ソフト（Excel、Numbers、LibreOffice Calcなど）で作成した表を（2）読み込むこともできる。\n　まずは、直接データ・フレームを作成する方法から紹介する。データ・フレームの作成にはdata.frame()、またはtibble()関数を使用する。data.frame()はR内蔵関数であるが、tibble()関数は使用する前に予め{tidyverse}パッケージを読み込んでおく必要がある。data.frame()とtibble()は厳密には異なるデータ構造であるが、tibble()で作成した表がより汎用性が高いため、ここではtibble()関数を使用したデータ・フレームの作成する方法を紹介する。\n　まず、{tidyverse}パッケージを読み込む。\n\n\n\nCode 19\n\nlibrary(tidyverse)\n\n\n　ここでは以下のような表を作成する。\n\n\n\n\n\n\n\n\nName\nFoundation\nStudents\n\n\n\n\nKansai\n1886\n27736\n\n\nKangaku\n1889\n23671\n\n\nDoshisha\n1875\n25974\n\n\nRitsumeikan\n1900\n32467\n\n\n\n\n\n\n\n　この表は3つの縦ベクトルの集合であり、それぞれの名前はName、Foundation、Studentsである。tibble()関数内に列名 = 縦ベクトルを入れるだけである。作成したデータ・フレームをmy_df1という名のオブジェクトとして格納し、その中身を確認してみよう。\n\n\n\nCode 20\n\nmy_df1 &lt;- tibble(Name       = c(\"Kansai\", \"Kangaku\", \"Doshisha\", \"Ritsumeikan\"),\n                 Foundation = c(1886, 1889, 1875, 1900),\n                 Students   = c(27736, 23671, 25974, 32467))\n\nmy_df1\n\n\n# A tibble: 4 × 3\n  Name        Foundation Students\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;\n1 Kansai            1886    27736\n2 Kangaku           1889    23671\n3 Doshisha          1875    25974\n4 Ritsumeikan       1900    32467\n\n\n　データ・フレーム構造はベクトルの集合であるため、ベクトルから作成することも出来る。以下のような表を作成するとする。\n\n\n\n\n\n\n\n\nName\nPop\nArea\nFood\n\n\n\n\nTokyo\n1396\n2194\nMonja\n\n\nNagoya\n755\n5173\nTebasaki\n\n\nOsaka\n882\n1899\nTakoyaki\n\n\nFukuoka\n511\n4987\nRamen\n\n\n\n\n\n\n\n　今回はそれぞれの列に外とするベクトルを予め作成し、そのベクトルをtibble()関数の引数として使用する。作成したオブジェクトはmy_df2と名付けよう。\n\n\n\nCode 21\n\nName &lt;- c(\"Tokyo\", \"Nagoya\", \"Osaka\", \"Fukuoka\")\nFood &lt;- c(\"Monja\", \"Tebasaki\", \"Takoyaki\", \"Ramen\")\nPop  &lt;- c(1396, 755, 882, 511)\nArea &lt;- c(2194, 5173, 1899, 4987)\n\nmy_df2 &lt;- tibble(Name, Pop, Area, Food)\n\nmy_df2\n\n\n# A tibble: 4 × 4\n  Name      Pop  Area Food    \n  &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   \n1 Tokyo    1396  2194 Monja   \n2 Nagoya    755  5173 Tebasaki\n3 Osaka     882  1899 Takoyaki\n4 Fukuoka   511  4987 Ramen   \n\n\n　以上のような数行 \\(\\times\\) 数列の表なら手打ちで作成することもできるが、数百〜数万人のデータなどを手打ちで作成することはほぼ不可能であろう。この場合、予め表計算ソフトを使って表を作成しておくか、既に公開されている表形式データを使うこととなる。別途のファイルとして保存されている表形式ファイル（.csvファイル）の読み込みにはread_csv()関数を使う2。read_csv()は{tidyverse}パッケージを読み込んでおかないと使えないため、予め読んでおこう。今回は既に読み込み済みであるため不要である。\n　第6回の講義で作成したデータ（BuildingData.csv）がプロジェクト・フォルダー内のDataフォルダー内に保存されている場合、以下のように読み込む。読み込んだデータを使うためには作業環境内にオブジェクトとして格納しておく必要があり、今回はmy_df3と名付ける。\n\n\n\nCode 22\n\nmy_df3 &lt;- read_csv(\"Data/BuildingData.csv\") # 第6回のデータ\n\n\n\n\nデータ・フレームの確認\n　作業環境に格納されたデータ・フレームを出力する場合はオブジェクト名を入力する。データが画面に収まらない場合は一部の列が省略される場合があり、出力される行数はデフォルト設定では10行である。以下でも最初の10行しか出力されているが、出力画面の1行目の情報（# A tibble: 47 × 5）から全47行のデータであることが分かる。\n\n\n\nCode 23\n\nmy_df3\n\n\n# A tibble: 47 × 5\n      ID Pref   Finance Over65 Turnout\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道   0.462   32.3    58.8\n 2     2 青森県   0.358   33.7    52.9\n 3     3 岩手県   0.372   33.8    60.4\n 4     4 宮城県   0.626   28.4    55.9\n 5     5 秋田県   0.322   37.6    58.2\n 6     6 山形県   0.379   34.0    64.3\n 7     7 福島県   0.545   31.8    58.0\n 8     8 茨城県   0.656   30.3    52.5\n 9     9 栃木県   0.648   29.6    53.1\n10    10 群馬県   0.638   30.9    53.9\n# … with 37 more rows\n\n\n　全ての行を出力するためにはprint()関数を使用し、n = Infを指定する。ちなみにn = 20にすると、最初の20行が出力される。\n\n\n\nCode 24\n\nprint(my_df3, n = Inf)\n\n\n# A tibble: 47 × 5\n      ID Pref     Finance Over65 Turnout\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道     0.462   32.3    58.8\n 2     2 青森県     0.358   33.7    52.9\n 3     3 岩手県     0.372   33.8    60.4\n 4     4 宮城県     0.626   28.4    55.9\n 5     5 秋田県     0.322   37.6    58.2\n 6     6 山形県     0.379   34.0    64.3\n 7     7 福島県     0.545   31.8    58.0\n 8     8 茨城県     0.656   30.3    52.5\n 9     9 栃木県     0.648   29.6    53.1\n10    10 群馬県     0.638   30.9    53.9\n11    11 埼玉県     0.770   27.3    54.0\n12    12 千葉県     0.778   28.0    53.6\n13    13 東京都     1.15    23.3    57.2\n14    14 神奈川県   0.889   25.9    56.3\n15    15 新潟県     0.475   33.0    63.2\n16    16 富山県     0.485   32.9    55.7\n17    17 石川県     0.518   30.2    57.1\n18    18 福井県     0.421   31.1    57.8\n19    19 山梨県     0.409   31.1    60.6\n20    20 長野県     0.528   32.3    59.8\n21    21 岐阜県     0.559   31.1    58.1\n22    22 静岡県     0.726   30.7    54.8\n23    23 愛知県     0.912   25.8    56.0\n24    24 三重県     0.609   30.6    56.2\n25    25 滋賀県     0.576   26.7    57.3\n26    26 京都府     0.595   29.5    56.3\n27    27 大阪府     0.792   27.7    56.2\n28    28 兵庫県     0.649   29.3    54.3\n29    29 奈良県     0.437   31.7    59.1\n30    30 和歌山県   0.338   33.4    58.2\n31    31 鳥取県     0.287   32.5    58.2\n32    32 島根県     0.266   34.7    61.6\n33    33 岡山県     0.535   30.7    50.9\n34    34 広島県     0.618   29.8    52.1\n35    35 山口県     0.457   34.8    49.7\n36    36 徳島県     0.327   34.3    53.9\n37    37 香川県     0.487   32.1    56.1\n38    38 愛媛県     0.448   33.4    55.0\n39    39 高知県     0.274   35.6    57.3\n40    40 福岡県     0.658   28.2    52.1\n41    41 佐賀県     0.356   30.9    58.5\n42    42 長崎県     0.348   33.2    56.9\n43    43 熊本県     0.427   31.7    56.4\n44    44 大分県     0.395   33.5    57.3\n45    45 宮崎県     0.358   32.9    53.7\n46    46 鹿児島県   0.353   32.7    57.7\n47    47 沖縄県     0.375   22.7    54.9\n\n\n　データの最初のx行を出力するにはprint()関数とn引数の組み合わせでも出来るが、他にもhead()関数がある。これは最初の6行のみ出力してくれる関数である。\n\n\n\nCode 25\n\nhead(my_df3)\n\n\n# A tibble: 6 × 5\n     ID Pref   Finance Over65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1     1 北海道   0.462   32.3    58.8\n2     2 青森県   0.358   33.7    52.9\n3     3 岩手県   0.372   33.8    60.4\n4     4 宮城県   0.626   28.4    55.9\n5     5 秋田県   0.322   37.6    58.2\n6     6 山形県   0.379   34.0    64.3\n\n\n　head()関数はprint()関数同様、n引数で出力行数を変えることが出来る。\n\n\n\nCode 26\n\nhead(my_df3, n = 10)\n\n\n# A tibble: 10 × 5\n      ID Pref   Finance Over65 Turnout\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道   0.462   32.3    58.8\n 2     2 青森県   0.358   33.7    52.9\n 3     3 岩手県   0.372   33.8    60.4\n 4     4 宮城県   0.626   28.4    55.9\n 5     5 秋田県   0.322   37.6    58.2\n 6     6 山形県   0.379   34.0    64.3\n 7     7 福島県   0.545   31.8    58.0\n 8     8 茨城県   0.656   30.3    52.5\n 9     9 栃木県   0.648   29.6    53.1\n10    10 群馬県   0.638   30.9    53.9\n\n\n　head()関数の友達としてtail()関数がある。これは最後の6行を出力をしてくれる関数である。\n\n\n\nCode 27\n\ntail(my_df3)\n\n\n# A tibble: 6 × 5\n     ID Pref     Finance Over65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1    42 長崎県     0.348   33.2    56.9\n2    43 熊本県     0.427   31.7    56.4\n3    44 大分県     0.395   33.5    57.3\n4    45 宮崎県     0.358   32.9    53.7\n5    46 鹿児島県   0.353   32.7    57.7\n6    47 沖縄県     0.375   22.7    54.9\n\n\n　むろん、head()関数同様、n引数で出力行数を変えることが出来る。\n\n\n\nCode 28\n\ntail(my_df3, n = 3)\n\n\n# A tibble: 3 × 5\n     ID Pref     Finance Over65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1    45 宮崎県     0.358   32.9    53.7\n2    46 鹿児島県   0.353   32.7    57.7\n3    47 沖縄県     0.375   22.7    54.9\n\n\n　もう一つ便利な関数はデータの中身を一切出力せず、列名（変数名）のみを出力してくれるnames()関数である。結果としてcharacter型ベクトルが返される。\n\n\n\nCode 29\n\nnames(my_df3)\n\n\n[1] \"ID\"      \"Pref\"    \"Finance\" \"Over65\"  \"Turnout\"\n\n\n　my_df3のデータ構造はデータ・フレームであるが、これはclass()関数で確認できる。詳細は割愛するがオブジェクトは複数のクラスを持つことが許容されており、my_df3の場合は4つのクラスの中に\"data.frame\"が含まれているため、データ・フレーム構造であることが分かる。\n\n\n\nCode 30\n\nclass(my_df3) # my_df2のデータ構造\n\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\n　実際、あるオブジェクトがデータ・フレームかどうかを判定するis.data.frame()関数を使うと、my_df3がデータ・フレームであることが分かる。\n\n\n\nCode 31\n\nis.data.frame(my_df3)\n\n\n[1] TRUE\n\n\n　他にもデータ・フレームの特徴を調べる関数としてデータ・フレームの大きさを計算する関数がある。データ・フレームの大きさとは行数と列数を意味し、それぞれnrow()とncol()関数で計算することができる。\n\n\n\nCode 32\n\nnrow(my_df1) # my_df1の行数\n\n\n[1] 4\n\n\n\n\n\nCode 33\n\nncol(my_df2) # my_df2の列数\n\n\n[1] 4\n\n\n　dim()関数を使えば行数と列数を同時に出力され、長さ2のnumeric型ベクトルが返される。\n\n\n\nCode 34\n\ndim(my_df3) # my_df3の大きさ\n\n\n[1] 47  5\n\n\n\n\n行の抽出\n　ベクトルは1次元であるに対し、データ・フレームは行と列といった2次元構造であるため、行・列を抽出するためには行、列をそれぞれ指定する必要がある。ベクトルと同様、オブジェクト名の後ろに[]を付けることは変わらないが、データ・フレームは2次元構造であるため、[行, 列]で指定する必要がある。\n　たとえば、my_df3の27行目を抽出するためにはmy_df3[27, ]と入力する。列の指定がされていない場合は全ての列が抽出される。\n\n\n\nCode 35\n\nmy_df3[27, ]\n\n\n# A tibble: 1 × 5\n     ID Pref   Finance Over65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1    27 大阪府   0.792   27.7    56.2\n\n\n　抽出された行のデータ構造はデータ・フレームである。\n\n\n\nCode 36\n\nclass(my_df3[27, ])\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n　行の位置を長さ2以上のベクトルにすることで、複数行の抽出もできる。c()関数や:演算子が使用可能である。以下の例はmy_df3から13、27、40行目を抽出するコードである。\n\n\n\nCode 37\n\nmy_df3[c(13, 27, 40), ]\n\n\n# A tibble: 3 × 5\n     ID Pref   Finance Over65 Turnout\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1    13 東京都   1.15    23.3    57.2\n2    27 大阪府   0.792   27.7    56.2\n3    40 福岡県   0.658   28.2    52.1\n\n\n　抽出された行のデータ構造はデータ・フレームである。\n\n\n\nCode 38\n\nclass(my_df3[c(13, 27, 40), ])\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\n\n列の抽出\n　列の抽出も行の抽出方法と同じである。たとえば、my_df3の2列目を抽出したい場合は以下のように入力する。\n\n\n\nCode 39\n\nmy_df3[, 2] # my_df3[, \"Pref\"] でもOK\n\n\n# A tibble: 47 × 1\n   Pref  \n   &lt;chr&gt; \n 1 北海道\n 2 青森県\n 3 岩手県\n 4 宮城県\n 5 秋田県\n 6 山形県\n 7 福島県\n 8 茨城県\n 9 栃木県\n10 群馬県\n# … with 37 more rows\n\n\n　抽出された列のデータ構造はデータ・フレームである。\n\n\n\nCode 40\n\nclass(my_df3[, 2])\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n　c()や:演算子を使うことで複数列の抽出も可能であり、抽出後のデータ構造もデータ・フレームである。\n\n\n\nCode 41\n\n# my_df3[, c(\"Pref\", \"Over65\", \"Turnout\")] でもOK\nmy_df3[, c(2, 4, 5)]\n\n\n# A tibble: 47 × 3\n   Pref   Over65 Turnout\n   &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 北海道   32.3    58.8\n 2 青森県   33.7    52.9\n 3 岩手県   33.8    60.4\n 4 宮城県   28.4    55.9\n 5 秋田県   37.6    58.2\n 6 山形県   34.0    64.3\n 7 福島県   31.8    58.0\n 8 茨城県   30.3    52.5\n 9 栃木県   29.6    53.1\n10 群馬県   30.9    53.9\n# … with 37 more rows\n\nclass(my_df3[, c(2, 4, 5)])\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n　列抽出の場合、[]以外にも$を使うこともできる。[]は抽出する行・列の位置を指定するが、$を使う場合は列名を指定する。たとえば、my_df3のPref列を抽出する場合は以下のように入力する。この場合は複数列の抽出はできないことに注意すること。\n\n\n\nCode 42\n\nmy_df3$Pref\n\n\n [1] \"北海道\"   \"青森県\"   \"岩手県\"   \"宮城県\"   \"秋田県\"   \"山形県\"  \n [7] \"福島県\"   \"茨城県\"   \"栃木県\"   \"群馬県\"   \"埼玉県\"   \"千葉県\"  \n[13] \"東京都\"   \"神奈川県\" \"新潟県\"   \"富山県\"   \"石川県\"   \"福井県\"  \n[19] \"山梨県\"   \"長野県\"   \"岐阜県\"   \"静岡県\"   \"愛知県\"   \"三重県\"  \n[25] \"滋賀県\"   \"京都府\"   \"大阪府\"   \"兵庫県\"   \"奈良県\"   \"和歌山県\"\n[31] \"鳥取県\"   \"島根県\"   \"岡山県\"   \"広島県\"   \"山口県\"   \"徳島県\"  \n[37] \"香川県\"   \"愛媛県\"   \"高知県\"   \"福岡県\"   \"佐賀県\"   \"長崎県\"  \n[43] \"熊本県\"   \"大分県\"   \"宮崎県\"   \"鹿児島県\" \"沖縄県\"  \n\n\n　もう一つ注意すべき点としては$で抽出された列はデータ・フレームでなく、ベクトルである点だ。実際、my_df3$Prefのデータ構造を調べてみると、character型と出力される。データ構造がベクトルの場合はデータ型が出力される。\n\n\n\nCode 43\n\nclass(my_df3$Pref)\n\n\n[1] \"character\"\n\n\n　is.vector()関数でmy_df3$Prefがベクトルかどうかを調べることもできる。\n\n\n\nCode 44\n\nis.vector(my_df3$Pref)\n\n\n[1] TRUE\n\n\n　このように、抽出方法によって返り値のデータ構造が異なる。要約すると、（1）[]を用いた抽出は返り値がデータ・フレームであり、（2）$を用いた抽出は返り値がベクトルである点だ。\n\n\n\n\n\n\n\n\n\nコード\n意味\n返り値\n備考\n\n\n\n\nデータ・フレーム名[i, ]\ni番目の行を抽出\nデータ・フレーム\niは任意のベクトル\n\n\nデータ・フレーム名[, i]\ni番目の列を抽出\nデータ・フレーム\niは任意のベクトル\n\n\nデータ・フレーム名$列名\n当該列を抽出\nベクトル"
  },
  {
    "objectID": "materials/micro/datastructure.html#リスト",
    "href": "materials/micro/datastructure.html#リスト",
    "title": "第8回講義資料",
    "section": "リスト",
    "text": "リスト\n　最後に紹介するリスト構造はあらゆるデータ構造が格納できるデータ構造である。つまり、様々なデータ構造のオブジェクトが一つのオブジェクトとしてまとまったものであえる3。実は、Rに存在する多くのオブジェクトはリストである。したがって、Rでデータを自由自在に操るためにはリストの知識が必須である。ただし、本講義（後期を含む）ではリストは使わないため、詳細な説明は省略する。\n　リスト構造オブジェクトを作成する場合はlist()関数を使用し、中には格納するオブジェクト名を入力する。それぞれのオブジェクトに名前を付ける場合は名前 = オブジェクト名と入力する。ここではこれまで作成してきたmy_vec1、my_vec4、my_mat1、my_df1をまとめたmy_listを作成し、それぞれVector1、Vector2、Matrix、DFと名付ける。\n\n\n\nCode 45\n\nmy_list &lt;- list(Vector1 = my_vec1,\n                Vector2 = my_vec4,\n                Matrix  = my_mat1,\n                DF      = my_df1)\n\nmy_list\n\n\n$Vector1\n[1] \"R is fun!\"\n\n$Vector2\n[1] 10 20  1  0\n\n$Matrix\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n$DF\n# A tibble: 4 × 3\n  Name        Foundation Students\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;\n1 Kansai            1886    27736\n2 Kangaku           1889    23671\n3 Doshisha          1875    25974\n4 Ritsumeikan       1900    32467\n\n\n　class()関数でmy_listのデータ構造を確認してみるとリスト構造であることが分かる。\n\n\n\nCode 46\n\nclass(my_list)\n\n\n[1] \"list\"\n\n\n　また、length()関数を使えば、当該オブジェクト内にいくつのオブジェクトが入っているかが分かる。\n\n\n\nCode 47\n\nlength(my_list)\n\n\n[1] 4\n\n\n　リスト構造のオブジェクトから任意の要素（オブジェクト）を抽出する場合は[]でなく、[[]]を使用する。リスト名[[i]]の場合、リストのi番目要素が抽出される。\n\n\n\nCode 48\n\nmy_list[[2]] # my_listから2番目のオブジェクトを抽出\n\n\n[1] 10 20  1  0\n\n\n　もし、各オブジェクトに名前が付いている場合は[[]]内に位置でなく、要素名で抽出することもできる。my_list内のDFと名付けられた要素を抽出するためには以下のように入力する。要素名は\"で囲む必要がある。\n\n\n\nCode 49\n\nmy_list[[\"DF\"]]\n\n\n# A tibble: 4 × 3\n  Name        Foundation Students\n  &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;\n1 Kansai            1886    27736\n2 Kangaku           1889    23671\n3 Doshisha          1875    25974\n4 Ritsumeikan       1900    32467\n\n\n　また、データフレームの列抽出のように、$を使うこともできる。ただし、当該要素に名前が付いてある必要があり、要素名は\"で囲む必要がない。以下のコードはmy_listからMatrixと名付けられた要素を抽出するコードである。\n\n\n\nCode 50\n\nmy_list$Matrix\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12"
  },
  {
    "objectID": "materials/micro/datastructure.html#教科書",
    "href": "materials/micro/datastructure.html#教科書",
    "title": "第8回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』第9章: データ構造"
  },
  {
    "objectID": "materials/micro/basic.html",
    "href": "materials/micro/basic.html",
    "title": "第3回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/basic.html#スライド",
    "href": "materials/micro/basic.html#スライド",
    "title": "第3回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/basic.html#電卓としてのr",
    "href": "materials/micro/basic.html#電卓としてのr",
    "title": "第3回講義資料",
    "section": "電卓としてのR",
    "text": "電卓としてのR\n手順1: File &gt; New File &gt; R Scriptをクリックする。\n\n\n\n\n\n手順2: Sourceペインのペイン最大化ポタンをクリックし、Sourceペインの大きさ最大化する。\n\n\n\n\n\n手順3: Sourceペインに以下の内容を入力する。\n\n\n\nCode 01\n\n1 + 1\n\n\n手順4: コードの行にカーソルをおいたままControl（Ctrl）とEnterを同時に押す（大学のWindows PCの場合）。これはカーソルが位置する行のコードを実行するキーである。このキーは使用するOSによって異なる。\n\n\n\n\n\n\n\n\nOS\nキー\n解説\n\n\n\n\nmacOS\nCommand-Return\nCommand（Cmd） + Return\n\n\nLinux（Ubuntu）\nCtrl-Return\nControl（Ctrl）+ Return\n\n\nWindows\nCtrl-Enter\nControl（Ctrl）+ Enter\n\n\n\n\n\n\n\n\n\nカーソルって…?\n\n\n\nカーソル (cursor)とは文字の入力位置を意味する。RStudioのテーマによって色は異なるが、Sourceペイン、またはConsoleペインなど、何らかの文字が入力できる箇所において点滅する「|」がカーソルです。\n\n\n手順5: Consoleペインに結果が表示される。\n\n\n[1] 2\n\n\n　これくらいの計算はConsoleペインで直接打ち込んでも良いが、自分がこれまで書いたコードを残すという意味でSourceペインに入力することを推奨する。R Scriptを保存しておけばいつでも開いて前回のコードを再現できる。"
  },
  {
    "objectID": "materials/micro/basic.html#コメント",
    "href": "materials/micro/basic.html#コメント",
    "title": "第3回講義資料",
    "section": "コメント",
    "text": "コメント\n　Rのスクリプトを作成する際、何かのメモを書いておきたいケースが多々ある。コードが長くなったり、複雑になったりすると、自分が書いたコードでも意味がよく分からないケースも多く発生する。これはデータ分析のプロでも例外でなく、宋も同じである。この場合、スクリプト内にこまめにメモを書いておくと、このコードが何のためのコードかなどが素早く把握できる。\n　Rにおけるコメントは#を使用する。同じ行における#以降の内容は処理に影響を与えない。たとえば、以下のコードだと# 12345と12345の積は処理に影響を与えない\n\n\n\nCode 02\n\n# 12345と12345の積\n12345 * 12345\n\n\n[1] 152399025\n\n\n　また、コードと同じ行にコメントを書くこともできる。\n\n\n\nCode 03\n\n12345 * 12345 # 12345と12345の積\n\n\n[1] 152399025\n\n\n　コードにこまめにコメントを書くのは意外と面倒な作業であるが、コメントに「書きすぎ」は存在しない。書けば書くほど未来の自分から感謝されるだろう。"
  },
  {
    "objectID": "materials/micro/basic.html#算術演算子",
    "href": "materials/micro/basic.html#算術演算子",
    "title": "第3回講義資料",
    "section": "算術演算子",
    "text": "算術演算子\n　算術演算子は数字と数字の間に入力し、結果として何らかの数字が返される演算子である。先ほどの+や*も算術演算子（足し算と掛け算）である。ここでは良く使う算術演算子7つを紹介する。\n\n\n\n演算子\n意味\n例\n結果\n\n\n\n\n+\n和\n2 + 5\n7\n\n\n-\n差\n2 - 8\n-6\n\n\n*\n積\n7 * 3\n21\n\n\n/\n商\n16 / 5\n3.2\n\n\n^、**\n累乗（べき乗）\n2^3または2 ** 3\n8\n\n\n%%\n剰余 (モジュロ)\n18 %% 7\n4\n\n\n%/%\n整数商\n18 %/% 7\n2\n\n\n\n　例を見てみよう。\n\n\n\nCode 04\n\n1 + 5  # 足し算\n\n\n[1] 6\n\n\n\n\n\nCode 05\n\n3 - 10 # 引き算\n\n\n[1] -7\n\n\n\n\n\nCode 06\n\n19 * 2 # 掛け算\n\n\n[1] 38\n\n\n\n\n\nCode 07\n\n13 / 7 # 割り算\n\n\n[1] 1.857143\n\n\n\n\n\nCode 08\n\n5^3    # 5の3乗\n\n\n[1] 125\n\n\n　これは義務ではないがないが、累乗（^）を除き、演算子の前後にはスペースを入れるのがRの流儀であり、コードが読みやすくなる。以下のコードを比べてみよう。\n\n\n\nCode 09\n\n# 読みにくい例\n(((3+5)*4)+((5%%2)+3))^2\n\n\n[1] 1296\n\n\n\n\n\nCode 10\n\n# 読みやすい例\n(((3 + 5) * 4) + ((5 %% 2) + 3))^2\n\n\n[1] 1296\n\n\n　結果は同じだが、後者の方が読みやすいだろう。これから紹介する論理演算子でも共通する内容であるが、「累乗（^）を除き、演算子の前後にはスペースを入れる」ことを覚えておこう。ちなみにカッコ（(と)）は演算子ではないため、スペースは不要である。"
  },
  {
    "objectID": "materials/micro/basic.html#論理演算子",
    "href": "materials/micro/basic.html#論理演算子",
    "title": "第3回講義資料",
    "section": "論理演算子",
    "text": "論理演算子\n　算術演算子は結果として数値が返ってくるが、論理演算子は真（TRUE）か偽（FALSE）のいずれかの値を返す演算子である。ここではまず、大小関係を判定する論理演算子を紹介する。\n\n\n\n\n\n\n\n\n\n演算子\n意味\n例\n結果\n\n\n\n\nx &lt; y\nxはyより小さい\n3 &lt; 1\nFALSE\n\n\nx &lt;= y\nxはyと等しいか、小さい\n2 &lt;= 2\nTRUE\n\n\nx &gt; y\nxはyより大きい\n6 &gt; 5\nTRUE\n\n\nx &gt;= y\nxはyと等しいか、大きい\n4 &gt;= 5\nFALSE\n\n\nx == y\nxとyは等しい\n(2 + 3) == (4 + 1)\nTRUE\n\n\nx != y\nxとyは等しくない\n((2 * 3) + 1) != (2 * (3 + 1))\nTRUE\n\n\n\n　一つ注意すべき点は「等しい」を意味する論理演算子は=でなく、==だということだ1。\n\n\n\nCode 11\n\n3 &gt; 2 # 3は2より大きいの?\n\n\n[1] TRUE\n\n\n\n\n\nCode 12\n\n5 &lt;= 10 # 5は10と同じか小さいの?\n\n\n[1] TRUE\n\n\n\n\n\nCode 13\n\n2 + 3 == 1 # 2と3の和は1なの?\n\n\n[1] FALSE\n\n\n\n\n\nCode 14\n\n2 + 2 != 2 * 2 # 2と2の和は2と2の積と同じなの?\n\n\n[1] FALSE\n\n\n　算術演算子は一行に何回も使えるが、通常、論理演算子は一行に一つしか使えない。複数の論理演算子を使うためには、&（AND演算子）と|（OR演算子）を使う必要がある。\n　AND演算子&は、&を挟む左右の両側がTRUEの場合のみTRUEを返す演算子である。\n\n\n\nCode 15\n\n(2 + 3 == 5) & (2 * 3 == 5) # TRUE and FALSEだから... FALSE!\n\n\n[1] FALSE\n\n\n\n\n\nCode 16\n\n(2 + 3 == 5) & (2 * 3 == 6) # TRUE and TRUEだから... TRUE!\n\n\n[1] TRUE\n\n\n　OR演算子|は、|を挟む左右の片側、あるいは両側がTRUEの場合のみTRUEを返す論理演算子である。\n\n\n\nCode 17\n\n(2 + 3 == 5) | (2 * 3 == 5) # TRUE or FALSEだから... TRUE!\n\n\n[1] TRUE\n\n\n\n\n\nCode 18\n\n(2 + 3 == 5) | (2 * 3 == 6) # TRUE or TRUEだから... TRUE!\n\n\n[1] TRUE\n\n\n\n\n\nCode 19\n\n(2 + 3 == 6) | (2 * 3 == 5) # FALSE or FALSEだから... FALSE!\n\n\n[1] FALSE\n\n\n　論理演算子には他にもいくつかあるが、説明は割愛する。\n\n!: 否定演算子（TRUEならFALSE、FALSEならTRUEが返ってくる。意外と良く使う）\n&&: &と同じ\n||: |と同じ\nxor(): 排他的論理和（xor(FALSE, TRUE)とxor(TRUE, FALSE)の場合のみTRUEが返ってくる。論理回路に興味あれば重要な演算子だが、実際に使うケースはあまりない。）\n\n　論理演算子が活躍するのはデータ加工（データハンドリング）の時である。何かの条件を指定して、その行件に合致するケースのみを抽出する場合は、これらの論理演算子の使用が必須である。\n\n\n\n\n\n\nマッチング演算子: %in%\n\n\n\n　もう一つ便利な論理演算子としてマッチング演算子%in%がある。これについてはデータハンドリングの講義で解説する。"
  },
  {
    "objectID": "materials/micro/basic.html#代入とベクトル",
    "href": "materials/micro/basic.html#代入とベクトル",
    "title": "第3回講義資料",
    "section": "代入とベクトル",
    "text": "代入とベクトル\n　まず、以下のような例を考えてみよう。\n\n123454321 \\(\\times\\) 2を計算してみよう\n123454321 \\(\\times\\) 3を計算してみよう\n123454321 \\(\\times\\) 4を計算してみよう\n…\n123454321 \\(\\times\\) 200を計算してみよう\n\n\n\n\nCode 20\n\n123454321 * 2\n123454321 * 3\n123454321 * 4\n\n(省略)\n\n123454321 * 198\n123454321 * 199\n123454321 * 200\n\n\n　このように199行のコードを書く必要がある。もう少し効率的な方法はないだろうか。まず、この123454321を書く手間をなんとかしてみよう。\n\n方法1: 123454321をコピーし貼り付けながら計算を繰り返す\n方法2: 123454321にxという名前を付けて、x * 1のように表記する（ここが重要）\n\n　いずれも有効な方法であるが、方法1には致命的なデメリットがある。それは修正が面倒だという点である。もし「あ、ごめん！123454321じゃなくて、23235211だったわ！コード直してもらえる？」と言われたら、199行のコードをすべて修正する必要がある。一方、方法2を使えば、「123454321にxという名前を付ける」コードのみを修正すれば良い。このように何かの数字、文字列などに名前を付けて後から使えるようにする作業を代入（assignment）と呼ぶ。\n\nベクトル\n　代入の話をする前にRにおけるデータ構造の一種であるベクトル（vector）の話をしなければならない。ベクトルはRにけるデータの最小単位である。Rには様々なデータ構造があるが、これらはすべてベクトルの集合と言っても過言ではない。このベクトルには以下のような特徴がある。\nベクトルの特徴\n\nベクトルの長さは1以上である。\n\n1や\"Cat\"は長さ1のベクトル\n長さ1のベクトルは原子ベクトル（atomic vector）とも呼ばれる。\n\n一つのベクトル同じデータ型（数値、文字列など）で構成される。\n\n数値と文字列が混在するベクトルは作成できない。\n\n\n\n\n\n\n\n\nデータ型? データ構造?\n\n\n\n　データ型とデータ構造については今後の講義で解説する。\n\n\n　まずはこの2つだけ覚えておけば問題ない。重要なのはベクトルの作り方であるが、長さ1のベクトルであれば、1、\"Cat\"などで十分である。もし、ながさ2以上のベクトルを作る場合はc()関数を使う。()内にコンマ区切りの要素 (element)を入れるだけである。\n\n\n\nCode 21\n\n19861008 # 長さ1の数値型ベクトル\n\n\n[1] 19861008\n\n\n\n\n\nCode 22\n\nc(1986, 10, 8) # 長さ3の数値型ベクトル\n\n\n[1] 1986   10    8\n\n\n\n\n\n\n\n\n,の後にはスペースを入れよう！\n\n\n\n　コードの可読性の観点から見ると、c(1986,10,8)よりc(1986, 10, 8)の方が読みやすい。\n\n\n\n\nベクトル同士の計算\n　それでは、（原子ベクトルを含む）ベクトルに名前を付ける方法について紹介する。それは代入演算子&lt;-である。x &lt;- 123454321はxという器に123454321という数字を入れることを意味する。ここでいう「器」のことをオブジェクト（object）と呼ぶ。オブジェクトに関する説明は今後の講義で解説する。オブジェクトの内容を確認するためにはオブジェクトの名前のみを入力する。\n\n\n\nCode 23\n\nx &lt;- 123454321 # xに123454321を代入\nx\n\n\n[1] 123454321\n\n\n　先ほどの作業は以下のように簡略化することができる。\n\n\n\nCode 24\n\nx &lt;- 123454321 # xに123454321を代入\nx * 2\nx * 3\nx * 4\n\n(省略)\n\nx * 198\nx * 199\nx * 200\n\n\n　これを使えば、もし修正要請があったとしてもx &lt;- 123454321の部分だけ修正すれば良いだろう。ただ、それでも200行のコード（代入で1行、計算で199行）を書くことには代わりがない。これをなんとか出来ないだろうか。以上のコードは1〜3行にまとめることができる。そのためにベクトル同士の計算について考える必要がある。同じ長さのベクトル同士の計算の場合、同じ位置の要素同士の計算が行われる。以下の例を考えてみよう。\n\n\n\nCode 25\n\nmy_vec1 &lt;- c(1, 2, 3, 4, 5, 6)\nmy_vec2 &lt;- c(0, 1, 2, 0, 1, 2)\nmy_vec1 * my_vec2\n\n\n[1]  0  2  6  0  5 12\n\n\n　上記のコードは以下のように表すことができる。\n\n\n\nベクトル/位置\n1番目\n2番目\n3番目\n4番目\n5番目\n6番目\n\n\n\n\nmy_vec1\n1\n2\n3\n4\n5\n6\n\n\n\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\\(\\times\\)\n\n\nmy_vec2\n0\n1\n2\n0\n1\n2\n\n\n結果\n0\n2\n6\n0\n5\n12\n\n\n\n　もし、ベクトルの長さが一致しない場合はどうなるだろうか。この場合、短い方のベクトルが繰り返されることとなり、これをベクトル・リサイクル（vector recycle）と呼ぶ。以下の例ではmy_vec4の方が短いため、3 * 2までの計算が終わったあと、もう一回my_vec4の1番目の要素、0が使われることになる。\n\n\n\nCode 26\n\nmy_vec3 &lt;- c(1, 2, 3, 4, 5, 6)\nmy_vec4 &lt;- c(0, 1, 2)\nmy_vec3 * my_vec4\n\n\n[1]  0  2  6  0  5 12\n\n\n　このベクトル・リサイクルを利用すれば簡単に199行のコードを簡略化できよう。ただし、2から200まで格納されている長さ199のベクトルを作るのが面倒かも知れない。2, 3, 4, …, 199, 200は公差1の等差数列であり、Rではseq()関数を使うことで等差数列を簡単に作ることができる。たとえば、2から10までの公差1の等差数列であれば、以下のように作れる。\n\n\n\nCode 27\n\nseq(2, 10, by = 1) # 2から10までの公差1の等差数列\n\n\n[1]  2  3  4  5  6  7  8  9 10\n\n\n　公差1でなく公差2であれば、by = 1をby = 2に修正する。\n\n\n\nCode 28\n\nseq(2, 10, by = 2) # 2から10までの公差2の等差数列\n\n\n[1]  2  4  6  8 10\n\n\n　また、公差1の等差数列であれば、:演算子を使うこともできる。\n\n\n\nCode 29\n\n2:10 # 2から10までの公差1の等差数列\n\n\n[1]  2  3  4  5  6  7  8  9 10\n\n\n　これで199行のコードを簡略化する準備は整った。まずは3行に簡略化した例を見てみよう。\n\n\n\nCode 30\n\n# 3行の例\nx &lt;- 123454321\ny &lt;- 2:200 # または、y &lt;- seq(2, 200, by = 1)\nx * y\n\n\n  [1]   246908642   370362963   493817284   617271605   740725926   864180247\n  [7]   987634568  1111088889  1234543210  1357997531  1481451852  1604906173\n [13]  1728360494  1851814815  1975269136  2098723457  2222177778  2345632099\n [19]  2469086420  2592540741  2715995062  2839449383  2962903704  3086358025\n [25]  3209812346  3333266667  3456720988  3580175309  3703629630  3827083951\n [31]  3950538272  4073992593  4197446914  4320901235  4444355556  4567809877\n [37]  4691264198  4814718519  4938172840  5061627161  5185081482  5308535803\n [43]  5431990124  5555444445  5678898766  5802353087  5925807408  6049261729\n [49]  6172716050  6296170371  6419624692  6543079013  6666533334  6789987655\n [55]  6913441976  7036896297  7160350618  7283804939  7407259260  7530713581\n [61]  7654167902  7777622223  7901076544  8024530865  8147985186  8271439507\n [67]  8394893828  8518348149  8641802470  8765256791  8888711112  9012165433\n [73]  9135619754  9259074075  9382528396  9505982717  9629437038  9752891359\n [79]  9876345680  9999800001 10123254322 10246708643 10370162964 10493617285\n [85] 10617071606 10740525927 10863980248 10987434569 11110888890 11234343211\n [91] 11357797532 11481251853 11604706174 11728160495 11851614816 11975069137\n [97] 12098523458 12221977779 12345432100 12468886421 12592340742 12715795063\n[103] 12839249384 12962703705 13086158026 13209612347 13333066668 13456520989\n[109] 13579975310 13703429631 13826883952 13950338273 14073792594 14197246915\n[115] 14320701236 14444155557 14567609878 14691064199 14814518520 14937972841\n[121] 15061427162 15184881483 15308335804 15431790125 15555244446 15678698767\n[127] 15802153088 15925607409 16049061730 16172516051 16295970372 16419424693\n[133] 16542879014 16666333335 16789787656 16913241977 17036696298 17160150619\n[139] 17283604940 17407059261 17530513582 17653967903 17777422224 17900876545\n[145] 18024330866 18147785187 18271239508 18394693829 18518148150 18641602471\n[151] 18765056792 18888511113 19011965434 19135419755 19258874076 19382328397\n[157] 19505782718 19629237039 19752691360 19876145681 19999600002 20123054323\n[163] 20246508644 20369962965 20493417286 20616871607 20740325928 20863780249\n[169] 20987234570 21110688891 21234143212 21357597533 21481051854 21604506175\n[175] 21727960496 21851414817 21974869138 22098323459 22221777780 22345232101\n[181] 22468686422 22592140743 22715595064 22839049385 22962503706 23085958027\n[187] 23209412348 23332866669 23456320990 23579775311 23703229632 23826683953\n[193] 23950138274 24073592595 24197046916 24320501237 24443955558 24567409879\n[199] 24690864200\n\n\n　これを2行にまとめる場合は、xとyいずれかをベクトルとして格納し、もう片方は格納せずそのまま計算に使う（結果は省略）。\n\n\n\nCode 31\n\n# 2行の例 (1)\nx &lt;- 123454321\nx * 2:200\n\n\n\n\n\nCode 32\n\n# 2行の例 (2)\nx &lt;- 2:200\n123454321 * x\n\n\n　究極のやり方はxもyも格納せずそのまま使う方法であり、これなら1行にまとめることができる（結果は省略）。\n\n\n\nCode 33\n\n# 1行の例\n123454321 * 2:200\n\n\n\n\n要素の抽出\n　最後にベクトルから任意の要素を抽出する2つの方法について紹介する。\n方法1: 抽出する要素の位置を指定する。\n　要素の抽出する基本的な方法はベクトル名[抽出する要素の位置]である。たとえば、my_vec5という11から20までの公差1の等差数列のベクトルがあるとする。\n\n\n\nCode 34\n\nmy_vec5 &lt;- 11:20 # my_vec &lt;- seq(11, 20, by = 1) と同じ\nmy_vec5\n\n\n [1] 11 12 13 14 15 16 17 18 19 20\n\n\n　このmy_vec5から3番目の要素は13であり、この値を抽出するためにはmy_vec5[3]と入力する。\n\n\n\nCode 35\n\nmy_vec5[3]\n\n\n[1] 13\n\n\n　複数の要素を抽出したい場合は、[]内にベクトルを入れる。たとえば、my_vec5から2、3、4、5番目の要素を抽出する場合は、[]内にc(2, 3, 4, 5)を入力する。\n\n\n\nCode 36\n\nmy_vec5[c(2, 3, 4, 5)] # my_vec5[2, 3, 4, 5]でないことに注意\n\n\n[1] 12 13 14 15\n\n\n　このc(2, 3, 4, 5)は2から5までの公差1の等差数列であるため、c(2, 3, 4, 5)の代わりにseq(2, 5, by = 1)を使用しても良い。\n\n\n\nCode 37\n\nmy_vec5[seq(2, 5, by = 1)]\n\n\n[1] 12 13 14 15\n\n\n　むろん、公差1の等差数列を使う:を使用し、[]内に2:5を指定した方がより効率的であろう。\n\n\n\nCode 38\n\nmy_vec5[2:5]\n\n\n[1] 12 13 14 15\n\n\n方法2: 論理演算子を利用する。\n　もう一つは[]内にTRUEかFALSEを入れる方法である。位置を指定する方法では抽出したい要素の位置のみを指定するだけだったが、この方法は、すべての要素に対して抽出するか（TRUE）しないか（FALSE）を指定する必要がある。つまり、元のベクトルの長さと[]内に指定するベクトルの長さは一致する必要がある。たとえば、my_vec5の1、4、7、9、10番目の要素を抽出したい場合はmy_vec5[c(1, 4, 7, 9, 10)]でも良いが、以下のように抽出する箇所にTRUE、抽出しない箇所にFALSEを指定することもできる。\n\n\n\nCode 39\n\n# 1、4、7、9、10番目がTRUEで、他は全てFALSE\nmy_vec5[c(TRUE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE, TRUE, TRUE)]\n\n\n[1] 11 14 17 19 20\n\n\n　[]内にベクトルの長さ分のベクトルを更に入力する必要がある。my_vec5のように長さ10のベクトルなら問題ないだろうが、長さが数千のベクトルも稀ではない（むしろ実際のデータ分析だと数百以上が当たり前となる）。これを考えると、一つ一つの要素に対してTRUE、FALSEを指定することは非常に非効率的である。\n　しかし、我々は論理演算子を使えばTRUE、またはFALSEのベクトルを作れることをすでに知っている。たとえば、my_vec5から奇数のみを抽出したいとする。奇数は2で割って1が余る数字である。余りを計算する算術演算子は%%であり、この余りが1かどうかを判定すれば良い。\n\n\n\nCode 40\n\nmy_vec5 %% 2 == 1\n\n\n [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE\n\n\n　my_vec5を構成する全ての要素に対して、奇数か偶数かの判定結果がベクトルとして返ってくることが分かる。この論理演算子が含まれた判定文を[]内に入れることで、my_vec5から奇数のみを抽出することができる。\n\n\n\nCode 41\n\nmy_vec5[my_vec5 %% 2 == 1]\n\n\n[1] 11 13 15 17 19\n\n\n　むろん、これまでの通りmy_vec5 %% 2 == 1を別途のベクトルとして格納した上で、そのベクトルを[]に入れても良い。"
  },
  {
    "objectID": "materials/micro/basic.html#表データの読み込み",
    "href": "materials/micro/basic.html#表データの読み込み",
    "title": "第3回講義資料",
    "section": "表データの読み込み",
    "text": "表データの読み込み\n　データ分析に用いられるデータの形式は表、文字列、画像、音声など様々であるが、本講義では表形式のデータ（rectangular data）のみを扱う。ここでは表形式データの読み込み方法について紹介する。表形式データにはエクセル形式（.xlsx）がお馴染みであろうが、データ分析の業界においてはカンマ区切る形式（.csv）が標準である。\n　csvファイルの読み込みにはR内蔵関数read.csv()関数が使えるが、本講義では{tidyverse}パッケージが提供するread_csv()関数を使用する。データ読み込みの前にまず{tidyverse}パッケージを読み込む。\n\n\n\nCode 42\n\nlibrary(tidyverse)\n\n\n　読み込み方法はread_csv(\"読み込むファイルのパス\")である（パスの概念については「ファイルシステム」を参照すること）。プロジェクト・フォルダー内にDataフォルダーがあり、そこにPref_Vote.csvというファイルがあれば、read_csv(\"Data/Pref_Vote.csv\")となる。もし、プロジェクト・フォルダー直にデータが入っているのであれば、read_csv(\"Pref_Vote.csv\")となる。ただし、read_csv()だけだとデータの中身が出力されるだけであり、作業環境内に格納されない。代入演算子&lt;-を使って作業環境内にデータを入れておく必要がある。ここでは読み込んだデータをmy_dataという名の新しいオブジェクトに格納する。\n\n\n\nCode 43\n\n# 以下のデータはLMSから入手可能\nmy_data &lt;- read_csv(\"Data/Pref_Vote.csv\")\n\n\n　ちなみに現在の作業環境内に、どのようなオブジェクトが存在するかを確認するためにはConsoleペイン上でls()を入力する2。\n\n\n\nCode 44\n\nls()\n\n\n[1] \"my_data\" \"my_vec1\" \"my_vec2\" \"my_vec3\" \"my_vec4\" \"my_vec5\" \"x\"      \n[8] \"y\"      \n\n\n　問題なくmy_dataというオブジェクトが生成されていることが分かる。それではデータの中身を確認してみよう。\n\n\n\nCode 45\n\nmy_data # または、print(my_data)\n\n\n# A tibble: 47 × 13\n      ID Pref   Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 北海道  0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n 2     2 青森県  0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n 3     3 岩手県  0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n 4     4 宮城県  0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n 5     5 秋田県  0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n 6     6 山形県  0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n 7     7 福島県  0.509   28.7    25.2  33.8    28.3 11.0    3.43 10.4    3.24\n 8     8 茨城県  0.633   26.8    26.6  40.6    19.0 15.0    6.67 10.1    2.88\n 9     9 栃木県  0.622   25.9    26.8  38.8    21.6 12.4   10.9   7      2.05\n10    10 群馬県  0.603   27.6    26.6  42.1    19.3 13.8    5.61 10      2.44\n# ℹ 37 more rows\n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n　この画面からデータの中身以外にもいくつかの情報が読み取れる。たとえば、1行目には以下のような内容が入っている。\n# A tibble: 47 × 16\n　これは47行16列のデータであることを意味する。しかし、数えてみれば、どうみても47行13列には見えない。見えるのは10行12列のみである。ちなみに、自分が使用するPCのモニターが大きいか、文字の大きさが小さい場合は最初から16列が表示される場合もあり、12列より少なく表示される場合もある。表示しきれなかったものについては一番下の行を参照すれば良い。\n# … with 37 more rows, and 4 more variables: Reiwa &lt;dbl&gt;, NHK &lt;dbl&gt;,\n#   Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n　これは出力された内容以外にも36行が更にあり（つまり、36行は省略されているだけである）、Reiwa、NHK、Region2とRegion6という名の列も更にあることを意味する。データは問題なく47行13列であることが分かる。\n　もし、20行を出力したい場合はprint(オブジェクト名, n = 20)と入力する。\n\n\n\nCode 46\n\nprint(my_data, n = 20)\n\n\n# A tibble: 47 × 13\n      ID Pref     Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n   &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1 北海道    0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n 2     2 青森県    0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n 3     3 岩手県    0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n 4     4 宮城県    0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n 5     5 秋田県    0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n 6     6 山形県    0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n 7     7 福島県    0.509   28.7    25.2  33.8    28.3 11.0    3.43 10.4    3.24\n 8     8 茨城県    0.633   26.8    26.6  40.6    19.0 15.0    6.67 10.1    2.88\n 9     9 栃木県    0.622   25.9    26.8  38.8    21.6 12.4   10.9   7      2.05\n10    10 群馬県    0.603   27.6    26.6  42.1    19.3 13.8    5.61 10      2.44\n11    11 埼玉県    0.765   24.8    27.7  32.3    20.4 16      7.23 13.9    1.91\n12    12 千葉県    0.777   25.9    26.7  37.8    21.7 14.0    5.46 11.3    2.01\n13    13 東京都    1.00    22.7    27.4  34.4    19.8 11.4    7.34 14.2    2.82\n14    14 神奈川県  0.917   23.9    27.8  34.9    21.5 12.2    7.77 12.5    2.79\n15    15 新潟県    0.435   29.9    25.2  43.7    25.2  8.27   4.39  8      3.76\n16    16 富山県    0.453   30.5    24.9  44.2    24.2  9.81   5.06  5.79   5.02\n17    17 石川県    0.468   27.9    27.2  48.1    18.5 11      6.36  7.07   2.36\n18    18 福井県    0.378   28.6    26.7  45.3    17.5 10.9   13.1   5.66   2.09\n19    19 山梨県    0.379   28.4    26.4  37.4    28.0 12.8    4.32  9.2    1.67\n20    20 長野県    0.476   30.1    25.5  35.3    27.7 10.7    4.23 12.6    3.59\n# ℹ 27 more rows\n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n　最初の6行のみを出力する場合はhead()、最後の6行を出力する場合はtail()を使う。\n\n\n\nCode 47\n\n# my_dataの最初の6行を出力\nhead(my_data) # print(my_data, n = 6) と同じ \n\n\n# A tibble: 6 × 13\n     ID Pref   Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1     1 北海道  0.419   29.1    24.7  32.8    30.6 13.4    3.43 11.4    1.68\n2     2 青森県  0.332   30.1    23.9  40.4    24.6 12.8    3.82  8.92   3.41\n3     3 岩手県  0.341   30.4    24.5  34.9    22.4  8.61   5.16 11.2    5.29\n4     4 宮城県  0.596   25.8    27.3  36.7    25.4 13.4    3.97  9.99   3.62\n5     5 秋田県  0.299   33.8    21.4  43.5    22.7 11.2    5.17  7.56   5.12\n6     6 山形県  0.342   30.8    24.8  42.5    21.5 11.8    4.3   7.6    5.2 \n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n\n\n\nCode 48\n\ntail(my_data) # my_dataの最後の6行を出力\n\n\n# A tibble: 6 × 13\n     ID Pref     Zaisei Over65 Under30 Jimin Minshin Komei Kyosan Ishin Shamin\n  &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1    42 長崎県    0.316   29.6    25.8  41.7    20.7  16.9   5.12  6.27   3.48\n2    43 熊本県    0.387   28.8    27.2  46.5    19.3  15.3   4.53  6.32   2.6 \n3    44 大分県    0.358   30.4    25.6  39.4    18.4  13.3   4.42  6.85  13.0 \n4    45 宮崎県    0.320   29.5    26.3  40.1    14.5  17.1   5.74  7.27   6.81\n5    46 鹿児島県  0.321   29.4    26.0  46.0    16.2  14.5   6.47  6.52   3.62\n6    47 沖縄県    0.315   19.6    33.4  27.8    13.3  15.1   7.66 15.6   12.1 \n# ℹ 2 more variables: Region2 &lt;dbl&gt;, Region6 &lt;dbl&gt;\n\n\n　6行でなく、任意の行数を指定したい場合はhead()、またはtail()内にn = ...を追加する。このような表形式のデータをRではデータフレーム（data.frame）と呼び、ベクトル、リストと共に最も頻繁に使うデータ構造である。これらについては第8回「データ構造」で解説する。\n\n文字化けが生じる場合\n　本講義ではJDCat分析ツールを利用する場合、宋が提供した資料と同じ結果が得られることが保証されている。しかし、自分のPCにRをインストールして使用する場合、文字化けが生じる可能性がある。これは文字のロケール（locale）が原因である（具体的には世界標準のUTF-8を使用するmacOS/Linuxと、日本語表示に独自仕様を使用するWindowsの違い）。この場合、自分のPCのOSによって対処方法が異なる。ここではread_csv()で表形式データを読み込む際、文字化けに対処する方法を紹介する3。\nケース1: 自分のPCがWindowsの場合\n　自分のPCが日本語Windowsの場合、世界標準ロケールであるUTF-8を正しく認識できない可能性がある。この場合、read_csv()内にlocale = locale(encoding = \"UTF-8\")を追加する。\n\n\n\nCode 49\n\nread_csv(\"パスを含むファイル名\", locale = locale(encoding = \"UTF-8\"))\n\n\n　ただし、これでも文字化けが生じるのであれば、自分のRが最新バージョン（UTF-8がベース）であり、手元のデータがShift-JISである可能性が高い。この場合は、macOS/Linuxと同じ方法で対処する（以下参照）。\nケース2: 自分のPCがmacOS/Linuxの場合（JDCat分析ツールもこれに該当）\n　これは主にWindowsで作成されたデータを読み込む際に生じる。日本語Windowsで作成されたデータの場合、ロケールがShift-JISである可能性が高い。とりわけ日本政府/自治体が作成・公開するデータの多くが未だShift-JISである。この場合、read_csv()内にlocale = locale(encoding = \"Shift_JIS\")を追加する。\n\n\n\nCode 50\n\nread_csv(\"パスを含むファイル名\", locale = locale(encoding = \"Shift_JIS\"))\n\n\n\n\nExcel形式ファイルの読み込み\n　本講義ではExcelで作成されたデータ（.xlsx、または.xls形式ファイル）を使わないが、.xlsx、または.xlsファイルを読み込む場合は{readxl}パッケージのread_excel()関数を使用すれば良い。ここではコードの例のみ掲載する。\n\n\n\nCode 51\n\n# {readxl}パッケージがない場合、install.packages(\"readxl\")でインストールしておく。\nlibrary(readxl)\n\n# sheet引数は省略可能。省略した場合1番目のシートが読み込まれる。\nmy_data &lt;- read_excel(\"パスを含むファイル名\", sheet = シートの番号)"
  },
  {
    "objectID": "materials/micro/basic.html#教科書",
    "href": "materials/micro/basic.html#教科書",
    "title": "第3回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR』\n\n「ファイルシステム」\n「基本的な操作」\n「データ構造」\n「データの入出力」\n「データ型」"
  },
  {
    "objectID": "materials/macro/reporting.html",
    "href": "materials/macro/reporting.html",
    "title": "第13回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/reporting.html#スライド",
    "href": "materials/macro/reporting.html#スライド",
    "title": "第13回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/reporting.html#セットアップ",
    "href": "materials/macro/reporting.html#セットアップ",
    "title": "第13回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　本日使用するパッケージとLMSからダウンロードして実習用データを読み込む。読み込むデータはdfに格納し、中身を確認してみよう。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(modelsummary)\nlibrary(summarytools)\nlibrary(marginaleffects)\n\ndf &lt;- read_csv(\"Data/M1.csv\")\n\ndf\n\n\n# A tibble: 50 × 8\n      No  Year Name               Duration First Final Order Score_Mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1    13  2017 ゆにばーす                5     1     0     1       89.4\n 2    13  2017 カミナリ                  7     0     0     2       88.3\n 3    13  2017 とろサーモン             16     1     1     3       92.1\n 4    13  2017 スーパーマラドーナ       15     1     0     4       91.4\n 5    13  2017 かまいたち               14     0     0     5       91.4\n 6    13  2017 マヂカルラブリー         11     1     0     6       86.7\n 7    13  2017 さや香                    4     1     0     7       89.7\n 8    13  2017 ミキ                      6     1     1     8       92.9\n 9    13  2017 和牛                     12     0     1     9       93.3\n10    13  2017 ジャルジャル             15     0     0    10       90.9\n# … with 40 more rows\n\n\n　続いて、dfの記述統計量を計算する。コンビー名（Name）列の記述統計は不要であるため、予め除外しておこう。\n\n\n\nCode 02\n\ndf %&gt;%\n  select(-Name) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ndf  \nN: 50  \n\n                      Mean   Std.Dev       Min       Max   N.Valid\n---------------- --------- --------- --------- --------- ---------\n              No     15.00      1.43     13.00     17.00     50.00\n            Year   2019.00      1.43   2017.00   2021.00     50.00\n        Duration     10.76      3.74      2.00     16.00     50.00\n           First      0.52      0.50      0.00      1.00     50.00\n           Final      0.30      0.46      0.00      1.00     50.00\n           Order      5.50      2.90      1.00     10.00     50.00\n      Score_Mean     91.20      2.40     84.86     97.29     50.00\n\n\n　データの紹介は以下ととおりである。\n\n\n\n変数名\n説明\n備考\n\n\n\n\nNo\n第X回大会\n\n\n\nYear\n大会年度\n\n\n\nName\nコンビ名\n\n\n\nDuration\n結成からの経過年数\n\n\n\nFirst\n初出場ダミー\n\n\n\nFinal\nファイナルステージへの進出有無\n\n\n\nOrder\n出場順番\n1から10\n\n\nScore_Mean\n平均得点\n7人の審査委員からの評価の平均値\n\n\n\n　今回はdfを使って、M-1グランプリにおける出場順番と得点の関係を調べるとする。応答変数は得点の合計を審査委員の数で割った値である平均得点（Score_Mean）とファイナルステージへの進出有無（Final）である。説明変数は出場順番（Order; 主な説明変数）、初出場ダミー（First）、コンビー結成からの経過年数（Duration）である。また、出場順番と初出場ダミー、または経過年数の交互作用も検討し、交互作用を仮定しない変数は統制変数として投入する。ここでは以下の4モデルを推定するとしよう。\n\nfit_lm: 線形回帰分析（応答変数: 平均得点）\nfit_logit: ロジスティック回帰分析（応答変数: ファイナルステージへの進出有無）\nfit_inter1: 線形回帰分析 + 交互作用（ダミー変数）\n\n調整変数は「初出場ダミー」\n\nfit_inter2: 線形回帰分析 + 交互作用（連続変数）\n\nチョ制変数は「コンビー結成からの経過年数」\n\n\n\n\n\nCode 03\n\nfit_lm     &lt;- lm(Score_Mean ~ Order + First + Duration, data = df)\nfit_logit  &lt;- glm(Final ~ Order + First + Duration, data = df, \n                  family = binomial(\"logit\"))\nfit_inter1 &lt;- lm(Score_Mean ~ Order * First + Duration, data = df)\nfit_inter2 &lt;- lm(Score_Mean ~ Order * Duration + First, data = df)\n\n\n　{modelsummary}のmodelsummary()関数を使って、4つのモデルを概観してみよう。\n\n\n\nCode 04\n\nmodelsummary(list(\"線形\"           = fit_lm, \n                  \"ロジスティック\" = fit_logit, \n                  \"交互作用（1）\"  = fit_inter1, \n                  \"交互作用（2）\"  = fit_inter2),\n             statistic = \"({p.value})\")\n\n\n\n\n\n\n線形\nロジスティック\n交互作用（1）\n 交互作用（2）\n\n\n\n\n(Intercept)\n88.826\n−2.968\n89.219\n87.217\n\n\n\n(\n(0.068)\n(\n(\n\n\nOrder\n0.312\n0.261\n0.238\n0.621\n\n\n\n(0.009)\n(0.043)\n(0.184)\n(0.111)\n\n\nFirst\n−0.521\n−0.705\n−1.218\n−0.564\n\n\n\n(0.443)\n(0.308)\n(0.397)\n(0.409)\n\n\nDuration\n0.086\n0.085\n0.086\n0.232\n\n\n\n(0.357)\n(0.394)\n(0.359)\n(0.242)\n\n\nOrder × First\n\n\n0.128\n\n\n\n\n\n\n(0.581)\n\n\n\nOrder × Duration\n\n\n\n−0.029\n\n\n\n\n\n\n(0.401)\n\n\nNum.Obs.\n50\n50\n50\n50\n\n\nR2\n0.156\n\n0.162\n0.170\n\n\nR2 Adj.\n0.101\n\n0.088\n0.096\n\n\nAIC\n230.0\n63.0\n231.6\n231.2\n\n\nBIC\n239.5\n70.6\n243.1\n242.7\n\n\nLog.Lik.\n−109.988\n−27.494\n−109.816\n−109.592\n\n\nF\n2.843\n1.656\n2.178\n2.299\n\n\nRMSE\n2.18\n0.43\n2.18\n2.17"
  },
  {
    "objectID": "materials/macro/reporting.html#線形回帰分析",
    "href": "materials/macro/reporting.html#線形回帰分析",
    "title": "第13回講義資料",
    "section": "線形回帰分析",
    "text": "線形回帰分析\n　線形回帰分析の場合、推定結果を表で示すだけでも良いが、予測値のグラフも示すと読者によってより理解しやすくなる。今回の例（fit_lm）の場合、出場順番（Order）と平均得点間の関係をグラフを示してみよう。出場順番は1番目から10番目まであるため、Orderの値が1、2、3、…、10の場合に対し、予測値（平均得点の予測値）とその95%信頼区間を出してみよう。使用するのは{marginaleffects}のpredictions()関数である。\n　第1引数は回帰分析のオブジェクト名、第2引数はnewdataにdatagrid()関数を割り当てたものである。datagrid()の中には説明変数名 = 値を指定する。1のみならOrder = 1の場合の予測値が計算され、c(1, 2, 3)ならOrderの値が1、2、3の場合の予測値が計算される。公差1の等差数列は:演算子で表現することもできるので、今回は1:10とする。計算結果はlm_predに格納し、出力する。\n\n\n\nCode 05\n\nlm_pred &lt;- predictions(fit_lm, newdata = datagrid(Order = 1:10))\n\nlm_pred\n\n\n\n Estimate Std. Error     z   Pr(&gt;|z|) 2.5 % 97.5 % Order\n    89.79     0.6067 148.0 &lt; 2.22e-16 88.60  90.98     1\n    90.10     0.5134 175.5 &lt; 2.22e-16 89.10  91.11     2\n    90.42     0.4304 210.1 &lt; 2.22e-16 89.57  91.26     3\n    90.73     0.3647 248.8 &lt; 2.22e-16 90.01  91.44     4\n    91.04     0.3269 278.5 &lt; 2.22e-16 90.40  91.68     5\n    91.35     0.3269 279.4 &lt; 2.22e-16 90.71  91.99     6\n    91.67     0.3647 251.3 &lt; 2.22e-16 90.95  92.38     7\n    91.98     0.4304 213.7 &lt; 2.22e-16 91.13  92.82     8\n    92.29     0.5134 179.8 &lt; 2.22e-16 91.28  93.30     9\n    92.60     0.6067 152.6 &lt; 2.22e-16 91.41  93.79    10\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Score_Mean, First, Duration, Order \n\n\n　大量の列が出力されているが、作図のために必要な変数はOrder（出場順番）、estimate（予測値）、conf.low（95%信頼区間の下限）、conf.high（95%信頼区間の上限）列のみだ。これらにstd.error列を加え、lm_predを上書きしよう。\n\n\n\nCode 06\n\nlm_pred &lt;- lm_pred %&gt;%\n  select(Order, estimate, std.error, conf.low, conf.high)\n\nlm_pred\n\n\n\n Estimate Std. Error CI low CI high\n    89.79     0.6067  88.60   90.98\n    90.10     0.5134  89.10   91.11\n    90.42     0.4304  89.57   91.26\n    90.73     0.3647  90.01   91.44\n    91.04     0.3269  90.40   91.68\n    91.35     0.3269  90.71   91.99\n    91.67     0.3647  90.95   92.38\n    91.98     0.4304  91.13   92.82\n    92.29     0.5134  91.28   93.30\n    92.60     0.6067  91.41   93.79\n\nPrediction type:  \nColumns: Order, estimate, std.error, conf.low, conf.high \n\n\n　だいぶ読みやすい表としてまとまった。あとは、このlm_predオブジェクトを使って作図をするだけだ。点推定値と区間を同時に示すときにはpoint-rangeプロットが有効である（本資料の後半では線と面を組み合わせたグラフの作り方も紹介するが、その方法でも良い）。使用する幾何オブジェクトはgeom_pointrange()であり、aes()内部でマッピングを行う。最低でもx、y、ymin、ymaxのマッピングが必要であり、xとyはそれぞれ横軸と縦軸に対応する変数、yminとymaxは区間の下限と上限に対応する変数を指定する。また、横軸の目盛りを1刻みにするため、scale_x_continuous()レイターを足す。scale_x_continuous()はbreaksに目盛りの位置を、labelsには各目盛りに付けるラベルのベクトルを割り当てる。breaksとlabelsは同じ長さのベクトルである必要がある。\n\n\n\nCode 07\n\nlm_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場順番\", y = \"平均得点（100点満点）\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　各point-rangeを線で繋ぐためにはgeom_line()オブジェクトで折れ線グラフを追加する。\n\n\n\nCode 08\n\nlm_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  geom_line(aes(x = Order, y = estimate)) +\n  labs(x = \"出場順番\", y = \"平均得点（100点満点）\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　この場合、geom_pointrange()とgeom_line()はxとyに対して同じマッピングを共有するため、ggplot()内部でマッピングした方がより効率的な書き方だ。\n\n\n\nCode 09\n\nlm_pred %&gt;%\n  ggplot(aes(x = Order, y = estimate)) +\n  geom_pointrange(aes(ymin = conf.low, ymax = conf.high)) +\n  geom_line() +\n  labs(x = \"出場順番\", y = \"平均得点（100点満点）\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　ここで予測値の図における95%信頼区間の意味について説明する。先程の図における右上がりの直線が実は「回帰直線（regression line）」であり、2つの変数の関係を1次関数で示したのもである。しかし、1次関数の係数（\\(\\alpha\\)や\\(\\beta_1\\)など）には不確実性が存在し、だからこそ統計的有意性検定を行うことである。これらの係数が1次関数の切片と傾きであるが、不確実性が存在する以上、回帰直線にも不確実性が存在すると考えた方が自然だろう。この95%信頼区間の内部には以下のように無数の直線が引ける。\n\n\n\n\n\n\n\n\n\n　青色の直線が推定結果から得られた回帰直線であるが、青以外の直線も95%信頼区間内部に存在する。これらの直線は今回の推定結果から得られた直線ではないが、あり得る回帰直線である。つまり、もう一度、2013年から同じやり方でM-1グランプリを実施し、同じやり方でデータ収集&分析をすれば、緑やオレンジ色のような回帰直線が得られたとしてもそこまで不思議ではないことを意味する。ちなみにここで最も説明変数の影響力が小さいのはオレンジ色の直線である。一つ言えるのは、説明変数の傾き係数が統計的有意であれば、いくら効果量が小さい直線であっても、右上がり関係を示すことである（つまり、右下がりにはならない）。一方、統計的に有意でない場合は、区間内に右上がりと右下がりの直線が共存することになる。"
  },
  {
    "objectID": "materials/macro/reporting.html#ロジスティック回帰分析",
    "href": "materials/macro/reporting.html#ロジスティック回帰分析",
    "title": "第13回講義資料",
    "section": "ロジスティック回帰分析",
    "text": "ロジスティック回帰分析\n　ロジスティック回帰分析は線形回帰分析とは区別される手法であるが、説明変数の値ごとの予測値を可視化する方法は同じだ。つまり、predictions()で予測値を計算し、その計算結果が格納された表形式データ（data.frame、またはtibbleと呼ばれる）と{ggplot2}を用いた作図をするだけだ。まずはOrderの値が1、2、…、10の場合のファイナルステージへの進出確率の予測値を計算し、logit_predに格納する。このlogit_predを使ってそのまま作図へ移行しても良いが、自分で具体的な数値を確認したい場合は、必要な列だけ抽出しておくと良い。\n\n\n\nCode 10\n\nlogit_pred &lt;- predictions(fit_logit, newdata = datagrid(Order = 1:10))\n\nlogit_pred &lt;- logit_pred %&gt;%\n  select(Order, estimate, std.error, conf.low, conf.high)\n\nlogit_pred\n\n\n\n Estimate Std. Error  CI low CI high\n   0.1040    0.07035 0.02573  0.3377\n   0.1309    0.07300 0.04106  0.3463\n   0.1635    0.07323 0.06408  0.3583\n   0.2024    0.07125 0.09654  0.3761\n   0.2478    0.06882 0.13776  0.4045\n   0.2996    0.06999 0.18195  0.4512\n   0.3570    0.07938 0.21989  0.5223\n   0.4188    0.09776 0.24698  0.6129\n   0.4833    0.12141 0.26510  0.7081\n   0.5484    0.14543 0.27753  0.7933\n\nPrediction type:  \nColumns: Order, estimate, std.error, conf.low, conf.high \n\n\n　続いて、{ggplot2}を用いて作図をする。基本的に線形回帰分析と同じコードであるが、今回の縦軸は「平均得点」の予測値でなく、「ファイナルステージへの進出確率」の予測値であるため、軸ラベルを修正する。\n\n\n\nCode 10\n\nlogit_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14)"
  },
  {
    "objectID": "materials/macro/reporting.html#交互作用",
    "href": "materials/macro/reporting.html#交互作用",
    "title": "第13回講義資料",
    "section": "交互作用",
    "text": "交互作用\n\n予測値（調整変数がダミー変数）\n　交差項を含むモデル（線形回帰・ロジスティック回帰両方）の場合でも基本的な手順はこれまでと同じである。しかし、主な説明変数（ここではOrder）が応答変数に与える影響は調整変数（ここではFirst、またはDuration）によって異なる。したがって、調整変数の値ごとに別々の回帰直線を計算する必要がある。そのためにはpredictions()のnewdata = datagrid()内に主な説明変数だけでなく、調整変数の値も指定する必要がある。たとえば、調整変数がダミー変数（ここではFirst）の場合、Firstの値が0と1の場合に分けて、Orderの値が1、2、3、…、10の場合の予測値を計算する必要がある。\n\n\n\nCode 11\n\ninter1_pred &lt;- predictions(fit_inter1, newdata = datagrid(Order = 1:10,\n                                                          First = 0:1))\n\ninter1_pred\n\n\n\n Estimate Std. Error      z   Pr(&gt;|z|) 2.5 % 97.5 % Order First\n    90.38     0.9127  99.03 &lt; 2.22e-16 88.60  92.17     1     0\n    89.29     0.8230 108.50 &lt; 2.22e-16 87.68  90.91     1     1\n    90.62     0.7681 117.98 &lt; 2.22e-16 89.12  92.13     2     0\n    89.66     0.7037 127.40 &lt; 2.22e-16 88.28  91.04     2     1\n    90.86     0.6398 142.01 &lt; 2.22e-16 89.61  92.11     3     0\n    90.03     0.5984 150.44 &lt; 2.22e-16 88.85  91.20     3     1\n    91.10     0.5394 168.88 &lt; 2.22e-16 90.04  92.16     4     0\n    90.39     0.5155 175.34 &lt; 2.22e-16 89.38  91.40     4     1\n    91.34     0.4846 188.49 &lt; 2.22e-16 90.39  92.29     5     0\n    90.76     0.4672 194.26 &lt; 2.22e-16 89.84  91.67     5     1\n    91.57     0.4908 186.57 &lt; 2.22e-16 90.61  92.54     6     0\n    91.12     0.4644 196.23 &lt; 2.22e-16 90.21  92.03     6     1\n    91.81     0.5561 165.10 &lt; 2.22e-16 90.72  92.90     7     0\n    91.49     0.5078 180.17 &lt; 2.22e-16 90.49  92.48     7     1\n    92.05     0.6632 138.79 &lt; 2.22e-16 90.75  93.35     8     0\n    91.85     0.5873 156.40 &lt; 2.22e-16 90.70  93.00     8     1\n    92.29     0.7954 116.02 &lt; 2.22e-16 90.73  93.85     9     0\n    92.22     0.6905 133.55 &lt; 2.22e-16 90.87  93.57     9     1\n    92.53     0.9422  98.20 &lt; 2.22e-16 90.68  94.37    10     0\n    92.58     0.8084 114.52 &lt; 2.22e-16 91.00  94.17    10     1\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Score_Mean, Duration, Order, First \n\n\n　作図に必要な列（+標準誤差であるstd.error列）のみを抽出する。今回の例はOrder以外にもFirstの値も2パターン（0と1）あるため、First列も抽出する。\n\n\n\nCode 12\n\ninter1_pred &lt;- inter1_pred %&gt;%\n  select(Order, First, estimate, std.error, conf.low, conf.high)\n\ninter1_pred\n\n\n\n Estimate Std. Error CI low CI high\n    90.38     0.9127  88.60   92.17\n    89.29     0.8230  87.68   90.91\n    90.62     0.7681  89.12   92.13\n    89.66     0.7037  88.28   91.04\n    90.86     0.6398  89.61   92.11\n    90.03     0.5984  88.85   91.20\n    91.10     0.5394  90.04   92.16\n    90.39     0.5155  89.38   91.40\n    91.34     0.4846  90.39   92.29\n    90.76     0.4672  89.84   91.67\n    91.57     0.4908  90.61   92.54\n    91.12     0.4644  90.21   92.03\n    91.81     0.5561  90.72   92.90\n    91.49     0.5078  90.49   92.48\n    92.05     0.6632  90.75   93.35\n    91.85     0.5873  90.70   93.00\n    92.29     0.7954  90.73   93.85\n    92.22     0.6905  90.87   93.57\n    92.53     0.9422  90.68   94.37\n    92.58     0.8084  91.00   94.17\n\nPrediction type:  \nColumns: Order, First, estimate, std.error, conf.low, conf.high \n\n\n　続いて、First列をリコーディングする。分析する側はFirstの値が1だと「初出場」、0だと「出場経験あり」とうことが分かるが、一般読者は分からないだろう。ここではFirstをfactor化し、0と1にそれぞれ「出場経験あり」、「初出場」とラベルを付けておこう。\n\n\n\nCode 13\n\ninter1_pred &lt;- inter1_pred %&gt;%\n  mutate(First = factor(First, levels = c(0, 1), labels = c(\"出場経験あり\", \"初出場\")))\n\ninter1_pred\n\n\n\n Estimate Std. Error CI low CI high\n    90.38     0.9127  88.60   92.17\n    89.29     0.8230  87.68   90.91\n    90.62     0.7681  89.12   92.13\n    89.66     0.7037  88.28   91.04\n    90.86     0.6398  89.61   92.11\n    90.03     0.5984  88.85   91.20\n    91.10     0.5394  90.04   92.16\n    90.39     0.5155  89.38   91.40\n    91.34     0.4846  90.39   92.29\n    90.76     0.4672  89.84   91.67\n    91.57     0.4908  90.61   92.54\n    91.12     0.4644  90.21   92.03\n    91.81     0.5561  90.72   92.90\n    91.49     0.5078  90.49   92.48\n    92.05     0.6632  90.75   93.35\n    91.85     0.5873  90.70   93.00\n    92.29     0.7954  90.73   93.85\n    92.22     0.6905  90.87   93.57\n    92.53     0.9422  90.68   94.37\n    92.58     0.8084  91.00   94.17\n\nPrediction type:  \nColumns: Order, First, estimate, std.error, conf.low, conf.high \n\n\n　それでは作図をしてみよう。作図のコードもこれまでと大きく変わらない。しかし、今回は「初出場」か「出場経験あり」かで別のpoint-rangeが出力される。この2種類のpoint-rangeを今回は色分けしてみよう。特定の変数の値に応じて色分けをする場合はaes()の内部でcolor変数にその変数を指定する。ここだと、color = Firstとなる。\n\n\n\nCode 14\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Order, y = estimate, \n                      ymin = conf.low, ymax = conf.high,\n                      color = First)) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", color = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　これだと予測値（点）と信頼区間（線）が重なって読みにくい。このように予測値/限界効果を2つ以上のグループに分けて可視化する場合は、線（line）と面（ribbon）を組み合わせた方が良い。まずは、折れ線グラフを追加してみよう。折れ線グラフの幾何オブジェクトはgeom_line()だ。折れ線グラフは基本的にxとyのみマッピングで良いが、ここではFirstの値ごとに線の色分けがしたいのでcolorにもマッピングする。\n\n\n\nCode 15\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_line(aes(x = Order, y = estimate, color = First)) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", color = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　つづいて、信頼区間だ。信頼区間を面で示す場合はgeom_ribbon()幾何オブジェクトを使用する。マッピングはgeom_pointrange()と似ているが、yのマッピングは不要である。また、線の色はcolorにマッピングをしたが、面の色はfillである。\n\n\n\nCode 16\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_line(aes(x = Order, y = estimate, color = First)) +\n  geom_ribbon(aes(x = Order, ymin = conf.low, ymax = conf.high,\n                  fill = First)) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"\", fill = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　今回は面が重なってしまう。しかも線と面が同じいろなので、線が見えなくなってしまった。この場合は面を半透明にすれば良い。すべての面に適用するものはaes()外側に書くが、透明度を調整する引数はalphaであり、0に近いほど透明になる。今回は透明度30%（alpha = 0.3）をaes()の外側に追加する。また、線の太さも太めにしたいので、geom_line()のaes()の外側にlinewidth引数を追加して線の太さを調整する。最後に、geom_line()とgeom_ribbon()の順番を変えることで、線が面より上に表示されるようにする（{ggplot2}は後で追加したレイヤーがより上に位置する）。\n\n\n\nCode 17\n\ninter1_pred %&gt;%\n  ggplot() +\n  geom_ribbon(aes(x = Order, ymin = conf.low, ymax = conf.high,\n                  fill = First), alpha = 0.3) +\n  geom_line(aes(x = Order, y = estimate, color = First), linewidth = 1) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"\", fill = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n　これで作図は終わったが、2つの幾何オブジェクトがxに対して同じマッピングを共有しているため、こちらはggplot()内にマッピングするとより簡潔なコードになる。\n\n\n\nCode 18\n\ninter1_pred %&gt;%\n  ggplot(aes(x = Order)) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = First), \n              alpha = 0.3) +\n  geom_line(aes(y = estimate, color = First), linewidth = 1) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"\", fill = \"\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n予測値（調整変数が連続変数）\n　調整変数が連続変数の場合でも同じ手順で可視化する。まずは、{marginaleffects}のpredictions()で予測値を計算し、表形式オブジェクトとして格納する。ただし、Durationの値が2、3、4、…、16の場合の予測値をすべて出してしまうと15本の線（と面）が表示されるため、非常に可読性が落ちてしまう。したがって、ここではDurationの最小値（2）、最大値（16）とその中間である9に固定して予測値を計算する。計算結果はinter2_predに格納する。\n\n\n\nCode 19\n\ninter2_pred &lt;- predictions(fit_inter2, newdata = datagrid(Order = 1:10,\n                                                          Duration = c(2, 9, 16)))\n\ninter2_pred\n\n\n\n Estimate Std. Error      z   Pr(&gt;|z|) 2.5 % 97.5 % Order Duration\n    87.95     1.6843  52.22 &lt; 2.22e-16 84.65  91.25     1        2\n    89.37     0.7276 122.84 &lt; 2.22e-16 87.95  90.80     1        9\n    90.79     0.9665  93.94 &lt; 2.22e-16 88.90  92.69     1       16\n    88.51     1.4219  62.25 &lt; 2.22e-16 85.73  91.30     2        2\n    89.74     0.6185 145.09 &lt; 2.22e-16 88.52  90.95     2        9\n    90.96     0.8075 112.64 &lt; 2.22e-16 89.37  92.54     2       16\n    89.08     1.1873  75.03 &lt; 2.22e-16 86.75  91.41     3        2\n    90.10     0.5189 173.64 &lt; 2.22e-16 89.08  91.12     3        9\n    91.12     0.6769 134.60 &lt; 2.22e-16 89.79  92.45     3       16\n    89.64     1.0000  89.64 &lt; 2.22e-16 87.68  91.60     4        2\n    90.46     0.4354 207.79 &lt; 2.22e-16 89.61  91.32     4        9\n    91.28     0.5940 153.68 &lt; 2.22e-16 90.12  92.45     4       16\n    90.21     0.8904 101.31 &lt; 2.22e-16 88.46  91.95     5        2\n    90.83     0.3787 239.83 &lt; 2.22e-16 90.08  91.57     5        9\n    91.44     0.5794 157.83 &lt; 2.22e-16 90.31  92.58     5       16\n    90.77     0.8879 102.23 &lt; 2.22e-16 89.03  92.51     6        2\n    91.19     0.3618 252.07 &lt; 2.22e-16 90.48  91.90     6        9\n    91.61     0.6379 143.61 &lt; 2.22e-16 90.36  92.86     6       16\n    91.33     0.9932  91.96 &lt; 2.22e-16 89.39  93.28     7        2\n    91.55     0.3897 234.91 &lt; 2.22e-16 90.79  92.32     7        9\n    91.77     0.7526 121.94 &lt; 2.22e-16 90.30  93.25     7       16\n    91.90     1.1777  78.03 &lt; 2.22e-16 89.59  94.21     8        2\n    91.92     0.4544 202.28 &lt; 2.22e-16 91.02  92.81     8        9\n    91.93     0.9024 101.88 &lt; 2.22e-16 90.17  93.70     8       16\n    92.46     1.4108  65.54 &lt; 2.22e-16 89.70  95.23     9        2\n    92.28     0.5428 170.00 &lt; 2.22e-16 91.22  93.34     9        9\n    92.10     1.0726  85.87 &lt; 2.22e-16 89.99  94.20     9       16\n    93.02     1.6721  55.63 &lt; 2.22e-16 89.75  96.30    10        2\n    92.64     0.6453 143.57 &lt; 2.22e-16 91.38  93.91    10        9\n    92.26     1.2549  73.52 &lt; 2.22e-16 89.80  94.72    10       16\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Score_Mean, First, Order, Duration \n\n\n\n\n\nCode 20\n\ninter2_pred &lt;- inter2_pred %&gt;%\n  select(Order, Duration, estimate, std.error, conf.low, conf.high)\n\ninter2_pred\n\n\n\n Estimate Std. Error CI low CI high\n    87.95     1.6843  84.65   91.25\n    89.37     0.7276  87.95   90.80\n    90.79     0.9665  88.90   92.69\n    88.51     1.4219  85.73   91.30\n    89.74     0.6185  88.52   90.95\n    90.96     0.8075  89.37   92.54\n    89.08     1.1873  86.75   91.41\n    90.10     0.5189  89.08   91.12\n    91.12     0.6769  89.79   92.45\n    89.64     1.0000  87.68   91.60\n    90.46     0.4354  89.61   91.32\n    91.28     0.5940  90.12   92.45\n    90.21     0.8904  88.46   91.95\n    90.83     0.3787  90.08   91.57\n    91.44     0.5794  90.31   92.58\n    90.77     0.8879  89.03   92.51\n    91.19     0.3618  90.48   91.90\n    91.61     0.6379  90.36   92.86\n    91.33     0.9932  89.39   93.28\n    91.55     0.3897  90.79   92.32\n    91.77     0.7526  90.30   93.25\n    91.90     1.1777  89.59   94.21\n    91.92     0.4544  91.02   92.81\n    91.93     0.9024  90.17   93.70\n    92.46     1.4108  89.70   95.23\n    92.28     0.5428  91.22   93.34\n    92.10     1.0726  89.99   94.20\n    93.02     1.6721  89.75   96.30\n    92.64     0.6453  91.38   93.91\n    92.26     1.2549  89.80   94.72\n\nPrediction type:  \nColumns: Order, Duration, estimate, std.error, conf.low, conf.high \n\n\n　続いて、調整変数をfactor化する。inter2_predのDuration列は2、9、16の値で構成されており（これはlevelsで指定する）、それぞれ「2年目」、「9年目」、「16年目」とラベルを付ける（これはlabelsで指定する）。\n\n\n\nCode 21\n\ninter2_pred &lt;- inter2_pred %&gt;%\n  mutate(Duration = factor(Duration, levels = c(2, 9, 16), \n                           labels = c(\"2年目\", \"9年目\", \"16年目\")))\n\ninter2_pred\n\n\n\n Estimate Std. Error CI low CI high\n    87.95     1.6843  84.65   91.25\n    89.37     0.7276  87.95   90.80\n    90.79     0.9665  88.90   92.69\n    88.51     1.4219  85.73   91.30\n    89.74     0.6185  88.52   90.95\n    90.96     0.8075  89.37   92.54\n    89.08     1.1873  86.75   91.41\n    90.10     0.5189  89.08   91.12\n    91.12     0.6769  89.79   92.45\n    89.64     1.0000  87.68   91.60\n    90.46     0.4354  89.61   91.32\n    91.28     0.5940  90.12   92.45\n    90.21     0.8904  88.46   91.95\n    90.83     0.3787  90.08   91.57\n    91.44     0.5794  90.31   92.58\n    90.77     0.8879  89.03   92.51\n    91.19     0.3618  90.48   91.90\n    91.61     0.6379  90.36   92.86\n    91.33     0.9932  89.39   93.28\n    91.55     0.3897  90.79   92.32\n    91.77     0.7526  90.30   93.25\n    91.90     1.1777  89.59   94.21\n    91.92     0.4544  91.02   92.81\n    91.93     0.9024  90.17   93.70\n    92.46     1.4108  89.70   95.23\n    92.28     0.5428  91.22   93.34\n    92.10     1.0726  89.99   94.20\n    93.02     1.6721  89.75   96.30\n    92.64     0.6453  91.38   93.91\n    92.26     1.2549  89.80   94.72\n\nPrediction type:  \nColumns: Order, Duration, estimate, std.error, conf.low, conf.high \n\n\n　最後に{ggplot2}で作図する。使用する幾何オブジェクトはこれまでと同様、geom_line()とgeom_ribbon()だ。\n\n\n\nCode 22\n\ninter2_pred %&gt;%\n  ggplot(aes(x = Order)) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = Duration), \n              alpha = 0.3) +\n  geom_line(aes(y = estimate, color = Duration), linewidth = 1) +\n  labs(x = \"出場順番\", y = \"ファイナルステージへの進出確率\", \n       color = \"結成からの経過年数\", fill = \"結成からの経過年数\") +\n  scale_x_continuous(breaks = 1:10, labels = 1:10) +\n  theme_bw() +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n限界効果（調整変数がダミー変数）\n　以上の例は{marginaleffects}パッケージのpredictions()関数を使って予測値を計算してきたが、ここからは同じパッケージのmarginaleffects()関数を使って限界効果を計算し、{ggplot2}で可視化する。marginaleffects()の場合、限界効果を計算した変数はvariables引数に、調整変数はこれまでと同様、newdata = datagrid()内に指定する。限界効果を計算したい変数、つまり交差項の中で調整変数ではないものが主な制つ名変数であり、今回の例だと出場順番（Order）である。この変数を\"を囲み、variablesに割り当てる。調整変数は初出場ダミー（First）が調整変数であれば、newdata = datagrid()のdatagrid()内にFirst = 0:1を割り当てる。計算結果はinter1_ameに格納する。\n\n\n\nCode 23\n\ninter1_ame &lt;- marginaleffects(fit_inter1, variables = \"Order\",\n                              newdata = datagrid(First = 0:1))\n\ninter1_ame\n\n\n\n  Term Estimate Std. Error     z Pr(&gt;|z|)    2.5 % 97.5 % First\n Order   0.2379     0.1764 1.348 0.177571 -0.10792 0.5837     0\n Order   0.3655     0.1497 2.441 0.014645  0.07204 0.6590     1\n\nPrediction type:  response \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, Score_Mean, Order, Duration, First, eps \n\n\n　作図に必要な列（と標準誤差を意味するstd.error列）を抽出する。一つ注意すべき点は予測値はestimate列であったのに対し、限界効果の計算結果には当該列が存在せず、estimate列に格納されている点だ。また、限界効果を可視化する際、Orderの値は不要であるため、省略しても良い。\n\n\n\nCode 24\n\ninter1_ame &lt;- inter1_ame %&gt;%\n  select(First, estimate, std.error, conf.low, conf.high)\n\ninter1_ame\n\n\n\n Estimate Std. Error   CI low CI high\n   0.2379     0.1764 -0.10792  0.5837\n   0.3655     0.1497  0.07204  0.6590\n\nPrediction type:  \nColumns: First, estimate, std.error, conf.low, conf.high \n\n\n　続いて、inter1_ameのFirst列をfactor化する。\n\n\n\nCode 25\n\ninter1_ame &lt;- inter1_ame %&gt;%\n  mutate(First = factor(First, levels = 0:1, labels = c(\"出場経験あり\", \"初出場\")))\n\ninter1_ame\n\n\n\n Estimate Std. Error   CI low CI high\n   0.2379     0.1764 -0.10792  0.5837\n   0.3655     0.1497  0.07204  0.6590\n\nPrediction type:  \nColumns: First, estimate, std.error, conf.low, conf.high \n\n\n　それでは作図してみよう。調整変数が連続変数であれ、ダミー変数であれ、取り得る値が数個程度ならgeom_pointrange()を使用する。横軸（x）は調整変数、縦軸（y）は限界効果にし、限界効果の95%信頼区間の下限と上限はそれぞれyminとymaxにマッピングする。また、限界効果の統計的有意性を確認するために、y = 0の箇所に水平線を引く。水平線の幾何オブジェクトはgeom_hline()であり、()内にyintercept = 0を入れると、y = 0のところに水平線が表示される。\n\n\n\nCode 26\n\ninter1_ame %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = First, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"出場経験\", y = \"出場順番の平均限界効果\") +\n  theme_bw(base_size = 12)\n\n\n\n\n\n\n\n\n\n　95％信頼区間内に0が含まれる場合、当該限界効果は統計的に有意でないことを意味する。たとえば、上の図だと初出場の場合のみ、出場順番の限界効果が統計的有意であることが分かる。つまり、「初出場の人の場合、出場順番が遅いほど平均得点が高い傾向がある」と解釈できる。一方、既に出場経験がある場合、出場順番の限界効果が統計的有意ではない。これは、「M-1グランプリの出場経験がある場合、出場順番が遅いほど平均得点が高い傾向があるとは言えない」と解釈できる。「〜する傾向はない」ではなく、「〜する傾向があるとは言えない」と解釈する点に注意すること。一般的な統計的有意性検定において「ない」と言い切ることは至難の業である。\n\n\n限界効果（調整変数が連続変数）\n　最後に調整変数が連続変数（ここではDuration）の場合について考えてみよう。基本的なやり方はこれまでと同じである。しかし、予測値の可視化の際、Durationの値が2、9、16の場合の予測値を計算した。なぜなら、この値が3つでなく、5つになると線の数が増えてしまい、図の可読性が低下するからだ。情報量が多少減っても、可読性の低い図は存在意義がないため、線の本数を減らしたわけだ。しかし、今回の例だと、Durationが線の色分けでなく、横軸として使用される。したがって、Durationのすべての値を対象に限界効果を計算した方が良い。datagrid()内にはDuration = c(1, 2, 3, 4, 5)と書いても良いが、Duration = 2:16の方がより効率的な書き方である。\n\n\n\nCode 27\n\ninter2_ame &lt;- marginaleffects(fit_inter2, variables = \"Order\",\n                              newdata = datagrid(Duration = 2:16))\n\ninter2_ame\n\n\n\n  Term Estimate Std. Error     z  Pr(&gt;|z|)     2.5 % 97.5 % Duration\n Order   0.5638     0.3183 1.771 0.0764919 -0.060008 1.1875        2\n Order   0.5351     0.2870 1.865 0.0622321 -0.027358 1.0976        3\n Order   0.5065     0.2564 1.976 0.0481890  0.004034 1.0090        4\n Order   0.4779     0.2267 2.108 0.0349911  0.033658 0.9221        5\n Order   0.4493     0.1982 2.266 0.0234364  0.060720 0.8378        6\n Order   0.4207     0.1718 2.449 0.0143417  0.083944 0.7574        7\n Order   0.3920     0.1484 2.643 0.0082272  0.101271 0.6828        8\n Order   0.3634     0.1296 2.805 0.0050322  0.109479 0.6173        9\n Order   0.3348     0.1177 2.845 0.0044395  0.104158 0.5654       10\n Order   0.3062     0.1149 2.666 0.0076804  0.081067 0.5313       11\n Order   0.2775     0.1217 2.280 0.0226037  0.038966 0.5161       12\n Order   0.2489     0.1369 1.819 0.0689152 -0.019294 0.5171       13\n Order   0.2203     0.1579 1.396 0.1628554 -0.089104 0.5297       14\n Order   0.1917     0.1828 1.049 0.2942326 -0.166501 0.5499       15\n Order   0.1631     0.2101 0.776 0.4377603 -0.248798 0.5749       16\n\nPrediction type:  response \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, Score_Mean, Order, First, Duration, eps \n\n\n　続いて、作図に必要な列を出力する。今回の場合、連続変数であるため、factor化は不要だ。\n\n\n\nCode 28\n\ninter2_ame &lt;- inter2_ame %&gt;%\n  select(Duration, estimate, std.error, conf.low, conf.high)\n\ninter2_ame\n\n\n\n Estimate Std. Error    CI low CI high\n   0.5638     0.3183 -0.060008  1.1875\n   0.5351     0.2870 -0.027358  1.0976\n   0.5065     0.2564  0.004034  1.0090\n   0.4779     0.2267  0.033658  0.9221\n   0.4493     0.1982  0.060720  0.8378\n   0.4207     0.1718  0.083944  0.7574\n   0.3920     0.1484  0.101271  0.6828\n   0.3634     0.1296  0.109479  0.6173\n   0.3348     0.1177  0.104158  0.5654\n   0.3062     0.1149  0.081067  0.5313\n   0.2775     0.1217  0.038966  0.5161\n   0.2489     0.1369 -0.019294  0.5171\n   0.2203     0.1579 -0.089104  0.5297\n   0.1917     0.1828 -0.166501  0.5499\n   0.1631     0.2101 -0.248798  0.5749\n\nPrediction type:  \nColumns: Duration, estimate, std.error, conf.low, conf.high \n\n\n　続いて作図をする。今回は調整変数が連続変数であるため、線（geom_line()）と面（geom_ribbon()）の図を出力してみよう。面の透明度指定を忘れないこと（一度、alpha = 0.3なしでコードを走らせてみても良いだろう）。\n\n\n\nCode 29\n\ninter2_ame %&gt;%\n  ggplot(aes(x = Duration)) +\n  geom_hline(yintercept = 0) +\n  geom_ribbon(aes(y = estimate, ymin = conf.low, ymax = conf.high),\n              alpha = 0.3) +\n  geom_line(aes(y = estimate), linewidth = 1) +\n  labs(x = \"結成からの経過年数\", y = \"出場順番の平均限界効果\") +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　今回、Durationは2から16まで、つまり14の値で構成されている。この場合、pointrangeプロットを作成しても良いかも知れない。むしろ、結果を解釈する時にはpointrangeプロットの方がやりやすい。\n\n\n\nCode 30\n\ninter2_ame %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = Duration, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"結成からの経過年数\", y = \"出場順番の平均限界効果\") +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　横軸の目盛りを1年刻みに修正してみよう。\n\n\n\nCode 30\n\ninter2_ame %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = Duration, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"結成からの経過年数\", y = \"出場順番の平均限界効果\") +\n  scale_x_continuous(breaks = 2:16, labels = 2:16) +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　限界効果が統計的に有意な箇所はDurationの値が4以上、12以下の時である。つまり、「コンビー結成から4年以上、12年以下経過した場合、出場順番が遅いほど平均得点が高い傾向がある」と解釈できる。また、「コンビー結成から3年以下、13年以上経過した場合、出場順番が遅いほど平均得点が高い傾向があるとは言えない」といった解釈もできる。\n　おまけに統計的有意性検定の結果も同時に示す方法も紹介する。具体的には限界効果が統計的有意である場合は黒に、非有意である場合はグレーに出力する。コードの説明は割愛するため、興味のある方はぜひコードの中身を解読してみよう。\n\n\n\nCode 31\n\ninter2_ame %&gt;%\n  mutate(Sig = if_else(conf.low * conf.high &gt; 0, \"Sig\", \"Insig\")) %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = Duration, y = estimate, \n                      ymin = conf.low, ymax = conf.high,\n                      color = Sig)) +\n  labs(x = \"結成からの経過年数\", y = \"出場順番の平均限界効果\") +\n  scale_x_continuous(breaks = 2:16, labels = 2:16) +\n  scale_color_manual(values = c(\"Sig\" = \"black\", \"Insig\" = \"gray70\")) +\n  theme_bw(base_size = 14) +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "materials/macro/regression2.html",
    "href": "materials/macro/regression2.html",
    "title": "第9回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression2.html#スライド",
    "href": "materials/macro/regression2.html#スライド",
    "title": "第9回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression2.html#セットアップ",
    "href": "materials/macro/regression2.html#セットアップ",
    "title": "第9回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　本日使用する3つのパッケージとデータ（JES6_W1.csv; LMSからダウンロード）を読み込む。読み込んだデータはjes_dfと名付けて作業スペース内に格納する。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(fastDummies)\nlibrary(modelsummary)\n\njes_df  &lt;- read_csv(\"Data/JES6_W1.csv\")\n\njes_df\n\n\n# A tibble: 3,000 × 8\n   Temp_Rikken Ideology Interest Gender   Age Education   Job  Income\n         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1          30        9        1      2    69         4     5 4333994\n 2          50        7        4      2    47         3     1  979181\n 3           0       11        2      2    37         2     1 8498127\n 4          50       11        2      1    51         4     2 7572654\n 5          30        7        2      1    38         4     1 6436713\n 6           0       11        1      1    71         2     5 3410276\n 7          10        9        2      1    47         3     2 8652860\n 8           0       11        1      1    71         2     5  927703\n 9          50        9        1      1    75         4     1 4497693\n10          55        6        2      2    66         3     4 2419573\n# … with 2,990 more rows\n\n\n　つづいて、データの大きさと変数名を確認する。\n\n\n\nCode 02\n\ndim(jes_df) # jes_dfの大きさ（行数と列数）\n\n\n[1] 3000    8\n\n\n\n\n\nCode 03\n\nnames(jes_df) # jes_df内の変数名\n\n\n[1] \"Temp_Rikken\" \"Ideology\"    \"Interest\"    \"Gender\"      \"Age\"        \n[6] \"Education\"   \"Job\"         \"Income\"     \n\n\n　各変数の詳細は以下の通りである。\n\n\n\n\n\n\n\n\n変数名\n説明\n備考\n\n\n\n\nTemp_Rikken\n立憲民主党に対する感情温度\n高いほど好感\n\n\nIdeology\n回答者のイデオロギー\n高いほど保守\n\n\nInterest\n回答者の政治関心\n高いほど無関心\n\n\nGender\n回答者の性別\n1: 男性 / 2: 女性\n\n\nAge\n回答者の年齢\n\n\n\nEducation\n回答者の最終学歴\n1: 中卒以下 / 2: 高校卒 / 3: 高専・短大卒 / 4: 大卒以上\n\n\nJob\n回答者の職業\n1: 勤め / 2: 自営業 / 3: 学生 / 4: 専業主婦・主夫 / 5: 無職 / 6: その他\n\n\nIncome\n回答者の世帯収入\n円"
  },
  {
    "objectID": "materials/macro/regression2.html#記述統計",
    "href": "materials/macro/regression2.html#記述統計",
    "title": "第9回講義資料",
    "section": "記述統計",
    "text": "記述統計\n　分析の前に名目変数（GenderとJob）はダミー変数に変換する。GenderとJobはデータ上は数値型であるため、平均値や標準偏差などの記述統計量は計算できるものの、数字そのものの意味はない。たとえば、Genderの場合1は男性、2は女性であるが、別に1が女性、2が男性でも関係なく、1が女性、99が男性でも回答者の性別を識別するには問題ない。\n　このような名目変数はdummy_cols()関数（{fastDummies}パッケージを予め読み込んでおくこと）を使用してダミー変数に変換してから記述統計量を計算する必要がある。生成されるダミー変数の名前は「元の変数名_値」である。たとえば、Gender列は1と2で構成されているため、Gender_1、Gender_2列が追加される。また、新しく生成されたダミー変数はデータセットの右端に追加される。これらの変数の位置を調整するためにはrelocate()関数を使う。第1引数は位置を変更する列名（複数であれば、c()や:を使用）、第2引数は.before、または.afterである。.before = GenderはGender列より前（=左）、.after = GenderはGender列より後ろ（=右）である。最後にdescr()関数に渡す前に、記述統計量の計算が不要なGender列とJob列を除外する。\n\n\n\nCode 04\n\njes_df %&gt;%\n   dummy_cols(c(\"Gender\", \"Job\")) %&gt;%\n   # Gender_1と_2列をGenderの前に\n   relocate(c(Gender_1, Gender_2), .before = Gender) %&gt;% \n   # Job_1から_6列をJobの前に\n   relocate(Job_1:Job_6, .before = Job) %&gt;%          \n   # GenderとJob列を除外してからdscer()に渡す\n   select(-c(Gender, Job)) %&gt;%\n   descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \njes_df  \nN: 3000  \n\n                          Mean      Std.Dev         Min           Max   N.Valid\n----------------- ------------ ------------ ----------- ------------- ---------\n      Temp_Rikken        34.25        25.95        0.00        100.00   3000.00\n         Ideology         6.34         2.10        1.00         11.00   3000.00\n         Interest         2.26         0.83        1.00          4.00   3000.00\n         Gender_1         0.50         0.50        0.00          1.00   3000.00\n         Gender_2         0.50         0.50        0.00          1.00   3000.00\n              Age        47.34        15.63       18.00         75.00   3000.00\n        Education         3.11         0.89        1.00          4.00   3000.00\n            Job_1         0.50         0.50        0.00          1.00   3000.00\n            Job_2         0.08         0.28        0.00          1.00   3000.00\n            Job_3         0.05         0.21        0.00          1.00   3000.00\n            Job_4         0.20         0.40        0.00          1.00   3000.00\n            Job_5         0.15         0.35        0.00          1.00   3000.00\n            Job_6         0.02         0.14        0.00          1.00   3000.00\n           Income   6190334.00   4233639.26   643629.00   25286751.00   3000.00\n\n\n　自分で記述統計量を確認するためにはこれでも良いが、論文・レポートに掲載する際には、必ず読者に読みやすく加工する必要がある。とりわけ、読者から見ればJob_1とかJob_2は意味がわからないだろう。初見の読者さんも読みやすくするために表内の変数名を以下のように変えよう。\n\n\n\n変数\n平均値\n標準偏差\n最小値\n最大値\n有効ケース数\n\n\n\n\n立憲民主党に対する感情温度\n34.25\n25.95\n0\n100\n3000\n\n\nイデオロギー\n6.34\n2.10\n1\n11\n3000\n\n\n政治関心\n2.26\n0.83\n1\n4\n3000\n\n\n性別：男性\n0.50\n0.50\n0\n1\n3000\n\n\n性別：女性\n0.50\n0.50\n0\n1\n3000\n\n\n年齢\n47.34\n15.63\n18\n75\n3000\n\n\n最終学歴\n3.11\n0.89\n1\n4\n3000\n\n\n職業：勤め\n0.50\n0.50\n0\n1\n3000\n\n\n職業：自営業\n0.08\n0.28\n0\n1\n3000\n\n\n職業：学生\n0.05\n0.21\n0\n1\n3000\n\n\n職業：専業主婦（夫）\n0.20\n0.40\n0\n1\n3000\n\n\n職業：無職・引退\n0.15\n0.35\n0\n1\n3000\n\n\n職業：その他\n0.02\n0.14\n0\n1\n3000\n\n\n世帯収入\n6190334.00\n4233639.26\n643629\n25286751\n3000"
  },
  {
    "objectID": "materials/macro/regression2.html#名目変数と使い方",
    "href": "materials/macro/regression2.html#名目変数と使い方",
    "title": "第9回講義資料",
    "section": "名目変数と使い方",
    "text": "名目変数と使い方\n　それでは名目変数を含む重回帰分析を実装してみよう。重回帰モデルに名目変数を投入する方法する方法は実は簡単だ。それはlm()関数内のformulaにfactor化した名目変数を追加するだけである。Factor型変数が説明変数として投入されると、自動的にダミー変数に変換されてから投入される（つまり、ダミー変数に変換して一つ一つ投入しても問題ないということ）。ただし、全てのダミー変数が投入されるわけではなく、\\(k-1\\)個のダミー変数が投入されることには注意すること（\\(k\\)は当該factor型変数の水準数）。たとえば、性別（Gender）の場合、2つ値で構成されている変数であるため、ダミー変数も2つになるが、1つのみ投入される。同様に、職業（Job）変数も、1から6までの6つの値で構成されているため、ダミー変数も6つになるが、5つのみ投入される。ここで除外されたカテゴリーは「ベース・カテゴリー (base category)」、「参照カテゴリー/レファレンス・カテゴリー (reference category)」、「ベースライン (baseline)」などと呼ばれる（どの水準がベース・カテゴリーになるかは後述する）。\n　それでは実装してみよう。GenderとJob変数はデータ上、まだ数値型変数であるため、これらをfactor化する。また、単純にfactor化するだけでなく、値にラベルも割り当てよう。factor()関数の第1引数はfactor化する変数名を入れる。第2引数以降はlevelsとlabelsを指定する（引数名を明記するため、順番は関係ない）。levelsは元の値、labelsにはそれぞれの値に割り当てるラベルである。\n\n\n\nCode 05\n\njes_df &lt;- jes_df %&gt;%\n  mutate(Gender = factor(Gender, levels = 1:2, labels = c(\"Male\", \"Female\")),\n         Job    = factor(Job, levels = 1:6, labels = c(\"Salary\", \"Self\", \"Student\", \n                                                       \"House\", \"Retire\", \"Etc\")))\n\njes_df\n\n\n# A tibble: 3,000 × 8\n   Temp_Rikken Ideology Interest Gender   Age Education Job     Income\n         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;\n 1          30        9        1 Female    69         4 Retire 4333994\n 2          50        7        4 Female    47         3 Salary  979181\n 3           0       11        2 Female    37         2 Salary 8498127\n 4          50       11        2 Male      51         4 Self   7572654\n 5          30        7        2 Male      38         4 Salary 6436713\n 6           0       11        1 Male      71         2 Retire 3410276\n 7          10        9        2 Male      47         3 Self   8652860\n 8           0       11        1 Male      71         2 Retire  927703\n 9          50        9        1 Male      75         4 Salary 4497693\n10          55        6        2 Female    66         3 House  2419573\n# … with 2,990 more rows\n\n\n　Factor化が済んだら、回帰分析を行い、推定結果はdummy_fit1という名のオブジェクトとして格納する。\n\n\n\nCode 06\n\ndummy_fit1 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + \n                    Education + Job + Income, data = jes_df)\n\n\n　summary()関数で推定結果を確認してみよう。\n\n\n\nCode 07\n\nsummary(dummy_fit1)\n\n\n\nCall:\nlm(formula = Temp_Rikken ~ Ideology + Interest + Gender + Age + \n    Education + Job + Income, data = jes_df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-50.58 -24.62   4.76  18.82  78.05 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   3.477e+01  3.558e+00   9.772  &lt; 2e-16 ***\nIdeology     -2.117e+00  2.202e-01  -9.616  &lt; 2e-16 ***\nInterest     -1.404e+00  6.100e-01  -2.302 0.021407 *  \nGenderFemale  3.395e+00  1.071e+00   3.170 0.001540 ** \nAge           1.871e-01  3.723e-02   5.026 5.31e-07 ***\nEducation     1.970e+00  5.402e-01   3.648 0.000269 ***\nJobSelf      -2.187e+00  1.737e+00  -1.259 0.208045    \nJobStudent    5.775e+00  2.369e+00   2.438 0.014836 *  \nJobHouse      2.172e+00  1.415e+00   1.535 0.124842    \nJobRetire    -1.160e+00  1.519e+00  -0.764 0.444993    \nJobEtc       -8.071e-01  3.393e+00  -0.238 0.812021    \nIncome       -1.539e-07  1.145e-07  -1.343 0.179231    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 25.27 on 2988 degrees of freedom\nMultiple R-squared:  0.05472,   Adjusted R-squared:  0.05124 \nF-statistic: 15.72 on 11 and 2988 DF,  p-value: &lt; 2.2e-16\n\n\n　連続変数の場合、これまでの解釈と同じである。たとえば、回答者のイデオロギー（Ideology）の係数を解釈してみよう。係数は約2.117であり、\\(p &lt; 0.05\\)から統計的に有意である。これはIdeologyの値が上がると立民に対する感情温度が低くなることを意味する。Ideologyの値が上がるということは、より保守的なイデオロギーを持つことを意味し、言い換えれば、保守的な回答者ほど、立民に対する感情温度が低いことを意味する。具体的に係数を解釈するならば、「イデオロギーが1単位上がると（= 有権者が1単位保守的になると）、立民に対する感情温度は約2.113度下がる」ということになる。\n　問題はダミー変数の解釈である。ダミー変数の解釈は「ベース・カテゴリーに比べ、〜」といった解釈となる。性別（Gender）変数の場合、投入されなかったのは女性ダミー（GenderFemale）であるため、男性ダミー（GenderMale）がベース・カテゴリーとなる。この場合、係数の解釈は「男性に比べ〜」となる。GenderFemaleの係数が約3.395ということは、「男性に比べ、女性は立民に対する感情温度が約3.395度高い」ことを意味する。\n　回答者の職業（Job）についても同じことが言える。投入されなかったのは勤めダミー（JobSalary）であるため、勤めダミー（JobSalary）がベース・カテゴリーとなる。自営業ダミー（JobSelf）の係数は約-2.187であるが、これは「勤めの人に比べ、自営業の人は立民に対する感情温度が約2.187度低い」。ただし、\\(p = 0.208\\)ということで統計的に有意な関係はないため、具体的な係数を解釈する必要はなく、この場合は「勤めの人に比べ、自営業の人は立民に対する感情温度が異なるとは言えない」程度で十分である。一方、学生ダミー（JobStudent）の場合、係数は約5.775で、統計的に有意でもある。解釈は「勤めの人に比べ、学生は立民に対する感情温度が約5.8度高い」で良いだろう。\n　一つ注意すべき点としては、ダミー変数はベース・カテゴリーによって統計的有意性が変わり得ることだ。名目変数を統制変数として投入しただけであれば、そもそも解釈は不要であるが、研究において主要説明変数であれば、ベース・カテゴリーの設定は慎重に行う必要がある。、「どのカテゴリー間を比べたいか」に注目することで設定すべきベース・カテゴリーが決まるだろう。\n　今回は男性ダミーと勤めダミーが自動的にベース・カテゴリーになったが、このベース・カテゴリーは何によって決まるだろうか。その仕組は簡単である。Factor型変数の最初の水準（level）がベース・カテゴリーになる。あるfactor型変数の水準の順番を確認するためにはlevels()関数を使用する。\n\n\n\nCode 08\n\nlevels(jes_df$Gender) # jes_dfのGender列の水準\n\n\n[1] \"Male\"   \"Female\"\n\n\n\n\n\nCode 09\n\nlevels(jes_df$Job) # jes_dfのJob列の水準\n\n\n[1] \"Salary\"  \"Self\"    \"Student\" \"House\"   \"Retire\"  \"Etc\"    \n\n\n　つまり、GenderとJobの水準の順番を変えるとベース・カテゴリーが変更できる。Factor型変数の特定の水準を最初の水準にする場合は、Factor化済みの変数に対し、fct_relevel()を使用する。第1引数は水準の順番を変更する変数名を、第2引数には最初の水準にしたい水準名を\"で囲んで入力する。これをGenderとJob列に対して適用し、それぞれ最初の水準を\"Male\"と\"Etc\"にする。列の操作後、jes_dfは上書きせず、jes_df2と新しい名のオブジェクトとして格納し、jes_df2のGender列とJob列の水準を出力する。\n\n\n\nCode 10\n\njes_df2 &lt;- jes_df %&gt;%\n  mutate(Gender = fct_relevel(Gender, \"Female\"), # Femaleを第1水準に\n         Job    = fct_relevel(Job, \"Etc\"))       # Etcを第1水準に\n\nlevels(jes_df2$Gender) # jes_df2のGender列の水準\n\n\n[1] \"Female\" \"Male\"  \n\n\n\n\n\nCode 11\n\nlevels(jes_df2$Job) # jes_df2のJob列の水準\n\n\n[1] \"Etc\"     \"Salary\"  \"Self\"    \"Student\" \"House\"   \"Retire\" \n\n\n　最初の水準が変更され、2番目以降の水準は既存の順番そのままになっていることが分かる1。それではjes_df2を用い、dummy_fit1と同じ推定をやってみよう。推定結果はdummy_fit2に格納し、summary()推定結果を確認してみよう。\n\n\n\nCode 12\n\ndummy_fit2 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + \n                    Education + Job + Income, data = jes_df2)\nsummary(dummy_fit2)\n\n\n\nCall:\nlm(formula = Temp_Rikken ~ Ideology + Interest + Gender + Age + \n    Education + Job + Income, data = jes_df2)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-50.58 -24.62   4.76  18.82  78.05 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  3.736e+01  4.936e+00   7.570 4.96e-14 ***\nIdeology    -2.117e+00  2.202e-01  -9.616  &lt; 2e-16 ***\nInterest    -1.404e+00  6.100e-01  -2.302 0.021407 *  \nGenderMale  -3.395e+00  1.071e+00  -3.170 0.001540 ** \nAge          1.871e-01  3.723e-02   5.026 5.31e-07 ***\nEducation    1.970e+00  5.402e-01   3.648 0.000269 ***\nJobSalary    8.071e-01  3.393e+00   0.238 0.812021    \nJobSelf     -1.380e+00  3.677e+00  -0.375 0.707369    \nJobStudent   6.582e+00  4.111e+00   1.601 0.109437    \nJobHouse     2.979e+00  3.483e+00   0.855 0.392472    \nJobRetire   -3.533e-01  3.547e+00  -0.100 0.920665    \nIncome      -1.539e-07  1.145e-07  -1.343 0.179231    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 25.27 on 2988 degrees of freedom\nMultiple R-squared:  0.05472,   Adjusted R-squared:  0.05124 \nF-statistic: 15.72 on 11 and 2988 DF,  p-value: &lt; 2.2e-16\n\n\n　2つ以上のモデルを比較する際は推定結果を横に並べるとより見やすくなる。modelsummary()関数で2つのモデルを比較する際に非常に便利だ（予め{modelsummary}パッケージを読み込んでおくこと）。\n\n\n\nCode 13\n\nmodelsummary(list(dummy_fit1, dummy_fit2))\n\n\n\n\n\n\n (1)\n  (2)\n\n\n\n\n(Intercept)\n34.774\n37.362\n\n\n\n(3.558)\n(4.936)\n\n\nIdeology\n−2.117\n−2.117\n\n\n\n(0.220)\n(0.220)\n\n\nInterest\n−1.404\n−1.404\n\n\n\n(0.610)\n(0.610)\n\n\nGenderFemale\n3.395\n\n\n\n\n(1.071)\n\n\n\nAge\n0.187\n0.187\n\n\n\n(0.037)\n(0.037)\n\n\nEducation\n1.970\n1.970\n\n\n\n(0.540)\n(0.540)\n\n\nJobSelf\n−2.187\n−1.380\n\n\n\n(1.737)\n(3.677)\n\n\nJobStudent\n5.775\n6.582\n\n\n\n(2.369)\n(4.111)\n\n\nJobHouse\n2.172\n2.979\n\n\n\n(1.415)\n(3.483)\n\n\nJobRetire\n−1.160\n−0.353\n\n\n\n(1.519)\n(3.547)\n\n\nJobEtc\n−0.807\n\n\n\n\n(3.393)\n\n\n\nIncome\n0.000\n0.000\n\n\n\n(0.000)\n(0.000)\n\n\nGenderMale\n\n−3.395\n\n\n\n\n(1.071)\n\n\nJobSalary\n\n0.807\n\n\n\n\n(3.393)\n\n\nNum.Obs.\n3000\n3000\n\n\nR2\n0.055\n0.055\n\n\nR2 Adj.\n0.051\n0.051\n\n\nAIC\n27906.2\n27906.2\n\n\nBIC\n27984.2\n27984.2\n\n\nLog.Lik.\n−13940.081\n−13940.081\n\n\nF\n15.724\n\n\n\nRMSE\n25.22\n25.22\n\n\n\n\n\n\n\n　表が縦長なので、標準誤差と係数を同じ行にしてみよう。コードは覚える必要がなく、必要に応じてこのサポートページを参照するか、Google大先生に聞いてみれば良い。\n\n\n\nCode 14\n\nmodelsummary(list(dummy_fit1, dummy_fit2),\n             estimate  = \"{estimate} ({std.error})\",\n             statistic = NULL)\n\n\n\n\n\n\n\n\n\n\n\n(1)\n(2)\n\n\n\n\n(Intercept)\n34.774 (3.558)\n37.362 (4.936)\n\n\nIdeology\n-2.117 (0.220)\n-2.117 (0.220)\n\n\nInterest\n-1.404 (0.610)\n-1.404 (0.610)\n\n\nGenderFemale\n3.395 (1.071)\n\n\n\nAge\n0.187 (0.037)\n0.187 (0.037)\n\n\nEducation\n1.970 (0.540)\n1.970 (0.540)\n\n\nJobSelf\n-2.187 (1.737)\n-1.380 (3.677)\n\n\nJobStudent\n5.775 (2.369)\n6.582 (4.111)\n\n\nJobHouse\n2.172 (1.415)\n2.979 (3.483)\n\n\nJobRetire\n-1.160 (1.519)\n-0.353 (3.547)\n\n\nJobEtc\n-0.807 (3.393)\n\n\n\nIncome\n0.000 (0.000)\n0.000 (0.000)\n\n\nGenderMale\n\n-3.395 (1.071)\n\n\nJobSalary\n\n0.807 (3.393)\n\n\nNum.Obs.\n3000\n3000\n\n\nR2\n0.055\n0.055\n\n\nR2 Adj.\n0.051\n0.051\n\n\nAIC\n27906.2\n27906.2\n\n\nBIC\n27984.2\n27984.2\n\n\nLog.Lik.\n-13940.081\n-13940.081\n\n\nF\n15.724\n\n\n\nRMSE\n25.22\n25.22\n\n\n\n\n\n\n\n　比較の結果から分かるのは、ダミー変数の係数のみ変化したことである。つまり、ダミー変数以外の変数の係数は少しも変わっていない（切片も変わるものの、切片は通常、解釈しない）。性別（Gender）のように2つ値のみ取る（= 1つのダミー変数だけ投入される）変数の係数は大きさは同じで符号だけが逆転される。また、標準誤差も同じであるため、統計的有意性も変わらない。したがって、解釈の変化も直感的である。\n\ndummy_fit1：男性に比べ、女性の立民に対する感情温度が約3.395度高い。\ndummy_fit2：女性に比べ、男性の立民に対する感情温度が約3.395度低い。\n\n　一方、職業（Job）のように3つ以上の値のみ取る変数の係数は大きく変わる場合がある。たとえば、学生（JobStudent）の係数を解釈する場合は、以下のようになる。\n\ndummy_fit1：勤めの人に比べ、学生の立民に対する感情温度が約5.775度高い。\ndummy_fit2：その他の職業の人に比べ、学生の立民に対する感情温度が約6.582度高いものの、統計的に有意な差はない。\n\n　ベース・カテゴリーが変わったということは比較対象が変わったことを意味し、係数も当然ながら変わる。それでも各係数間の差は同じである。たとえば、dummy_fit1の場合、学生ダミー（JobStudent）の係数は5.775、その他ダミー（JobEtc）の係数は−0.807である。こと差は5.775 - (-0.807) = 6.582である。つまり、どのモデルでも「学生」の方が「その他」より、立民に対する感情温度が約6.582度高いことは変わらない。ただし、「学生 - 勤め」の差は統計的有意であるものの、「学生 - その他」の差は統計的有意ではなかっただけだ。"
  },
  {
    "objectID": "materials/macro/regression2.html#線形変換",
    "href": "materials/macro/regression2.html#線形変換",
    "title": "第9回講義資料",
    "section": "線形変換",
    "text": "線形変換\n\n単位変換\n　もう一度、dummy_fit1の推定結果に戻ってみよう。今回注目する係数は世帯収入（Income）の係数である。推定モデルの係数のみ見たい時にはcoef()関数が便利だ。\n\n\n\nCode 15\n\ncoef(dummy_fit1)\n\n\n  (Intercept)      Ideology      Interest  GenderFemale           Age \n 3.477403e+01 -2.117306e+00 -1.404169e+00  3.395415e+00  1.871321e-01 \n    Education       JobSelf    JobStudent      JobHouse     JobRetire \n 1.970356e+00 -2.187355e+00  5.775400e+00  2.172187e+00 -1.160311e+00 \n       JobEtc        Income \n-8.070534e-01 -1.538790e-07 \n\n\n　Incomeの傾き係数は約-1.538790e-07である。e-07は「\\(\\times\\) 10-7」を意味し、ちなみに10-1は0.1、10-2は0.01である。つまり、-1.538790e-07は-1.538790e-07 = -1.538790 \\(\\times\\) 10-7 = -0.000000153879である。この係数は「世帯収入が1円上がると、立憲民主党への感情温度が約0.000000153879度下がる」ことを意味する。Incomeの単位は1円であるため、係数そのまま解釈できる。しかし、これで良いだろうか。世帯収入（しかも年収）における1円の変動は無視できる微々たるものである。むしろ、1円の増加よりも100万円の増加の方が、より現実的な解釈であろう。この場合の解釈は「世帯収入が100万円上がると、立憲民主党への感情温度が-0.154度下がる」こととなる。Incomeの単位は1円であるため、係数に100万をかけるだけで良い（-0.000000153879 \\(\\times\\) 1000000 = -0.153879）。しかし、解釈のたびに係数に100万をかけて解釈する必要があるのは非常に面倒であるし、0が多い分、計算ミスも生じやすい。したがって、Incomeの単位を予め100万円に変えておいた方が安全だろう。つまり、3000000（300万）を3に、12000000（1200万）を12に変換することである。\n　Incomeを100万単位にするためには、Incomeを100万で割るだけで良い。ここではjes_dfのIncomeの値を100万で割り、Income_mという新しい変数として追加し、jes_df3という新しいデータフレームを作成。新しく追加される変数名は何でも良いが、ここではmillionの頭文字を使用する。\n\n\n\nCode 16\n\njes_df3 &lt;- jes_df %&gt;%\n  mutate(Income_m = Income / 1000000)\n\njes_df3\n\n\n# A tibble: 3,000 × 9\n   Temp_Rikken Ideology Interest Gender   Age Education Job     Income Income_m\n         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;fct&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1          30        9        1 Female    69         4 Retire 4333994    4.33 \n 2          50        7        4 Female    47         3 Salary  979181    0.979\n 3           0       11        2 Female    37         2 Salary 8498127    8.50 \n 4          50       11        2 Male      51         4 Self   7572654    7.57 \n 5          30        7        2 Male      38         4 Salary 6436713    6.44 \n 6           0       11        1 Male      71         2 Retire 3410276    3.41 \n 7          10        9        2 Male      47         3 Self   8652860    8.65 \n 8           0       11        1 Male      71         2 Retire  927703    0.928\n 9          50        9        1 Male      75         4 Salary 4497693    4.50 \n10          55        6        2 Female    66         3 House  2419573    2.42 \n# … with 2,990 more rows\n\n\n　それではdummy_fit1と同じ推定をしてみよう。ただし、使用するデータはjes_dfでなく、jes_df3を使用する。また、世帯年収もIncomeの代わりにIncome_mを使う。推定結果はfit3という名のオブジェクトとして作業スペースに格納する。\n\n\n\nCode 17\n\nfit3 &lt;- lm(Temp_Rikken ~ Ideology + Interest + Gender + Age + \n              Education + Job + Income_m, data = jes_df3)\n\n\n　それではmodelsummary()を使ってdummy_fit1とfit3の結果を比較してみよう。他の係数は一切変わらず、線形変換された変数の係数（と標準誤差）のみ変わったことが確認できる。Income_mの単位は100万円であるため、係数の解釈は「世帯収入が100万円上がる（= Income_mの値が1上がる）と、立憲民主党への感情温度が-0.154度下がる」になり、より解釈しやすくなる。\n\n\n\nCode 18\n\nmodelsummary(list(dummy_fit1, fit3),\n             estimate  = \"{estimate} ({std.error})\",\n             statistic = NULL)\n\n\n\n\n\n\n\n\n\n\n\n(1)\n(2)\n\n\n\n\n(Intercept)\n34.774 (3.558)\n34.774 (3.558)\n\n\nIdeology\n-2.117 (0.220)\n-2.117 (0.220)\n\n\nInterest\n-1.404 (0.610)\n-1.404 (0.610)\n\n\nGenderFemale\n3.395 (1.071)\n3.395 (1.071)\n\n\nAge\n0.187 (0.037)\n0.187 (0.037)\n\n\nEducation\n1.970 (0.540)\n1.970 (0.540)\n\n\nJobSelf\n-2.187 (1.737)\n-2.187 (1.737)\n\n\nJobStudent\n5.775 (2.369)\n5.775 (2.369)\n\n\nJobHouse\n2.172 (1.415)\n2.172 (1.415)\n\n\nJobRetire\n-1.160 (1.519)\n-1.160 (1.519)\n\n\nJobEtc\n-0.807 (3.393)\n-0.807 (3.393)\n\n\nIncome\n0.000 (0.000)\n\n\n\nIncome_m\n\n-0.154 (0.115)\n\n\nNum.Obs.\n3000\n3000\n\n\nR2\n0.055\n0.055\n\n\nR2 Adj.\n0.051\n0.051\n\n\nAIC\n27906.2\n27906.2\n\n\nBIC\n27984.2\n27984.2\n\n\nLog.Lik.\n-13940.081\n-13940.081\n\n\nF\n15.724\n15.724\n\n\nRMSE\n25.22\n25.22\n\n\n\n\n\n\n\n\n\nスケールの逆転\n　今回注目する係数はdummy_fit1の政治関心（Intrest）の係数である。政治関心の傾き係数は約-1.404であり、これは「Interestが1単位上がると、立憲民主党への感情温度が約1.404度下がる」と解釈できる。ただし、これだと「政治関心が高い人ほど、立憲民主党に反感を持つ」といったイメージを漂わせる。しかし、政治関心（Interest）の値は1が「関心あり」、2が「やや関心あり」、3が「やや関心なし」、4が「関心なし」という点に注意する必要がある。つまり、「Interestが1単位上がる」ということは、「政治関心が1単位下がる」ことを意味する。したがって、「Interestが1単位上がると、立憲民主党への感情温度が約1.404度下がる。」の意味は、「政治関心が1単位下がると、立憲民主党への感情温度が約1.404度下がる」か「政治関心が1単位上がると、立憲民主党への感情温度が約1.404度上がる」である。要は「Intrestと立民感情温度」は負の関係になるが、「政治関心と立民感情温度」は正の関係があることである。これは非常にややこしいし、解釈の際、ミスの原因にもなり得る。この問題を解決するためには、最初からInterestの値を逆転させることが有効だろう。つまり、Intrestの値が大きいほど政治関心が高まるようにすれば良い。\n　このようなスケールの逆転は単なる引き算や掛け算でできる。\n\nケース1： 1〜\\(m\\)のスケールで測定された変数は\\(m + 1\\)から引くと、逆転される。今回の例がこれに該当する。Interestは1〜4であるため、5から引けばよい。\n\n\n\n\nCode 19\n\nx1 &lt;- c(1, 2, 3, 4) # x1 &lt;- 1:4 でもOK\nx1\n\n\n[1] 1 2 3 4\n\n\n\n\n\nCode 20\n\n5 - x1\n\n\n[1] 4 3 2 1\n\n\n　他にも変数の範囲（range）によって逆転の仕方が異なる。\n\nケース2： 0〜\\(m\\)のスケールで測定された変数は\\(m\\)から引くと、逆転される。\n\n\n\n\nCode 21\n\nx2 &lt;- c(0, 1, 2, 3, 4, 5, 6) # x23 &lt;- 0:6 でもOK\nx2\n\n\n[1] 0 1 2 3 4 5 6\n\n\n\n\n\nCode 22\n\n6 - x2\n\n\n[1] 6 5 4 3 2 1 0\n\n\n\nケース3： \\(-m\\)〜\\(m\\)のスケールで測定された変数は-1をかけると、逆転される。\n\n\n\n\nCode 23\n\nx3 &lt;- c(-3, -2, -1, 0, 1, 2, 3) # x3 &lt;- -3:3 でもOK\nx3\n\n\n[1] -3 -2 -1  0  1  2  3\n\n\n\n\n\nCode 24\n\nx3 * (-1)\n\n\n[1]  3  2  1  0 -1 -2 -3\n\n\n　それではIntrestを逆転して、もう一度推定してみよう。jes_df3のInterestの値を5から引き、Interest_rという新しい変数として追加し、jes_df3を上書きする。変数名は何でも良いが、ここではreverseの頭文字を使うとする。\n\n\n\nCode 25\n\njes_df3 &lt;- jes_df3 %&gt;%\n  mutate(Interest_r = 5 - Interest)\n\njes_df3\n\n\n# A tibble: 3,000 × 10\n   Temp_Rikken Ideol…¹ Inter…² Gender   Age Educa…³ Job   Income Incom…⁴ Inter…⁵\n         &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1          30       9       1 Female    69       4 Reti… 4.33e6   4.33        4\n 2          50       7       4 Female    47       3 Sala… 9.79e5   0.979       1\n 3           0      11       2 Female    37       2 Sala… 8.50e6   8.50        3\n 4          50      11       2 Male      51       4 Self  7.57e6   7.57        3\n 5          30       7       2 Male      38       4 Sala… 6.44e6   6.44        3\n 6           0      11       1 Male      71       2 Reti… 3.41e6   3.41        4\n 7          10       9       2 Male      47       3 Self  8.65e6   8.65        3\n 8           0      11       1 Male      71       2 Reti… 9.28e5   0.928       4\n 9          50       9       1 Male      75       4 Sala… 4.50e6   4.50        4\n10          55       6       2 Female    66       3 House 2.42e6   2.42        3\n# … with 2,990 more rows, and abbreviated variable names ¹​Ideology, ²​Interest,\n#   ³​Education, ⁴​Income_m, ⁵​Interest_r\n\n\n　続いてfit3と同じ推定を行う。ただし、Intrestの代わりにIntrest_rを使用し、推定結果はfit4に格納する。\n\n\n\nCode 26\n\nfit4 &lt;- lm(Temp_Rikken ~ Ideology + Interest_r + Gender + Age +\n              Education + Job + Income_m, data = jes_df3)\n\nsummary(fit4)\n\n\n\nCall:\nlm(formula = Temp_Rikken ~ Ideology + Interest_r + Gender + Age + \n    Education + Job + Income_m, data = jes_df3)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-50.58 -24.62   4.76  18.82  78.05 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  27.75319    3.07847   9.015  &lt; 2e-16 ***\nIdeology     -2.11731    0.22019  -9.616  &lt; 2e-16 ***\nInterest_r    1.40417    0.60999   2.302 0.021407 *  \nGenderFemale  3.39541    1.07112   3.170 0.001540 ** \nAge           0.18713    0.03723   5.026 5.31e-07 ***\nEducation     1.97036    0.54017   3.648 0.000269 ***\nJobSelf      -2.18735    1.73706  -1.259 0.208045    \nJobStudent    5.77540    2.36914   2.438 0.014836 *  \nJobHouse      2.17219    1.41493   1.535 0.124842    \nJobRetire    -1.16031    1.51895  -0.764 0.444993    \nJobEtc       -0.80705    3.39325  -0.238 0.812021    \nIncome_m     -0.15388    0.11454  -1.343 0.179231    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 25.27 on 2988 degrees of freedom\nMultiple R-squared:  0.05472,   Adjusted R-squared:  0.05124 \nF-statistic: 15.72 on 11 and 2988 DF,  p-value: &lt; 2.2e-16\n\n\n　それでは、fit3とfit4の結果を比較してみよう。\n\n\n\nCode 27\n\nmodelsummary(list(fit3, fit4),\n             estimate  = \"{estimate} ({std.error})\",\n             statistic = NULL)\n\n\n\n\n\n\n\n\n\n\n\n(1)\n(2)\n\n\n\n\n(Intercept)\n34.774 (3.558)\n27.753 (3.078)\n\n\nIdeology\n-2.117 (0.220)\n-2.117 (0.220)\n\n\nInterest\n-1.404 (0.610)\n\n\n\nGenderFemale\n3.395 (1.071)\n3.395 (1.071)\n\n\nAge\n0.187 (0.037)\n0.187 (0.037)\n\n\nEducation\n1.970 (0.540)\n1.970 (0.540)\n\n\nJobSelf\n-2.187 (1.737)\n-2.187 (1.737)\n\n\nJobStudent\n5.775 (2.369)\n5.775 (2.369)\n\n\nJobHouse\n2.172 (1.415)\n2.172 (1.415)\n\n\nJobRetire\n-1.160 (1.519)\n-1.160 (1.519)\n\n\nJobEtc\n-0.807 (3.393)\n-0.807 (3.393)\n\n\nIncome_m\n-0.154 (0.115)\n-0.154 (0.115)\n\n\nInterest_r\n\n1.404 (0.610)\n\n\nNum.Obs.\n3000\n3000\n\n\nR2\n0.055\n0.055\n\n\nR2 Adj.\n0.051\n0.051\n\n\nAIC\n27906.2\n27906.2\n\n\nBIC\n27984.2\n27984.2\n\n\nLog.Lik.\n-13940.081\n-13940.081\n\n\nF\n15.724\n15.724\n\n\nRMSE\n25.22\n25.22\n\n\n\n\n\n\n\n　他の係数は一切変わらず、線形変換された変数の係数（と標準誤差）の符号のみ変わることが確認できる。Intrest_rは高いほど政治に関心があることを意味するので、「政治関心が1単位上がると、立憲民主党に対する感情温度は約1.404度上がる」と解釈できるようになる。社会調査（世論調査）の場合、このような5件法、7件法で測定された変数がほとんどである（このような尺度を「リッカート尺度」と呼ぶ）。また、これらは最初の選択肢が「そう思う」や「とても当てはまる」など、ポジティブなものになっているケースが多いため、このようなミスはよく生じる。データ分析とはパソコン/ソフトウェアスキルだけでなく、このようにデータを読み取る能力も重要だ。"
  },
  {
    "objectID": "materials/macro/nhts.html",
    "href": "materials/macro/nhts.html",
    "title": "第6回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/nhts.html#スライド",
    "href": "materials/macro/nhts.html#スライド",
    "title": "第6回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/nhts.html#セットアップ",
    "href": "materials/macro/nhts.html#セットアップ",
    "title": "第6回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　まずは実習に使用する2つのパッケージ（{tidyverse}と{summarytools}）とデータ（Gacha.csv）を読み込む。Gacha.csvはLMSから入手可能である。プロジェクトフォルダー内にDataフォルダーを作成し、そこにGacha.csvがアップロードした場合、パスは\"Data/Gacha.csv\"となる。\n\n\n\n\n\n\nプロジェクト機能は常に使用すること\n\n\n\nRStudioの右上に「Project: (None)」と表示されている場合は、プロジェクト機能を使用していないことを意味する。プロジェクト名が表示されていることを確認すること。\n\n\n\n\n\nCode 01\n\n# pacman::p_load(tidyverse, summarytools) でもOK\nlibrary(tidyverse)\nlibrary(summarytools)\n\n# Gacha.csvがDataフォルダー内にあれば以下のコードでOK\n# dataフォルダーならDataをdataに置換\ngacha_df &lt;- read_csv(\"Data/Gacha.csv\")\ngacha_df\n\n\n# A tibble: 4,772 × 4\n   player trial stone_type result\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; \n 1      1     1 Paid       R     \n 2      1     2 Paid       R     \n 3      1     3 Paid       SR    \n 4      1     4 Free       R     \n 5      1     5 Paid       N     \n 6      1     6 Free       N     \n 7      1     7 Free       SSR   \n 8      1     8 Free       N     \n 9      1     9 Free       N     \n10      1    10 Free       N     \n# ℹ 4,762 more rows\n\n\n　データは4772行4列で構成されており、各変数（列）の詳細は以下の通りである。\n\n\n\n\n\n表 1:  データの詳細 \n  \n    \n    \n      変数\n      説明\n    \n  \n  \n    player\nプレイヤーのID\n    trial\n当該プレイヤーの何番目のガチャか\n    stone_type\n使用した石のタイプ (Free: 無料石、Paid: 有償石)\n    result\nガチャの結果 (N, R, SR, SSR)\n  \n  \n  \n\n\n\n\n\n　まずは、各変数の記述統計から確認してみよう。\n\n\n\nCode 02\n\ngacha_df %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ngacha_df  \nN: 4772  \n\n                Mean   Std.Dev    Min      Max   N.Valid\n------------ ------- --------- ------ -------- ---------\n      player   49.59     30.19   1.00   100.00   4772.00\n       trial   34.01     24.22   1.00    99.00   4772.00\n\n\n　考えてみれば、stone_typeとresultは数値型ではないため、記述統計量が計算できない。今回の場合、stone_type変数は使わないため、問題ないものの、resultはダミー変数に変換する必要があろう。ダミー変数については「ミクロ政治データ分析実習」の第10回と本講義の第4回を参照すること。\n\n\n\nCode 03\n\ngacha_df &lt;- gacha_df %&gt;%\n  mutate(result_N   = ifelse(result == \"N\", 1, 0),\n         result_R   = ifelse(result == \"R\", 1, 0),\n         result_SR  = ifelse(result == \"SR\", 1, 0),\n         result_SSR = ifelse(result == \"SSR\", 1, 0))\n\ngacha_df\n\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# ℹ 4,762 more rows\n\n\n　ちなみに{fastDummies}パッケージのdummy_cols()（または、dummy_columns()）を使っても同じ結果が得られる。好きな方法を使えば良い。また、dummy_cols()関数から作成されたダミー変数の変数名は元の変数名_値となる。\n\n\n\nCode 04\n\n# 上記のコードは以下のように書くこともできる。\n# ignore_na = TRUE を指定しない場合、欠損値か否かを示すダミー変数も生成される。\nlibrary(fastDummies)\ngacha_df &lt;- gacha_df %&gt;%\n  dummy_cols(select_columns = \"result\", ignore_na = TRUE)\n\ngacha_df\n\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;int&gt;    &lt;int&gt;     &lt;int&gt;      &lt;int&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# ℹ 4,762 more rows\n\n\n　それでは、もう一度記述統計量を出してみよう。また、プレイヤーのIDは数値ではあるものの、数値としての意味を持たない名目変数である。こちらは不要であるので、gacha_dfをdescr()関数を渡す前にplayer列を除外しておこう。\n\n\n\nCode 05\n\ngacha_df %&gt;%\n  select(-player) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ngacha_df  \nN: 4772  \n\n                    Mean   Std.Dev    Min     Max   N.Valid\n---------------- ------- --------- ------ ------- ---------\n           trial   34.01     24.22   1.00   99.00   4772.00\n        result_N    0.56      0.50   0.00    1.00   4772.00\n        result_R    0.25      0.43   0.00    1.00   4772.00\n       result_SR    0.15      0.35   0.00    1.00   4772.00\n      result_SSR    0.05      0.21   0.00    1.00   4772.00\n\n\n　場合によっては、ガチャの結果を度数分布表としてまとめる必要があるかも知れない。この場合、table()にガチャ結果が格納されたベクトルを指定すれば出力される。表形式データ構造（data.frame / tibble）から特定の列のみを抽出するときには$を使用する。\n\n\n\nCode 06\n\ntable(gacha_df$result)\n\n\n\n   N    R   SR  SSR \n2657 1188  700  227"
  },
  {
    "objectID": "materials/macro/nhts.html#統計的仮説検定",
    "href": "materials/macro/nhts.html#統計的仮説検定",
    "title": "第6回講義資料",
    "section": "統計的仮説検定",
    "text": "統計的仮説検定\n\n仮説の設定\n　今回の実習で大事なのはSSRが出る確率が5%か否かである。公式サイトが主張する5%が帰無仮説であり、\\(\\mu_0 = 0.05\\)と表記する。一方、手元のデータにおけるSSRの出現割合は\\(\\bar{x}\\)と表記し、これはresult_SSR列の平均値を出すことで計算できる。\n\n\n\nCode 07\n\nmean(gacha_df$result_SSR)\n\n\n[1] 0.04756915\n\n\n　手元のデータにおけるSSRの出現割合は約4.757%である。5%よりは低いが、これは誤差の範囲かも知れないし、開発元が嘘をついているかも知れない。ただし、自分がSSRキャラを引けない時はだいたい開発元が悪いことに決まっている。したがって、ここでの仮説は以下の通りである。\n\n仮説: SSRキャラクターの本当の出現確率 (=母平均\\(\\mu\\))は5% (=0.05)ではない。\n\n　\\(\\mu\\)と\\(\\mu_0\\)は区別する必要がある。今回の例だと\\(\\mu\\)は開発元がシステムに設定したSSRの出現確率であり、\\(\\mu_0\\)は開発元が公開しているSSRの出現確率である。開発元はSSRの出現確率が5%であると主張している（\\(\\mu_0 = 0.05\\)）。一方、\\(\\mu\\)は本当の出現確率である。つまり、開発元の情報が正しければ\\(\\mu = \\mu_0\\)となる。そして、私たちの主張は\\(\\mu \\neq \\mu_0\\)である。したがって、仮説は\\(\\mu \\neq 0.05\\)となる。\n　ただし、一般的な統計的仮説検定の場合、仮説を直接検証することはできない。統計的仮説検定には2つの仮説が必要だ。1つ目は帰無仮説（null hypothesis）である。これは否定されることによって別の仮説が支持されるような仮説を意味し、統計的仮説検定は帰無仮説を検定することを意味する。この帰無仮説が間違っていることを示すのが統計的仮説検定だ。我々が論破したい仮説とも言えよう。帰無仮説は\\(H_0\\)とも表記され、今回は「SSRキャラクターの本当の出現確率は5%である（\\(H_0: \\mu = 0.05\\)）」、つまり開発元の主張である。\n　もう一つの仮説は対立仮説（alternative hypothesis）である。これは帰無仮説が否定されることによって妥当性が高まる仮説である。統計的仮説検定とは帰無仮説を検定し、帰無仮説を否定することで対立仮説の妥当性が高いことを示す一連の過程である。対立仮説は\\(H_a\\)とも表記され、ここでは「SSRキャラクターの本当の出現確率は5%ではない（\\(H_a: \\mu \\neq 0.05\\)）」が対立仮説である。\n\n\n有意水準の設定\n　開発元の主張だとSSRの確率は5%、手元のデータだと4.757%である。差は約0.25%ポイントである。手元のデータ上、SSRの出現割合がぴったり5%になることは、ほぼないと考えられる。つまり、考えてみれば4.757%というのは誤差の範囲かも知れないことだ。一方、手元のデータ上のSSR割合が1%であれば、明らかにおかしいだろう。ならば我々は「どんな時に帰無仮説を棄却するか」について考える必要があり、これが有意水準の設定である。\n　帰無仮説が正しい（\\(\\mu = \\mu_0 = 0.05\\)）としても、標本から得られる統計量\\(\\bar{x}\\)は\\(\\mu_0\\)と一致しない可能性が十分あり得る。ただし、本当に\\(\\mu = 0.05\\)なら標本内のSSRの割合はぴったり5%でなくても、5%から大きく離れた値は得られないはずだ。どれくらいかけ離れていれば帰無仮説は間違っていると言えるだろうか。まずは、出現しうる統計量をすべて並べてみよう。ガチャを4772回引いた場合の得られる結果（すべてSSR〜すべてSSR以外）を並べ、帰無仮説が仮定する母数 (\\(\\mu_0 = 0.5\\))からA%分離れている場合、「帰無仮説から十分に離れている」と判断し、このA%が「有意水準（significance level）」だ。つまり、有意水準とは「帰無仮説が正しいにもかかわらず、誤って帰無仮説を棄却してしまう確率」を意味する。この有意水準は通常、\\(\\alpha\\)と表記し、有意水準が5%なら\\(\\alpha = 0.05\\)である。ちなみに、社会科学では\\(\\alpha = 0.05\\)を採用するケースが多い。\n　前回の講義では標本平均を変形した\\(T\\)統計量を紹介した。\\(T\\)統計量は\\(T = \\frac{\\bar{x} - \\mu}{\\text{SE}}\\)であり、自由度\\(n-1\\)の\\(t\\)分布に従う。つまり、帰無仮説が正しければ（\\(\\mu = \\mu_0\\)）、 \\(T = \\frac{\\bar{x} - \\mu_0}{\\text{SE}}\\)も\\(t\\)分布に従うと考えられる。\\(t\\)分布の中心は0であるため、もし、標本から得られた統計量（標本平均\\(\\bar{x}\\)）が0.05（\\(\\bar{x} = \\mu_0 = \\mu\\)）なら、\\(T\\)統計量は0となり、帰無仮説の妥当性は高いと判断される。一方、\\(\\bar{x}\\)が0.05から離れるほど、\\(T\\)統計量も0から離れるようになるだろう。どれくらい離れている場合、「帰無仮説は怪しいぞ」と言えるだろうか。つまり、「帰無仮説が正しいと仮定した場合、こんなことが起こる確率はA%未満だ！」を語る場合、どれくらいのA%であれば、帰無仮説は間違っていると主張できるだろう。いや、その前にこのA%はどのように計算されるのあか。\n　たとえば、データから得られた\\(T\\)統計量の値が1.96だとしよう。以下のグラフは自由度4771の\\(t\\)分布である。先ほど投票したA%は、下の図における網掛けの領域の面積である（確率分布の面積は必ず1）。もし、\\(T\\)統計量が0に近い場合は網掛けの面積が広がるだろう。つまり、帰無仮説が間違っているとはなかなか言えなくなる。一方、\\(T\\)統計量が0から離れるほど、網掛けの面積は小さくなり、帰無仮説が間違っていることを自身を持って言えよう。\n\n\n\n\n\n\n\n\n\n\n\n検定統計量\n　いきなり\\(T\\)統計量が登場した戸惑っているかも知れない。普通に考えれば、「単純に5%と4.747%間の比較で良いのでは？」と思うかも知れないが、これには理由がある。ととえば、20回ガチャを回してSSRが1回も出なかったとしよう。つまり、出現割合が0%であり、\\(\\mu_0\\)と\\(\\bar{x}\\)の差は0.05である。しかし、これを見て開発元が嘘をついていると主張することは難しいだろう。一方、1万回回して、200回SSRが出たら（\\(\\bar{x} = 0.02\\)）どうだろう。この場合は差は0.02であるが、明らかにおかしい。つまり、単純に平均値の差分だけでは開発元が嘘をついているかどうかを判断することは難しい。より適切な指標が必要だ。それが検定統計量である。平均値に関する統計的仮説検定の場合、検定統計量として標本平均（\\(\\bar{x}\\)）よりも\\(T\\)統計量を使用する。ちなみに仮説検定には様々な種類があり、検定手法に応じて用いられる統計量も変わってくる。\\(z\\)統計量や\\(\\chi^2\\)統計量、\\(F\\)統計量など様々な統計量があるが、今後、必要に応じて解説する。\n　\\(T\\)統計量の計算方法は前回の講義にて解説したが、以下と通りである。一つ注意すべきところは\\(\\bar{x}\\)から\\(\\mu_0\\)を引く点である。\n\\[\nt = \\frac{\\bar{x} - \\mu}{\\text{SE}} = \\frac{\\bar{x} - \\mu_0}{\\text{SE}} = \\frac{\\bar{x} - \\mu_0}{\\frac{u}{\\sqrt{n}}}\n\\]\n　実際に\\(T\\)統計量を計算してみよう。\\(T\\)統計量を計算するためには、result_SSRの平均値、標本不偏分散の平方根（\\(u\\)）、サンプルサイズ（\\(n\\)）が必要であり、標本不偏分散の平方根とケース数を使って標準誤差を計算する。\n\n\n\nCode 08\n\nx_bar &lt;- mean(gacha_df$result_SSR, na.rm = TRUE)          # 標本平均\n\n\n\n\n\nCode 09\n\nn     &lt;- sum(!is.na(gacha_df$result_SSR))                 # サンプルサイズ\n\n\n\n\n\nCode 10\n\nse    &lt;- sd(gacha_df$result_SSR, na.rm = TRUE) / sqrt(n)  # 標準誤差\n\n\n\n\n\nCode 11\n\n(x_bar - 0.05) / se                                       # T統計量\n\n\n[1] -0.7888289\n\n\n　\\(T\\)統計量は\\(-\\infty \\sim \\infty\\)の値を取るが、今回得られた\\(t\\)の絶対値（\\(|t|\\)）よりも極端な値をとる確率を計算することで、我々の仮説の尤もらしさが分かる。そしてこの確率は\\(p\\)値と呼ばれる。ちなにみ、なぜ絶対値を使う理由は対立仮説は「\\(\\mu_0\\)ではない（\\(\\mu_0 \\neq 0\\)）」であるため、\\(\\mu_0\\)から負の方向に離れる可能性も、正の方向に離れる可能性もあるからだ。\n\n\n\\(p\\)値\n　具体的に\\(p\\)値の意味について考えてみよう。\\(p\\)値とは帰無仮説が正しいと仮定した場合、手元のデータから得られた\\(|t|\\)以上の\\(|t|\\)が得られる確率である。これを図として示すと以下のようになる。以下の図で網掛けの領域の面積が\\(p\\)値であり、0以上、1以下の値を取る。\n\n\n\n\n\n\n\n\n\n　もし、手元のデータから得られた\\(|t|\\)統計量が大きい場合は、以下のように、\\(p\\)値が小さくなる。\n\n\n\n\n\n\n\n\n\n　一方、\\(|t|\\)が小さい、つまり\\(t\\)が0に近い場合は\\(p\\)値が大きくなる。\n\n\n\n\n\n\n\n\n\n　ここから分かるのは、検定統計量が0から離れる（\\(|t|\\)が大きい）ほど、\\(p\\)値が小さくなるということだ。そして、帰無仮説を棄却するためには\\(|t|\\)が十分に大きい必要があり、これは\\(p\\)値が小さいほど帰無仮説を棄却しやすいことを意味する。この\\(p\\)値がどれおほど小さければ帰無仮説が棄却できるかに関する基準が有意水準\\(\\alpha\\)であり、社会科学では一般的に\\(\\alpha = 0.05\\)を採用する。\n　それではもう一度に\\(p\\)値ついてまとめてみよう。\\(p\\)値とは、帰無仮説が正しいとき、検定統計量（今回は\\(T\\)）が手元のデータから得られた検定統計量（今回は\\(t\\)）以上に、分布の中心からかけ離れた値を取る確率を意味する。つまり、帰無仮説の下でのサンプルから得られた検定統計量（\\(t\\)）の異常性を表す指標であり、\\(p\\)値が小さいほど、今回得られた\\(t\\)は異常な値であることを意味する。そして、今回の\\(t\\)が異常なのは「帰無仮説が正しい」という仮定の下での判断であるため、\\(p\\)値が十分に小さい場合は、今回得られた\\(t\\)統計量は異常である、つまり帰無仮説が間違っていると判断することができる。\n　検定統計量が\\(T\\)統計量の場合の\\(p\\)値はpt()関数で計算することができ、今回の\\(p\\)値は0.431である。\n\n\n\nCode 12\n\n# pt()の第一引数は「tの絶対値にマイナスをかけた値」にする\n# dfは自由度（n - 1）\n# 最終的には2をかける\npt(-1 * abs(0.7888289), df = 4771) * 2\n\n\n[1] 0.4302512\n\n\n\n\n\\(p\\)値に関する誤解\n　後ほど説明するが\\(p\\)値は統計的仮説検定において非常に便利な指標であるものの、よく誤解される概念である。とりわけ「\\(p\\)値 = 帰無仮説が棄却される確率」と誤解する人が多いが、これは完全に間違いである。しかし、このような説明をする人も少なからずいる。最近はYouTube等で大変分かりやすい動画が散見されるが、それらが正しい知識を伝えているとは限らない。宋の個人的な立場としては、「少なくともYouTube等で統計的仮説検定に関する講座は見ない」ことを推奨する。研究者（含む大学教員）が運営するならまだ良いかも知れないが、得体の知らないYouTuberには注意しよう。これから示す2つの画像は某学習系YouTuberの動画の一部だ。\n\n\n\n図 1: \\(p\\)値に関する間違った講座動画（1）\n\n\n　図 1 のような説明は大変分かりやすい。ただし、間違った内容だ。正確に言えば、「帰無仮説が正しい確率は常に0%」である。ならば疑問を持つ人もいるだろう。「帰無仮説が正しい確率が0%なら、対立仮説が正しい確率は100%なのではないか」と。問題はそう単純ではない。帰無仮説が正しいということは\\(T\\)統計量がぴったり0であることを意味する。しかし、（\\(t\\)分布や正規分布など）連続確率分布においてある統計量が特定の値を取る確率は常に0である。その意味で以下の 図 2 も間違った内容である1。\n\n\n\n図 2: \\(p\\)値に関する間違った講座動画（2）\n\n\n　「今回得られた\\(t\\)統計量がX.XXXである確率」も常に0%だ。積分の知識が少しでもあれば、これは当たり前であろう。たとえば、\\(t\\)分布において\\(T\\)統計量が-0.5以上、0.5以下の値を取る確率を計算したいとしよう。以下の図の網掛けの領域の面積が「\\(T\\)統計量が-0.5以上、0.5以下の値を取る確率」だ。\n\n\n\n\n\n\n\n\n\n　これを面積を計算するためには積分をするわけだが、簡単にいうと、まずは\\(T\\)統計量が0.5以下である確率（つまり、\\(T \\leq\\) 0.5の面積）を求める（以下の図の左）。つづいて、\\(T\\)統計量が-0.5以下である確率（つまり、\\(T \\leq\\) -0.5の面積）を求める（以下の図の右）。この2つの領域の差分が「\\(T\\)統計量が-0.5以上、0.5以下の値を取る確率」となる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　ならば、\\(T\\)統計量がぴったり0.5の確率はいくらだろう。これは言い換えると「\\(T\\)統計量が0.5以上、0.5以下」であることを意味する。つまり、以下の2つの図の面積の差分を求めることになる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n　当然ながらこの2つの面積は全く同じである。つまり、差分は0であり、統計量が特定の値を取る確率は常に0%である。これは\\(p\\)値を「\\(t\\)値がそうなる確率」と解釈することは間違いであることを意味し、したがって\\(p\\)値を「帰無仮説が正しい確率（= \\(T\\)値が0である確率）」と解釈することも間違いとなる。\n\n\n棄却域の設定\n　帰無仮説の棄却有無を判断するためには、つづいて「検定統計量がこの領域に入ると帰無仮説は棄却される」における「領域」を決める必要がある。これは言い換えると\\(p\\)値が有意水準（\\(\\alpha\\)）より小さくなるような境界線を意味し、臨界値（critical value）とも呼ばれる。今回使用する\\(t\\)分布の場合、左右対称であり、下側臨界値 (\\(C_L\\))と上側臨界値 (\\(C_U\\))が存在する（\\(\\chi^2\\)分布のように臨界値が一つのみ存在する確率分布もある）。\n　\\(t\\)分布における臨界値の計算にはqt()関数を使用する。\n\n\n\nCode 13\n\n# 下側臨界値: 第一引数には「有意水準 / 2」\nqt(0.025, df = 4771) # 有意水準が5% (0.05)の場合の下側臨界値\n\n\n[1] -1.960461\n\n\n\n\n\nCode 14\n\n# 上側臨界値: 第一引数には「1 - (有意水準 / 2)」\nqt(0.975, df = 4771) # 有意水準が5% (0.05)の場合の上側臨界値\n\n\n[1] 1.960461\n\n\n　ここから得られた2つの値は臨界値であり、この2つの値の間の領域が受容域（acceptance region）である。小さい方を\\(C_L\\)、大きい方を\\(C_U\\)とした場合、受容域は[\\(C_L\\), \\(C_U\\)]となる。検定統計量が受容域に含まれると、帰無仮説を受容する。一方、受容域外の領域のことを棄却域（rejection region）と呼び、（\\(\\infty\\), \\(C_L\\)）と（\\(C_U\\), \\(\\infty\\)）と行った2つの領域が存在する。検定統計量が棄却域に含まれると、帰無仮説を棄却し、対立仮説を支持する。\n　受容域と棄却域の関係を示したのが以下の図である。\n\n\n\n\n\n\n\n\n\n\n\n帰無仮説の棄却と受容\n　ここまで出来たら帰無仮説が棄却できるかどうかの判断ができるようになる。帰無仮説の棄却有無を判断する以下の2つの方法がある。\n方法1: 検定統計量と棄却域を比較する。\n　基本的な考え方としては手元のデータから得られた検定統計量が棄却域に含まれていれば帰無仮説を棄却し、対立仮説を支持するという考え方である。もし、検定統計量が受容域に含まれている場合は帰無仮説を受容する。今回のデータの場合、検定統計量は\\(T\\)統計量であり、\\(t = -0.789\\)である。棄却域は（\\(\\infty\\), -1.960）、（1.960, \\(\\infty\\)）である。言い換えると帰無仮説の棄却ができない受容域は[-1.960, 1.960]であり、今回の\\(t\\)は受容域に含まれる。したがって、帰無仮説は棄却できない。\n\n\n\n\n\n\n\n\n\n方法2: \\(p\\)値と有意水準（\\(\\alpha\\)）を比較する。\n　こちらが最も簡単な方法でありながら、一般的な方法である。\\(p\\)値の計算が必要だから面倒かも知れないが、Rの場合、\\(p\\)値が自動的に計算されて出力されるケースがほとんどである。したがって、表示された\\(p\\)値と自分があらかじめ決めておいた\\(\\alpha\\)を比較し、\\(p &lt; \\alpha\\)なら帰無仮説を棄却する（= 対立仮説を支持する）。一方、\\(p \\geq \\alpha\\)なら帰無仮説を受容すると判断する。社会科学では\\(\\alpha = 0.05\\)が一般的であるため、\\(p &lt; 0.05\\)なら帰無仮説が棄却されたと判断することができる。\\(p &lt; \\alpha\\)の場合、検定統計量の絶対値は必ず棄却域内に位置し、\\(p \\geq \\alpha\\)なら受容域内に位置する。\n　今回得られた\\(p\\)値は0.43であり、0.05以上である。つまり、検定統計量の絶対値\\(|t|\\)は受容域にする。したがって、帰無仮説は棄却されず受容される。\n\n\n\n\n\n\n（注意）有意水準は分析前に決める！\n\n\n\n有意水準 (\\(\\alpha\\))を大きく設定すると、帰無仮説は棄却されやすくなる (=対立仮説が支持されやすくなる)。つまり、自分の主張が支持されやすくなることを意味する。したがって、\\(\\alpha\\)は検定統計量を求める前に予め決めておく必要がある。自分の仮説が支持されるように分析後に\\(\\alpha\\)を決めることは研究倫理に反する。よほどの理由がない限り\\(\\alpha = 0.05\\)に設定しておくのが無難であろう。\n\n\n　いずれの方法でも同じ結論が得られる。この帰無仮説が棄却される（=対立仮説が支持される）、帰無仮説が受容されるということは具体的に何を意味するだろうか。帰無仮説が正しい場合、\\(\\bar{x}\\)と\\(\\mu_0\\)の差は0であるため、\\(|t| = 0\\)となる。ただし、後述するが、「帰無仮説が正しい」ことは検証できない。帰無仮説が棄却できなかった（=受容された）場合、「現時点では対立仮説が正しいとは言えない」だけであり、帰無仮説が正しいことを意味するものではない。一方、帰無仮説が棄却された場合は、対立仮説が支持されたと解釈し、\\(\\bar{x}\\)と\\(\\mu_0\\)の間に統計的に有意味な差が存在することを意味する。\n\n\n結論の提示\n　これまでの例の仮説は以下の通りである。\n\n帰無仮説 (\\(H_0\\)): SSRキャラクターの本当の出現確率は5%である。\n対立仮説 (\\(H_a\\)): SSRキャラクターの本当の出現確率は5%ではない。\n\n　統計的仮説検定（今回は\\(t\\)検定）の結果、\\(p\\)値は0.430であり、\\(\\alpha\\) (= 0.05) 以上であるため、帰無仮説は棄却されない。したがって、「SSRキャラクターの出現確率は5%であるとは言えない。」と解釈する。注意してほしいのは「SSRキャラクターの出現確率は5%である。」と解釈しては行けないことだ。つまり、今回の例で帰無仮説が棄却されず、受容されたということは「開発元の主張が間違っているとは言えない」状態であることを意味する。今回の分析結果に基づくと、開発元を訴えることは難しいかも知れない。\n　もし、\\(p &lt; \\alpha\\)なら帰無仮説は棄却され、「SSRキャラクターの本当の出現確率は5%ではない。」と結論づけることが可能。この場合は、弁護士と相談し、集団訴訟を準備しよう。\n　また、95%信頼区間の求め方は前回講義と同じである。統計的有意、つまり帰無仮説が棄却される場合、95%信頼区間に\\(\\mu_0\\)が含まれず、受容される場合は含まれる。今回は\\(\\mu_0 = 0.05\\)が95%信頼区間内に含まれていることが分かる。\n\n\n\nCode 15\n\nx_bar + qt(0.025, df = 4771) * se # 95%信頼区間の下限\n\n\n[1] 0.04152782\n\n\n\n\n\nCode 16\n\nx_bar + qt(0.975, df = 4771) * se # 95%信頼区間の上限\n\n\n[1] 0.05361049"
  },
  {
    "objectID": "materials/macro/nhts.html#統計的有意性の罠",
    "href": "materials/macro/nhts.html#統計的有意性の罠",
    "title": "第6回講義資料",
    "section": "統計的有意性の罠",
    "text": "統計的有意性の罠\n　統計的仮説検定において自分の主張が支持されるためには、帰無仮説を棄却し、対立仮説が支持される必要がある。これは言い換えれば大きい\\(|t|\\)、つまり小さい\\(p\\)が自分にとって都合の良いことを意味する。したがって、人間であれば、\\(p\\)を小さくしたいという誘引を持つ。\n　ここで、\\(t = \\frac{\\bar{x} - \\mu_0}{\\sqrt{\\frac{u}{n}}}\\)を考えると、\\(|t|\\)が大きくなる条件とは以下の3つである。\n\n\\(|\\bar{x}|\\)が大きい\n\\(u\\)が小さい\n\\(n\\)が大きい\n\n　この中で研究者が決めることができるのは\\(n\\)だけだろう。\\(n\\)が大きいほど、\\(p\\)値が小さくなり、帰無仮説が棄却されやすくなる（\\(n\\)を4倍にすると\\(p\\)値は約半分に）。しかし、ここでよく考えてもらいたい。統計的推論の対象はあくまでも「母集団」である。しかし、統計的有意性検定の場合、「標本」の大きさが仮説の支持有無に影響を与える。実はこの2つの違いをしっかりと理解しておくことは重要だ。\n　帰無仮説が棄却できない、つまり受容されたケースを刑事裁判に例えて考えてみよう。刑事裁判では「無罪推定の原則」が採用されている。これは被告が無罪であることを前提に、裁判を進める仕組みである。これを仮説検定に適用すると帰無仮説と対立仮説は以下の通りとなる。\n\n\\(H_0\\): 容疑者Xは罪を犯していない (= 容疑者Xは無実)。\n\\(H_a\\): 容疑者Xは罪を犯した (= 容疑者Xは犯人)。\n\n　ここで検察側の立証によって\\(H_0\\)が棄却されると、Xは有罪となる。一方、検察側が立証できなかった場合はどうだろう。つまり、帰無仮説が棄却できず受容されてしまったケースである。この場合、Xは無罪判決になるだけであり、実は罪を犯したかも知れない。もし容疑者Xの犯罪が完全犯罪なら、検察の立証はできないだろう。ならば、容疑者Xが犯罪を起こしたことはなかったことになるだろうか。違うだろう。実際に犯罪を犯したかどうかと、判決は別次元の話である。\n　この例は統計的仮説検定と非常に似ている。帰無仮説が棄却できなかったことは、帰無仮説が間違ったことを意味するものではない。単純に、現在の証拠（データ）だけで「対立仮説が正しいとは結論づけることは出来ない」程度の、非常に弱い結論となる。一方、帰無仮説が棄却されれば、対立仮説の正しいことを強く主張できる[^enzai]。むろん、罪を犯していないにも関わらず、罪を犯したと判定してしまう可能性もある。この冤罪をどこまで許容するかが実は有意水準\\(\\alpha\\)であり、社会科学であれば5%、人の健康に関わる分野になると1%か0.1%を採用するケースが多い。\n　もう一つの例を紹介しよう。1億2千万人の日本人を母集団とし、以下のようか仮説を立てたとしよう。\n\n\\(H_0\\): 男性と女性の間に身長差はない。\n\\(H_a\\): 男性と女性の間に身長差はない。\n\n　ここで、日本国民から男性と女性、それぞれ3人ずつ無作為抽出し（\\(n = 6\\)）、平均身長を比較した結果、男女の平均身長が同じだったとしよう。つまり、男女間には統計的に有意な身長差がない。ならば、帰無仮説「男性と女性の間に身長差はない。」は正しい結論だろうか。それは違うだろう。我々は既に男女の身長差があることを知っている。今回の\\(n = 6\\)のサンプルにおいて差はなかったかも知れないが、母集団レベルでは男女間の身長差はあるに違いない。つまり、今回のサンプルではその差がたまたま検証できなかったことに過ぎず、母集団においては身長の差がある可能性も十分にあり得る。例えば、3人でなく、300人を抽出して仮説検定を行えばどうだろうか。多分、統計的に有意な差が得られるだろう（\\(n\\)が大きくなるほど、\\(SE\\)が小さくなるため、\\(|t|\\)が大きくなり、\\(p\\)が小さくなる）。\n　このように統計的仮説検定において、「帰無仮説が正しい」という結論を下すことはできない。これは言い換えると、「差がない」とか「ゼロである」という仮説は統計的仮説検定の対象にはなりにくいことを意味する（ベイズ統計学であれば可能）。"
  },
  {
    "objectID": "materials/macro/nhts.html#関数の使用",
    "href": "materials/macro/nhts.html#関数の使用",
    "title": "第6回講義資料",
    "section": "関数の使用",
    "text": "関数の使用\n\nt.test()関数\n　以上の内容が平均値の検定（\\(t\\)検定）であり、Rではt.test()関数で簡単に実装することができる。第一引数は検定対象となる変数のベクトル、mu引数には帰無仮説上の母数（\\(\\mu_0\\)）を指定する。\n\n\n\nCode 17\n\n# 帰無仮説においてSSRの確率は5%であるため、mu = 0.05\nt.test(gacha_df$result_SSR, mu = 0.05)\n\n\n\n    One Sample t-test\n\ndata:  gacha_df$result_SSR\nt = -0.78883, df = 4771, p-value = 0.4303\nalternative hypothesis: true mean is not equal to 0.05\n95 percent confidence interval:\n 0.04152782 0.05361049\nsample estimates:\n mean of x \n0.04756915 \n\n\n　得られた\\(p\\)値、信頼区間全てが手計算（？）と同じであることが確認できる。\n\n\nprop.test()関\n　実は、扱う変数が0と1のみの値を取る（二値変数; binary variable）場合、その平均値は比率として解釈することができる。このように母集団における比率（母比率）を検証するときにはt.test()（\\(t\\)検定）でなく、prop.test()（母比率の検定）を使ったほうが適切だ2。\n　たとえば、4772回のガチャからSSRが227回出現し、帰無仮説上の母比率を5%（0.05）と仮定した場合の母比率の検定は以下のように行う。\n\n\n\nCode 18\n\n# x: SSRが得られた回数\n# n: ガチャの回数\n# p: 帰無仮説におけるSSRの出現確率 (0 ~ 1)\nprop.test(x = 227, n = 4772, p = 0.05, correct = FALSE)\n\n\n\n    1-sample proportions test without continuity correction\n\ndata:  227 out of 4772, null probability 0.05\nX-squared = 0.59364, df = 1, p-value = 0.441\nalternative hypothesis: true p is not equal to 0.05\n95 percent confidence interval:\n 0.04188537 0.05398077\nsample estimates:\n         p \n0.04756915 \n\n\n　\\(t\\)検定の結果と比較してみよう。\n\n\n\nCode 19\n\nt.test(gacha_df$result_SSR, mu = 0.05)\n\n\n\n    One Sample t-test\n\ndata:  gacha_df$result_SSR\nt = -0.78883, df = 4771, p-value = 0.4303\nalternative hypothesis: true mean is not equal to 0.05\n95 percent confidence interval:\n 0.04152782 0.05361049\nsample estimates:\n mean of x \n0.04756915 \n\n\n　2つの結果はかなり近いものであり、どれも帰無仮説が受容される。それでも\\(p\\)値、95%信頼区間などがやや異なる。これら2つの違いは検定統計量の計算方法から由来する。\n　\\(t\\)検定の場合、検定統計量\\(T\\)は\n\\[\nT = \\frac{\\bar{x} - \\mu_0}{\\text{SE}}\n\\]\nであり、母比率の検定に使う検定統計量\\(Z\\)も\n\\[\nZ = \\frac{\\hat{p} - p_0}{\\text{SE}}\n\\]\nである。\\(\\hat{p}\\)（\\(p\\)ハット）は標本における割合なので、\\(T\\)統計量の計算式における\\(\\bar{x}\\)と同じだ。また、\\(p_0\\)は帰無仮説上における母比率だから、\\(T\\)統計量の計算式における\\(\\mu_0\\)と同じだ。2つの式は同じように見えるが、実は標準誤差（SE）の求め方が異なる。\\(t\\)検定の場合、母分散（\\(\\sigma^2\\)）が未知なので、不偏推定量である標本不偏分散の平方根（\\(u^2\\)）を使用する。しかし、0と1のみで構成されている変数の標準偏差は、割合によって決まっている。つまり、母比率を想定することができれば、母標準偏差も自動的に決まる仕組みだ。一方、\\(t\\)検定の場合、\\(\\mu_0\\)だけで\\(\\sigma^2\\)が決まるわけではないため、やむを得ず\\(u^2\\)を使っているわけである。\n　\\(t\\)検定の標準誤差は、\n\\[\n\\text{SE}_t = \\sqrt{\\frac{u^2}{n}} = \\frac{u}{\\sqrt{n}}\n\\]\nであるが、母比率の検定における標準誤差は\n\\[\n\\text{SE}_z = \\sqrt{\\frac{p_0 (1 - p_0)}{n}}\n\\]\nだ。帰無仮説で\\(p_0\\)を決めた時点で、標準誤差も同時に決まる。したがって、母比率の検定に使用される検定統計量\\(Z\\)は\n\n\n\nCode 20\n\n# p_hat: 0.04756915\n# p_0: 0.05\n# n: 4772\n(0.04756915 - 0.05) / sqrt((0.05 * (1 - 0.05)) / 4772)\n\n\n[1] -0.7704804\n\n\nとなる（二値変数の分散は\\(p (1 - p )\\)である）。そしてこの\\(Z\\)は平均0、標準偏差1の標準正規分布（\\(t\\)検定の場合は自由度\\(n-1\\)の\\(t\\)分布）に従っていることが知られているため、pt()の正規分布版であるpnorm()を使用して\\(p\\)値を計算することができる。\n\n\n\nCode 21\n\n# meanとsdの既定値はそれぞれ0, 1であるため、\n# 今回はpnorm(-0.7704804) * 2のみでもOK（）\npnorm(-0.7704804, mean = 0, sd = 1) * 2\n\n\n[1] 0.441015\n\n\n　prop.test()から得られた\\(p\\)値と一致することが分かる。prop.test()関数に使用される検定統計量は\\(\\chi^2\\)（カイ二乗）だが、これは先ほど計算した\\(Z\\)統計量を二乗したものであり、本質的には同じだ。\n　また、臨界値を計算するためにはqnorm()関数を使う。以下では仮説検定における有意水準 (\\(\\alpha\\))を0.05とした場合の例である。\n\n\n\nCode 22\n\n# meanとsdの既定値はそれぞれ0, 1であるため、\n# 今回はqnorm(0.025); qnorm(0.975)のみでOK\nqnorm(0.025, mean = 0, sd = 1) # 下側臨界値\n\n\n[1] -1.959964\n\n\n\n\n\nCode 23\n\nqnorm(0.975, mean = 0, sd = 1) # 上側臨界値\n\n\n[1] 1.959964\n\n\n　受容域は[-1.96, 1.96]であり、今回得られた検定統計量\\(Z\\)は-0.77であるため、受容域に含まれる。したがって、帰無仮説は棄却されない。\\(p\\)値から判断しても同様である。\\(p = 0.441\\)であり、予め設定した\\(\\alpha = 0.05\\)以上であるため、帰無仮説は棄却されず受容される。つまり、「ガチャからSSRが得られる確率は5%でないとは言えない」と結論づけることができる。\n　厳密には二値変数の場合は母比率の検定（prop.test()）を、連続変数の場合は\\(t\\)検定（t.test()）が望ましい。しかし、サンプルサイズ（\\(n\\)）が大きほど、\\(t\\)分布は標準正規分布に近似するので、ほぼ同じ結果が得られる。"
  },
  {
    "objectID": "materials/macro/introduction.html",
    "href": "materials/macro/introduction.html",
    "title": "第1回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/introduction.html#スライド",
    "href": "materials/macro/introduction.html#スライド",
    "title": "第1回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/introduction.html#スライドの印刷方法",
    "href": "materials/macro/introduction.html#スライドの印刷方法",
    "title": "第1回講義資料",
    "section": "スライドの印刷方法",
    "text": "スライドの印刷方法\n本講義のスライドはPC閲覧を前提としているため、印刷は推奨しない。たとえば、タブが含まれているページの場合、1つ目のタブのみ印刷されるといったデメリットがある。しかし、どうしてもスライドを印刷したい場合は、以下の手順でスライドをPDFに保存し、印刷すること。\n\nGoogle Chromeブラウザーで本ページを開く。\n\nMicrosoft Explore、Edge、Firefox、Operaなどで試してみても良いものの、作動は保証しない。\n\n本ページ上段の「 新しいタブで開く」をクリックする。\nスライドが表示されたらキーボードの「E」、または「e」キーを押す。\nmacOSならCommand（⌘） + P、WindowsならControl（Ctrl）+ Pを押す。\n出力先をPDFにする。\n用紙のレイアウトを横向き（Landscape）に指定する。\n余白をなしにする。\n背景画像のオプションにチェックを入れる。\n保存\n保存されたPDFファイルをプリントする。\n\n\n\n\n\n\n\nスライドプリントの詳細\n\n\n\n　上記の手順はQuarto（本サポートページおよびスライドの作成言語）の開発元が公開している方法である。今後、より簡単なプリント方法が考案される可能性もある。詳細はQuarto公式ホームページを参照すること。"
  },
  {
    "objectID": "materials/macro/inference.html",
    "href": "materials/macro/inference.html",
    "title": "第5回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/inference.html#スライド",
    "href": "materials/macro/inference.html#スライド",
    "title": "第5回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/inference.html#セットアップ",
    "href": "materials/macro/inference.html#セットアップ",
    "title": "第5回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　今回使用するパッケージは{tidyverse}のみだ。データはinference_data.csvであり、LMSから入手できる。読み込んだデータはdfという名のオブジェクトとして作業環境内に格納しておこう。\n\n\n\nCode 01\n\nlibrary(tidyverse) # or pacman::p_load(tidyverse)\ndf &lt;- read_csv(\"Data/inference_data.csv\")\n\ndf\n\n\n# A tibble: 2,746 × 4\n      ID Female   Age Temp_Ishin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1      0    44         NA\n 2     2      1    32         50\n 3     3      1    53         20\n 4     4      1    22          0\n 5     5      1    27         NA\n 6     6      1    28         NA\n 7     7      0    28         30\n 8     8      1    45         NA\n 9     9      1    33         50\n10    10      0    30         NA\n# … with 2,736 more rows\n\n\n　dfは2773行4列のデータであり、2021年9月に実施された世論調査の一部である。IDは回答者の識別番号、Femaleは女性ダミー変数（つまり、女性なら1、それ以外なら0）、Ageは回答者の年齢、Temp_Ishinは日本維新の会に対する感情温度であり、0なら嫌い、100なら好きを意味する。"
  },
  {
    "objectID": "materials/macro/inference.html#母平均の推定",
    "href": "materials/macro/inference.html#母平均の推定",
    "title": "第5回講義資料",
    "section": "母平均の推定",
    "text": "母平均の推定\n　まず、母集団（日本人の有権者全体）における維新感情温度の平均値（=母平均）を推定してみよう。母平均の一致推定量&不偏推定量は標本平均（\\(\\bar{x}\\)）である。したがって、Temp_Ishin変数の平均値を計算するだけで、日本人有権者における維新感情温度の平均値が推定できる。ちなみにTemp_Ishinには欠損値が含まれているため、平均値を計算する際、na.rm = TRUEを忘れないこと。また、今後の分析のためにTemp_Ishinの標本分散（不偏分散; \\(s^2\\)）と有効ケース数（\\(n\\)）も計算しておこう。計算結果はsum_statという名のオブジェクトとして格納しておく。\n\n\n\nCode 02\n\nsum_stat &lt;- df %&gt;%\n  summarise(Mean = mean(Temp_Ishin, na.rm = TRUE),\n            Var  = var(Temp_Ishin, na.rm = TRUE),\n            N    = sum(!is.na(Temp_Ishin)))\n\nsum_stat\n\n\n# A tibble: 1 × 3\n   Mean   Var     N\n  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1  42.7  569.  1998\n\n\n　標本平均は42.733である。これは母集団（日本人の有権者）における維新感情温度の平均値の点推定値が42.733度であることを意味する。しかし、点推定値には常に不確実性が伴う。私たちがもう一回（2021年9月に戻って）同じやり方で2015名を対象とした世論調査を行えば、その時の点推定値（=標本平均）は異なるだろう。この点推定値（=標本平均）の不確実性を示す指標が標準誤差である。標準誤差は\\(\\sqrt{\\frac{s^2}{n}}\\)、あるいは\\(\\frac{s}{\\sqrt{n}}\\)で計算できる。sum_statに標準誤差をSEという名の列としてN列の前に追加し、sum_statを上書きする。\n\n\n\nCode 03\n\nsum_stat &lt;- sum_stat %&gt;%\n  mutate(SE      = sqrt(Var / N),\n         .before = N)\n\nsum_stat\n\n\n# A tibble: 1 × 4\n   Mean   Var    SE     N\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1  42.7  569. 0.534  1998\n\n\n　標準誤差は約0.534であるが、これだけだとどう解釈すれば良いかが分からないかも知れない（ある程度統計学に慣れたら標準誤差だけでも色々な考察ができるようになる）。標準誤差を使って、95%信頼区間を計算してみよう。95%信頼区間を計算するためには「（1）自由度の\\(t\\)分布において\\(T\\)統計量が\\(t\\)以下の値を取る確率が2.5%である\\(t\\)の値（\\(t_{1997, 0.025}\\)）」と「（2）自由度の\\(t\\)分布において\\(T\\)統計量が\\(t\\)以上の値を取る確率が2.5%である\\(t\\)の値（\\(t_{1997, 0.975}\\)）」を計算する必要がある。使用する確率分布は\\(t\\)分布であるため、qt()関数を使う。\n　まず、「（1）自由度の\\(t\\)分布において\\(T\\)統計量が\\(t\\)以下の値を取る確率が2.5%である\\(t\\)の値」から計算してみよう。qt()の第一引数として0.025を指定する。これは2.5%を意味する。続いて、df引数に\\(t\\)分布の自由度を指定する。自由度はTemp_Ishinの有効ケース数（\\(n\\)）から1を引いた値だ。\n\n\n\nCode 04\n\nqt(0.025, df = sum_stat$N - 1)\n\n\n[1] -1.961153\n\n\n　得られた値は約-1.961である。これは自由度の\\(t\\)分布において\\(T\\)統計量が-1.961以下の値を取る確率が2.5%であることを意味する。\n\n\n\n\n\n\n\n\n\n　つづいて、「（2）自由度の\\(t\\)分布において\\(T\\)統計量が\\(t\\)以上の値を取る確率が2.5%である\\(t\\)の値」から計算してみよう。これは逆にいうと「\\(T\\)統計量が\\(t\\)以上の値を取る確率が97.5%である\\(t\\)の値」とも解釈できる。したがって、qt()の第一引数として0.975を指定する。\n\n\n\nCode 05\n\nqt(0.975, df = sum_stat$N - 1)\n\n\n[1] 1.961153\n\n\n　得られた値は約1.961である。これは自由度の\\(t\\)分布において\\(T\\)統計量が1.961以上の値を取る確率が2.5%であることを意味する。\n\n\n\n\n\n\n\n\n\n　95%信頼区間の下限は\\(\\bar{x} + t_{1997, 0.025} \\cdot \\mbox{SE}\\)、上限は\\(\\bar{x} + t_{1997, 0.975} \\cdot \\mbox{SE}\\)で計算できる（詳細はスライド参照）。それぞれCI_lower、CI_upperという名の列としてN列前に追加し、sum_statを上書きする。\n\n\n\nCode 06\n\nsum_stat &lt;- sum_stat %&gt;%\n  mutate(CI_lower = Mean + qt(0.025, df = N - 1) * SE,\n         CI_upper = Mean + qt(0.975, df = N - 1) * SE,\n         .before  = N)\n\nsum_stat\n\n\n# A tibble: 1 × 6\n   Mean   Var    SE CI_lower CI_upper     N\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n1  42.7  569. 0.534     41.7     43.8  1998\n\n\n　小数点を含めた詳しい値を確認してみよう。\n\n\n\nCode 07\n\nsum_stat$Mean # 母平均の一致＆不偏推定量（標本平均）\n\n\n[1] 42.73273\n\n\n\n\n\nCode 08\n\nsum_stat$SE # 標準誤差（標本平均の不確実性）\n\n\n[1] 0.5338369\n\n\n\n\n\nCode 09\n\nsum_stat$CI_lower # 95%信頼区間の下限\n\n\n[1] 41.6858\n\n\n\n\n\nCode 10\n\nsum_stat$CI_upper # 95%信頼区間の上限\n\n\n[1] 43.77967\n\n\n　以上の計算により、標本平均は42.733、95%信頼区間は[41.686, 43.780]であることが分かる。\n　以上の手順はパイプ演算子を複数つなげることで、dfから始まる一つのコードとしてまとめることもできる。複数のパイプ演算子をつなげていくためには、自分の頭の中で処理過程が想像できるようになる必要がある。学習段階では以上のようにステップごとにオブジェクトとして格納し、確認しながら分析を進めることが良いだろう。\n\n\n\nCode 11\n\n# オブジェクトとして格納せず、結果だけを出力\ndf %&gt;%\n  summarise(Mean = mean(Temp_Ishin, na.rm = TRUE),\n            Var  = var(Temp_Ishin, na.rm = TRUE),\n            N    = sum(!is.na(Temp_Ishin))) %&gt;%\n  mutate(SE       = sqrt(Var / N),\n         t        = Mean / SE,\n         CI_lower = Mean + qt(0.025, df = N - 1) * SE,\n         CI_upper = Mean + qt(0.975, df = N - 1) * SE,\n         .before  = N)\n\n\n# A tibble: 1 × 7\n   Mean   Var    SE     t CI_lower CI_upper     N\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;int&gt;\n1  42.7  569. 0.534  80.0     41.7     43.8  1998"
  },
  {
    "objectID": "materials/macro/inference.html#t.testの使い方",
    "href": "materials/macro/inference.html#t.testの使い方",
    "title": "第5回講義資料",
    "section": "t.test()の使い方",
    "text": "t.test()の使い方\n　母平均の推定について学習する場合、これまでのように一つ一つ計算しながら結果を確認する方法が望ましいが、実際にはt.test()という便利な関数を使う。指定する引数は2つであり、第一引数は母平均を推定するベクトル名、第二引数はconf.levelであり、算出する信頼区間を指定する。95%信頼区間の場合、0.95で良い。ちなみにconf.levelの既定値は0.95であるため、95%信頼区間を計算する場合は省略可能である。\n\n\n\nCode 12\n\n# 95%信頼区間を出すのであれば、 t.test(df$Temp_Ishin) だけでもOK\nt.test(df$Temp_Ishin, conf.level = 0.95)\n\n\n\n    One Sample t-test\n\ndata:  df$Temp_Ishin\nt = 80.048, df = 1997, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 41.68580 43.77967\nsample estimates:\nmean of x \n 42.73273 \n\n\n　手計算（？）と同じ結果が得られることが分かる。"
  },
  {
    "objectID": "materials/macro/association.html",
    "href": "materials/macro/association.html",
    "title": "第7回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/association.html#スライド",
    "href": "materials/macro/association.html#スライド",
    "title": "第7回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/association.html#セットアップ",
    "href": "materials/macro/association.html#セットアップ",
    "title": "第7回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(fastDummies)\n\ngacha_df   &lt;- read_csv(\"Data/Gacha2.csv\")\nsubsidy_df &lt;- read_csv(\"Data/Subsidy.csv\")\npasta_df   &lt;- read_csv(\"Data/Pasta.csv\")\n\n\n\n\n\n変数1\n変数2\n手法\n\n\n\n\n名目変数\n連続変数\n平均値の差の検定（2群）\n\n\n名目変数\n名目変数（ダミー変数）\n比率の差の検定\n\n\n連続変数\n連続変数\n相関分析\n\n\n名目変数\n名目変数\n独立性の検定\n\n\n名目変数\n順序変数\n平均値の差の検定 or 独立性の検定\n\n\n順序変数\n順序変数\n相関分析 or 独立性の検定\n\n\n順序変数\n連続変数\n相関分析 or 平均値の差の検定"
  },
  {
    "objectID": "materials/macro/association.html#t検定",
    "href": "materials/macro/association.html#t検定",
    "title": "第7回講義資料",
    "section": "\\(t\\)検定",
    "text": "\\(t\\)検定\n　まずはgacha_dfの中身を確認する。このデータは前回講義データと同じデータであるが、ガチャ結果（result）の列をダミー変数にしたものを追加したデータである。\n\n\n\nCode 02\n\ngacha_df\n\n\n# A tibble: 4,772 × 8\n   player trial stone_type result result_N result_R result_SR result_SSR\n    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1      1     1 Paid       R             0        1         0          0\n 2      1     2 Paid       R             0        1         0          0\n 3      1     3 Paid       SR            0        0         1          0\n 4      1     4 Free       R             0        1         0          0\n 5      1     5 Paid       N             1        0         0          0\n 6      1     6 Free       N             1        0         0          0\n 7      1     7 Free       SSR           0        0         0          1\n 8      1     8 Free       N             1        0         0          0\n 9      1     9 Free       N             1        0         0          0\n10      1    10 Free       N             1        0         0          0\n# … with 4,762 more rows\n\n\n　続いて、{summarytools}のdescr()関数でgacha_dfの記述統計を確認する。出力する記述統計量は平均値、標準偏差、最小値、最大値、有効ケース数である。また、プレイヤーのID（layer）はデータ上は数値型ではあるものの、実質名目変数であるため、記述統計から除外する。\n\n\n\nCode 03\n\ngacha_df %&gt;%\n  select(-player) %&gt;% # player列を除外してdescr()関数に渡す\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ngacha_df  \nN: 4772  \n\n                    Mean   Std.Dev    Min     Max   N.Valid\n---------------- ------- --------- ------ ------- ---------\n           trial   34.01     24.22   1.00   99.00   4772.00\n        result_N    0.56      0.50   0.00    1.00   4772.00\n        result_R    0.25      0.43   0.00    1.00   4772.00\n       result_SR    0.15      0.35   0.00    1.00   4772.00\n      result_SSR    0.05      0.21   0.00    1.00   4772.00\n\n\n　問題は石の種類（stone_type）とガチャの結果（result）が文字型変数であることから記述統計量が表示されない点である。ガチャの結果は既にダミー変数（result_で始まる4つの変数）になっているので問題ないが、石の種類はもう一度ダミー変数に変換する必要がある。\n　今回はダミー化した石の種類を分析に使う予定はなく、記述統計量さえ見られるのであれば十分だ。したがって、gacha_dfをdescr()関数に渡す前にdummy_cols()関数でダミー変数化する。\n\n\n\nCode 04\n\ngacha_df %&gt;%\n  # ダミー化する変数が複数の場合、\n  # select_columns = c(\"変数名1\", \"変数名2\", \"変数名3\")\n  # と書く\n  dummy_cols(select_columns = \"stone_type\", ignore_na = TRUE) %&gt;%\n  select(-c(player, stone_type, result)) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ngacha_df  \nN: 4772  \n\n                         Mean   Std.Dev    Min     Max   N.Valid\n--------------------- ------- --------- ------ ------- ---------\n                trial   34.01     24.22   1.00   99.00   4772.00\n             result_N    0.56      0.50   0.00    1.00   4772.00\n             result_R    0.25      0.43   0.00    1.00   4772.00\n            result_SR    0.15      0.35   0.00    1.00   4772.00\n           result_SSR    0.05      0.21   0.00    1.00   4772.00\n      stone_type_Free    0.66      0.48   0.00    1.00   4772.00\n      stone_type_Paid    0.34      0.48   0.00    1.00   4772.00\n\n\n　検定の前にgroup_by()関数とsummarise()関数を使用し、石の種類（stone_type）ごとのSSR出現有無（result_SSR）の平均値を計算してみよう。結果はmean_dfという名のオブジェクトとして格納する。\n\n\n\nCode 05\n\nmean_df &lt;- gacha_df %&gt;%\n  group_by(stone_type) %&gt;%\n  summarise(SSR = mean(result_SSR, na.rm = TRUE))\n\nmean_df\n\n\n# A tibble: 2 × 2\n  stone_type    SSR\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Free       0.0425\n2 Paid       0.0572\n\n\n　2つの出現割合の差は0.0425 - 0.0572、約-0.015であり、これを%で換算すると約-1.5%ポイントである。つまり、無償石の方が有償石に比べSSR出現の割合が約1.5%ポイント低いことを意味する。これを棒グラフで示すと以下のようになる。\n\n\n\nCode 06\n\nmean_df %&gt;%\n  ggplot() +\n  # geom_col()の代わりに、以下のgeom_bar()でもOK\n  # geom_bar(aes(x = stone_type, y = SSR), stat = \"identity\") +\n  geom_col(aes(x = stone_type, y = SSR)) +\n  labs(x = \"石の種類\", y = \"SSRの出現割合\")\n\n\n\n\n\n\n\n\n\n　図に英語と日本語が混在することは良くないので、mean_dfをggplot()に渡す前にstone_typeを日本語にリコーディングし、SSR列には100をかけて%に換算する。リコーディングは3値以上であれば、case_when()、またはrecode()を使うが、今回は\"Free\"か\"Paid\"かの2値となるので、ifelse()を使用する。\n# ifelse()の使い方\nifelse(条件式, 条件がTRUEの場合の戻り値, 条件がFALSEの場合の戻り値)\n　今回はstone_typeが\"Feee\"であれば（stone_type == \"Free\"）、\"無償\"と、それ以外は\"有償\"とリコーディングする。\n\n\n\nCode 07\n\nmean_df %&gt;%\n  mutate(stone_type = ifelse(stone_type == \"Free\", \"無償\", \"有償\"),\n         SSR        = SSR * 100) %&gt;%\n  ggplot() +\n  geom_col(aes(x = stone_type, y = SSR)) +\n  labs(x = \"石の種類\", y = \"SSRの出現割合 (%)\") +\n  # テーマをblack and whiteにし、文字サイズを14に\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　最後にこの約-1.5%ポイントの差が統計的に有意な差かどうかを検定してみよう。検定の際、帰無仮説は「無償石のSSRの確率と有償石のSSRの確率の差は0である」であり、対立仮説は「無償石のSSRの確率と有償石のSSRの確率の差は0ではない」となる。有意水準（\\(\\alpha\\)）は予め0.05と設定しておく。\n　（2群の）平均値の差の検定にはt.test()を利用する。第一引数は回帰式であり、書き方は「平均値の差を見る変数名 ~  グループを示す変数名」である。今回は石の種類（stone_type）ごとのSSR出現有無（result_SSR）の平均値の差を検定するため、result_SSR ~ stone_typeと指定する。第二引数はdataであり、これらの変数が格納されているデータのオブジェクト名（今回はgacha_df）を指定する。\n\n\n\nCode 08\n\nt.test(result_SSR ~ stone_type, data = gacha_df)\n\n\n\n    Welch Two Sample t-test\n\ndata:  result_SSR by stone_type\nt = -2.1653, df = 2960.6, p-value = 0.03045\nalternative hypothesis: true difference in means between group Free and group Paid is not equal to 0\n95 percent confidence interval:\n -0.027932426 -0.001384442\nsample estimates:\nmean in group Free mean in group Paid \n        0.04251918         0.05717762 \n\n\n　今回の例の場合、「SSRの出現有無」が0か1のダミー変数であるため、厳密な意味では平均値の差の検定（\\(t\\)検定）よりも比率の差の検定が適切である。実は平均値の差の検定と比率の差の検定の結果が大きくずれることはほぼないが（点推定値は必ず一致する）、念の為にprop.test()を利用して比率の差の検定を行ってみよう。\n　prop.test()にはxとnの2つの引数が必要であり、それぞれ成功の回数と試行回数のベクトルを指定する。今回は無償石で133回、有償石で94回SSRが引けたため、x = c(133, 94)を指定する。また、無償石でのガチャ回数は3128回、有償石のそれは1664回だったのでn = c(3128, 1644)と指定する。\n\n\n\nCode 09\n\nprop.test(x = c(133, 94), n = c(3128, 1644))\n\n\n\n    2-sample test for equality of proportions with continuity correction\n\ndata:  c(133, 94) out of c(3128, 1644)\nX-squared = 4.7923, df = 1, p-value = 0.02859\nalternative hypothesis: two.sided\n95 percent confidence interval:\n -0.0283874901 -0.0009293778\nsample estimates:\n    prop 1     prop 2 \n0.04251918 0.05717762 \n\n\n　平均値の差の検定と比率の差の検定の結果において点推定値は必ず一致するが、\\(p\\)値や信頼区間にやや違いが生じる。今回の\\(p\\)値は約0.029である。\\(t\\)検定では約0.030であったため、その違いは約0.001であり、帰無仮説が棄却できる点では同じ結果が得られた。\n\n両手法の比較\n\n\n手法\n点推定値\n\\(p\\)値\n95%信頼区間（下限）\n95%信頼区間（上限）\n\n\n\n\n平均値の差の検定\n-0.015\n0.030\n-0.028\n-0.001\n\n\n比率の差の検定\n-0.015\n0.029\n-0.028\n-0.001\n\n\n\n\n\n\n\n\n\n\\(t\\)検定は2群間の平均値の差の検定\n\n\n\n　もし平均値を比較するグループが3つ以上である場合は、\\(t\\)検定を行わず、分散分析（Analysis of variance; ANOVA）を実施する。詳しいことはインターネットで検索してみよう。"
  },
  {
    "objectID": "materials/macro/association.html#相関分析",
    "href": "materials/macro/association.html#相関分析",
    "title": "第7回講義資料",
    "section": "相関分析",
    "text": "相関分析\n　まずはsubsidy_dfの中身を確認してみよう。\n\n\n\nCode 10\n\nsubsidy_df\n\n\n# A tibble: 47 × 4\n      ID Pref   Turnout Subsidy\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 北海道    60.3   134. \n 2     2 青森県    54.2   193. \n 3     3 岩手県    59.1   265. \n 4     4 宮城県    52.8    98.2\n 5     5 秋田県    60.6   219. \n 6     6 山形県    64.1   187. \n 7     7 福島県    56.7   166. \n 8     8 茨城県    51.5    76.3\n 9     9 栃木県    51.7    72.8\n10    10 群馬県    52.0    76.6\n# … with 37 more rows\n\n\n　つづいて、当該都道府県の投票率（Turnout）と一人あたり補助金額（Subsidy）の記述統計量を確認する。\n\n\n\nCode 11\n\nsubsidy_df %&gt;%\n  select(Turnout, Subsidy) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \nsubsidy_df  \nN: 47  \n\n                  Mean   Std.Dev     Min      Max   N.Valid\n------------- -------- --------- ------- -------- ---------\n      Turnout    54.91      4.01   46.47    64.07     47.00\n      Subsidy   135.40     75.88    0.00   311.98     47.00\n\n\n　相関分析を行う場合、主に（１）散布図の作成と（２）相関係数の計算（と統計的有意性検定）が必要となる。まずは、散布図を作成してみよう。今回は横軸が投票率、縦軸が一人あたり補助金額の散布図を作成する。\n\n\n\nCode 12\n\n# subsidy_dfを使って\nsubsidy_df %&gt;%\n  # キャンバスを用意する\n  ggplot() +\n  # 横軸（x）が投票率（Turnout）、縦軸（y）が補助金額（Subsidy）の\n  # 散布図（geom_point()）を作成する。\n  geom_point(aes(x = Turnout, y = Subsidy)) +\n  # 横軸と縦軸のラベルを修正する。\n  labs(x = \"投票率 (%)\", y = \"1万人当り地方交付税額 (万円)\") +\n  # 白黒テーマを使用する。\n  theme_bw()\n\n\n\n\n\n\n\n\n\n　2つの変数の関係を最も適切に表す直線（=回帰直線）を追加するためには、geom_smooth()レイヤーを足す。2次元平面上の散布図の場合、xとyは同じ変数をマッピングする必要がある。また、直線を出すためにはmethod = \"lm\"引数を追加し、95%信頼区間を消すためにse = FALSEも追加する。余裕があれば、各引数を消した場合の結果も確認してみよう。\n\n\n\nCode 13\n\nsubsidy_df %&gt;%\n  ggplot() +\n  geom_point(aes(x = Turnout, y = Subsidy)) +\n  # 2つの変数間の関係を示す直線（回帰直線; method = \"lm\"）を引く\n  # 信頼区間は表示しない（se = FALSE）\n  geom_smooth(aes(x = Turnout, y = Subsidy), \n              method = \"lm\", se = FALSE) +\n  labs(x = \"投票率 (%)\",\n       y = \"1万人当り地方交付税額 (万円)\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n　これで散布図+回帰直線の図は完成したが、より効率的なコードの書き方がある。先ほどのコードの場合、geom_point()とgeom_smooth()のマッピング（aes()関数の内部）は共通する要素があり、それはx = Turnoutとy = Subsidyである。複数の幾何オブジェクト（geom_で始まる関数）がマッピングを共有する場合は、以下のようにggplot()内部でマッピングを指定することができる。\n\n\n\nCode 14\n\nsubsidy_df %&gt;%\n  # 2つの幾何オブジェクト（geom_関数）はマッピング（xとy）を共有するため\n  # ggplot()内で定義した方が効率的\n  ggplot(aes(x = Turnout, y = Subsidy)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"投票率 (%)\",\n       y = \"1万人当り地方交付税額 (万円)\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n　最後に相関係数を計算し、統計的有意性検定を行ってみよう。Rが提供する相関分析の関数はいくつかあるが、統計的有意性検定も同時に行う場合はcor.test()を使用する。引数は相関係数を計算する2つのベクトルを指定する。今回はsubsidy_dfのTurnout列（subsidy_df$Turnout）とsubsidy_dfのSubsidy列（subsidy_df$Subsidy）がそれである。\n\n\n\n\n\n\n順序変数の場合は?\n\n\n\n　今回の例は「連続変数\\(\\times\\)連続変数」の相関分析であるが、「順序変数\\(\\times\\)順序変数」もしくは「順序変数\\(\\times\\)連続変数」の相関分析も可能である。しかし、cor.test()に第3引数としてmethod = \"spearman\"、またはmethod = \"kendall\"を追加すること。\n\n\n\n\n\nCode 15\n\n# with(subsidy_df, cor.test(Turnout, Subsidy)) もOK\ncor.test(subsidy_df$Turnout, subsidy_df$Subsidy)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  subsidy_df$Turnout and subsidy_df$Subsidy\nt = 2.9128, df = 45, p-value = 0.005558\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.1254750 0.6151042\nsample estimates:\n      cor \n0.3982905 \n\n\n　相関係数は約0.398であり、\\(p\\)値は約0.006である。\\(p\\)値が一般的に使われる有意水準（\\(\\alpha = 0.05\\)）より小さいことから、統計的に有意な「正の」相関関係があると考えられる。つまり、「投票率が高い都道府県ほど一人あたり補助金額が多い傾向がある」ことを意味する。\n　ただし、この相関関係が因果関係、つまり「投票率が上がると補助金額が増える」ということを意味するわけではない。そもそも投票率が原因で、補助金額が結果であるかどうかすらも不明である。補助金額が増えることによって、有権者がその見返りとして投票に参加したかも知れない。相関関係と因果関係は厳格に区別すべきであり、そのためには緻密な理論・仮説、もしくは研究デザインが必要である。"
  },
  {
    "objectID": "materials/macro/association.html#chi2検定",
    "href": "materials/macro/association.html#chi2検定",
    "title": "第7回講義資料",
    "section": "\\(\\chi^2\\)検定",
    "text": "\\(\\chi^2\\)検定\n　まずはpasta_dfの中身を確認してみよう。\n\n\n\nCode 16\n\npasta_df\n\n\n# A tibble: 1,135 × 4\n      ID Female Over40 Pasta      \n   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;      \n 1     1      0      0 Naporitan  \n 2     2      1      0 Naporitan  \n 3     3      0      0 Naporitan  \n 4     4      0      0 Carbonara  \n 5     5      0      0 Naporitan  \n 6     6      0      1 MeatSauce  \n 7     7      0      1 Peperoncino\n 8     8      0      1 MeatSauce  \n 9     9      1      0 Carbonara  \n10    10      0      0 Carbonara  \n# … with 1,125 more rows\n\n\n　つづいて、Female変数とOver40変数をリコーディングし、それぞれGender_DとOver40_Dという新しい列として追加する。具体的にはFemaleの値が1なら\"Female\"、それ以外は\"Male\"の値を割り当てたGender_D変数を作成し、Over40の値が1なら\"41 to 80\"、それ以外は\"18 to 40\"の値を割り当てたOver40_Dを作成する。各変数はfactor()関数を使ってfactor化する。要素の順番はGender_Dの場合\"Male\"、\"Female\"、Over40_Dは\"18 to 40\"、\"41 to 80\"とする。\n\n\n\nCode 17\n\npasta_df &lt;- pasta_df %&gt;%\n  mutate(Gender_D = ifelse(Female == 1, \"Female\", \"Male\"),\n         Gender_D = factor(Gender_D, levels = c(\"Male\", \"Female\")),\n         Over40_D = ifelse(Over40 == 1, \"41 to 80\", \"18 to 40\"),\n         Over40_D = factor(Over40_D, levels = c(\"18 to 40\", \"41 to 80\")))\n\npasta_df\n\n\n# A tibble: 1,135 × 6\n      ID Female Over40 Pasta       Gender_D Over40_D\n   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;       &lt;fct&gt;    &lt;fct&gt;   \n 1     1      0      0 Naporitan   Male     18 to 40\n 2     2      1      0 Naporitan   Female   18 to 40\n 3     3      0      0 Naporitan   Male     18 to 40\n 4     4      0      0 Carbonara   Male     18 to 40\n 5     5      0      0 Naporitan   Male     18 to 40\n 6     6      0      1 MeatSauce   Male     41 to 80\n 7     7      0      1 Peperoncino Male     41 to 80\n 8     8      0      1 MeatSauce   Male     41 to 80\n 9     9      1      0 Carbonara   Female   18 to 40\n10    10      0      0 Carbonara   Male     18 to 40\n# … with 1,125 more rows\n\n\n　独立性の検定を行う前に、2つの名目変数のクロス表から作成する。ここでは2つのクロス表を作成する。1つ目は性別（Gender_D）と好きなパスタ（Pasta）のクロス表、2つ目はj年齢（Over40_D）と好きなパスタ（Pasta）のクロス表である。作り方はtable()関数の中に2つの名目変数のベクトルを指定するだけだ。\n\n\n\nCode 18\n\n# with(pasta_df, table(Female, Pasta)) もOK\ntable(pasta_df$Gender_D, pasta_df$Pasta)\n\n\n        \n         Carbonara MeatSauce Naporitan Peperoncino\n  Male         139       201       145         105\n  Female       139       160       153          93\n\n# with(pasta_df, table(Over40, Pasta)) もOK\ntable(pasta_df$Over40_D, pasta_df$Pasta)\n\n          \n           Carbonara MeatSauce Naporitan Peperoncino\n  18 to 40       138       177       160          65\n  41 to 80       140       184       138         133\n\n\n　周辺分布を追加するためには、クロス表をパイプ演算子を使ってaddmargins()関数に渡せば良い。\n\n\n\nCode 19\n\ntable(pasta_df$Gender_D, pasta_df$Pasta) %&gt;%\n  addmargins()\n\n\n        \n         Carbonara MeatSauce Naporitan Peperoncino  Sum\n  Male         139       201       145         105  590\n  Female       139       160       153          93  545\n  Sum          278       361       298         198 1135\n\ntable(pasta_df$Over40_D, pasta_df$Pasta) %&gt;%\n  addmargins()\n\n          \n           Carbonara MeatSauce Naporitan Peperoncino  Sum\n  18 to 40       138       177       160          65  540\n  41 to 80       140       184       138         133  595\n  Sum            278       361       298         198 1135\n\n\n　また、クロス表を度数（frequency）でなく、割合で示すこともできる。この場合、クロス表をprop.table()関数に渡すだけで良い。\n\n\n\nCode 20\n\ntable(pasta_df$Gender_D, pasta_df$Pasta) %&gt;%\n  prop.table()\n\n\n        \n          Carbonara  MeatSauce  Naporitan Peperoncino\n  Male   0.12246696 0.17709251 0.12775330  0.09251101\n  Female 0.12246696 0.14096916 0.13480176  0.08193833\n\ntable(pasta_df$Over40_D, pasta_df$Pasta) %&gt;%\n  prop.table()\n\n          \n            Carbonara  MeatSauce  Naporitan Peperoncino\n  18 to 40 0.12158590 0.15594714 0.14096916  0.05726872\n  41 to 80 0.12334802 0.16211454 0.12158590  0.11718062\n\n\n　むろん、割合のクロス表を更にaddmargins()に渡すことで、周辺分布を追加することもできる。\n\n\n\nCode 21\n\ntable(pasta_df$Gender_D, pasta_df$Pasta) %&gt;%\n  prop.table() %&gt;%\n  addmargins()\n\n\n        \n          Carbonara  MeatSauce  Naporitan Peperoncino        Sum\n  Male   0.12246696 0.17709251 0.12775330  0.09251101 0.51982379\n  Female 0.12246696 0.14096916 0.13480176  0.08193833 0.48017621\n  Sum    0.24493392 0.31806167 0.26255507  0.17444934 1.00000000\n\ntable(pasta_df$Over40_D, pasta_df$Pasta) %&gt;%\n  prop.table() %&gt;%\n  addmargins()\n\n          \n            Carbonara  MeatSauce  Naporitan Peperoncino        Sum\n  18 to 40 0.12158590 0.15594714 0.14096916  0.05726872 0.47577093\n  41 to 80 0.12334802 0.16211454 0.12158590  0.11718062 0.52422907\n  Sum      0.24493392 0.31806167 0.26255507  0.17444934 1.00000000\n\n\n　また、割合を0〜1でなく、0%〜100%で表示したい場合は、更に100をかければ良い。数学・統計学の世界において確率や割合は0〜100でなく、0〜1を使う場合が多いものの、人間からみれば前者の方が読みやすいかも知れない。\n\n\n\nCode 22\n\ntable(pasta_df$Gender_D, pasta_df$Pasta) %&gt;%\n  prop.table() %&gt;%\n  addmargins() * 100\n\n\n        \n          Carbonara  MeatSauce  Naporitan Peperoncino        Sum\n  Male    12.246696  17.709251  12.775330    9.251101  51.982379\n  Female  12.246696  14.096916  13.480176    8.193833  48.017621\n  Sum     24.493392  31.806167  26.255507   17.444934 100.000000\n\ntable(pasta_df$Over40_D, pasta_df$Pasta) %&gt;%\n  prop.table() %&gt;%\n  addmargins() * 100\n\n          \n            Carbonara  MeatSauce  Naporitan Peperoncino        Sum\n  18 to 40  12.158590  15.594714  14.096916    5.726872  47.577093\n  41 to 80  12.334802  16.211454  12.158590   11.718062  52.422907\n  Sum       24.493392  31.806167  26.255507   17.444934 100.000000\n\n\n　このような名目変数間の関係が独立しているかどうかを検定する\\(\\chi^2\\)の検定は、クロス表をchisq.test()関数に渡すだけで実装できる。まずは性別と好きなパスタの関係を確認してみよう。\n\n\n\nCode 23\n\ntable(pasta_df$Gender_D, pasta_df$Pasta) %&gt;%\n  chisq.test()\n\n\n\n    Pearson's Chi-squared test\n\ndata:  .\nX-squared = 3.8204, df = 3, p-value = 0.2815\n\n\n　検定統計量である\\(\\chi^2\\)統計量は約3.820であり、\\(p\\)値は約0.282である。\\(p\\)値が一般的に採用される有意水準（\\(\\alpha = 0.05\\)）以上であることから、性別と好きなパスタの間には関係性があるとは言えないという結論が得られた。年齢とパスタの関係はどうだろう。\n\n\n\nCode 24\n\ntable(pasta_df$Over40_D, pasta_df$Pasta) %&gt;%\n  chisq.test()\n\n\n\n    Pearson's Chi-squared test\n\ndata:  .\nX-squared = 22.515, df = 3, p-value = 5.095e-05\n\n\n　検定統計量である\\(\\chi^2\\)統計量は約22.515であり、\\(p\\)値は0.001未満である。\\(p\\)値が一般的に採用される有意水準（\\(\\alpha = 0.05\\)）未満であることから、年齢と好きなパスタの間には統計的に有意な関係があると結論づけることができる。ただし、「何かの関係がある」ことまでは分かっても、具体的にどのような関係があるかは、クロス表を見ながら解釈する必要がある。今回の例だと、41歳以上の人は40歳以下の人に比べ、ペペロンチーノを好む傾向があることが分かる。"
  },
  {
    "objectID": "intro/project.html",
    "href": "intro/project.html",
    "title": "プロジェクト管理",
    "section": "",
    "text": "なぜプロジェクト機能を使う必要があるのか\n\n\n\n　「なぜプロジェクト機能を使うのか」を知るためにはファイルシステムに関する理解が必要だ。もし、「ファイルシステム」という単語や「絶対パス」、「相対パス」という単語を聞いたことのない人はファイル・システムも予め読んでおこう。"
  },
  {
    "objectID": "intro/project.html#プロジェクトの作成",
    "href": "intro/project.html#プロジェクトの作成",
    "title": "プロジェクト管理",
    "section": "プロジェクトの作成",
    "text": "プロジェクトの作成\n手順1: File &gt; New Project…をクリックする。\n\n\n\n\n\n手順2: New Directoryをクリックする。\n\n\n\n\n\n手順3: New Projectをクリックする。\n\n\n\n\n\n手順4: Directory name:にプロジェクト名を入力し、Create Projectをクリックする。\n\n\n\n\n\n\n\n\n\n\n\n注意: プロジェクト名の付け方\n\n\n\n　プロジェクト名にはローマ字、数字のみを使おう。つまり、日本語、中国語、韓国語、全角文字、スペースはなるべく使わないこと。空白を入れたい場合はスペースの代わりにアンダースコア（_）を使おう。"
  },
  {
    "objectID": "intro/project.html#プロジェクトの開き方",
    "href": "intro/project.html#プロジェクトの開き方",
    "title": "プロジェクト管理",
    "section": "プロジェクトの開き方",
    "text": "プロジェクトの開き方\n　プロジェクトを作成すれば、自動的に出来たてのプロジェクトが開かれる。しかし、JDCat分析ツールから一旦ログアウトし、改めてRStudioを起動する場合、プロジェクトをロードする必要がある。\n手順1: File &gt; Open Project…をクリックする。\n\n\n\n\n\n手順2: プロジェクト・フォルダー名をダブルクリックする。\n\n\n\n\n\n手順3: .Rprojで終わるファイルをダブルクリックする。\n\n\n\n\n\nプロジェクトが正しくロードされている場合、RStudioの右上にプロジェクト名が表示される。\n\n\n\n\n\n\n\n\n\n\n\n常にプロジェクト機能を使おう!\n\n\n\n　RStudionの右上のプロジェクト名表示が「Project: (None)」になっていることは、現在プロジェクトを開いていないことを意味する。簡単な計算機として使う目的以外（つまり、授業中の実習や課題）は必ずプロジェクト機能を使おう。"
  },
  {
    "objectID": "intro/install.html",
    "href": "intro/install.html",
    "title": "Rの導入",
    "section": "",
    "text": "注意!!!\n\n\n\n　初期設定は国立情報学研究所（以下、NII）のサーバーに自分の作業用スペースを借りる作業である。つまり、初期設定を繰り返すことはNIIのサーバー（のスペース）をいくつも借りることとなり、サーバーを圧迫してしまう可能性がある（一つのアカウントで作成可能なサーバー数は最大10個まで）。したがって、以下の初期設定は授業全体を通じて1回のみ実行すること。\n　既存のサーバーが使えないなどの問題が生じない限り、このページへのアクセスは不要である。次回から右上のをクリックして、既存のサーバーを立ち上げること。"
  },
  {
    "objectID": "intro/install.html#初期設定",
    "href": "intro/install.html#初期設定",
    "title": "Rの導入",
    "section": "1 初期設定",
    "text": "1 初期設定\n　本講義の実習はJDCat分析ツールの使用を推奨する。自分のPCにインストールしたR + RStudio、RStuio.cloud、大学PCにインストールされているR + RStudioなどの使用を妨げないが1、本ページの資料と同じ結果が得られることは保証しない。また、実習・分析中に起きた不具合についても授業中には対応しない（オフィスアワーなどでは対応可能）。\n　以下ではJDCat分析ツールを用いたRおよびRStudioの導入方法について解説する。\n手順1: 以下のアドレスにアクセスする。\n\nhttps://binder.cs.rcos.nii.ac.jp/v2/gh/JaehyunSong/Binder_R/HEAD\n\n\n\n\n\n\n\n注意!!!\n\n\n\n　何回も強調するが、以上のURLは授業全体を通じて1回のみアクセスすること。このURLはアプリに例えると、「インストール」であり、1回だけで十分だ。使いたいアプリを起動する度にインストールする愚かな人はいないだろう。自分の貴重な時間を無駄にし、スマホの容量を圧迫するだけなら、まだましだが、JDCat分析システムは他人も使うシステムだ。つまり、以上のURLを2回以上クリックすることは明らかに迷惑行為である。次回から本サポートページ右上のをクリックして、既存のサーバーを立ち上げること。\n\n\n手順2: 所属機関に「関西大学」、または「Kansai University」を入力・選択し、「選択」をクリックする。このような画面が表示されない場合は手順2から5は飛ばしても良い。\n\n\n\n\n\n手順3: 自分の関西大学のIDをパスワードを入力する。こちらのIDとパスワードは関西大学インフォメーション・システムおよびLMSのID/パスワードと同じである。\n\n\n\n\n\n手順4: このまま「同意します」をクリックする。\n\n\n\n\n\n手順5: 以下のような画面が表示されたらしばらく待つ。\n\n\n\n\n\n手順6: 以下のような画面が表示されたら初期設定は完了\n\n\n\n\n\n手順7: 初期設定が終わったら、すぐRおよびRStudioが利用可能だが、ここでは一旦右上の「Logout」をクリックし、タブ (or ウィンドウ) を閉じる。"
  },
  {
    "objectID": "intro/install.html#jdcat分析ツールの起動",
    "href": "intro/install.html#jdcat分析ツールの起動",
    "title": "Rの導入",
    "section": "2 JDCat分析ツールの起動",
    "text": "2 JDCat分析ツールの起動\n初期設定が終わったら、今後、以下の手順でJDCat分析ツールを起動する。\n手順1: 以下のアドレスにアクセスするか、本ページの右上にある右上の  ボタンをクリックする（右クリックし、新しいタブ or ウィンドウで開くことを推奨する）。\n\nhttps://jupyter.cs.rcos.nii.ac.jp/\n\n手順2: 必要に応じて認証を行う（初期設定の手順2, 3, 4と同じ）。\n手順3: サーバーリストが表示される。URL列のアドレスをクリックする。\n\n参考) 初期設定を1回のみ行ったら1行のみ表示されるため混同することはないが、個人利用などを目的に初期設定を複数回行った場合は2行以上が表示されるだろう。本講義に使うサーバーのURLをクリックすること。\n\n\n\n\n\n\n手順4: 以下のような画面が表示されたらJDCat分析ツールの起動完了である。この画面を今後、「JupyterHub（ジュピターハブ）のホーム画面」と呼ぶ。"
  },
  {
    "objectID": "intro/install.html#rstudioの起動",
    "href": "intro/install.html#rstudioの起動",
    "title": "Rの導入",
    "section": "3 RStudioの起動",
    "text": "3 RStudioの起動\n手順1: JupyterHubのホーム画面の右上の「New」をクリックし、「RStudio」をクリックする。\n\n\n\n\n\n手順2: 以下の画面が表示されたら、RStudioの起動完了である（RStudioの見栄は初期状態の場合、白ベースである）。"
  },
  {
    "objectID": "intro/install.html#rstudioの終了",
    "href": "intro/install.html#rstudioの終了",
    "title": "Rの導入",
    "section": "4 RStudioの終了",
    "text": "4 RStudioの終了\n手順1: RStudio画面右上のオレンジ色のボタンをクリックする。\n\n\n\n\n\n手順2: 以下のダイアログが表示されたらタブ、またはウィンドウを閉じる。"
  },
  {
    "objectID": "intro/filesystem.html",
    "href": "intro/filesystem.html",
    "title": "ファイル・システム",
    "section": "",
    "text": "PC内に存在するほとんどのファイルは「名前.拡張子」と名付けられている1。名前の拡張子は.で区切られており、名前は英数字と_のみで構成することを推奨する（ファイル名に.が推奨されない理由の一つが名前と拡張子を区分する文字として使われるからだ）。ここで注目したいのはファイルの名前でなく、拡張子のことだ。拡張子とはファイルの特徴を示すものである。たとえば、拡張子が.htmlであれば、ウェブページ形式を意味し、.pngなら図、.pdfなら図・文書、.exeなら実行ファイル、.dmgならディスクイメージを意味する。ファイル名がFigure01.pngならFigure01という名の画像ファイルであることを意味する2。この拡張子によって、パソコンは当該ファイルをどのアプリケーションで開くかを判定する。.exeファイルをダブルクリックするとアプリケーションが立ち上がるし、.pdfファイルをダブルクリックするとPDFビュアーソフトが起動され、中身が表示される。\n　これは拡張子を変えると問題が生じ得ることを意味する。画像ファイルであるFigure01.pngのファイル名を動画ファイル拡張子であるMovie01.mp4に修正しても、そのファイルは動画ファイルにはならない。また、拡張子が.mp4になると、そのファイルを開く際、動画プレイヤーが起動されるが、ファイルの中身は画像ファイルのままなのでエラーが出る。したがって、拡張子は勝手に変えてはならない。たまに課題の結果物としてファイルを提出する際、自分の名前を入れたくてファイル名をXXXX.htmlからXXXX.html_Songへ変更して提出する場合がある。しかし、これは大きな間違いだ。もやはこのファイルはHTMLファイル（.html）でなく、未知のファイル形式（.html_Song）として認識され、ダブルクリックしてもPCはどのアプリケーションで開けば良いかが分からなくなる。ファイル名を修正するならXXXX_Song.htmlのように修正しよう3。\n　Rを用いたデータ分析の場面において頻繁に登場する拡張子は以下の通りである。ファイルの名前は大文字と小文字を区別するが、拡張子の場合、区別されないケースが多い。\n\n\n\n\n\n\n\n\n拡張子\n説明\n備考\n\n\n\n\n.R\nRスクリプトファイル\n\n\n\n.Rproj\nRプロジェクトファイル\n\n\n\n.Rmd\nR Markdownファイル\n\n\n\n.qmd\nQuartoファイル\nRMarkdownに似たようなもの\n\n\n.csv\n表形式ファイル\n業界標準のフォーマット\n\n\n.xlsx or .xls\n表形式ファイル\nExcelで使うフォーマット\n\n\n.dta\n表形式ファイル\nStataで使うフォーマット\n\n\n.sav\n表形式ファイル\nSPSSで使うフォーマット\n\n\n.html\nウェブページファイル\nR Markdown/QuartoをKnitした場合に得られる\n\n\n.png\n画像ファイル\n\n\n\n.pdf\n画像/文書ファイル\n画像にも文書にもなるファイル"
  },
  {
    "objectID": "intro/filesystem.html#拡張子",
    "href": "intro/filesystem.html#拡張子",
    "title": "ファイル・システム",
    "section": "",
    "text": "PC内に存在するほとんどのファイルは「名前.拡張子」と名付けられている1。名前の拡張子は.で区切られており、名前は英数字と_のみで構成することを推奨する（ファイル名に.が推奨されない理由の一つが名前と拡張子を区分する文字として使われるからだ）。ここで注目したいのはファイルの名前でなく、拡張子のことだ。拡張子とはファイルの特徴を示すものである。たとえば、拡張子が.htmlであれば、ウェブページ形式を意味し、.pngなら図、.pdfなら図・文書、.exeなら実行ファイル、.dmgならディスクイメージを意味する。ファイル名がFigure01.pngならFigure01という名の画像ファイルであることを意味する2。この拡張子によって、パソコンは当該ファイルをどのアプリケーションで開くかを判定する。.exeファイルをダブルクリックするとアプリケーションが立ち上がるし、.pdfファイルをダブルクリックするとPDFビュアーソフトが起動され、中身が表示される。\n　これは拡張子を変えると問題が生じ得ることを意味する。画像ファイルであるFigure01.pngのファイル名を動画ファイル拡張子であるMovie01.mp4に修正しても、そのファイルは動画ファイルにはならない。また、拡張子が.mp4になると、そのファイルを開く際、動画プレイヤーが起動されるが、ファイルの中身は画像ファイルのままなのでエラーが出る。したがって、拡張子は勝手に変えてはならない。たまに課題の結果物としてファイルを提出する際、自分の名前を入れたくてファイル名をXXXX.htmlからXXXX.html_Songへ変更して提出する場合がある。しかし、これは大きな間違いだ。もやはこのファイルはHTMLファイル（.html）でなく、未知のファイル形式（.html_Song）として認識され、ダブルクリックしてもPCはどのアプリケーションで開けば良いかが分からなくなる。ファイル名を修正するならXXXX_Song.htmlのように修正しよう3。\n　Rを用いたデータ分析の場面において頻繁に登場する拡張子は以下の通りである。ファイルの名前は大文字と小文字を区別するが、拡張子の場合、区別されないケースが多い。\n\n\n\n\n\n\n\n\n拡張子\n説明\n備考\n\n\n\n\n.R\nRスクリプトファイル\n\n\n\n.Rproj\nRプロジェクトファイル\n\n\n\n.Rmd\nR Markdownファイル\n\n\n\n.qmd\nQuartoファイル\nRMarkdownに似たようなもの\n\n\n.csv\n表形式ファイル\n業界標準のフォーマット\n\n\n.xlsx or .xls\n表形式ファイル\nExcelで使うフォーマット\n\n\n.dta\n表形式ファイル\nStataで使うフォーマット\n\n\n.sav\n表形式ファイル\nSPSSで使うフォーマット\n\n\n.html\nウェブページファイル\nR Markdown/QuartoをKnitした場合に得られる\n\n\n.png\n画像ファイル\n\n\n\n.pdf\n画像/文書ファイル\n画像にも文書にもなるファイル"
  },
  {
    "objectID": "intro/filesystem.html#ファイルシステム",
    "href": "intro/filesystem.html#ファイルシステム",
    "title": "ファイル・システム",
    "section": "2 ファイルシステム",
    "text": "2 ファイルシステム\n　R上でファイルを入出力を行うためにはファイルシステム（file system）を理解する必要がある。\n\n2.1 ファイルの入出力\n　そもそも、ファイルの「入出力」とは何だろうか。これはコンピューターの構造に関わる話なので極めて難しい内容であるが、我々のような消費者（end user）側から見れば、ファイルの入力（input）とは、いわゆるファイルの読み込みを意味し、多くの場合、表形式のデータ（.csv、.xlsxなど）をR上に読み込む作業を意味する。また、ファイルの出力（output）とは、いわゆるファイルの保存だ。たとえば、作成したスクリプトを.R形式で保存したり、加工済みのデータを.csv形式で保存したり、作成した図を.png、.pdf形式で保存したり、作成した文書を.pdf、.html形式で保存したりすることがファイルの出力だ。\n\n\n2.2 パスとは\n　ファイルを読み込む場合はファイル名を指定する必要がある。また、ファイルを書き出す場合もファイルに名付ける必要がある。そしてファイル名は名前.拡張子である。ただし、これらのファイルは全て一箇所に集まっているわけではない。もし、全てのファイルが一箇所に集まっていると、必要なファイルを探すのは非常に難しい。通常、PC内には数万のファイルがある。これらのファイルから必要なファイルを探すのは至難の業だろう。したがって、これらのファイルをいくつかの部屋に分けて保管し、この部屋のことをフォルダー（folder）、またはディレクトリ（directory）と呼ぶ（ここでは「フォルダー」と呼ぶとする）。パス（path）とは特定のファイルの位置と名前の書き方である。つまり、「どこのどのファイルを読み込むか」、「このファイルをどの名前でどこに保存するか」に関する書き方であり、プログラミングを学習する上で必須の知識と言っても過言ではない。\n　このパスという概念は我々が住んでいる居住地の「住所」と類似した概念だ。もし、日本に「都道府県」も「市区町村」も「〜丁目、〜番、〜号」という概念がないとしよう。ここでAmazonで魚を購入し、受取先を指定する場合はどうすれば良いだろうか。日本に人が数十人しか住んでいないのであれば、「XXXさんの家」と書くだけで十分かも知れない。しかし、日本には1億人以上の人がある。「ソンさんの家」と書いても届かないだろう。届いたとしても数年、あるいは数十年後に魚の化石の状態で届くかも知れない。そもそも日本に「ソンさん」はこの授業の担当教員以外にもいくらでもいる（ちなみに송（Song; 宋・松）さんも、손（Sohn; 孫）さんも、성（Seong/Sung; 成・星）さんも、선（Sun/Seon; 宣）さんも韓国語では発音が全く別だが、日本ではソンさんになってしまう。）。それぞれの家を何かの区域内に位置づけないとモノが届くまで数年かかってしまう。そこで必要なのが住所だ。「東京都千代田区永田町1丁目7番1号の田中さん」は「東京都」、「千代田区」、「永田町」、「1丁目」、「7番」、「1号」、「田中さん」で構成される。これをファイルシステムに例えると、東京都というフォルダーの中に千代田区というフォルダーがあり、その中には永田町というフォルダー、その中に1丁目といるファルダー、…が存在する。むろん、一つのフォルダーには複数のフォルダーが存在する可能性もある。東京都のフォルダーには千代田区以外にも大田区、中野区、文京区、葛飾区といった複数のフォルダーがあり、千代田区の中にも複数のフォルダーがある。最後の「田中さん」は受け取る人、コンピューターでいうファイル名である。\n　この住所と受取人のことをコンピューターではパス（path）と呼ぶ。それぞれのフォルダーは/で区切られる（macOS/Linuxでは/、Windowsでは\\または￥; JDCat分析ツールはLinuxベースであるため、/で区切られる）。先ほどの住所の例だと、東京都/千代田区/永田町/1丁目/7番/1号/田中さんとなる（macOS/Linuxの場合）。左に行くほど上位のフォルダーとなり、最後のものはファイル名である。ただし、コンピュターではパスの最初に/を付ける。Windowsなら主にC:\\でスタートし、C:\\東京都\\千代田区\\永田町\\1丁目\\7番\\1号\\田中さんとなる（\\の代わりに￥と表示される場合もある）。\n　たとえば、以下のような構造でファイルが保存されているとしよう。拡張子が付いているものはファイル、それ以外はフォルダー、1行目の.は最上位フォルダーである。\n\n\n                      levelName\n1  .                           \n2   ¦--Day01                   \n3   ¦   ¦--Day01.Rproj         \n4   ¦   ¦--Script01.R          \n5   ¦   ¦--Script02.R          \n6   ¦   ¦--Data                \n7   ¦   ¦   ¦--raw_data.csv    \n8   ¦   ¦   °--cleaned_data.csv\n9   ¦   °--Figs                \n10  ¦       ¦--Figure01.png    \n11  ¦       °--Figure02.png    \n12  °--Day02                   \n13      ¦--Day02.Rproj         \n14      ¦--Script01.R          \n15      ¦--Document01.qmd      \n16      ¦--Document01.html     \n17      ¦--Data                \n18      ¦   °--my_data.csv     \n19      °--Figs                \n20          ¦--Old             \n21          ¦   ¦--Figure01.pdf\n22          ¦   ¦--Figure02.pdf\n23          ¦   °--Figure03.pdf\n24          °--New             \n25              °--Figure01.png\n\n\n　ここでread_csv()関数を使ってDay01フォルダー内のDataフォルダー内のraw_data.csvを読み込む場合はread_csv(\"/Day01/Data/raw_data.csv\")となる。また、ggsave()を用いて、Day02内のFigs内のNew内にFigure02.pngという名で図を保存する場合は、ggsave(filename = \"/Day02/Figs/New/Figure02.png\", ...)と入力する必要がある。しかし、通常、パスを指定する際に、/（WindownならC:\\）から始めることは滅多にない。それは「作業フォルダーはパスで省略可能」だからだ。"
  },
  {
    "objectID": "intro/filesystem.html#rstudioのプロジェクト機能",
    "href": "intro/filesystem.html#rstudioのプロジェクト機能",
    "title": "ファイル・システム",
    "section": "3 RStudioのプロジェクト機能",
    "text": "3 RStudioのプロジェクト機能\n　Rでファイルを入出力する時に頭に入れておくべき概念として「作業フォルダー（working folder/working directory）」がある。通常、Rの作業フォルダーはmacOSだと/Users/ユーザー名/、JDCat分析ツールだと/home/joyvan/が作業フォルダーだ。そして、パスを指定する場合、作業フォルダーは省略することができる。つまり、現在の作業フォルダーが/home/joyvan/なら\"/home/joyvan/Day01/Data/raw_data.csv\"は\"Day01/Data/raw_data.csv\"に、\"/home/joyvan/Day02/Figs/New/Figure02.png\"は\"Day02/Figs/New/Figure02.png\"に省略される。我々が郵便局で手紙を送る際、住所にわざわざ「日本国」と書かないものと同じである。作業フォルダーはRコンソール上でgetwd()と入力すれば出力される。macOSなら/Users/ユーザー名、JDCat分析ツールなら/home/joyvanと出力される。\n\n\n\n\n\n\n最上位フォルダーの話\n\n\n\n　macOSとLinuxに限定した話であるが、最上位フォルダーは/であり、これはシステム上の最上位フォルダーである。個人レベルの最上位フォルダーはmacOSだと/Users/ユーザー名、JDCat分析ツールだと/home/joyvanである。そして、この個人レベルの最上位フォルダーは~/と表記することができる。Rコンソールでgetwd()を入力し、以上のように出力されれば個人レベルの最上位フォルダー（~/）が作業フォルダーになっている理解しても良い。ちなみに、WindowsはC:\\がシステム上の最上位フォルダーである。\n\n\n　もし、自分がこれから全ての作業をDay03という名のフォルダー内で完結するとする。つまり、保存するスクリプト（たとえば、Script.R）もDay03に保存し、図（たとえば、FigureA.png）はDay03のFigsフォルダーに、読み込む表形式データ（たとえば、Day03_Data.csv）もDay03の中のDataフォルダーに入れるとする。この場合、それぞれのファイルのパスはDay03/Script.R、Day03/Figs/FigureA.png、Day03/Data/Day03_Data.csvとなる（作業フォルダーが~/であるため、~/は省略可能）。全ての作業が同じフォルダー（とその下位フォルダー）内で行うとしたら、パス名にDay03も不要な気がする。そこで必要なのがRStudioのプロジェクト機能である。\n　RStudioでDay03というプロジェクトを作成すると、Day03フォルダーが自動的に生成され、Day03.Rprojというファイルも生成される。プロジェクトを最上位フォルダーに作成したのであれば、~/Day03/Day03.Rprojファイルが生成されるのである。ここでRStudioのFile &gt; Open ProjectでこのDay03.Rprojファイルを開くとRStudio画面の右上にプロジェクト名が表示され、作業フォルダーがDay03.Rprojが保存されているフォルダー、つまり~/Day03へ変更される（プロジェクトが開かれていな場合は「Project: (None)」と表示される）。実際、JDCat分析ツールでXXXという名前のプロジェクトを生成し、そのプロジェクトを開けば作業フォルダーは/home/joyvan/XXX/（=~/XXX/）になる（getwd()で確認可能）。これは大変便利な機能である。なぜなら作業フォルダーまでのパスは全て省略可能だからだ。これまでDay03/Script.R、Day03/Figs/FigureA.png、Day03/Data/Day03_Data.csvだったパスが、それぞれScript.R、Figs/FigureA.png、Data/Day03_Data.csvになる。\n　また、何らかの理由でDay03フォルダーの名前をDay05に変更したとしよう。もし、プロジェクト機能を使っていないのであれば、パスのDay03を全てDay05に変更する必要がある。しかし、プロジェクト機能を使っているのであれば、.Rprojファイルが存在するフォルダーが作業フォルダーになるため、そもそもパスにDay03は存在しない。つまり、修正不要ということだ。ちなみに、プロジェクトを一旦作成したら、そのプロジェクトのフォルダー名や.Rprojファイルの名前は自由に修正しても良いし、フォルダー名と.Rprojファイルの名前が一致しなくても良い。\n　以上の内容を住所と郵便の話で例えるとしよう。社内でも郵便物の行き来は頻繁に行われる。とりわけ面積が広く、キャンパスも複数ある大学なら尚更だ。たとえば、「大阪府吹田市山手町3-3-35 関西大学 ラーメン学部」の宋が「大阪府吹田市山手町3-3-35 関西大学 ラーメン研究支援課」の金に郵便を送る場合、同じ大学であるにも関わらず、住所を全て書くのは面倒なことであろう。ここで関西大学専用の郵便局を作れば問題は解決される（これは「学内便」と呼ばれる）。そうすれば差出人は「ラーメン学部　宋」、受取人は「ラーメン研究支援課　金」と書くだけで郵便物は届く。つまり、「大阪府吹田市山手町3-3-35 関西大学」は省略できる（同じ市区町村内の引っ越した際、転入・転出届けの住所欄に市区町村名までは省略できるのと同じ）。また、関西大学がなぜかキャンパスを沖縄に移転した場合を考えてみよう（もはや関西大学ではないが…）。学内便がなければ、郵便物の住所を全て「沖縄県〜」に変えなければならない。しかし、学内便が存在すればこれまで使ってきた「ラーメン学部　宋」という表記は有効であろう。\n　このようにRStudioのプロジェクト機能は必須といっても過言ではない。簡単な計算目的として使う場合は問題ないが、何かの分析をする時、授業の実習時、課題時には必ずRStudioの右上が「Project: (None)」になっていないことを確認しよう。\n\n\n\n\n\n\n絶対パスと相対パス\n\n\n\n　これまで紹介したパスの書き方で/（WindowsならC:\\）から始まるパスは、絶対パス（absolute path）またはフルパス（full path）と呼ばれる。これはファイル名を最上位フォルダーを起点に書く方法である。一方、/（WindowsならC:\\）で始まらないパスは相対パス（relative path）呼ばれ、ファイル名を作業フォルダーを起点に書く方法である。"
  },
  {
    "objectID": "intro/filesystem.html#本講義でおすすめするフォルダー構造",
    "href": "intro/filesystem.html#本講義でおすすめするフォルダー構造",
    "title": "ファイル・システム",
    "section": "4 本講義でおすすめするフォルダー構造",
    "text": "4 本講義でおすすめするフォルダー構造\n　プロジェクトを作成すれば、プロジェクトフォルダー内に以下のようなフォルダーを作成しよう。\n\n表形式のデータを読み込んだり、保存したりするのであればDataフォルダーをプロジェクトフォルダー内に作成する。\n\n.csv、.xlsx、.sav、.dtaのような表形式ファイルはDataフォルダーに入れる。\nデータを加工し、保存する場合はData/ファイル名.csvなどと指定する。\n\n図を作成し、保存する予定があれば、Figsフォルダーをプロジェクトフォルダー内に作成する。\n\n図を保存する場合、ファイルのパスをFigs/ファイル名.pngやFigs/ファイル名.pdfとする。\n\n\n　よく分からない場合はとりあえずプロジェクトフォルダー内にDataとFigsというフォルダーを作っておこう。ただし、.R、.qmdなどコードファイルはプロジェクトフォルダーの下位フォルダーに入れず、プロジェクトフォルダーの直に入れよう4。この場合、R Markdown / Quartoで作成された文書（.html、.pdfなど）は.Rmdや.qmdファイルと同じフォルダーに保存される（別途の設定をすれば別フォルダーに保存することも可能だが、そこまではしなくても良い）。"
  },
  {
    "objectID": "intro/filesystem.html#参考",
    "href": "intro/filesystem.html#参考",
    "title": "ファイル・システム",
    "section": "5 参考",
    "text": "5 参考\n　以下の内容も合わせて読むことを強く推奨する。\n\n宋財泫・矢内勇生.『私たちのR』の「ファイルシステム」"
  },
  {
    "objectID": "intro/faq.html",
    "href": "intro/faq.html",
    "title": "この授業の「あるある」",
    "section": "",
    "text": "ブラインドタッチ（キーボードを見ないでタイピングすること）は必須\n\n教員の画面、スライド、資料などを見ながらタイピングすることになるため、キーボードを見る暇はない\n\n1分間当たり150文字以上（英字）入力できること\n\nhttps://manabi-gakushu.benesse.ne.jp/gakushu/typing/eigonyuryoku.html\n200字以上が望ましい"
  },
  {
    "objectID": "intro/faq.html#タイピングの速度について",
    "href": "intro/faq.html#タイピングの速度について",
    "title": "この授業の「あるある」",
    "section": "",
    "text": "ブラインドタッチ（キーボードを見ないでタイピングすること）は必須\n\n教員の画面、スライド、資料などを見ながらタイピングすることになるため、キーボードを見る暇はない\n\n1分間当たり150文字以上（英字）入力できること\n\nhttps://manabi-gakushu.benesse.ne.jp/gakushu/typing/eigonyuryoku.html\n200字以上が望ましい"
  },
  {
    "objectID": "intro/faq.html#データが読み込めない",
    "href": "intro/faq.html#データが読み込めない",
    "title": "この授業の「あるある」",
    "section": "データが読み込めない",
    "text": "データが読み込めない\n\n99.999%の確率でパスの指定が間違っている（スペルミスを含む）。\nファイルシステムの理解がない場合は、プロジェクト機能を使おう。\n\nというか、必ずプロジェクト機能を使おう。ファイルシステムを理解している宋でもプロジェクト機能は常に使用している。"
  },
  {
    "objectID": "intro/faq.html#エラーが出た",
    "href": "intro/faq.html#エラーが出た",
    "title": "この授業の「あるある」",
    "section": "エラーが出た!",
    "text": "エラーが出た!\n\nエラーメッセージは読む。メッセージを読んで、その原因を特定しよう。\n\n何も考えずに教員やTAを呼ぶと、独学する時に同じエラーが出ても解決できなくなる。\n\nスペルミス\n\n最もよくあるミス。\n大文字と小文字の区分は厳格（Rに限らず全てのプログラミング言語共通）\nフォントサイズを大きくすると、スペルミスを発見しやすくなる。\n\nカッコ、コンマ忘れ\n\nカッコは開けたら必ず閉じる。"
  },
  {
    "objectID": "intro/faq.html#コードの実行順番",
    "href": "intro/faq.html#コードの実行順番",
    "title": "この授業の「あるある」",
    "section": "コードの実行順番",
    "text": "コードの実行順番\nData.csvという名の表形式データがあり、var1、var2、var3、var4、var5という列で構成されているとしよう。このデータを用いて以下のような処理を行うとする。\n\nData.csvを読み込みdfという名のオブジェクトとして格納する。\ndfからvar1、var3、var4列のみ残し、dfを上書きする。\ndfにsum_3_4という新しい列を追加し、その値はvar3とvar4の和とする。\n\n　以上の処理を行うコードは以下の通りである（つまり、以下のコードが正解例）。\n\n\n\n正しいコード\n\n# Block 1\ndf &lt;- read_csv(\"Data.csv\")\n\n# Block 2\ndf &lt;- df %&gt;%\n  select(var1, var3, var4)\n\n# Block 3\ndf &lt;- df %&gt;%\n  mutate(sum_3_4 = var3 + var4)\n\n\n　しかし、2番目のブロックで以下のような入力ミスがあったとしよう。\n\n\n\n間違ったコード\n\n# Block 1\ndf &lt;- read_csv(\"Data.csv\")\n\n# Block 2（var4がvar3になっている）\ndf &lt;- df %&gt;%\n  select(var1, var2, var3)\n\n# Block 3\ndf &lt;- df %&gt;%\n  mutate(sum_3_4 = var3 + var4)\n\n\n　この場合、3番目のブロックは正しく実行されない。なぜなら、2ブロック目においてvar4とvar5列を除外したため、3ブロック目のコードを実行する時点でdfにvar4列がないからだ。ここで2ブロック目のコードを正しいコードへ修正したとしよう（var1, var2, var3をvar1, var3, var4に修正）。そして2ブロック目のコードを実行する。どうなるだろうか。\n　結果はエラーである。最初はうまく行ったものの、なぜか今回はエラーが出る。これはなぜだろうか。既に我々はdfからvar1、var2、var3列のみを抽出した。つまり、今のdfにはvar4とvar5列は存在しない。そこでvar1、var3、var4を抽出するコードを実行してもvar4列が存在しないからエラーが発生する。\n　対処法は簡単だ。dfをvar1、var2、var3、var4、var5が全て入っている状態に戻すことだ。したがって、以上の例だと、2ブロック目のコードを修正した場合は1ブロック目から改めて実行する必要がある。\n　以上の話を難しく感じる場合は、コードミスを修正した後はコードを1行目から再実行することをおすすめする。"
  },
  {
    "objectID": "HW/Micro_HW14.html",
    "href": "HW/Micro_HW14.html",
    "title": "「ミクロ政治データ分析実習」第14回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てQuartoを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。提出するファイルはRenderから生成された.htmlファイルだ。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Micro_HW14.qmd）、課題用データ（Micro_HW14.csv）\n\nStep2: JDCat分析ツールのRStudioを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Micro_HW14.qmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Micro_HW14.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Micro_HW14.qmd）を開き、一旦、Renderしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\nチャンク内の# この行を削除し、コードを入力の部分を削除し、コードを入力する。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Micro_HW11.html",
    "href": "HW/Micro_HW11.html",
    "title": "「ミクロ政治データ分析実習」第11回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てQuartoを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。提出するファイルはRenderから生成された.htmlファイルだ。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Micro_HW11.qmd）、課題用データ1（Micro_HW11_1.csv）、課題用データ2（Micro_HW11_2.csv）\n\nStep2: JDCat分析ツールのRStudioを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Micro_HW11.qmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Micro_HW11_1.csvとMicro_HW11_2.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Micro_HW11.qmd）を開き、一旦、Renderしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\nチャンク内の# この行を削除し、コードを入力の部分を削除し、コードを入力する。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Micro_HW05.html",
    "href": "HW/Micro_HW05.html",
    "title": "「ミクロ政治データ分析実習」第5回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイルをダウンロードする。\n\n課題用ファイル（Micro_HW05.qmd）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダーに課題用ファイル（Micro_HW05.qmd）をアップロードする。\nStep4: アップロードしたファイル（Micro_HW05.qmd）を開き、一旦、Renderしてみる。\nStep5: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示  修正箇所の表示\nStep6: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\nStep7: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep8: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Macro_HW13.html",
    "href": "HW/Macro_HW13.html",
    "title": "「マクロ政治データ分析実習」第13回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てR Markdownを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.Rmdファイルではない!!）\n\n\n\n　たまに.Rmdファイルを提出したり、あるいは.Rmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Macro_HW13.Rmd）、課題用データ（Macro_HW13.csv）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Macro_HW13.Rmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Macro_HW13.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.Rmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.Rmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Macro_HW13.Rmd）を開き、一旦、Knitしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Macro_HW10.html",
    "href": "HW/Macro_HW10.html",
    "title": "「マクロ政治データ分析実習」第10回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てQuartoを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。提出するファイルはRenderから生成された.htmlファイルだ。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Macro_HW10.qmd）、課題用データ（Macro_HW10.csv）\n\nStep2: JDCat分析ツールのRStudioを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Macro_HW10.qmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Macro_HW10.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Macro_HW10.qmd）を開き、一旦、Knitしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Macro_HW04.html",
    "href": "HW/Macro_HW04.html",
    "title": "「マクロ政治データ分析実習」第4回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てR Markdownを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.Rmdファイルではない!!）\n\n\n\n　たまに.Rmdファイルを提出したり、あるいは.Rmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Macro_HW04.Rmd）、課題用データ（Macro_HW04.csv）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Macro_HW04.Rmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Macro_HW04.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.Rmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.Rmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Macro_HW04.Rmd）を開き、一旦、Knitしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Macro_HW07.html",
    "href": "HW/Macro_HW07.html",
    "title": "「マクロ政治データ分析実習」第7回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てR Markdownを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.Rmdファイルではない!!）\n\n\n\n　たまに.Rmdファイルを提出したり、あるいは.Rmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Macro_HW07.Rmd）、課題用データ（Macro_HW07.csv）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Macro_HW07.Rmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Macro_HW07.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.Rmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.Rmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Macro_HW07.Rmd）を開き、一旦、Knitしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Macro_HW12.html",
    "href": "HW/Macro_HW12.html",
    "title": "「マクロ政治データ分析実習」第12回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てR Markdownを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.Rmdファイルではない!!）\n\n\n\n　たまに.Rmdファイルを提出したり、あるいは.Rmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Macro_HW12.Rmd）、課題用データ（Macro_HW12.csv）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Macro_HW12.Rmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Macro_HW12.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.Rmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.Rmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Macro_HW12.Rmd）を開き、一旦、Knitしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Micro_Final.html",
    "href": "HW/Micro_Final.html",
    "title": "期末テスト実施要領",
    "section": "",
    "text": "注意!\n\n\n\n以下の内容は現在の予定であり、7月14日の内容で確定する。"
  },
  {
    "objectID": "HW/Micro_Final.html#概要",
    "href": "HW/Micro_Final.html#概要",
    "title": "期末テスト実施要領",
    "section": "概要",
    "text": "概要\n\n日時: 2023年7月20日（木）4限（14時40分〜16時10分）\n\n宋から開始の合図があれば開始\n\n場所: TC302教室（指定席; 座席表は授業日までにLMSで公開する）\n持参物: 学生証のみ。\n\n学生証は宋/TAがいつでも確認できるように机の上に置くこと\n\n持ち込み: 可（インターネット/書籍/ノートなど使用可能）\n\n携帯は使用禁止（不正行為とみなす）\n持ち込みPC不可（PCは大学のPCを使用）\n普段使っているキーボード、マウスなどの入力装置があれば持ち込み可\n\n宋/TAは問題そのものに関する質問（問題の誤りなど）以外、一切受け付けない\n\nエラーメッセージへの対処もテストの一部\n\n不正行為厳禁"
  },
  {
    "objectID": "HW/Micro_Final.html#実施手順",
    "href": "HW/Micro_Final.html#実施手順",
    "title": "期末テスト実施要領",
    "section": "実施手順",
    "text": "実施手順\n本講義の課題と同じ形式\n\nStep1: LMSから期末テスト用ファイル一式をダウンロードする。\n\n期末テスト用ファイル（Micro_Final.qmd）\n期末テスト用データ（Micro_Final_Data.csv）\nサンプルファイル（Micro_Final_Sample.html）\n\nStep2: NIIオンライン分析システムを起動し、期末テスト用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに期末テスト用ファイル（Micro_Final.qmd）をアップロードする。\nStep5: Dataフォルダーに期末テスト用データ（Micro_Final_Data.csv）をアップロードする。\n\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　期末テスト用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、期末テスト用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、Knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\n\nStep6: 期末テスト用ファイル（Micro_Final.qmd）を開き、一旦、Knitしてみる。\nStep7: サンプルファイル（Micro_Final_Sample.html）を確認する。\nStep8: サンプルファイルと同じ結果が得られるように期末テスト用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードしたファイルを開き、正しくダウンロードされているかを確認すること。また、提出したファイルはLMSの「マイレポート」から再ダウンロードできる。不安な人は提出後、再確認すること。\n\n\n\n\n\n\n\n期末テストを途中で中断し、再開した場合は…（持ち帰りの場合など）\n\n\n\n　期末テストを途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が期末テスト用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Micro_Final.html#期末テストの時間について",
    "href": "HW/Micro_Final.html#期末テストの時間について",
    "title": "期末テスト実施要領",
    "section": "期末テストの時間について",
    "text": "期末テストの時間について\n\n時間内（〜16:20）の完成を目指す。\n時間内に完成した場合\n\n4限中に提出物（.htmlファイル）をLMSに提出\n\n時間内に完成できなかった場合\n\n4限中に途中経過の提出物（.htmlファイル）をLMSに提出\n\n4限中に7問以上に回答すること（6問までの回答は未提出とみなす）\n\n持ち帰り後、そのまま引き続き、残りの問題に取り組む。\n再提出窓口に提出\n\n再提出の期限は授業日当日の23時59分\n\n\n持ち帰り解答の扱いについて\n\n（1）4限中に提出した問題に対して採点を行う。\n（2）持ち帰り解答は5割減点。\n\n4限中に提出した回答以降の回答のみが対象\nつまり、4限中に提出した回答を修正しても、これらは反映されない。\n\n期末テストの点数は(1) + (2)とする。"
  },
  {
    "objectID": "HW/Micro_Final.html#成績の例",
    "href": "HW/Micro_Final.html#成績の例",
    "title": "期末テスト実施要領",
    "section": "成績の例",
    "text": "成績の例\n\n期限内に18点相当を提出し、15点正解（100%反映）\n期限外に12点相当を提出し、9点正解（50%反映）\n15点 + (9点 \\(\\times\\) 0.5) = 19.5点\n各問題の配点は難易度に応じて調整される。"
  },
  {
    "objectID": "HW/Micro_Final.html#注意事項",
    "href": "HW/Micro_Final.html#注意事項",
    "title": "期末テスト実施要領",
    "section": "注意事項",
    "text": "注意事項\n\n指定された座席でテストを受ける。\n遅刻した場合でも、受験時間の延長はない。余裕を持って大学に来ること。\n持ち帰りの場合でも、4限中に7問以上回答すること。7問未満の回答を提出した場合は不可とする。\n\nただし、7問全問正解である必要はない。\n\n持ち帰りの場合、4限中に提出した回答を修正することはできるが、採点には反映されない。持ち帰り分は、4限中に提出した回答以降の回答のみが採点対象となる。\n\n必要に応じて既に提出した回答の修正は必要となる。たとえば、問題8までの回答をしたとする。ここで問題7の回答が不正解の場合、問題8以降はコードが正しくても結果が異なる可能性がある。この場合、持ち帰って問題7を修正する必要があろう。ただし、採点（持ち帰り分）の対象は問題9からである。\n\n持ち帰りの場合、再提出の期限は授業日当日の23時59分\n宋/TAは問題そのものに関する質問（問題の誤り、NIIシステムの不具合など）以外、一切受け付けない\n\nエラーメッセージへの対処もテストの一部\n全員が同じ環境のNIIオンライン分析システムを使用しているため、受験者全員に共通する不具合以外は対応しない。つまり、他の人にはエラーが発生せず、自分だけエラーが出たということはシステムの不具合でなく、自分のコードが間違っていることを意味する。\n\n提出物はKnitした.htmlファイルである。.htmlファイルを正しくない方法（マウス右クリックでダウンロードするなど）でダウンロードした場合、コードと結果が含まれていない白紙のページとなる。提出する前に必ずファイルを開いてみて確認すること。間違ったファイルを提出しても再提出は認めない。"
  },
  {
    "objectID": "HW/Micro_HW10.html",
    "href": "HW/Micro_HW10.html",
    "title": "「ミクロ政治データ分析実習」第10回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てQuartoを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。実際、毎年これに該当するケースがある。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Micro_HW10.qmd）、課題用データ（Micro_HW10.csv）\n\nStep2: NIIオンライン分析システムを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Micro_HW10.qmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Micro_HW10.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Micro_HW10.qmd）を開き、一旦、Renderしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "HW/Micro_HW13.html",
    "href": "HW/Micro_HW13.html",
    "title": "「ミクロ政治データ分析実習」第13回課題",
    "section": "",
    "text": "課題の取り組み方が分からない!\n\n\n\n\n本サポートページのRの使い方 &gt; 課題の取り組み方、または関大LMS内の解説動画を参照する。\n本講義の課題は全てQuartoを使用する。使い方は「ミクロ政治データ分析実習」の第5回を参照すること。\n分からないことがあったら、必ず宋・TAと相談すること。\n\n\n\n\n\n\n\n\n\n提出ファイルは.htmlファイル（.qmdファイルではない!!）\n\n\n\n　たまに.qmdファイルを提出したり、あるいは.qmdファイルの拡張子を.htmlに変更して提出する場合があるが、この場合、未提出とみなす。提出するファイルはRenderから生成された.htmlファイルだ。提出する前に、提出するファイルを自分のPCで開き、サンプルファイルと同じ形式になっているかを確認すること。自分がLMSに提出したファイルはLMSの「マイレポート」からダウンロードすることができるため、もう一度確認してみるのも良し。\n\n\nStep1: LMSから課題用ファイル一式をダウンロードする。\n\n課題用ファイル（Micro_HW13.qmd）、課題用データ（Micro_HW13.csv）\n\nStep2: JDCat分析ツールのRStudioを起動し、課題用のプロジェクトを作成する。\nStep3: プロジェクト・フォルダー内にDataフォルダーを作成する。\nStep4: プロジェクト・フォルダーに課題用ファイル（Micro_HW13.qmd）をアップロードする。\nStep5: Dataフォルダーに課題用データ（Micro_HW13.csv）をアップロードする。\n\n\n\n\n\n\nファイルのアップロード先に注意!\n\n\n\n　課題用ファイル（.qmd）はプロジェクト・フォルダ―の直にアップロードし、課題用データ（.csv）はプロジェクト・フォルダ―内のDataフォルダーに入れること。多くの履修者がDataフォルダーに.qmdファイルと.csvファイルを入れているが、この場合、knitが出来ない場合がある（自分がファイルシステムに詳しいならコード内のパスを修正して対応することも可能）。\n\n\nStep6: 課題用ファイル（Micro_HW13.qmd）を開き、一旦、Renderしてみる。\nStep7: 以下のボタンをクリックし、サンプルファイルを確認する。\n サンプルファイルの表示\nStep8: サンプルファイルと同じ結果が得られるように課題用ファイルを修正する。\n\n提出者の学籍番号・氏名の修正を忘れないこと。\nチャンク内の# この行を削除し、コードを入力の部分を削除し、コードを入力する。\n\nStep9: 完成したら出力物（.htmlファイル）を自分のPCにダウンロードする。\nStep10: ダウンロードしたファイルをLMSに提出する。提出する前にダウンロードした.htmlファイルを開き、正しくダウンロードされているかを確認すること。\n\n\n\n\n\n\n課題を途中で中断し、再開した場合は…\n\n\n\n　課題を途中で中断し、再開した場合、RStudioの右上の「Project:」欄が「(None)」になっているか確認すること。「(None)」のまま、あるいはプロジェクト名が課題用プロジェクト名と一致しない場合はメニューの File &gt; Open Project から開くこと。プロジェクトの開き方は本サポートページの Rの使い方 &gt; プロジェクト管理 から確認できる。"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Political Science",
    "section": "",
    "text": "本ウェブサイトは関西大学総合情報学部「ミクロ政治データ分析実習」および「マクロ政治データ分析実習」のサポートページです。本ページはPC画面での閲覧を推奨します。"
  },
  {
    "objectID": "index.html#本ページにおけるコードと結果の表示について",
    "href": "index.html#本ページにおけるコードと結果の表示について",
    "title": "R for Political Science",
    "section": "本ページにおけるコードと結果の表示について",
    "text": "本ページにおけるコードと結果の表示について\n\nコードは以下のように背景に色が付けられている部分です。\n\n\nprint(\"Hello!\")\n\n\nコードの中で#で始まる内容はコメントであり、分析に影響を与えません。ただし、\"や'で囲まれた#はコメントではありません。また、行の途中から#が入る場合、#以降は実行されません。\n\n\n# Hello!を出力するコード\nprint(\"Hello!\")\n\n# \"や'内の#はコメントではない\nprint(\"この#はコメントではありません\")\n\nprint(\"Hello World!\") # Hello World!を出力\n\n\nコードの右端に表示される丸付き数字（、など）は各行の解説を意味する。数字部分にマウスのカーソルを乗せると解説が表示される。\n\n\ndf |&gt; \n1   select(ID, Col1:Col3, Col8) |&gt;\n2   filter(ID &lt;= 100) |&gt;\n   print(n = Inf)\n\n\n1\n\ndfからID列、Col1からCol3列、Col8列を抽出する。\n\n2\n\nIDの値が100以下の行を抽出する。\n\n\n\n\n\n出力結果は灰色の枠線で囲まれた領域です。\n\n\n\n[1] \"Hello!\"\n\n\n\nオブジェクト名は変数名や関数名()のように文中の色付き背景で示された部分です。\nパッケージ名は{}で囲みます。tidyverseパッケージの場合、{tidyverse}と表記します。\n\nただし、パッケージ名を{}で囲むのは一般的な表記ではありません（もちろん、囲む人も大勢にいます）。\n\n\n\n\n\n\n\n\nページ情報\n\n\n\n\n最終更新日: 2023年06月16日\n開発環境\n\nmacOS Ventura 13.4\nFirefox 114.0.1\nR version 4.3.0 (2023-04-21)\nRStudio 2023.06.0+421\nQuarto 1.4.117\nR package {quarto} 1.2"
  },
  {
    "objectID": "intro/file.html",
    "href": "intro/file.html",
    "title": "ファイル管理",
    "section": "",
    "text": "「ファイル・システム」も合わせて読もう！\n\n\n\n　本ページの内容を読む前に、ファイルシステムの詳細などを解説した「ファイル・システム」も合わせて読むことを強く推奨する。\nフォルダー/ファイルの管理はJupyterHub内でも、RStudio内でもできるが、ここではRStudio側で管理する方法を紹介する。RStudioを起動し、作業するプロジェクトを開き、Filesペインを確認しよう。RStudioを経由したフォルダー/ファイルの管理は全てFilesペイン上で行われる。"
  },
  {
    "objectID": "intro/file.html#フォルダーの管理",
    "href": "intro/file.html#フォルダーの管理",
    "title": "ファイル管理",
    "section": "フォルダーの管理",
    "text": "フォルダーの管理\n　講義、または課題ごとのプロジェクトを作ったら、JupyterHubにプロジェクトのフォルダーが生成される。各プロジェクトごとにRスクリプト、Markdownファイル、出力物（図、文書など）が管理できるが、プロジェクト内のファイルが多くなる可能性もある。この場合、プロジェクト・フォルダー内に更に下位フォルダーを作成し、ファイルを管理した方が望ましい。\n\nフォルダーの作成\n手順1: 現在、Filesペインで表示されているフォルダーがプロジェクトの最上位フォルダーであることを確認する。「Home &gt; プロジェクト名」と表示されていれば問題ない。\n\n\n\n\n\n手順2: New Folderをクリックする。\n\n\n\n\n\n手順3: 作成するフォルダーの名前を入力する。ここではデータなどを集めておくDataという名のフォルダーを作成する。\n\n\n\n\n\n手順4: 正しくフォルダーが作成されているかを確認する。\n\n\n\n\n\n\n\n\n\n\n\nフォルダー名の付け方\n\n\n\nフォルダー名にはローマ字、数字のみを使おう。スペースもなるべく使わず、空白を入れたい場合はスペースの代わりにアンダースコア（_）を使おう。\n\n\n\n\n\n\n\n\nフォルダー in フォルダー\n\n\n\nフォルダー内に更にフォルダーを作成することもできる。一つのフォルダー内にファイルが多すぎる場合、更にフォルダー分けして管理した方が効率的だろう。\n\n\n\n\nフォルダーの削除\n\n\n\n\n\n\nフォルダーの削除は慎重に!\n\n\n\nフォルダーを削除するとフォルダー内のファイルも全て削除される。削除する前には慎重にフォルダー内のファイルを確認しておくこと。\n\n\n手順1: 削除するフォルダーの左にチェックを付け、Deleteをクリックする。\n\n\n\n\n\n手順2: Yesをクリックする。"
  },
  {
    "objectID": "intro/file.html#ファイルの管理",
    "href": "intro/file.html#ファイルの管理",
    "title": "ファイル管理",
    "section": "ファイルの管理",
    "text": "ファイルの管理\n　分析に使用するデータセットを自分のPCにダウンロードしてもそのままJDCat分析ツールで使うことはできない。JDCat分析ツールで使用するためには、ファイルをアップロードする必要がある。これはデータだけでなく、本講義の課題用ファイルについても同様である。\n\nファイルのアップロード\n手順1: ファイルをアップロードしたいフォルダーへ移動する。\n\n下位フォルダーへの移動: フォルダー名をクリックする。\n上位フォルダーへの移動: 「..」をクリックするか、パスが表示されているバーで移動先をクリックする。\n\n手順2: ファイルのアップロード先が正しいかを確認し、Uploadをクリックする。\n\n以下の例はHomework_01プロジェクト・フォルダー内のDataフォルダーがアップロード先である。\n\n\n\n\n\n\n手順3: File to upload:でアップロードしたいファイルを選択する。\n\n\n\n\n\n\n\n\n\n\n\n複数のファイルをアップロードしたい場合\n\n\n\nRStudio上でファイルは一度の一つしかアップロードできない。複数のファイルを同時にアップロードしたい場合は、この作業を繰り返すか、JupyterHubのホーム画面でアップロードする必要がある。\n\n\n手順4: アップロードするファイルをダブルクリックする。\n\n以下ではPrev_Vote.csvというファイルをアップロードする例である。\n\n\n\n\n\n\n手順5: OKをクリックする。\n\n\n\n\n\n手順6: 正しくファイルがアップロードされているかを確認する。\n\n\n\n\n\n\n\nファイルのダウンロード\n　作成した図表をLaTex/Microsoft Word/Powerpoint/Pages/Keynoteなどで使うためには、その図表を自分のPCにダウンロードする必要がある。同様に、課題の出力物をLMSに提出するためにも、出力物を一旦自分のPCにダウンロードしてから提出する必要がある。\n\n\n\n\n\n\n複数ファイルのダウンロード\n\n\n\nアップロードは一度ごとに一つのファイルしかアップロードできないが、ダウンロードは複数のファイルを同時にダウンロードできる。ただし、個別のファイルがダウンロードされるのではなく、一つのファイルととして圧縮（zip形式）されてからダウンロードされる。ダウンロード後はファイルを解凍すること。\n\n\n手順1: ダウンロードするファイル名の左にチェックを付ける。\n\n以下ではMicro_HW01.htmlというファイルをダウンロードする例である。\n\n\n\n\n\n\n手順2: More &gt; Export…をクリックする。\n\n\n\n\n\n手順3: Downloadをクリックする。\n\n\n\n\n\n\n\n\n\n\n\n課題の出力物は提出する前に必ず確認を!!\n\n\n\nLMSで課題を提出するためには出力物を提出する必要があるが、提出する前にダウンロードしたファイルを必ず確認しよう。間違ったファイルを提出した場合でも提出期限内なら差し替え可能だが、期限が過ぎた場合、理由を問わず差し替えは認めない。また、間違ったファイルが提出されたことを宋が個別に知らせることもないため注意しよう。\n\n\n\n\nファイルの削除\nフォルダーの削除と同じ手順で削除できる。\n\n\n\n\n\n\nファイルの場所が分からない\n\n\n\nFileペインではファイルの一覧が確認できる。しかし、これらのファイルがどのフォルダーに入っているかが分からない場合もあろう。この場合、Fileペインの上段バーを確認すること。そこに現在表示されているファイルのパスが表示されている。「Home&gt;プロジェクト名」と表示されている場合、Fileペインに見えるファイルはプロジェクト・フォルダ―直に入っていることを意味する（右上のプロジェクト名とFileペインのプロジェクト名が一致しているか確認すること）。これらのファイルのパスは\"ファイル名\"のみで良い。上段バーのパスが「Home&gt;プロジェクト名&gt;Data」になっている場合、表示されているファイルはプロジェクト・フォルダー内のDataフォルダーに入っていることを意味する。これらのファイルのパスは\"Data/ファイル名\"となる。"
  },
  {
    "objectID": "intro/homework.html",
    "href": "intro/homework.html",
    "title": "課題の取り組み方",
    "section": "",
    "text": "課題の取り組み方が分からない?\n\n\n\n　必ず宋と相談すること。"
  },
  {
    "objectID": "intro/homework.html#step1-課題ファイル一式の入手",
    "href": "intro/homework.html#step1-課題ファイル一式の入手",
    "title": "課題の取り組み方",
    "section": "Step1: 課題ファイル一式の入手",
    "text": "Step1: 課題ファイル一式の入手\n手順1: LMSの授業ページから「第XX回 課題資料」を選択する。\n\n以下の画面は2021年度のページである。\nタイトルは「第XX回 課題資料」でなく「第XX回 課題用ファイル」など変更される可能性もある。\n\n\n\n\n\n\n手順2: 通常、課題ファイルは2つであるが、1つのみ、または3つ以上の場合もある。それぞれの資料の「添付資料」クリックする。\n\n\n\n\n\n手順3: 新しいウィンドウが表示される。ここでファイル名をクリックするとファイルがダウンロードされる。この作業を全ファイルに対して行うこと。"
  },
  {
    "objectID": "intro/homework.html#step2-課題ファイルのアップロード",
    "href": "intro/homework.html#step2-課題ファイルのアップロード",
    "title": "課題の取り組み方",
    "section": "Step2: 課題ファイルのアップロード",
    "text": "Step2: 課題ファイルのアップロード\n手順1: JDCat分析ツールへアクセスし、RStudioを起動する。\n手順2: 課題用のプロジェクトを作成する。プロジェクト名は任意だが、Homework_XXやHW_XXなど、分かりやすい名前を付けよう。\n手順3: ダウンロードしたファイルにデータ（.csvなど）がある場合、プロジェクト・フォルダー内にDataというフォルダーを作成する。\n手順4: ダウンロードしたファイルをアップロードする。課題用ファイル（.qmdファイル）はプロジェクト・フォルダー直に、課題用データ（.csv、.xlsxなど）は手順3で作成したDataにアップロードする。\n\n\n\n\n\n\nプロジェクト、フォルダー、ファイルの管理\n\n\n\n　以下のページを参照すること。\n\nファイル・システム\nプロジェクト管理\nファイル管理"
  },
  {
    "objectID": "intro/homework.html#step3-頑張る",
    "href": "intro/homework.html#step3-頑張る",
    "title": "課題の取り組み方",
    "section": "Step3: 頑張る",
    "text": "Step3: 頑張る\n　一部の課題を除き、本講義の課題は本サポートページの「課題」メニューに掲載されている画面と同じ結果が得られるようにコードを書くことである。\n\n\n\n\n\n\n学籍番号と名前を忘れずに!\n\n\n\n　課題用ファイル（.qmd）の2行目には「情20-0012 関大太郎」と名前が記入されている。課題に取り組む前にまず学籍番号と名前を修正しよう。毎年、関大太郎と関大花子さんから提出された課題が散見されるが、この場合、課題未提出とみなす。むろん、自分の名前が関大太郎/関大花子なら学籍番号のみ修正しても良い。\n\n\n　一部の課題を除き、履修者がやることは「学籍番号と氏名の修正」と「チャンク（chunk）内にコードを入力すること」、そして最後に「Knit」することだけである。チャンク内には# ここにコードと既に何かが書いてあるが、この# ここにコードの行は消してからコードを書くこと。あっても減点にはならない（印象は悪くなるかも知れない）。"
  },
  {
    "objectID": "intro/homework.html#step4-出力物のダウンロード",
    "href": "intro/homework.html#step4-出力物のダウンロード",
    "title": "課題の取り組み方",
    "section": "Step4: 出力物のダウンロード",
    "text": "Step4: 出力物のダウンロード\n　本講義の課題は一部を除き、成果として.htmlファイルを提出する。Knit後のHTMLファイルは元のqmdファイル名.htmlである。こちらのファイルをダウンロードしよう。.qmdも一緒にダウンロードして良いが、指定された形式のファイルを提出すること。.htmlファイルを提出しなければならないのに、.qmdファイルを提出した場合は未提出とみなす。\n\n\n\n\n\n\n右クリックしてダウンロードは厳禁!!!\n\n\n\n　出力物のダウンロード方法はファイル管理を参考すること。JupyterHubのホーム画面でファイルを右クリックして保存することは絶対にしないこと。開いてみれば分かるが、なんの情報もない（ほぼ）空っぽのファイルがダウンロードされる。提出期限が過ぎてから「知りませんでした！ごめんなさい！てへっ」と言われても、宋は「そうか、残念！てへっ」としか言わないので、ダウンロードしたファイルは必ず一回自分で開いてみよう。"
  },
  {
    "objectID": "intro/homework.html#step5-提出",
    "href": "intro/homework.html#step5-提出",
    "title": "課題の取り組み方",
    "section": "Step5: 提出",
    "text": "Step5: 提出\n手順1: LMSの授業ページから「第XX回 課題提出窓口」をクリックする。\n\n\n\n\n\n手順2: 指定された形式のファイルを添付し、「レポート提出」クリックする。\n\n提出されたら「202X-XX-XX XX:XX:XX にファイル xxxxxxxx が提出済みです。」と表示される。ここまでできたら終了ボタンをクリックする。\n\n\n\n\n\n\n\n\n\n\n\n\n課題がちゃんと提出されているか不安です…\n\n\n\n　自分が提出した課題はLMSの「マイレポート」から確認できる。\n\n\n\n\n\n　以下のように自分が提出した課題のリストが表示される。提出物のダウンロードもできるため、ファイルが問題なくアップロードされているかも確認できる。"
  },
  {
    "objectID": "intro/packages.html",
    "href": "intro/packages.html",
    "title": "パッケージ",
    "section": "",
    "text": "Rには様々な関数（functions）が提供されている。算術平均値を求めるmean()、合計を求めるsum()、線形回帰分析を行うlm()、平均値の検定を行うt.test()などがあり、全てを列挙することはできない。しかし、データ分析の技術は日々発展し、Rがデフォルトで提供する関数では不可能ではないが、かなり長いコードが必要な分析を使わざる得ないケースもあろう。Rは開発元だけでなく、誰でも関数を作ることができる。通常なら数百行のコードが必要な分析を一行のコードで実行可能とする関数を多くのRユーザーが作ってきた。これらの関数を集めたのがパッケージである。Rにはグラフ作成に特化したパッケージ、機械学習に特化したパッケージ、テキスト分析に特化したパッケージなど、数千のパッケージが開発されている。このパッケージの豊富さがRの最大のメリットでもある。誰かが新しい分析手法を提案したら、数日内、あるいはその手法が論文として出版される前からRパッケージとして公開されるケースが多い。\n　Rの内蔵関数は料理における包丁のようなものである。包丁があれば理論上、食材を粉々にすることはできよう。料理の達人であれば、問題ないかも知れないが、我々のような一般人では時間もかかるし、途中でミスをおかすかも知れない。一方、ミキサーを使えばだれても簡単に食材を粉々にすることも出来るし、（ミキサーが不良でないなら）ミスの恐れもほぼない。このミキサーがRのパッケージのようなものだ。ミキサーとRパッケージの違いは、ミキサーの入手には金がかかる一方、Rパッケージは無料で入手できる点だ。"
  },
  {
    "objectID": "intro/packages.html#パッケージとは",
    "href": "intro/packages.html#パッケージとは",
    "title": "パッケージ",
    "section": "",
    "text": "Rには様々な関数（functions）が提供されている。算術平均値を求めるmean()、合計を求めるsum()、線形回帰分析を行うlm()、平均値の検定を行うt.test()などがあり、全てを列挙することはできない。しかし、データ分析の技術は日々発展し、Rがデフォルトで提供する関数では不可能ではないが、かなり長いコードが必要な分析を使わざる得ないケースもあろう。Rは開発元だけでなく、誰でも関数を作ることができる。通常なら数百行のコードが必要な分析を一行のコードで実行可能とする関数を多くのRユーザーが作ってきた。これらの関数を集めたのがパッケージである。Rにはグラフ作成に特化したパッケージ、機械学習に特化したパッケージ、テキスト分析に特化したパッケージなど、数千のパッケージが開発されている。このパッケージの豊富さがRの最大のメリットでもある。誰かが新しい分析手法を提案したら、数日内、あるいはその手法が論文として出版される前からRパッケージとして公開されるケースが多い。\n　Rの内蔵関数は料理における包丁のようなものである。包丁があれば理論上、食材を粉々にすることはできよう。料理の達人であれば、問題ないかも知れないが、我々のような一般人では時間もかかるし、途中でミスをおかすかも知れない。一方、ミキサーを使えばだれても簡単に食材を粉々にすることも出来るし、（ミキサーが不良でないなら）ミスの恐れもほぼない。このミキサーがRのパッケージのようなものだ。ミキサーとRパッケージの違いは、ミキサーの入手には金がかかる一方、Rパッケージは無料で入手できる点だ。"
  },
  {
    "objectID": "intro/packages.html#インストール",
    "href": "intro/packages.html#インストール",
    "title": "パッケージ",
    "section": "インストール",
    "text": "インストール\n　Rには数万以上のパッケージが存在し、Rをインストールするだけでも数十のパッケージが自動的にインストールされる。しかし、データ分析/ハンドリング/可視化の手法は日々発展しており、R内蔵パッケージだけでは対応が難しい (できないわけではない)。したがって、必要に応じて新しいパッケージを導入する必要があるが、パッケージのインストールするにはConsoleペインに以下のように入力する。\n\n\n\nCode 01\n\ninstall.packages(\"インストールするパッケージ名\")\n\n\n　前期の「ミクロ政治データ分析実習」では{tidyverse}パッケージのみ使用する予定である。ただし、本講義ようにセッティングされた環境を導入する場合、{tidyverse}は既に導入済みであるため、以下のコードは実行しなくても良い。\n\n\n\nCode 02\n\ninstall.packages(\"tidyverse\")"
  },
  {
    "objectID": "intro/packages.html#アップデート",
    "href": "intro/packages.html#アップデート",
    "title": "パッケージ",
    "section": "アップデート",
    "text": "アップデート\n　特定のパッケージをアップデートする方法はインストールと同じだが、一つ一つのパッケージが全て最新バージョンかどうかを確認するのは大変である。また、久々のアップデートで数十個のパッケージをアップデートする必要があるケースもあろう。この場合、RStudioの内蔵機能を使えば一瞬で更新可能なパッケージのリスト化、インストールができる。\n手順1: PackagesペインのUpdateをクリックする。\n\n\n\n\n\n手順2: アップデートしたいパッケージの左にチェックを付けるか、左下のSelect Allをクリックし、右下のInstall Updatesをクリックする。\n\n\n\n\n\n　インストール、またはアップデートの際、以下のようなメッセージが出力される場合がある。\n  There are binary versions available but the source versions\n  are later:\n      binary source needs_compilation\nterra 1.5-17 1.5-21              TRUE\nyaml   2.2.2  2.3.4              TRUE\n\nDo you want to install from sources the packages which need compilation? (Yes/no/cancel)\n　この場合、Consoleペイン上でYes、no、cancelのいずれかを入力してReturnキー (Enterキー)を押す必要がある。大文字と小文字は区別すること。どうしても最新のパッケージが欲しい場合はYesを入力すれば良いが、インストールに時間がかかる場合がある。一方、noを入力した場合は、若干古いバージョンがインストールされるが、インストールに必要な時間が短いため、基本的にはnoでも問題ないだろう。cancelを入力した場合はアップデートが全てキャンセルされる。\n\n\n\n\n\n\nインストールは1回でOK、読み込みは毎回必要\n\n\n\n　Rを削除して再インストールしたり、（クラウド版のRStudioなら）分析環境を新しく立ち上げない限り、パッケージのインストールは1回で十分だ。しかし、library()関数でパッケージを読み込む作業は、R（RStudio）を開く度に行う必要がある。つまり、読み込んだRパッケージはRを終了すると一旦外されることとなり、改めてRを開いたらもう一度読み込む必要がある。"
  },
  {
    "objectID": "intro/packages.html#教科書",
    "href": "intro/packages.html#教科書",
    "title": "パッケージ",
    "section": "教科書",
    "text": "教科書\n『私たちのR』の第5章「Rパッケージ」: https://www.jaysong.net/RBook/packages.html"
  },
  {
    "objectID": "intro/rstudio.html",
    "href": "intro/rstudio.html",
    "title": "RStudioの設定",
    "section": "",
    "text": "RStudioはそのままでも使えるが、少しカスタマイズするとより使い勝手が良くなる。RStudioのカスタマイズ画面はTools &gt; Global Optionsをクリックすることで表示される。\n以下の設定はJDCat分析ツールで使用可能なRStudio最新版 (RStudio Server 2022.12.0+353)の設定であり、宋の設定と同じである。"
  },
  {
    "objectID": "intro/rstudio.html#general",
    "href": "intro/rstudio.html#general",
    "title": "RStudioの設定",
    "section": "1 General",
    "text": "1 General\n\n1.1 Basicタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nDefault working directory (when not in a project)\n~\n\n\nRestore most recently opened project at startup\n\n\n\nRestore previously open source documents at startup\n\n\n\nRun Rprofile when resuming suspended session\n\n\n\nRestore .RData into workspace at startup\n\n\n\nSave work space to .Rdata on exit\nNever\n\n\nAlways save history (even when not saving .RData)\n\n\n\nRemove duplicate entries in history\n\n\n\nWrap around when navigating to previous/next tab\nチェック\n\n\n\n\n\n1.2 Graphicsタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nBackend\nAGG\n\n\nAntialising\n(defualt)"
  },
  {
    "objectID": "intro/rstudio.html#code",
    "href": "intro/rstudio.html#code",
    "title": "RStudioの設定",
    "section": "2 Code",
    "text": "2 Code\n\n2.1 Editingタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nInsert spaces for tab\nチェック\n\n\nTab width\n2 or 4\n\n\nAuto-detect code indentation\nチェック\n\n\nInsert matching parens/quotes\nチェック\n\n\nUse native pipe operator\nチェック\n\n\nAuto-indent code after paste\nチェック\n\n\nVertically align arguments in auto-indent\nチェック\n\n\nSoft-wrap R source files\nチェック\n\n\nContinue comment when inserting new line\n\n\n\nEnable hyperlink highlighting in editor\nチェック\n\n\nEditor scroll speed sensitivity\n100\n\n\nSurround selection on text insertion\nQuotes & Brackets\n\n\nKeybindings\nDefault\n\n\nFocus console after excuting from source\n\n\n\nCtrl + Enter excutes\nMulti-line R statement\n\n\nEnable code snippets\nチェック\n\n\n\n\n\n2.2 Displayタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nHighlight selected word\nチェック\n\n\nHighlight selected line\nチェック\n\n\nShow line numbers\nチェック\n\n\nRelative line numbers\n\n\n\nShow margin\n\n\n\nMargin column\n\n\n\nShow whitespace characters\n\n\n\nIndentation guides\n\n\n\nBlinking cursor\nチェック\n\n\nAllow scroll past end of document\n\n\n\nAllow drag and drop of text\n\n\n\nFold Style\nStart and End\n\n\nHighlight R function calls\nチェック\n\n\nEnable preview of names and hexadecimal colors\nチェック\n\n\nRainbow parentheses\nチェック\n\n\n\n\n\n2.3 Savingタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nEnsure that source files end with newline\n\n\n\nStrip trailing horizontal whitespace when saving\n\n\n\nRestore last cursor position when opening file\n\n\n\nLine ending conversion\nPlatform Native\n\n\nDefault text encoding\nUTF-8\n\n\nAlways save R script before sourcing\nチェック\n\n\nAutomatically save when editor loses focus\n\n\n\nWhen editor is idle\nBackup unsaved changes\n\n\nIdle period\n1000ms\n\n\n\n\n\n2.4 Completionタブ\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nShow code completions\nAutomatically\n\n\nAllow automatic completions in console\nチェック\n\n\nInsert parentheses after function completions\nチェック\n\n\nShow help tooltip after function completions\nチェック\n\n\nShow help tooltip on cursor idle\n\n\n\nInsert spaces around equals for argument completions\nチェック\n\n\nUse tab for autocompletions\nチェック\n\n\nUse tab for multiline autocompletions\n\n\n\nShow code completions\nAutomatically\n\n\nShow completions after characters entered\n3\n\n\nShow completions after keyboard idle (ms)\n250"
  },
  {
    "objectID": "intro/rstudio.html#console",
    "href": "intro/rstudio.html#console",
    "title": "RStudioの設定",
    "section": "3 Console",
    "text": "3 Console\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nShow syntax highlighting in console input\nチェック\n\n\nDifferent color for error or message output\nチェック\n\n\nLimit visible console output\n\n\n\nLimit output line length to\n1000\n\n\nANSI Escape Codes\nShow ANSI colors\n\n\nDiscard pending console input on error\nチェック\n\n\nAutomatically expand tracebacks in error inspector\n\n\n\nDouble-click to select words\n\n\n\nWarn when automatic session suspension is paused\n\n\n\nNumber of seconds to delay warning\n5"
  },
  {
    "objectID": "intro/rstudio.html#appearance",
    "href": "intro/rstudio.html#appearance",
    "title": "RStudioの設定",
    "section": "4 Appearance",
    "text": "4 Appearance\n\n\n\n\n\n\n自分の好みのものを選択する。ただし、小さすぎる文字サイズ (font size) は推奨しない。目に優しくないだけでなく、誤字脱字が見つけにくくなる。30代から老眼で苦しみたくないなら、なるべくフォントサイズは大きめにしよう。"
  },
  {
    "objectID": "intro/rstudio.html#pane-layout",
    "href": "intro/rstudio.html#pane-layout",
    "title": "RStudioの設定",
    "section": "5 Pane Layout",
    "text": "5 Pane Layout\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\n左上\nSource\n\n\n右上\nConsole\n\n\n左下\nすべてチェックを外す\n\n\n右下\nすべてチェックする"
  },
  {
    "objectID": "intro/rstudio.html#r-markdown",
    "href": "intro/rstudio.html#r-markdown",
    "title": "RStudioの設定",
    "section": "6 R Markdown",
    "text": "6 R Markdown\n\n6.1 Basic\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nShow document outline by default\n\n\n\nSoft-wrap R markdown files\nチェック\n\n\nShow in document outline\nSections Only\n\n\nShow output preview in\nViewer Pane\n\n\nShow output inline for all R Markdown document\n\n\n\nShow equation and image previews\nNever\n\n\nEvaluate chunks in directory\nDocument\n\n\nExcute setup chunk automatically in notebooks\nチェック\n\n\nHide console automatically when executing notebook chunks\nチェック\n\n\n\n\n\n6.2 Advanced\n\n\n\n\n\n\n\n\n項目\n設定\n\n\n\n\nEnable chunk background highlight\nチェック\n\n\nShow inline toolbar for R code chunks\nチェック\n\n\nDisplay render command in R Markdown tab\n\n\n\n\n設定が終わったら右下のOK、またはApplyをクリックする。"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html",
    "href": "materials/macro/descriptive_statistics.html",
    "title": "第4回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html#スライド",
    "href": "materials/macro/descriptive_statistics.html#スライド",
    "title": "第4回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html#セットアップ",
    "href": "materials/macro/descriptive_statistics.html#セットアップ",
    "title": "第4回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　まず、本日の実習で使用するパッケージを読み込む。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(fastDummies)\nlibrary(summarytools)\n\n\n　当該パッケージがインストールされていない場合、以下のようなメッセージが出力される。\nError in library(パッケージ名) : there is no package called ‘パッケージ名’\n　この場合、install.packages(\"パッケージ名\")でパッケージをインストールしてから読み込もう。\n　ただし、当該パッケージがインストールされているかが分からない場合もあろう。あるいは、インストールされているにも関わらず、再インストールしてしまう可能性もある。パッケージによってはインストールに数分かかる場合もあるのでこれは非常に非効率的である。ここで便利なものが{pacman}パッケージだ。{pacman}パッケージがインストールされている場合、p_load()関数でパッケージを読み込むことができる。p_load()関数は{pacman}パッケージが提供する関数であるため、予めlibrary(pacman)で{pacman}パッケージを読み込む必要があるが、パッケージ名::関数名()でパッケージを読み込まずに特定パッケージ内の関数を呼び出すこともできる。\n\n\n\nCode 02\n\n# {pacman}パッケージがインストールされていない場合、\n# install.packages(\"pacman\") でインストールしておく。\npacman::p_load(tidyverse, fastDummies, summartools)\n\n\n　一つの関数内に複数のパッケージが同時に読み込めるといったメリットも大きいが、{pacman}最大の特徴は「インストールされていない場合、インストールしてから読み込む」ことだ。一旦、{pacman}をインストールしておけば大変便利になる。\n　続いてデータを読み込もう。実習に使用するデータはdescstat_data.csvであり、LMSから入手可能だ。.csv形式データを読み込む関数はread_csv()であり、()内にはパスを含むファイル名を入力する。パス+ファイル名は必ず\"で囲むこと。たとえば、プロジェクト・フォルダー内のDataフォルダー内のdescstat_data.csvファイルなら、\"Data/descstat_data.csv\"と入力する。また、read_csv()だけだとデータが読み込まれて出力されるだけで終わる。つまり、現在の作業環境内に残らない。作業環境にデータを格納するためには&lt;-演算子を使用する。ここではデータを読み込み、raw_dfという名のオブジェクトとして作業環境内に格納しておこう。\n　パス（path）とは何かについてよく分からない人は授業後でも良いので必ず「ファイル・システム」を精読すること。\n\n\n\nCode 03\n\nraw_df &lt;- read_csv(\"Data/descstat_data.csv\")\n\n\n　データの中身を見るためにはオブジェクト名のみ入力すれば良い。\n\n\n\nCode 04\n\nraw_df\n\n\n# A tibble: 3,000 × 272\n   USER_ID    Q1    Q2    Q3    Q4  Q5_1  Q5_2  Q5_3  Q5_4  Q5_5  Q5_6  Q5_7\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1       1     3     3     1     1    80    80    70    50    40    20    50\n 2       2     2     2     2     8     0    25    30    30    60    30    10\n 3       3     3     1     1     8    80    10     0     0     0     0    75\n 4       4     3     3     1     1   100    50     0     0    50     0   100\n 5       5     3     3     2     3    70    40    40    50    30    20    70\n 6       6     3     1     1     1   100     0     0     0     0     0   100\n 7       7     3     3     1     6   100    10    20    10    10    10    50\n 8       8     3     1     1     6    80     0    60    55     0     0    90\n 9       9     3     1     1     1   100    50   100    75    50    25   100\n10      10     3     3     1     8    25    25    25    25    55    50    50\n# … with 2,990 more rows, and 260 more variables: Q5_8 &lt;dbl&gt;, Q5_9 &lt;dbl&gt;,\n#   Q5_10 &lt;dbl&gt;, Q5_11 &lt;dbl&gt;, Q5_12 &lt;dbl&gt;, Q6_1 &lt;dbl&gt;, Q6_2 &lt;dbl&gt;, Q6_3 &lt;dbl&gt;,\n#   Q6_4 &lt;dbl&gt;, Q6_5 &lt;dbl&gt;, Q7 &lt;dbl&gt;, Q8 &lt;dbl&gt;, Q9 &lt;dbl&gt;, Q10_1 &lt;dbl&gt;,\n#   Q10_2 &lt;dbl&gt;, Q10_3 &lt;dbl&gt;, Q10_4 &lt;dbl&gt;, Q10_5 &lt;dbl&gt;, Q10_6 &lt;dbl&gt;,\n#   Q10_7 &lt;dbl&gt;, Q10_8 &lt;dbl&gt;, Q11 &lt;dbl&gt;, Q12 &lt;dbl&gt;, Q12S1 &lt;dbl&gt;, Q13 &lt;dbl&gt;,\n#   Q13S1 &lt;dbl&gt;, Q13S2 &lt;dbl&gt;, Q14 &lt;dbl&gt;, Q14S1 &lt;dbl&gt;, Q15 &lt;dbl&gt;, Q15S1 &lt;dbl&gt;,\n#   Q15S2 &lt;dbl&gt;, Q16 &lt;dbl&gt;, Q16S1 &lt;dbl&gt;, Q16S2 &lt;dbl&gt;, Q17_1 &lt;dbl&gt;, …\n\n\n　出力画面の最上段にはraw_dfの大きさが出力される。3,000 × 272は「3000行、272列」の表形式データであることを意味する。非常に大きなデータであるため、この内容が一画面に収めることはできないだろう。read_csv()で読み込まれたデータは画面に表示可能な範囲内でデータを出力してくれる。省略された列は出力画面の下段を見れば分かる。\n　raw_dfの変数名（列名）を確認するためには、names()関数を使用する。\n\n\n\nCode 05\n\nnames(raw_df)\n\n\n  [1] \"USER_ID\" \"Q1\"      \"Q2\"      \"Q3\"      \"Q4\"      \"Q5_1\"    \"Q5_2\"   \n  [8] \"Q5_3\"    \"Q5_4\"    \"Q5_5\"    \"Q5_6\"    \"Q5_7\"    \"Q5_8\"    \"Q5_9\"   \n [15] \"Q5_10\"   \"Q5_11\"   \"Q5_12\"   \"Q6_1\"    \"Q6_2\"    \"Q6_3\"    \"Q6_4\"   \n [22] \"Q6_5\"    \"Q7\"      \"Q8\"      \"Q9\"      \"Q10_1\"   \"Q10_2\"   \"Q10_3\"  \n [29] \"Q10_4\"   \"Q10_5\"   \"Q10_6\"   \"Q10_7\"   \"Q10_8\"   \"Q11\"     \"Q12\"    \n [36] \"Q12S1\"   \"Q13\"     \"Q13S1\"   \"Q13S2\"   \"Q14\"     \"Q14S1\"   \"Q15\"    \n [43] \"Q15S1\"   \"Q15S2\"   \"Q16\"     \"Q16S1\"   \"Q16S2\"   \"Q17_1\"   \"Q17_2\"  \n [50] \"Q17_3\"   \"Q17_4\"   \"Q17_5\"   \"Q17_6\"   \"Q17_7\"   \"Q17_8\"   \"Q18S1\"  \n [57] \"Q19S1\"   \"Q20S1\"   \"Q20S2\"   \"Q20S3_1\" \"Q20S3_2\" \"Q20S3_3\" \"Q20S3_4\"\n [64] \"Q20S3_5\" \"Q20S3_6\" \"Q21S1\"   \"Q21S2\"   \"Q21S3_1\" \"Q21S3_2\" \"Q21S3_3\"\n [71] \"Q21S3_4\" \"Q21S3_5\" \"Q21S3_6\" \"Q22S1\"   \"Q22S2\"   \"Q22S3_1\" \"Q22S3_2\"\n [78] \"Q22S3_3\" \"Q22S3_4\" \"Q22S3_5\" \"Q22S3_6\" \"Q23S1\"   \"Q23S2\"   \"Q23S3_1\"\n [85] \"Q23S3_2\" \"Q23S3_3\" \"Q23S3_4\" \"Q23S3_5\" \"Q23S3_6\" \"Q24S1\"   \"Q24S2\"  \n [92] \"Q24S3_1\" \"Q24S3_2\" \"Q24S3_3\" \"Q24S3_4\" \"Q24S3_5\" \"Q24S3_6\" \"Q25S1\"  \n [99] \"Q25S2\"   \"Q25S3_1\" \"Q25S3_2\" \"Q25S3_3\" \"Q25S3_4\" \"Q25S3_5\" \"Q25S3_6\"\n[106] \"Q26S1\"   \"Q26S2\"   \"Q26S3_1\" \"Q26S3_2\" \"Q26S3_3\" \"Q26S3_4\" \"Q26S3_5\"\n[113] \"Q26S3_6\" \"Q27S1\"   \"Q27S2\"   \"Q27S3_1\" \"Q27S3_2\" \"Q27S3_3\" \"Q27S3_4\"\n[120] \"Q27S3_5\" \"Q27S3_6\" \"Q28_1\"   \"Q29\"     \"Q30\"     \"Q31\"     \"Q32\"    \n[127] \"Q33\"     \"Q34\"     \"Q35_1\"   \"Q35_2\"   \"Q35_3\"   \"Q35_4\"   \"Q35_5\"  \n[134] \"Q35_6\"   \"Q35_7\"   \"Q35_8\"   \"Q35_9\"   \"Q35_10\"  \"Q35_11\"  \"Q35_12\" \n[141] \"Q35_13\"  \"Q35_14\"  \"Q35_15\"  \"Q36S1\"   \"Q36S2\"   \"Q36S3\"   \"Q36S4\"  \n[148] \"Q36S5\"   \"Q36S6\"   \"Q36S7\"   \"Q36S8\"   \"Q36S9\"   \"Q37\"     \"Q38\"    \n[155] \"Q39\"     \"Q40S1\"   \"Q40S2\"   \"Q40S3\"   \"Q40S4\"   \"Q40S5\"   \"Q41_1\"  \n[162] \"Q41_2\"   \"Q41_3\"   \"Q41_4\"   \"Q41_5\"   \"Q41_6\"   \"Q42\"     \"Q43\"    \n[169] \"Q44\"     \"Q45\"     \"Q46\"     \"Q47_1\"   \"Q47_2\"   \"Q47_3\"   \"Q47_4\"  \n[176] \"Q47_5\"   \"Q47_6\"   \"Q47_7\"   \"Q47_8\"   \"Q47_9\"   \"Q47_10\"  \"Q47_11\" \n[183] \"Q47_12\"  \"Q47_13\"  \"Q47_14\"  \"Q47_15\"  \"Q47_16\"  \"Q47_17\"  \"Q48_1\"  \n[190] \"Q48_2\"   \"Q48_3\"   \"Q48_4\"   \"Q48_5\"   \"Q48_6\"   \"Q49_1\"   \"Q49_2\"  \n[197] \"Q49_3\"   \"Q50_1\"   \"Q50_2\"   \"Q50_3\"   \"Q50_4\"   \"Q50_5\"   \"Q50_6\"  \n[204] \"Q51_1\"   \"Q51_2\"   \"Q51_3\"   \"Q51_4\"   \"Q51_5\"   \"Q51_6\"   \"Q51_7\"  \n[211] \"Q51_8\"   \"Q51_9\"   \"Q51_10\"  \"Q51_11\"  \"Q51_12\"  \"Q51_13\"  \"Q51_14\" \n[218] \"Q51_15\"  \"Q52\"     \"Q53\"     \"Q54\"     \"Q55\"     \"Q56_1\"   \"Q56_2\"  \n[225] \"Q56_3\"   \"Q56_4\"   \"Q56_5\"   \"Q56_6\"   \"Q56_7\"   \"Q57\"     \"Q58_1\"  \n[232] \"Q58_2\"   \"Q58_3\"   \"Q58_4\"   \"Q58_5\"   \"Q58_6\"   \"Q58_7\"   \"Q58_8\"  \n[239] \"Q58_9\"   \"Q58_10\"  \"Q58_11\"  \"Q58_12\"  \"Q58_13\"  \"Q58_14\"  \"Q58_15\" \n[246] \"Q58_16\"  \"Q59\"     \"Q59_1\"   \"Q59_2\"   \"Q59_3\"   \"Q59_4\"   \"X2_1\"   \n[253] \"X2_2\"    \"X2_3\"    \"Q60\"     \"Q60S1\"   \"Q61\"     \"Q62S1\"   \"Q62S2\"  \n[260] \"Q62S4\"   \"Q63\"     \"Q63S1\"   \"Q63S2\"   \"Q63S4\"   \"Q64\"     \"Q65\"    \n[267] \"seg\"     \"sex\"     \"age\"     \"chiiki\"  \"QVOTES\"  \"QVOTEP\" \n\n\n　また、データの大きさはdim()関数でも確認することができる。\n\n\n\nCode 06\n\ndim(raw_df)\n\n\n[1] 3000  272\n\n\n　最後に出力される画面の行数についてだが、デフォルトでは10行出力となっている。もし、15行を出力したい場合はprint()関数を使用し、n引数で指定することができる。\n\n\n\nCode 07\n\nprint(raw_df, n = 15)\n\n\n# A tibble: 3,000 × 272\n   USER_ID    Q1    Q2    Q3    Q4  Q5_1  Q5_2  Q5_3  Q5_4  Q5_5  Q5_6  Q5_7\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1       1     3     3     1     1    80    80    70    50    40    20    50\n 2       2     2     2     2     8     0    25    30    30    60    30    10\n 3       3     3     1     1     8    80    10     0     0     0     0    75\n 4       4     3     3     1     1   100    50     0     0    50     0   100\n 5       5     3     3     2     3    70    40    40    50    30    20    70\n 6       6     3     1     1     1   100     0     0     0     0     0   100\n 7       7     3     3     1     6   100    10    20    10    10    10    50\n 8       8     3     1     1     6    80     0    60    55     0     0    90\n 9       9     3     1     1     1   100    50   100    75    50    25   100\n10      10     3     3     1     8    25    25    25    25    55    50    50\n11      11     1     2     2     3    60    30    25    10    10     0    60\n12      12     2     2     2     6    50    50    50    50    50    50    50\n13      13     3     1     1     3   100     5    30     5     0     0   100\n14      14     3     3     2     8    60    70    70    50    70    50    50\n15      15     2     3     3     7    50    50    50    50    50    50    50\n# … with 2,985 more rows, and 260 more variables: Q5_8 &lt;dbl&gt;, Q5_9 &lt;dbl&gt;,\n#   Q5_10 &lt;dbl&gt;, Q5_11 &lt;dbl&gt;, Q5_12 &lt;dbl&gt;, Q6_1 &lt;dbl&gt;, Q6_2 &lt;dbl&gt;, Q6_3 &lt;dbl&gt;,\n#   Q6_4 &lt;dbl&gt;, Q6_5 &lt;dbl&gt;, Q7 &lt;dbl&gt;, Q8 &lt;dbl&gt;, Q9 &lt;dbl&gt;, Q10_1 &lt;dbl&gt;,\n#   Q10_2 &lt;dbl&gt;, Q10_3 &lt;dbl&gt;, Q10_4 &lt;dbl&gt;, Q10_5 &lt;dbl&gt;, Q10_6 &lt;dbl&gt;,\n#   Q10_7 &lt;dbl&gt;, Q10_8 &lt;dbl&gt;, Q11 &lt;dbl&gt;, Q12 &lt;dbl&gt;, Q12S1 &lt;dbl&gt;, Q13 &lt;dbl&gt;,\n#   Q13S1 &lt;dbl&gt;, Q13S2 &lt;dbl&gt;, Q14 &lt;dbl&gt;, Q14S1 &lt;dbl&gt;, Q15 &lt;dbl&gt;, Q15S1 &lt;dbl&gt;,\n#   Q15S2 &lt;dbl&gt;, Q16 &lt;dbl&gt;, Q16S1 &lt;dbl&gt;, Q16S2 &lt;dbl&gt;, Q17_1 &lt;dbl&gt;, …"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html#データハンドリング",
    "href": "materials/macro/descriptive_statistics.html#データハンドリング",
    "title": "第4回講義資料",
    "section": "データハンドリング",
    "text": "データハンドリング\n　通常、データの分析の歳、読み込んだデータをすべて利用することはあまりない（クリーニング済みのデータならすべて使う）。したがって、分析を始める前に、分析に使用するデータのみを残しておいた方が効率的であろう。データハンドリングについては前期の「ミクロ政治データ分析実習」の「データハンドリング」、『私たちのR』の第12、13、14、15章を参照されたい。ここではまず、記述統計を出したい変数のみを残し、抽出後のデータをdfという名の新しいオブジェクトとして作業環境内に格納する。select()関数の使い方は『私たちのR』の第12章を参照すること。\n\n\n\nCode 08\n\ndf &lt;- raw_df %&gt;%\n  select(ID           = USER_ID, # 回答者ID\n         Gender       = sex,     # 性別\n         Age          = age,     # 年齢\n         Education    = Q61,     # 最終学歴\n         Voted        = Q15,     # 投票参加 (2016参院選)\n         VotedParty   = Q15S2,   # 投票先 (2016参院選)\n         T_Jimin      = Q5_7,    # 自民に対する感情温度\n         T_Minshin    = Q5_11)   # 民進に対する感情温度\n\ndf\n\n\n# A tibble: 3,000 × 8\n      ID Gender   Age Education Voted VotedParty T_Jimin T_Minshin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1      2    69         4     1          7      50        30\n 2     2      2    47         3     2         NA      10        50\n 3     3      2    37         2     1          1      75         0\n 4     4      1    51         4     1          1     100        50\n 5     5      1    38         4     2         NA      70        30\n 6     6      1    71         2     1          1     100         0\n 7     7      1    47         3     1          7      50        10\n 8     8      1    71         2     1          1      90         0\n 9     9      1    75         4     1          1     100        50\n10    10      2    66         3     1          2      50        55\n# … with 2,990 more rows\n\n\n\n\n\nCode 09\n\ndf &lt;- df %&gt;%\n  mutate(Voted = if_else(Voted == 1, 1, 0))\n\ndf\n\n\n# A tibble: 3,000 × 8\n      ID Gender   Age Education Voted VotedParty T_Jimin T_Minshin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1      2    69         4     1          7      50        30\n 2     2      2    47         3     0         NA      10        50\n 3     3      2    37         2     1          1      75         0\n 4     4      1    51         4     1          1     100        50\n 5     5      1    38         4     0         NA      70        30\n 6     6      1    71         2     1          1     100         0\n 7     7      1    47         3     1          7      50        10\n 8     8      1    71         2     1          1      90         0\n 9     9      1    75         4     1          1     100        50\n10    10      2    66         3     1          2      50        55\n# … with 2,990 more rows\n\n\nそれではこの変数らの記述統計量を計算してみよう。"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html#記述統計",
    "href": "materials/macro/descriptive_statistics.html#記述統計",
    "title": "第4回講義資料",
    "section": "記述統計",
    "text": "記述統計\n　記述統計量（descriptive statistics）とはある変数が持つ情報を要約した数値である。例えば、dfのAge列は回答者の年齢の変数である。この回答者たちの年齢について語る時、「このデータの回答者の年齢は69、47、37、51、…、18歳ですよ」という人はいないだろう。4-5人分のデータならまだしも、3000人の回答者ならあり得ない。我々は普段、「このデータの回答者の年齢はだいたいXX歳ですよ」とか、「真ん中の年齢はYY歳ですよ」と言うだろう。また、年齢の格差/ばらつきを語るときも標準偏差や範囲（「18歳から75歳までいますよ」など）を言うのが普通であろう。このように元の長い情報を一つの数値として要約したものが記述統計量である。\n　Rには記述統計量を計算するいくつかの関数が用意されている。\n\nmean(): 平均値\nmedian(): 中央値\nvar(): 不偏分散\nsd(): 不偏標準偏差\nmin()、max(): 最小値と最大値\n\n　たとえば、dfのAge列（df$Age）の平均値は以下のように計算する。na.rm = TRUEは「もしdf$Ageに欠損値がある場合、それは除外して平均値を計算する」ことを意味する。\n\n\n\nCode 10\n\nmean(df$Age, na.rm = TRUE)\n\n\n[1] 47.34\n\n\n　同じやり方で中央値（median()）、最小値（min()）、最大値（max()）などが計算できる。しかし、本講義ではtidyverseパッケージ群を積極的に活用しているため、ここからは{dplyr}パッケージ（tidyverseを構成するパッケージの一つであり、{tidyverse}を読み込むと自動的に読み込まれる）のsummarise()関数を使用する。summarise()関数の詳細については、『私たちのR』の第13章を参照すること。ここではAge変数の平均値、中央値、標準偏差、最小値、最大値、有効ケース数を計算し、それぞれMean、Median、SD、Min、Max、Nという名の列として出力してみよう。\n\n\n\nCode 11\n\ndf %&gt;%\n  summarise(Mean   = mean(Age, na.rm = TRUE),\n            Median = median(Age, na.rm = TRUE),\n            SD     = sd(Age, na.rm = TRUE),\n            Min    = min(Age, na.rm = TRUE),\n            Max    = min(Age, na.rm = TRUE),\n            N      = sum(!is.na(Age)))\n\n\n# A tibble: 1 × 6\n   Mean Median    SD   Min   Max     N\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1  47.3     47  15.6    18    18  3000\n\n\n　有効ケース数（欠損していないケースの数）を計算する方法がやや面倒である。これはまずis.na()関数を使って、当該変数が欠損していればTRUE、そうでなければFALSEと判定する。そしてis.na()の前には否定演算子!が付いている。つまり、is.na()から得られた結果が逆となり、欠損していればFALSE、値があればTRUEになる。RにおいてTRUEは1、FALSEは0扱いとなるので、この合計（sum()）を求めることで欠損していないケースの数が計算できるようになる。\n\n名目変数の場合\n　これまでの内容は変数が連続変数（continuous variable）に限った話である。名目変数（categorical variable）の場合、平均値などは存在しない。100円と1万円の平均値は計算できるものの、男性と女性の平均値や北海道と鹿児島の平均値などはあり得ないからだ。しかし、名目変数でもデータ分析に使われる場面は多く、分析に使われる以上、記述統計量をしっかりと掲載すべきである。\n　名目変数の記述する簡単な方法としては度数分布表がある。たとえば、dfの場合、性別（Gender）は男性（=1）と女性（=2）で構成されている。つまり、2つの要素（levels）で構成される変数だ。度数分布表は各要素がいくつあるかを示したものであり、table()関数で簡単に確認することができる。\n\n\n\nCode 12\n\ntable(df$Gender)\n\n\n\n   1    2 \n1492 1508 \n\n\n　また、{dplyr}を使う場合、count()関数を使用すれば良い。\n\n\n\nCode 13\n\ndf %&gt;%\n  count(Gender)\n\n\n# A tibble: 2 × 2\n  Gender     n\n   &lt;dbl&gt; &lt;int&gt;\n1      1  1492\n2      2  1508\n\n\n　しかし、連続変数用の記述統計表と名目変数用の度数分布表を分けることは非効率的である。分析に用いられる名目変数が数が多いと尚更だ。できれば名目変数も連続変数と同じ表で記述統計量を出した方が良いだろう。そのためには名目変数をダミー変数として変換すれば、平均値や標準偏差などが計算できるようになる。\n　ダミー変数は0と1のみで構成される変数である。たとえば、性別変数（Gender列）は名目変数であるが、現在、1（男性）と2（女性）の2つの値で構成されている。この変数を男性ダミー変数と女性ダミー変数といった2つの変数に変換することである。男性ダミー変数はGenderの値が1なら、つまり当該回答者が男性（=1）なら1の値を、それ以外の場合は0の値をとる。女性ダミー変数の場合、当該回答者が女性（=2）なら1の値を、それ以外の場合は0の値をとる。以下の 表 1 はダミー変数のイメージである。 表 1 (a) の「出身」変数は普通の文字型変数であるが、この変数をダミー変数にすると 表 1 (b) の「早稲田」、「学習院」のようなダミー変数である。このようにダミー変数は0と1のみで構成される変数であり、通常、一つのダミー変数が1であれば他のダミー変数は0となる。\n\n\n表 1: ダミー変数の例\n\n\n\n\n(a) 「出身」変数をダミー化する前\n\n\n氏名\n出身\n\n\n\n\n橋本\n慶應\n\n\n小渕\n早稲田\n\n\n森\n早稲田\n\n\n小泉\n慶應\n\n\n安倍\n成蹊\n\n\n福田\n早稲田\n\n\n麻生\n学習院\n\n\n鳩山\n東京\n\n\n菅\n東工\n\n\n野田\n早稲田\n\n\n菅\n法政\n\n\n岸田\n早稲田\n\n\n\n\n\n \n\n\n\n(b) 「出身」変数をダミー化した後\n\n\n氏名\n早稲田\n慶應\n学習院\n東京\n東工\n成蹊\n法政\n\n\n\n\n橋本\n0\n1\n0\n0\n0\n0\n0\n\n\n小渕\n1\n0\n0\n0\n0\n0\n0\n\n\n森\n1\n0\n0\n0\n0\n0\n0\n\n\n小泉\n0\n1\n0\n0\n0\n0\n0\n\n\n安倍\n0\n0\n0\n0\n0\n1\n0\n\n\n福田\n1\n0\n0\n0\n0\n0\n0\n\n\n麻生\n0\n0\n1\n0\n0\n0\n0\n\n\n鳩山\n0\n0\n0\n1\n0\n0\n0\n\n\n菅\n0\n0\n0\n0\n1\n0\n0\n\n\n野田\n1\n0\n0\n0\n0\n0\n0\n\n\n菅\n0\n0\n0\n0\n0\n0\n1\n\n\n岸田\n1\n0\n0\n0\n0\n0\n0\n\n\n\n\n\n\n　それでは、if_else()関数を使って男性ダミー変数（Male）と女性ダミー変数（Female）を作ってみよう。このダミー変数はGender列の後ろにし、df2という名のオブジェクトとして格納する。\n\n\n\nCode 14\n\ndf2 &lt;- df %&gt;%\n  mutate(Male   = if_else(Gender == 1, 1, 0),\n         Female = if_else(Gender == 2, 1, 0),\n         .after = Gender)\n\ndf2\n\n\n# A tibble: 3,000 × 10\n      ID Gender  Male Female   Age Education Voted VotedParty T_Jimin T_Minshin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1      2     0      1    69         4     1          7      50        30\n 2     2      2     0      1    47         3     0         NA      10        50\n 3     3      2     0      1    37         2     1          1      75         0\n 4     4      1     1      0    51         4     1          1     100        50\n 5     5      1     1      0    38         4     0         NA      70        30\n 6     6      1     1      0    71         2     1          1     100         0\n 7     7      1     1      0    47         3     1          7      50        10\n 8     8      1     1      0    71         2     1          1      90         0\n 9     9      1     1      0    75         4     1          1     100        50\n10    10      2     0      1    66         3     1          2      50        55\n# … with 2,990 more rows\n\n\n　df2にはもう一つの名目変数がある。それは投票先を意味するVotedParty変数だ。VotedPartyは1から7までの整数で構成されている。VotedPartyの値が1なら自民党に投票、2なら民進党に投票、…といった変数であり、これは計7個のダミー変数となる。\n\n\n\nCode 15\n\ndf2 &lt;- df2 %&gt;%\n  mutate(VotedParty_Jimin   = if_else(VotedParty == 1, 1, 0),\n         VotedParty_Minshin = if_else(VotedParty == 2, 1, 0),\n         VotedParty_Komei   = if_else(VotedParty == 3, 1, 0),\n         VotedParty_Ishin   = if_else(VotedParty == 4, 1, 0),\n         VotedParty_Kyosan  = if_else(VotedParty == 5, 1, 0),\n         VotedParty_Etc     = if_else(VotedParty == 6, 1, 0),\n         VotedParty_DK      = if_else(VotedParty == 7, 1, 0),\n         .after             = VotedParty)\n\ndf2\n\n\n# A tibble: 3,000 × 17\n      ID Gender  Male Female   Age Educa…¹ Voted Voted…² Voted…³ Voted…⁴ Voted…⁵\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1      2     0      1    69       4     1       7       0       0       0\n 2     2      2     0      1    47       3     0      NA      NA      NA      NA\n 3     3      2     0      1    37       2     1       1       1       0       0\n 4     4      1     1      0    51       4     1       1       1       0       0\n 5     5      1     1      0    38       4     0      NA      NA      NA      NA\n 6     6      1     1      0    71       2     1       1       1       0       0\n 7     7      1     1      0    47       3     1       7       0       0       0\n 8     8      1     1      0    71       2     1       1       1       0       0\n 9     9      1     1      0    75       4     1       1       1       0       0\n10    10      2     0      1    66       3     1       2       0       1       0\n# … with 2,990 more rows, 6 more variables: VotedParty_Ishin &lt;dbl&gt;,\n#   VotedParty_Kyosan &lt;dbl&gt;, VotedParty_Etc &lt;dbl&gt;, VotedParty_DK &lt;dbl&gt;,\n#   T_Jimin &lt;dbl&gt;, T_Minshin &lt;dbl&gt;, and abbreviated variable names ¹​Education,\n#   ²​VotedParty, ³​VotedParty_Jimin, ⁴​VotedParty_Minshin, ⁵​VotedParty_Komei\n\n\n　あとはGenderとVotedParty列は不要なので、こちらを除外する。\n\n\n\nCode 16\n\ndf2 &lt;- df2 %&gt;%\n  select(-c(Gender, VotedParty))\n\ndf2\n\n\n# A tibble: 3,000 × 15\n      ID  Male Female   Age Education Voted VotedParty…¹ Voted…² Voted…³ Voted…⁴\n   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1     1     0      1    69         4     1            0       0       0       0\n 2     2     0      1    47         3     0           NA      NA      NA      NA\n 3     3     0      1    37         2     1            1       0       0       0\n 4     4     1      0    51         4     1            1       0       0       0\n 5     5     1      0    38         4     0           NA      NA      NA      NA\n 6     6     1      0    71         2     1            1       0       0       0\n 7     7     1      0    47         3     1            0       0       0       0\n 8     8     1      0    71         2     1            1       0       0       0\n 9     9     1      0    75         4     1            1       0       0       0\n10    10     0      1    66         3     1            0       1       0       0\n# … with 2,990 more rows, 5 more variables: VotedParty_Kyosan &lt;dbl&gt;,\n#   VotedParty_Etc &lt;dbl&gt;, VotedParty_DK &lt;dbl&gt;, T_Jimin &lt;dbl&gt;, T_Minshin &lt;dbl&gt;,\n#   and abbreviated variable names ¹​VotedParty_Jimin, ²​VotedParty_Minshin,\n#   ³​VotedParty_Komei, ⁴​VotedParty_Ishin\n\n\n　これで名目変数も連続変数と同じやり方で記述統計量が計算できる。\n\n\n{fastDummies}の利用\n　しかし、以上の作業はかなり面倒だろう。7個の変数でも大変だが、たとえば回答者の都道府県があれば、計47行のコードを書く必要がある。このように面倒なダミー変数の作成を{fastuDummies}パッケージを使えばたった数行のコードでダミー化ができる。手順は以下の通りである。\n\n名目変数をfactor型変数へ変換する。\n{fastDummies}パッケージのdummy_cols()関数でダミー化する。\n生成された列を適宜修正する（変数名や位置など）。\n\n　それではまず、dfのGenderとVotedParty列をfactor化してみよう。Genderの場合、値が1なら\"Male\"、2なら\"Female\"を付ける。VotedPartyは値が1なら\"Jimin\"、2なら\"Minshin\"、3なら\"Komei\"、4なら\"Ishin\"、5なら\"Kyosan\"、6なら\"Etc\"（その他の政党）、7なら\"DK\"（覚えていない/答えたくない）とする。修正後、dfはdf3という名の新しいオブジェクトとして作業環境内に格納する。\n\n\n\nCode 17\n\ndf3 &lt;- df %&gt;%\n  mutate(Gender     = factor(Gender, levels = c(1, 2), \n                             labels = c(\"Male\", \"Female\")),\n         VotedParty = factor(VotedParty, levels = 1:7,\n                             labels = c(\"Jimin\", \"Minshin\", \"Komei\", \"Ishin\",\n                                        \"Kyosan\", \"Etc\", \"DK\"))) \n\ndf3\n\n\n# A tibble: 3,000 × 8\n      ID Gender   Age Education Voted VotedParty T_Jimin T_Minshin\n   &lt;dbl&gt; &lt;fct&gt;  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;        &lt;dbl&gt;     &lt;dbl&gt;\n 1     1 Female    69         4     1 DK              50        30\n 2     2 Female    47         3     0 &lt;NA&gt;            10        50\n 3     3 Female    37         2     1 Jimin           75         0\n 4     4 Male      51         4     1 Jimin          100        50\n 5     5 Male      38         4     0 &lt;NA&gt;            70        30\n 6     6 Male      71         2     1 Jimin          100         0\n 7     7 Male      47         3     1 DK              50        10\n 8     8 Male      71         2     1 Jimin           90         0\n 9     9 Male      75         4     1 Jimin          100        50\n10    10 Female    66         3     1 Minshin         50        55\n# … with 2,990 more rows\n\n\n　続いて、{fastDummies}のdummy_cols()関数でGenderとVotedPartyをダミー変数に変換する。第一引数はダミー変数にしたい変数の名前を\"で囲んだものを入れる。2つ以上の変数をダミー化するならc()でまとめる。続いて、ignore_na = TRUEを指定する。これを指定しない場合、「欠損か否か」のダミー変数まで作成される。つづいて、元の変数（GenderとVotedParty）を除外する。\n\n\n\nCode 18\n\ndf3 &lt;- df3 %&gt;%\n  dummy_cols(c(\"Gender\", \"VotedParty\"), ignore_na = TRUE) %&gt;%\n  select(-c(Gender, VotedParty))\n\ndf3\n\n\n# A tibble: 3,000 × 15\n      ID   Age Education Voted T_Jimin T_Minshin Gende…¹ Gende…² Voted…³ Voted…⁴\n   &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt;\n 1     1    69         4     1      50        30       0       1       0       0\n 2     2    47         3     0      10        50       0       1      NA      NA\n 3     3    37         2     1      75         0       0       1       1       0\n 4     4    51         4     1     100        50       1       0       1       0\n 5     5    38         4     0      70        30       1       0      NA      NA\n 6     6    71         2     1     100         0       1       0       1       0\n 7     7    47         3     1      50        10       1       0       0       0\n 8     8    71         2     1      90         0       1       0       1       0\n 9     9    75         4     1     100        50       1       0       1       0\n10    10    66         3     1      50        55       0       1       0       1\n# … with 2,990 more rows, 5 more variables: VotedParty_Komei &lt;int&gt;,\n#   VotedParty_Ishin &lt;int&gt;, VotedParty_Kyosan &lt;int&gt;, VotedParty_Etc &lt;int&gt;,\n#   VotedParty_DK &lt;int&gt;, and abbreviated variable names ¹​Gender_Male,\n#   ²​Gender_Female, ³​VotedParty_Jimin, ⁴​VotedParty_Minshin\n\n\n　これでダミー化は完了だ。ここで更に変数名を変更し、位置を調整してみよう。たとえば、Gender_MaleはMaleに、Gender_FemaleはFemaleに変更し、ID列の後ろへ移動させるとしよう。この場合、relocate()関数を使用する。列名を変更する場合は新しい変数名 = 既存の変数名と指定し、.after、あるいは.beforeで位置を指定する。\n\n\n\nCode 19\n\ndf3 &lt;- df3 %&gt;%\n  relocate(Male   = Gender_Male,\n           Female = Gender_Female,\n           .after = ID)\n\ndf3\n\n\n# A tibble: 3,000 × 15\n      ID  Male Female   Age Education Voted T_Jimin T_Minshin VotedPar…¹ Voted…²\n   &lt;dbl&gt; &lt;int&gt;  &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt;\n 1     1     0      1    69         4     1      50        30          0       0\n 2     2     0      1    47         3     0      10        50         NA      NA\n 3     3     0      1    37         2     1      75         0          1       0\n 4     4     1      0    51         4     1     100        50          1       0\n 5     5     1      0    38         4     0      70        30         NA      NA\n 6     6     1      0    71         2     1     100         0          1       0\n 7     7     1      0    47         3     1      50        10          0       0\n 8     8     1      0    71         2     1      90         0          1       0\n 9     9     1      0    75         4     1     100        50          1       0\n10    10     0      1    66         3     1      50        55          0       1\n# … with 2,990 more rows, 5 more variables: VotedParty_Komei &lt;int&gt;,\n#   VotedParty_Ishin &lt;int&gt;, VotedParty_Kyosan &lt;int&gt;, VotedParty_Etc &lt;int&gt;,\n#   VotedParty_DK &lt;int&gt;, and abbreviated variable names ¹​VotedParty_Jimin,\n#   ²​VotedParty_Minshin\n\n\n　続いて、VotedParty_JiminからVotedParty_DKまでの列をVoted列の後ろへ動かしてみよう。変数選択の場合、:演算子を使うと「〜から〜まで」の指定ができる。\n\n\n\nCode 20\n\ndf3 &lt;- df3 %&gt;%\n  relocate(VotedParty_Jimin:VotedParty_DK, .after = Voted)\n\ndf3\n\n\n# A tibble: 3,000 × 15\n      ID  Male Female   Age Education Voted VotedParty…¹ Voted…² Voted…³ Voted…⁴\n   &lt;dbl&gt; &lt;int&gt;  &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;        &lt;int&gt;   &lt;int&gt;   &lt;int&gt;   &lt;int&gt;\n 1     1     0      1    69         4     1            0       0       0       0\n 2     2     0      1    47         3     0           NA      NA      NA      NA\n 3     3     0      1    37         2     1            1       0       0       0\n 4     4     1      0    51         4     1            1       0       0       0\n 5     5     1      0    38         4     0           NA      NA      NA      NA\n 6     6     1      0    71         2     1            1       0       0       0\n 7     7     1      0    47         3     1            0       0       0       0\n 8     8     1      0    71         2     1            1       0       0       0\n 9     9     1      0    75         4     1            1       0       0       0\n10    10     0      1    66         3     1            0       1       0       0\n# … with 2,990 more rows, 5 more variables: VotedParty_Kyosan &lt;int&gt;,\n#   VotedParty_Etc &lt;int&gt;, VotedParty_DK &lt;int&gt;, T_Jimin &lt;dbl&gt;, T_Minshin &lt;dbl&gt;,\n#   and abbreviated variable names ¹​VotedParty_Jimin, ²​VotedParty_Minshin,\n#   ³​VotedParty_Komei, ⁴​VotedParty_Ishin\n\n\n　むろん、:ではなく、starts_with()関数で変数選択もできる。いずれも\"VotedParty_\"で始まる変数名なので、starts_with(\"VotedParty_\")と書けば、VotedParty_で始まる全変数が選択される。\n\n\n\nCode 21\n\ndf3 %&gt;%\n  relocate(starts_with(\"VotedParty\"), .after = Voted)"
  },
  {
    "objectID": "materials/macro/descriptive_statistics.html#summarytoolsの利用",
    "href": "materials/macro/descriptive_statistics.html#summarytoolsの利用",
    "title": "第4回講義資料",
    "section": "{summarytools}の利用",
    "text": "{summarytools}の利用\n　記述統計量は実証分析の論文において必須であり、多くの場合、最初の表として登場する。人によっては記述統計量の表をTable Oneとも呼ぶのもこれが理由である。記述統計量を示すことが重要だというのは、表作成の需要が高いことを意味し、高い需要はかならず供給を生み出す。Rにおいても簡単に記述統計量をまとめてくれるパッケージが多数あり、ここでは{summarytools}パッケージをを紹介する。\n　{summarytools}には記述統計量をまとめてくれる関数が複数あるが、ここではdescr()関数を使用する。使い方は非常に単純で、()内にデータのオブジェクト名を入力するだけだ。むろん、パイプ演算子（%&gt;%または|&gt;）も使える。パイプ演算子は今後毎回登場するので、忘れた人はミクロ政治データ分析実習の第9回講義資料、または『私たちのR』の第12章を参照すること。。\n\n\n\nCode 22\n\ndf %&gt;%\n  descr()\n\n\nDescriptive Statistics  \ndf  \nN: 3000  \n\n                        Age   Education    Gender        ID   T_Jimin   T_Minshin     Voted   VotedParty\n----------------- --------- ----------- --------- --------- --------- ----------- --------- ------------\n             Mean     47.34        3.11      1.50   1500.50     41.13       34.25      0.74         2.94\n          Std.Dev     15.63        0.89      0.50    866.17     28.02       25.95      0.44         2.21\n              Min     18.00        1.00      1.00      1.00      0.00        0.00      0.00         1.00\n               Q1     34.00        2.00      1.00    750.50     20.00       10.00      0.00         1.00\n           Median     47.00        3.00      2.00   1500.50     50.00       40.00      1.00         2.00\n               Q3     61.00        4.00      2.00   2250.50     60.00       50.00      1.00         5.00\n              Max     75.00        4.00      2.00   3000.00    100.00      100.00      1.00         7.00\n              MAD     19.27        1.48      0.00   1111.95     29.65       29.65      0.00         1.48\n              IQR     27.00        2.00      1.00   1499.50     40.00       40.00      1.00         4.00\n               CV      0.33        0.29      0.33      0.58      0.68        0.76      0.60         0.75\n         Skewness     -0.03       -0.38     -0.01      0.00      0.02        0.16     -1.07         0.82\n      SE.Skewness      0.04        0.04      0.04      0.04      0.04        0.04      0.04         0.05\n         Kurtosis     -1.14       -1.28     -2.00     -1.20     -0.83       -0.81     -0.85        -0.82\n          N.Valid   3000.00     3000.00   3000.00   3000.00   3000.00     3000.00   3000.00      2208.00\n        Pct.Valid    100.00      100.00    100.00    100.00    100.00      100.00    100.00        73.60\n\n\n　よく使う平均値（Mean）、標準偏差（Std.Dev）など以外にも第一四分位数（Q1）や四分位範囲（IQR）、歪度（Skewness）などまで出力される。実際はこれら全てを掲載するケースはあまりない。ここでは平均値（\"mean\"）、標準偏差（\"sd\"）、最小値（\"min\"）、最大値（\"max\"）、有効ケース数（\"n.vailid\"）のみに絞ってみよう。出力する記述統計量はstats引数で指定できる。\n\n\n\nCode 23\n\ndf %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"))\n\n\nDescriptive Statistics  \ndf  \nN: 3000  \n\n                    Age   Education    Gender        ID   T_Jimin   T_Minshin     Voted   VotedParty\n------------- --------- ----------- --------- --------- --------- ----------- --------- ------------\n         Mean     47.34        3.11      1.50   1500.50     41.13       34.25      0.74         2.94\n      Std.Dev     15.63        0.89      0.50    866.17     28.02       25.95      0.44         2.21\n          Min     18.00        1.00      1.00      1.00      0.00        0.00      0.00         1.00\n          Max     75.00        4.00      2.00   3000.00    100.00      100.00      1.00         7.00\n      N.Valid   3000.00     3000.00   3000.00   3000.00   3000.00     3000.00   3000.00      2208.00\n\n\n　ただし、まだ気になる点がある。それは行と列が普段見る記述統計量の表と逆だということだ。これはtranspose = TRUEを追加することで対応できる。また、変数の順番もdf内の順番でなく、勝手にアルファベット順になっている。これをdf内の順番にするためにはsort = \"p\"を追加すれば良い。\n\n\n\nCode 24\n\ndf %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ndf  \nN: 3000  \n\n                      Mean   Std.Dev     Min       Max   N.Valid\n---------------- --------- --------- ------- --------- ---------\n              ID   1500.50    866.17    1.00   3000.00   3000.00\n          Gender      1.50      0.50    1.00      2.00   3000.00\n             Age     47.34     15.63   18.00     75.00   3000.00\n       Education      3.11      0.89    1.00      4.00   3000.00\n           Voted      0.74      0.44    0.00      1.00   3000.00\n      VotedParty      2.94      2.21    1.00      7.00   2208.00\n         T_Jimin     41.13     28.02    0.00    100.00   3000.00\n       T_Minshin     34.25     25.95    0.00    100.00   3000.00\n\n\n　最後にID行の記述統計量を削除してみよう。これは回答者の識別番号であって、その平均値や標準偏差はどうでもいい。そのためにはdfをdescr()を渡す前にselect()関数を使ってID列を除外してから渡せば良いだろう。GenderとVotedPartyもまた名目変数であるが、ここではとりあえず放置しておく。\n\n\n\nCode 25\n\ndf %&gt;%\n  select(-ID) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ndf  \nN: 3000  \n\n                    Mean   Std.Dev     Min      Max   N.Valid\n---------------- ------- --------- ------- -------- ---------\n          Gender    1.50      0.50    1.00     2.00   3000.00\n             Age   47.34     15.63   18.00    75.00   3000.00\n       Education    3.11      0.89    1.00     4.00   3000.00\n           Voted    0.74      0.44    0.00     1.00   3000.00\n      VotedParty    2.94      2.21    1.00     7.00   2208.00\n         T_Jimin   41.13     28.02    0.00   100.00   3000.00\n       T_Minshin   34.25     25.95    0.00   100.00   3000.00\n\n\n　それでは名目変数を含めた記述統計表を作成してみよう。dfダミー化を済ませてからdescr()に渡せば良い。記述統計表はdesc_statという名のオブジェクトとして作業環境内に格納する。\n\n\n\nCode 26\n\ndesc_stat &lt;- df %&gt;%\n  mutate(Gender     = factor(Gender, levels = c(1, 2), \n                             labels = c(\"Male\", \"Female\")),\n         VotedParty = factor(VotedParty, levels = 1:7,\n                             labels = c(\"Jimin\", \"Minshin\", \"Komei\", \"Ishin\",\n                                        \"Kyosan\", \"Etc\", \"DK\"))) %&gt;%\n  dummy_cols(c(\"Gender\", \"VotedParty\"), ignore_na = TRUE,\n             # 以下の引数を追加すると元の変数が自動的に削除される\n             remove_selected_columns = TRUE) %&gt;%\n  relocate(Male   = Gender_Male,\n           Female = Gender_Female,\n           .after = ID) %&gt;%\n  relocate(starts_with(\"VotedParty\"), .after = Voted) %&gt;%\n  select(-ID) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\ndesc_stat\n\n\nDescriptive Statistics  \ndf  \nN: 3000  \n\n                            Mean   Std.Dev     Min      Max   N.Valid\n------------------------ ------- --------- ------- -------- ---------\n                    Male    0.50      0.50    0.00     1.00   3000.00\n                  Female    0.50      0.50    0.00     1.00   3000.00\n                     Age   47.34     15.63   18.00    75.00   3000.00\n               Education    3.11      0.89    1.00     4.00   3000.00\n                   Voted    0.74      0.44    0.00     1.00   3000.00\n        VotedParty_Jimin    0.40      0.49    0.00     1.00   2208.00\n      VotedParty_Minshin    0.20      0.40    0.00     1.00   2208.00\n        VotedParty_Komei    0.05      0.22    0.00     1.00   2208.00\n        VotedParty_Ishin    0.10      0.30    0.00     1.00   2208.00\n       VotedParty_Kyosan    0.08      0.27    0.00     1.00   2208.00\n          VotedParty_Etc    0.01      0.10    0.00     1.00   2208.00\n           VotedParty_DK    0.16      0.37    0.00     1.00   2208.00\n                 T_Jimin   41.13     28.02    0.00   100.00   3000.00\n               T_Minshin   34.25     25.95    0.00   100.00   3000.00\n\n\n　{gt}パッケージを使えば、よりまとまった表として出力できる。興味のある履修者はやってみよう。{gt}パッケージのチュートリアルおよびレファレンスは公式ページを参照すること。\n\n\n\nCode 27\n\nlibrary(gt) # or pacman::p_load(gt)\n\ngt(desc_stat, \n   rownames_to_stub = TRUE) %&gt;% # 行の名前（変数の名前）を1列目に出力\n  fmt_number(columns = 2:3, decimals = 3) # 2列、3列の値は小数点3桁まで\n\n\n\n\n\n\n\n\n\nMean\nStd.Dev\nMin\nMax\nN.Valid\n\n\n\n\nMale\n0.497\n0.500\n0\n1\n3000\n\n\nFemale\n0.503\n0.500\n0\n1\n3000\n\n\nAge\n47.340\n15.628\n18\n75\n3000\n\n\nEducation\n3.114\n0.892\n1\n4\n3000\n\n\nVoted\n0.736\n0.441\n0\n1\n3000\n\n\nVotedParty_Jimin\n0.399\n0.490\n0\n1\n2208\n\n\nVotedParty_Minshin\n0.199\n0.399\n0\n1\n2208\n\n\nVotedParty_Komei\n0.051\n0.220\n0\n1\n2208\n\n\nVotedParty_Ishin\n0.100\n0.300\n0\n1\n2208\n\n\nVotedParty_Kyosan\n0.078\n0.269\n0\n1\n2208\n\n\nVotedParty_Etc\n0.011\n0.104\n0\n1\n2208\n\n\nVotedParty_DK\n0.163\n0.369\n0\n1\n2208\n\n\nT_Jimin\n41.130\n28.015\n0\n100\n3000\n\n\nT_Minshin\n34.248\n25.947\n0\n100\n3000"
  },
  {
    "objectID": "materials/macro/interaction.html",
    "href": "materials/macro/interaction.html",
    "title": "第12回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/interaction.html#スライド",
    "href": "materials/macro/interaction.html#スライド",
    "title": "第12回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/interaction.html#セットアップ",
    "href": "materials/macro/interaction.html#セットアップ",
    "title": "第12回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　本日の実習用データ（LMSからダウンロード可能）と必要なパッケージ（{tidyverse}、{summarytools}、{marginaleffects}）を読み込む。ただし、{marginaleffects}がインストールされていない場合は、コンソール上にinstall.packages(\"marginaleffects\")を入力し、インストールしておくこと。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(marginaleffects)\n\njes_df &lt;- read_csv(\"Data/JES6_W1_2.csv\")"
  },
  {
    "objectID": "materials/macro/interaction.html#交互作用とは",
    "href": "materials/macro/interaction.html#交互作用とは",
    "title": "第12回講義資料",
    "section": "交互作用とは",
    "text": "交互作用とは\n　以下の図のように主な説明変数（\\(X\\)）と応答変数（\\(Y\\)）の関係において、\\(X\\)が\\(Y\\)に与える影響がその他の変数（\\(Z\\)）の影響を受ける場合を考えてみよう。\n\n\n\n\n\n　これは\\(X\\)が\\(Y\\)に与える影響は一定ではないことを意味する（= \\(X\\)が\\(Y\\)に与える影響は\\(Z\\)に依存する）。ここで、\\(Z\\)は調整変数 (moderation variable; moderator)と呼ばれる。調整変数はダミー変数でも、連続変数でも可能だ。\n　この交互作用を実際の回帰式として表すと以下のようになる。\n\n\n\n\n\n\\[\n\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X \\cdot Z\n\\tag{1}\\]\n　ここで説明変数に調整変数をかけた変数（\\(X \\cdot Z\\)）は交差項 (interaction term)と呼ばれる。これまでの（重）回帰分析では変数\\(X\\)が\\(Y\\)に与える効果は\\(\\beta_1\\)であると解説したが、回帰式に交差項が含まれている場合は解釈に注意が必要だ。なぜなら回帰式において\\(X\\)は\\(\\beta_3\\)にも登場するからである。これは 式 1 を変形してみると分かりやすい。\n\\[\n\\hat{Y} = \\alpha + (\\beta_1 + \\beta_3 Z) X + \\beta_2 Z\n\\tag{2}\\]\n　式 2 によると、変数\\(X\\)が\\(Y\\)に与える効果、つまり\\(X\\)の傾き係数は\\(\\beta_1\\)でなく、\\(\\beta_1 + \\beta_3 Z\\)だということが分かる。交互作用を仮定したモデルに解釈はやや面倒ではないが、難しい数式が登場するわけではない。ここでは調整変数がダミー変数の場合と連続変数の場合の例を紹介する。\n　まず、調整変数\\(Z\\)が0、または1の値のみをとるダミー変数の場合（\\(Z \\in \\{0, 1\\}\\)）だ。回帰分析の結果、以下のような1次関数が得られたとしよう。\n\\[\n\\begin{align}\n\\hat{Y} & = 3 + 2 X + 1 Z + 3 X \\cdot Z \\\\\n& = 3 + (2 + 3Z) X + 1 Z\n\\end{align}\n\\tag{3}\\]\n　解釈する場合は\\(Z = 0\\)の場合と\\(Z = 1\\)の場合に分けて解釈する。まず、\\(Z = 0\\)の場合、\\(\\hat{Y} = 3 + (2 + 3\\cdot0) X + 1 Z = 3 + 2X + 1Z\\)となり、\\(X\\)が\\(Y\\)に与える影響は2となる。一方、\\(Z = 1\\)の場合は\\(\\hat{Y} = 3 + (2 + 3\\cdot1) X + 1 Z = 3 + 5X + 1Z\\)となり、\\(X\\)が\\(Y\\)に与える影響は5となる。これを可視化すると以下のようになる。\n\n\n\n\n\n\n\n\n\n　調整変数\\(Z\\)が0になると傾きが2の回帰直線（赤）が、1になると傾きが5の回帰直線（青）が得られる。\n　続いて、調整変数\\(Z\\)が無数の値をとる連続変数の場合を考えてみよう。回帰分析の結果、以下のような1次関数が得られたとしよう。\n\\[\n\\begin{align}\n\\hat{Y} & = 2 + 3 X + 2 Z - 1 X \\cdot Z \\\\\n& = 2 + (3 - 1Z) X + 2 Z\n\\end{align}\n\\tag{4}\\]\n　ここで\\(Z = -1\\)の場合、\\(\\hat{Y} = 2 + (3 - 1\\cdot(-1)) X + 2 Z = 3 + 4X + 1Z\\)となり、\\(X\\)が\\(Y\\)に与える影響は4となる。また、\\(Z = 2\\)の場合は\\(\\hat{Y} = 2 + (3 - 1\\cdot2) X + 2 Z = 3 + 1X + 1Z\\)となり、\\(X\\)が\\(Y\\)に与える影響は1となる。\\(Z\\)が3.5の場合は\\(\\hat{Y} = 2 + (3 - 1\\cdot3.5) X + 2 Z = 3 - 0.5X + 1Z\\)となり、\\(X\\)が\\(Y\\)に与える影響は-0.5となる。これを可視化すると以下のようになる。\n\n\n\n\n\n\n\n\n\n　ただし、調整変数が連続変数の場合は、-1、2、3.5以外の値を取ることもできる。\\(Z\\)が取り得るすべての値に対して回帰直線を計算することは出来ないため、いくつかの代表的な値に絞って計算する必要があろう。"
  },
  {
    "objectID": "materials/macro/interaction.html#推定",
    "href": "materials/macro/interaction.html#推定",
    "title": "第12回講義資料",
    "section": "推定",
    "text": "推定\n　それでは実際に推定してみよう。まず、実習データの中身を確認してみる。\n\n\n\nCode 02\n\njes_df\n\n\n# A tibble: 3,000 × 6\n   TempKyosan Female   Age Satisfaction Interest Ideology\n        &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1         20      1    69            4        4        9\n 2         20      1    47            1        1        7\n 3          0      1    37            3        3       11\n 4          0      0    51            4        3       11\n 5         20      0    38            2        3        7\n 6          0      0    71            5        4       11\n 7         10      0    47            3        3        9\n 8          0      0    71            4        4       11\n 9         25      0    75            3        4        9\n10         40      1    66            2        3        6\n# … with 2,990 more rows\n\n\n　各変数の説明は以下の通りだ。\n\n\n\n変数\n説明\n備考\n\n\n\n\nTempKyosan\n日本共産党に対する感情温度\n高いほど好感\n\n\nFemale\n女性ダミー\n0: 男性 / 1: 女性\n\n\nAge\n回答者の年齢\n\n\n\nSatisfaction\n政治満足度\n高いほど満足\n\n\nInterest\n回答者の政治関心\n高いほど関心あり\n\n\nIdeology\n回答者のイデオロギー\n高いほど保守的\n\n\n\n　データ分析の前にjes_dfの記述統計量を確認する。今回のデータはすべて連続変数扱いとなるため、前処理は不要だ。性別は名目変数であるが、既にダミー変数に変換済みである。ダミー変数の記述統計量は連続変数と同じ扱いで問題ないため、データをそのまま{summarytools}パッケージのdescr()関数に渡せば良い。\n\n\n\nCode 03\n\njes_df %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \njes_df  \nN: 3000  \n\n                      Mean   Std.Dev     Min      Max   N.Valid\n------------------ ------- --------- ------- -------- ---------\n        TempKyosan   26.88     24.95    0.00   100.00   3000.00\n            Female    0.50      0.50    0.00     1.00   3000.00\n               Age   47.34     15.63   18.00    75.00   3000.00\n      Satisfaction    2.45      1.08    1.00     5.00   3000.00\n          Interest    2.74      0.83    1.00     4.00   3000.00\n          Ideology    6.34      2.10    1.00    11.00   3000.00\n\n\n　このデータを用い、以下の問いに答えるとする。\n\n　政治満足度が共産党に対する感情温度に与える影響を調べたい。ただし、この影響は一定ではなく、性別や年齢によって異なるかも知れない。政治満足度が共産党に対する感情温度に与える影響の不均一性を調べるためにはどうすれば良いだろうか。\n\n　この問いにおける応答変数は「共産党に対する感情温度（TempKyosan）」、主な説明変数は「政治満足度（Satisfaction）」だ。ただし、政治満足度が共産感情温度に与える影響は性別（Female）や年齢（Age）に依存する可能性がある。調整変数が2つであるため、ここでは2つのモデルを作成する。\nモデル1\n\n\n\n種類\n変数\n変数名\n\n\n\n\n主な説明変数\n政治満足度\nSatisfaction\n\n\n応答変数\n共産党に対する感情温度\nTempKoysan\n\n\n調整変数\n女性ダミー\nFemale\n\n\n統制変数\n政治関心、イデオロギー、年齢\nInterest、Ideology、Age\n\n\n\nモデル2\n\n\n\n\n\n\n\n\n種類\n変数\n変数名\n\n\n\n\n主な説明変数\n政治満足度\nSatisfaction\n\n\n応答変数\n共産党に対する感情温度\nTempKoysan\n\n\n調整変数\n年齢\nAge\n\n\n統制変数\n政治関心、イデオロギー、女性ダミー\nInterest、Ideology、Female\n\n\n\n　モデル1は政治満足度（= 説明変数）が共産党に対する感情温度（= 応答変数）に与える影響は性別（= 調整変数）に依存することを意味し、以下のような図として表現できる。\n\n\n\n\n\n　これを回帰式にする場合、 式 5 のような1次関数になる（以下の図参照）。\n\n\n\n\n\n\\[\n\\widehat{\\mbox{TempKyosan}} = \\alpha + \\beta_1 \\mbox{Satisfaction} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Interest} + \\beta_4 \\mbox{Ideology} + \\beta_5 \\mbox{Age} + \\beta_6 (\\mbox{Satisfaction} \\cdot \\mbox{Female})\n\\tag{5}\\]\n　つづいて、モデル2は政治満足度（= 説明変数）が共産党に対する感情温度（= 応答変数）に与える影響は年齢（= 調整変数）に依存することを意味し以下のような図として表現できる。\n\n\n\n\n\n　これを回帰式にする場合、 式 6 のような1次関数になる（以下の図参照）。\n\\[\n\\widehat{\\mbox{TempKyosan}} = \\alpha + \\beta_1 \\mbox{Satisfaction} + \\beta_2 \\mbox{Age} + \\beta_3 \\mbox{Interest} + \\beta_4 \\mbox{Ideology} + \\beta_5 \\mbox{Female} + \\beta_6 (\\mbox{Satisfaction} \\cdot \\mbox{Age})\n\\tag{6}\\]\n\n\n\n\n\n　推定にはこれまでと同様、lm()関数を使用する。注意するところは第1引数である回帰式（formula）であり、交互作用が存在すると考えられる2つの変数を+でなく、*でつなぐだけだ。ここでA * Bの意味はA\\(\\times\\)bだけでなく、A、B、A\\(\\times\\)Bが同時に投入することを意味する。\n　モデル1と2をそれぞれfit1、fit2に格納する。\n\n\n\nCode 04\n\nfit1 &lt;- lm(TempKyosan ~ Satisfaction * Female + Interest + Ideology + Age, \n           data = jes_df)\nfit2 &lt;- lm(TempKyosan ~ Satisfaction * Age + Interest + Ideology + Female + Age, \n           data = jes_df)\n\n\n　2つのモデルの推定結果を横に並べるために{modelsummary}とmodelsummary()関数を使用する。2つのモデルオブジェクトはlist()関数でまとめることを忘れずに。\n\n\n\nCode 05\n\nmodelsummary(list(fit1, fit2))\n\n\n\n\n\n\n (1)\n  (2)\n\n\n\n\n(Intercept)\n49.275\n28.250\n\n\n\n(2.587)\n(4.164)\n\n\nSatisfaction\n−4.732\n3.308\n\n\n\n(0.561)\n(1.354)\n\n\nFemale\n2.752\n5.061\n\n\n\n(2.186)\n(0.888)\n\n\nInterest\n0.217\n−0.118\n\n\n\n(0.571)\n(0.570)\n\n\nIdeology\n−1.887\n−1.690\n\n\n\n(0.214)\n(0.215)\n\n\nAge\n−0.040\n0.357\n\n\n\n(0.030)\n(0.073)\n\n\nSatisfaction × Female\n0.902\n\n\n\n\n(0.817)\n\n\n\nSatisfaction × Age\n\n−0.157\n\n\n\n\n(0.026)\n\n\nNum.Obs.\n3000\n3000\n\n\nR2\n0.086\n0.096\n\n\nR2 Adj.\n0.084\n0.094\n\n\nAIC\n27560.1\n27526.4\n\n\nBIC\n27608.1\n27574.4\n\n\nLog.Lik.\n−13772.027\n−13755.176\n\n\nF\n46.763\n52.927\n\n\nRMSE\n23.85\n23.72\n\n\n\n\n\n\n\n\nモデル1の解釈\n　モデル1（fit1）から得られた回帰式は以下の通りである。\n共産に対する感情温度の予測値 = 49.28 - 4.73 \\(\\times\\) 政治満足度 + 2.75 \\(\\times\\) 女性ダミー + 0.22 \\(\\times\\) 政治関心 - 1.89 \\(\\times\\) イデオロギー - 0.04 \\(\\times\\) 年齢 + 0.90 \\(\\times\\) 政治満足度 \\(\\times\\) 女性ダミー\n　これを政治満足度でまとめると、\n共産に対する感情温度の予測値 = 49.28 - (4.73 - 0.90 \\(\\times\\) 女性ダミー) \\(\\times\\) 政治満足度 + 2.75 \\(\\times\\) 女性ダミー + 0.22 \\(\\times\\) 政治関心 - 1.89 \\(\\times\\) イデオロギー - 0.04 \\(\\times\\) 年齢\nになる。つまり、政治満足度が共産感情温度に与える影響は「-(4.73 - 0.90 \\(\\times\\) 女性ダミーの値)」だ。女性ダミーが取り得る値は0（男性）か1（女性）しかないので、ここでは2つのケースにおける政治満足度が共産感情温度に与える影響を計算してみよう。\n　まず、男性の場合（Femaleの値 = 0）、政治満足度が共産感情温度に与える影響は約-4.73（= -(4.73 - 0.90 \\(\\times\\) 0) ）である。これは男性の場合、政治満足度が上がると共産感情温度が下がることを意味し、具体的には「男性の場合、政治満足度が1単位上がると、共産に対する感情温度は約4.73度下がる」と解釈できる。また、女性の場合（Femaleの値 = 1）、政治満足度が共産感情温度に与える影響は約-3.83（= -(4.73 - 0.90 \\(\\times\\) 1) ）である。これもまた、女性の場合、政治満足度が上がると共産感情温度が下がることを意味し、具体的には「女性の場合、政治満足度が1単位上がると、共産に対する感情温度は約3.83度下がる」と解釈できる。\n　以上の結果を回帰直線で示したものが以下の図である。\n\n\n\n\n\n\n\n\n\n\n\nモデル2の解釈\n　モデル2（fit2）に対しても同じことが言える。まずは回帰式をまとめてみよう。\n共産に対する感情温度の予測値 = 28.25 + 3.31 \\(\\times\\) 政治満足度 + 0.36 \\(\\times\\) 年齢 - 0.12 \\(\\times\\) 政治関心 - 1.69 \\(\\times\\) イデオロギー + 5.06 \\(\\times\\) 女性ダミー - 0.16 \\(\\times\\) 政治満足度 \\(\\times\\) 年齢\n　これを政治満足度でまとめると、\n共産に対する感情温度の予測値 = 28.25 + (3.31 - 0.16 \\(\\times\\) 年齢) \\(\\times\\) 政治満足度 + 0.36 \\(\\times\\) 年齢 - 0.12 \\(\\times\\) 政治関心 - 1.69 \\(\\times\\) イデオロギー + 5.06 \\(\\times\\) 女性ダミー\nになる。つまり、政治満足度が共産感情温度に与える影響は「(3.31 - 0.16 \\(\\times\\) 年齢の値)」だ。年齢は18、19、20、…など様々な値を取り得る。これら全てに対して計算することは効率的ではないため、ここでは年齢が20歳、40歳、60歳の場合に絞って政治満足度が共産感情温度に与える影響を計算してみよう。\n　まず、20歳の場合（Ageの値 = 20）、政治満足度が共産感情温度に与える影響は約0.11（= 3.31 - 0.16 \\(\\times\\) 20）である（小数点7桁まで計算すると約0.1724813）。これは「20歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約0.11度上がる」ことを意味する。つづいて、40歳の場合（Ageの値 = 40）、政治満足度が共産感情温度に与える影響は約-3.09（= 3.31 - 0.16 \\(\\times\\) 40）である（小数点7桁まで計算すると約-2.962879）。これは「40歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約3.09度下がる」ことを意味する。最後に60歳の場合（Ageの値 = 60）、政治満足度が共産感情温度に与える影響は約-6.29（= 3.31 - 0.16 \\(\\times\\) 60）だ（小数点7桁まで計算すると約-6.098239）。これは「60歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約6.29度下がる」ことを意味する。\n　以上の結果を回帰直線で示したものが以下の図である。\n\n\n\n\n\n\n\n\n\n　今回は計算を簡単にするために小数点2桁目まで丸めた係数を用いたが、より性格に計算するためにはcoef()関数から抽出した係数を用いた方が良い。fit2の係数を抽出してみよう。\n\n\n\nCode 06\n\ncoef(fit2)\n\n\n     (Intercept)     Satisfaction              Age         Interest \n      28.2497444        3.3078413        0.3572177       -0.1180184 \n        Ideology           Female Satisfaction:Age \n      -1.6902682        5.0610601       -0.1567680 \n\n\n　ここで政治満足度（Satisfication）の係数は2番目であるため、coef(fit2)の後ろに[2]を付けると2番目の要素のみ抽出できる。\n\n\n\nCode 07\n\ncoef(fit2)[2]\n\n\nSatisfaction \n    3.307841 \n\n\n　同じく交差項の係数は7番目であるため、coef(fit2)[7]で抽出できる。\n\n\n\nCode 08\n\ncoef(fit2)[7]\n\n\nSatisfaction:Age \n       -0.156768 \n\n\n　この数値を使えば、政治満足度が共産感情温度に与える影響をより正確な数値で計算できる。たとえば、60歳における政治満足度が共産感情温度に与える影響は\n\n\n\nCode 09\n\ncoef(fit2)[2] + coef(fit2)[7] * 60\n\n\nSatisfaction \n   -6.098239 \n\n\nのように計算できる。"
  },
  {
    "objectID": "materials/macro/interaction.html#限界効果の話",
    "href": "materials/macro/interaction.html#限界効果の話",
    "title": "第12回講義資料",
    "section": "限界効果の話",
    "text": "限界効果の話\n　交互作用とは説明変数\\(X\\)が応答変数\\(Y\\)に与える影響が調整変数\\(Z\\)の値に依存することを意味する。この場合、「説明変数\\(X\\)が応答変数\\(Y\\)に与える影響」の統計的有意性はどうだろうか。\\(X\\)が\\(Y\\)に与える影響の統計的有意性を検定する際に用いられる検定統計量は「\\(X\\)の係数 / \\(X\\)の標準誤差」である。しかし、ここでの\\(X\\)の係数（と標準誤差）は\\(Z\\)の値によって変わる。これは\\(Z\\)の値によって\\(X \\rightarrow Y\\)の統計的有意性は変わることを意味する。\n　したがって、\\(Z\\)の値ごとに、\\(X\\)が\\(Y\\)に与える影響（= 限界効果; marginal effects）を計算するだけでなく、95%信頼区間 or \\(p\\)値も示す必要がある。95%信頼区間内に0が含まれないことは、\\(p &lt; 0.05\\)を意味するため、統計的に有意な関連があると判断する。\n　限界効果の計算方法については解説済みである。しかし、統計的有意性に関しては説明がやや難しくなるため、これはRパッケージにお任せするとしよう。もし、数学的な背景に関心のある履修者はBrambor (2006)を参照されたい。\n　今回使用するパッケージ&関数は、冒頭で読み込んだ{marginaleffect}パッケージのslopes()関数だ。これは回帰モデルの限界効果と統計的有意性検定までやってくれる大変便利なパッケージである。使い方は以下の通り。\n\nslopes(回帰オブジェクト名, variables = \"説明変数名\", \n       newdata = datagrid(調整変数名 = 調整変数の値))\n\n　fit1の場合、Femaleの値が0と1の場合のSatisfactonの限界効果を求めることになる。したがって、回帰オブジェクト名はfit1、variablesの実引数は\"Satisfaction\"（\"で囲む）、datagrid()の中身はFemale = 0:1またはFemale = c(0, 1)だ。計算結果をfit1_ameに格納し、中身を確認する。\n\n\n\nCode 10\n\nfit1_ame &lt;- slopes(fit1, variables = \"Satisfaction\", \n                   newdata = datagrid(Female = c(0, 1)))\n\nfit1_ame\n\n\n\n         Term Estimate Std. Error      z   Pr(&gt;|z|)  2.5 % 97.5 % Female\n Satisfaction   -4.732     0.5613 -8.429 &lt; 2.22e-16 -5.832 -3.631      0\n Satisfaction   -3.830     0.6110 -6.269 3.6446e-10 -5.028 -2.633      1\n\nPrediction type:  response \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, TempKyosan, Satisfaction, Interest, Ideology, Age, Female, eps \n\n\n　非常に多くの情報が出力されるが、ここで興味のある列はFemaleの値（Female列）と、Satisfactionの限界効果（Estiamte列）、\\(p\\)値（Pr(&gt;|z|)列）、95%信頼区間（2.5%列と97.5%列）である。それでは、select()関数でfit1_ameからこれらの列のみ出力してみよう。\n　前回の講義では、predictions()関数から得られた推定結果のオブジェクトを出力すると表示される列名と実際の列名は異なることを説明したが、slopes()も同様である。実際の列名を見たい場合はprint()関数を使用し、style = \"data.frame\"引数を追加しよう。\n\n\n\nCode 11\n\nprint(fit1_ame, style = \"data.frame\")\n\n\n  rowid     type         term  estimate std.error statistic      p.value\n1     1 response Satisfaction -4.731682 0.5613401 -8.429261 3.478550e-17\n2     2 response Satisfaction -3.830102 0.6110043 -6.268535 3.644599e-10\n   conf.low conf.high predicted predicted_hi predicted_lo TempKyosan\n1 -5.831888 -3.631476  24.41332     24.41143     24.41332     26.882\n2 -5.027648 -2.632555  29.37297     29.37144     29.37297     26.882\n  Satisfaction Interest Ideology   Age Female   eps\n1        2.449 2.736333 6.340667 47.34      0 4e-04\n2        2.449 2.736333 6.340667 47.34      1 4e-04\n\n\n　限界効果の解釈に話を戻そう。Female = 0の場合のSatisfactionの限界効果は約-4.732、Female = 1の場合のそれは約-3.830である。また、いずれも\\(p\\)値が0.05を下回ることから統計的に有意な関係であることがわかる。つまり、性別と関係なく、政治満足度は共産感情温度に負の影響を与えることが分かる。\n　これらの結果を表でまとめると以下のようになる。表で\\(p\\)値を報告する場合、\\(p\\)値が非常に小さいケースがある（たとえば、\\(p\\) = 0.0000000235）。この場合、「\\(p\\) = 0.000」と表記せず、「\\(p\\) &lt; 0.001」と表記すること。\\(p\\)値がぴったり0になることは実質的にあり得ない。\n\n\n\n\n\n\n\n\n性別\n平均限界効果\np値\n95%信頼区間\n\n\n下限\n上限\n\n\n\n\n男性\n−4.732\n&lt; 0.001\n−5.832\n−3.631\n\n\n女性\n−3.830\n&lt; 0.001\n−5.028\n−2.633\n\n\n\n\n\n\n\n　続いて、fit2の場合のAgeの値が18、19、20、…、75の場合のSatisfactionの限界効果を求めるてみよう。回帰オブジェクト名はfit2、variablesの実引数は\"Satisfaction\"（\"で囲む）、datagrid()の中身はAge = 18:75だ。\n\n\n\nCode 12\n\nfit2_ame &lt;- slopes(fit2, variables = \"Satisfaction\", \n                   newdata = datagrid(Age = 18:75))\n\nfit2_ame\n\n\n\n         Term Estimate Std. Error         z   Pr(&gt;|z|)   2.5 %  97.5 % Age\n Satisfaction  0.48602     0.9128   0.53243 0.59442984  -1.303  2.2751  18\n Satisfaction  0.32925     0.8894   0.37021 0.71122721  -1.414  2.0724  19\n Satisfaction  0.17248     0.8661   0.19916 0.84214145  -1.525  1.8699  20\n Satisfaction  0.01571     0.8430   0.01864 0.98512782  -1.636  1.6679  21\n Satisfaction -0.14105     0.8200  -0.17201 0.86343149  -1.748  1.4662  22\n--- 48 rows omitted. See ?avg_slopes and ?print.marginaleffects --- \n Satisfaction -7.82269     0.7240 -10.80500 &lt; 2.22e-16  -9.242 -6.4037  71\n Satisfaction -7.97946     0.7458 -10.69941 &lt; 2.22e-16  -9.441 -6.5177  72\n Satisfaction -8.13622     0.7679 -10.59574 &lt; 2.22e-16  -9.641 -6.6312  73\n Satisfaction -8.29299     0.7902 -10.49430 &lt; 2.22e-16  -9.842 -6.7442  74\n Satisfaction -8.44976     0.8128 -10.39527 &lt; 2.22e-16 -10.043 -6.8566  75 \n\nPrediction type:  response \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, TempKyosan, Satisfaction, Interest, Ideology, Female, Age, eps \n\n\n　いくつか気になる点がある。普通にfit2_ameのみ入力して出力すると、最初の5行と最後の5行のみが出力され、48行分が省略される。もし、すべての行を出力したい場合は、print()関数を使用し、nrow = Inf引数を追加すれば良い。はた、round()関数を使って\\(p\\)値を小数点3桁までにまとめてみよう。round()の第1引数は丸めたい変数名、第2引数は小数点の桁数を入れるが、\\(p\\)値の列名はp.value列である。この操作はprint()関数の前に行う必要があるため、fit2_ameとprint()の間に入れる。\n\n\n\nCode 13\n\nfit2_ame %&gt;%\n  mutate(p.value = round(p.value, 3)) %&gt;%\n  print(nrow = Inf)\n\n\n\n         Term Estimate Std. Error         z Pr(&gt;|z|)  CI low CI high\n Satisfaction  0.48602     0.9128   0.53243    0.594  -1.303  2.2751\n Satisfaction  0.32925     0.8894   0.37021    0.711  -1.414  2.0724\n Satisfaction  0.17248     0.8661   0.19916    0.842  -1.525  1.8699\n Satisfaction  0.01571     0.8430   0.01864    0.985  -1.636  1.6679\n Satisfaction -0.14105     0.8200  -0.17201    0.863  -1.748  1.4662\n Satisfaction -0.29782     0.7974  -0.37351    0.709  -1.861  1.2650\n Satisfaction -0.45459     0.7749  -0.58663    0.557  -1.973  1.0642\n Satisfaction -0.61136     0.7527  -0.81217    0.417  -2.087  0.8640\n Satisfaction -0.76813     0.7309  -1.05100    0.293  -2.201  0.6643\n Satisfaction -0.92489     0.7093  -1.30401    0.192  -2.315  0.4653\n Satisfaction -1.08166     0.6880  -1.57211    0.116  -2.430  0.2669\n Satisfaction -1.23843     0.6672  -1.85624    0.063  -2.546  0.0692\n Satisfaction -1.39520     0.6467  -2.15735    0.031  -2.663 -0.1277\n Satisfaction -1.55197     0.6267  -2.47633    0.013  -2.780 -0.3236\n Satisfaction -1.70873     0.6072  -2.81404    0.005  -2.899 -0.5186\n Satisfaction -1.86550     0.5883  -3.17122    0.002  -3.018 -0.7125\n Satisfaction -2.02227     0.5699  -3.54845   &lt;2e-16  -3.139 -0.9053\n Satisfaction -2.17904     0.5522  -3.94605   &lt;2e-16  -3.261 -1.0967\n Satisfaction -2.33581     0.5352  -4.36407   &lt;2e-16  -3.385 -1.2868\n Satisfaction -2.49257     0.5191  -4.80208   &lt;2e-16  -3.510 -1.4752\n Satisfaction -2.64934     0.5038  -5.25914   &lt;2e-16  -3.637 -1.6620\n Satisfaction -2.80611     0.4894  -5.73361   &lt;2e-16  -3.765 -1.8469\n Satisfaction -2.96288     0.4761  -6.22308   &lt;2e-16  -3.896 -2.0297\n Satisfaction -3.11965     0.4639  -6.72426   &lt;2e-16  -4.029 -2.2103\n Satisfaction -3.27641     0.4530  -7.23287   &lt;2e-16  -4.164 -2.3886\n Satisfaction -3.43318     0.4434  -7.74368   &lt;2e-16  -4.302 -2.5642\n Satisfaction -3.58995     0.4351  -8.25053   &lt;2e-16  -4.443 -2.7371\n Satisfaction -3.74672     0.4284  -8.74659   &lt;2e-16  -4.586 -2.9071\n Satisfaction -3.90349     0.4232  -9.22457   &lt;2e-16  -4.733 -3.0741\n Satisfaction -4.06026     0.4196  -9.67719   &lt;2e-16  -4.883 -3.2379\n Satisfaction -4.21702     0.4176 -10.09752   &lt;2e-16  -5.036 -3.3985\n Satisfaction -4.37379     0.4174 -10.47958   &lt;2e-16  -5.192 -3.5558\n Satisfaction -4.53056     0.4188 -10.81859   &lt;2e-16  -5.351 -3.7098\n Satisfaction -4.68733     0.4218 -11.11140   &lt;2e-16  -5.514 -3.8605\n Satisfaction -4.84410     0.4265 -11.35655   &lt;2e-16  -5.680 -4.0081\n Satisfaction -5.00086     0.4328 -11.55423   &lt;2e-16  -5.849 -4.1526\n Satisfaction -5.15763     0.4406 -11.70615   &lt;2e-16  -6.021 -4.2941\n Satisfaction -5.31440     0.4498 -11.81519   &lt;2e-16  -6.196 -4.4328\n Satisfaction -5.47117     0.4603 -11.88512   &lt;2e-16  -6.373 -4.5689\n Satisfaction -5.62794     0.4721 -11.92025   &lt;2e-16  -6.553 -4.7026\n Satisfaction -5.78470     0.4851 -11.92507   &lt;2e-16  -6.735 -4.8339\n Satisfaction -5.94147     0.4991 -11.90406   &lt;2e-16  -6.920 -4.9632\n Satisfaction -6.09824     0.5141 -11.86149   &lt;2e-16  -7.106 -5.0906\n Satisfaction -6.25501     0.5300 -11.80129   &lt;2e-16  -7.294 -5.2162\n Satisfaction -6.41178     0.5468 -11.72698   &lt;2e-16  -7.483 -5.3402\n Satisfaction -6.56854     0.5642 -11.64164   &lt;2e-16  -7.674 -5.4627\n Satisfaction -6.72531     0.5824 -11.54791   &lt;2e-16  -7.867 -5.5839\n Satisfaction -6.88208     0.6012 -11.44805   &lt;2e-16  -8.060 -5.7038\n Satisfaction -7.03885     0.6205 -11.34396   &lt;2e-16  -8.255 -5.8227\n Satisfaction -7.19562     0.6403 -11.23717   &lt;2e-16  -8.451 -5.9406\n Satisfaction -7.35238     0.6607 -11.12897   &lt;2e-16  -8.647 -6.0575\n Satisfaction -7.50915     0.6814 -11.02036   &lt;2e-16  -8.845 -6.1737\n Satisfaction -7.66592     0.7025 -10.91216   &lt;2e-16  -9.043 -6.2890\n Satisfaction -7.82269     0.7240 -10.80500   &lt;2e-16  -9.242 -6.4037\n Satisfaction -7.97946     0.7458 -10.69941   &lt;2e-16  -9.441 -6.5177\n Satisfaction -8.13622     0.7679 -10.59574   &lt;2e-16  -9.641 -6.6312\n Satisfaction -8.29299     0.7902 -10.49430   &lt;2e-16  -9.842 -6.7442\n Satisfaction -8.44976     0.8128 -10.39527   &lt;2e-16 -10.043 -6.8566\n\nPrediction type:  \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, TempKyosan, Satisfaction, Interest, Ideology, Female, Age, eps \n\n\n　18〜29歳の場合、政治満足度が共産感情温度に与える影響は確認できない（つまり、\\(p \\geq 0.05\\)）。一方、回答者の年齢が30歳以上の場合、政治満足度は共産感情温度に負の影響を与えるが確認できる（つまり、\\(p &lt; 0.05\\)）。ちなみに、&lt;2e-16と表示されるのは0に極めて近いことを意味し、表で示す際は&lt; 0.001とかで表記するのが一般的だ。\n　交互作用を含む回帰モデルの場合、調整変数ごとの予測値の図と限界効果のグラフを示すのが一般的である。回帰分析の結果の可視化は次回解説するが、ここでは限界効果のグラフの読み方を紹介しよう。\n　以下の図はfit1における政治満足度の（平均）限界効果である。男性でも女性でも95%信頼区間内に0が含まれておらず、どちらも負の限界効果である。これは「性別と関係なく政治満足度が高まると共産党に感情温度は下がる」ことを意味する。\n\n\nコード\nfit1_ame %&gt;%\n  mutate(Female = factor(Female, levels = 0:1, \n                         labels = c(\"男性\", \"女性\"))) %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = Female, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"性別\", y = \"政治満足度の平均限界効果と95%信頼区間\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n　続いて、fit2における政治満足度の（平均）限界効果である。ここでは95%信頼区間が垂直線でなく、領域（ribbon）で示される。29歳までは95%信頼区間に0が含まれている。30歳からは限界効果が負となり、統計的に有意な関係を示している。。これは「30歳以上の有権者のみにおいて、政治満足度が高まると共産党に感情温度は下がる」ことを意味する。\n\n\nコード\nfit2_ame %&gt;%\n  ggplot(aes(x = Age)) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = \"gray80\") +\n  geom_hline(yintercept = 0) +\n  geom_line(aes(y = estimate)) +\n  labs(x = \"年齢\", y = \"政治満足度の平均限界効果と95%信頼区間\") +\n  theme_bw()"
  },
  {
    "objectID": "materials/macro/logit.html",
    "href": "materials/macro/logit.html",
    "title": "第11回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/logit.html#スライド",
    "href": "materials/macro/logit.html#スライド",
    "title": "第11回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/logit.html#セットアップ",
    "href": "materials/macro/logit.html#セットアップ",
    "title": "第11回講義資料",
    "section": "セットアップ",
    "text": "セットアップ\n　本日の実習用データ（LMSからダウンロード可能）と必要なパッケージ（{tidyverse}、{summarytools}、{marginaleffects}）を読み込む。データを読み込み、dfという名のオブジェクトとして格納する。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(marginaleffects)\n\ndf &lt;- read_csv(\"Data/Hino_Song.csv\")\n\ndf\n\n\n　各変数の詳細はスライドを参照すること。データ分析を進める前に、まず{summarytools}のdescr()関数を使ってdfの各変数の記述統計量を確認する。今回のデータの場合、全て連続変数（ダミー変数も連続変数として扱う）であるため、dfをそのままdescr()に渡せば良い。\n\n\n\nCode 02\n\ndf %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \ndf  \nN: 2555  \n\n                   Mean   Std.Dev     Min     Max   N.Valid\n--------------- ------- --------- ------- ------- ---------\n          Voted    0.71      0.45    0.00    1.00   2555.00\n         Female    0.46      0.50    0.00    1.00   2555.00\n            Age   50.91     15.69   18.00   86.00   2555.00\n           Educ    3.21      0.90    1.00    4.00   2555.00\n      Knowledge    3.95      1.12    1.00    5.00   2555.00\n       Ideology    5.40      2.16    0.00   10.00   2555.00\n\n\n　今回は以下の問いに答えるモデルの推定を行う。\n\n　有権者の投票参加を規定する要因を調べたい。投票所に足を運ぶには予め投票先を決めておく必要があろう。しかし、数多い選択肢（候補者、政党）の中から自分の望みを実現してくれそうな選択肢を見つけることは簡単な作業ではない。政治に関する知識があれば、比較的簡単に見つかるため、投票参加しやすいと考えられる。一方、そうでない有権者は自分にとっても最適な選択肢を見つけることを諦め、棄権するだろう。これは本当だろうか。\n\n　まず、応答変数は回答者の投票参加の有無（Voted）である。こちらは投票すれば1、危険すれば0の値を取るダミー変数であり、応答変数として使う場合は二値変数、またはバイナリー変数とも呼ばれる。続いて、主な説明変数は回答者の主観的な政治知識（Knowledge）である。また、主な説明変数以外の説明変数（=統制変数）として性別（Female）、年齢（Age）、学歴（Educ）、イデオロギー（Ideology）を投入する。このモデルを可視化すると以下のようになる。"
  },
  {
    "objectID": "materials/macro/logit.html#線形確率モデル",
    "href": "materials/macro/logit.html#線形確率モデル",
    "title": "第11回講義資料",
    "section": "線形確率モデル",
    "text": "線形確率モデル\n　まずは、これまで紹介してきた線形回帰分析を使って、モデルを推定してみよう。推定する回帰式は以下の通りである。\n\\[\n\\widehat{\\mbox{Voted}} = \\alpha + \\beta_1 \\mbox{Knowledge} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Age} + \\beta_4 \\mbox{Educ} + \\beta_5 \\mbox{Ideology}\n\\]\n\n\n\nCode 03\n\nlm_fit &lt;- lm(Voted ~ Knowledge + Female + Age + Educ + Ideology, data = df)\n\nsummary(lm_fit)\n\n\n\nCall:\nlm(formula = Voted ~ Knowledge + Female + Age + Educ + Ideology, \n    data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.0057 -0.4242  0.1452  0.2844  0.8522 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.1093644  0.0558137  -1.959 0.050168 .  \nKnowledge    0.1186971  0.0077281  15.359  &lt; 2e-16 ***\nFemale      -0.0549171  0.0170946  -3.213 0.001332 ** \nAge          0.0046902  0.0005579   8.408  &lt; 2e-16 ***\nEduc         0.0357970  0.0096391   3.714 0.000209 ***\nIdeology     0.0040744  0.0038653   1.054 0.291944    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4202 on 2549 degrees of freedom\nMultiple R-squared:  0.1451,    Adjusted R-squared:  0.1435 \nF-statistic: 86.55 on 5 and 2549 DF,  p-value: &lt; 2.2e-16\n\n\n　推定の結果、政治知識（Knowledge）の係数は0.119が得られた。これは「政治知識が1単位上がると、投票参加の確率は約11.9%ポイント上がる」ことを意味する（「%」でなく、「%ポイント」であることに注意）。\\(p\\)値も非常に小さく（\\(p &lt; 0.05\\)）、統計的に有意な関係であると言えよう。\n　このようにバイナリー変数を応答変数として使う線形回帰モデルを線形確率モデル（linear probability model; LPM）と呼ぶ。これは非常に直感的な方法であるものの、一つ大きな問題がある。たとえば、主観的政治知識（Knowledge = 5）が5、男性（Female = 0）、86歳（Age = 86）、教育水準が4（Educ = 4）、イデオロギーが10（Ideology = 10）の回答者がいる場合、投票に参加する確率の予測値を計算してみよう。\n\n\n\nCode 04\n\n-0.1093644 + 0.1186971 * 5 - 0.0549171 * 0 + 0.0046902 * 86 + 0.0357970 * 4 + 0.0040744 * 10\n\n\n[1] 1.07141\n\n\n　主観的政治知識が5、男、86歳、教育水準が4、イデオロギーが10の回答者が投票に参加する確率は約107.1%である。確率は0〜100%の値を取るはずなのに、100%を超えてしまう。 他にも線形確率モデルは、線形回帰モデルの重要な仮定である分散の不均一性の満たさないなど、いくつかの問題がある。ここで登場するのがロジスティック回帰分析だ。"
  },
  {
    "objectID": "materials/macro/logit.html#ロジスティック回帰分析",
    "href": "materials/macro/logit.html#ロジスティック回帰分析",
    "title": "第11回講義資料",
    "section": "ロジスティック回帰分析",
    "text": "ロジスティック回帰分析\n\nロジスティック関数\n　ロジスティック回帰分析を理解するためには、その背後にはるロジスティック関数に関する知識が必要である。ロジスティック関数は以下のような関数である。\n\\[\n\\text{logistic}(x) = \\frac{1}{1 + e^{-x}}\n\\]\n　式内の\\(e\\)はネイピア数であり、2.71828184590…の無理数である。\\(x\\)は\\(-\\infty \\sim \\infty\\)の値を取り得る。たとえば、\\(x\\)が\\(-\\infty\\)の場合、\\(e^{-x}\\)は\\(e^{-(-\\infty)} = \\infty\\)、\\(x\\)が\\(\\infty\\)の場合、\\(e^{-x}\\)は\\(e^{-\\infty} = 0\\)となる。つまり、\\(e^{-x}\\)は\\(0 \\sim \\infty\\)の値を取る。この\\(e^{-x}\\)が0の場合、\\(\\text{logistic}(x)\\)は1、\\(e^{-x}\\)が\\(\\infty\\)の場合、\\(\\text{logistic}(x)\\)は0を取る。つまり、\\(\\text{logistic}(x)\\)は0以上、1以下の取ることが分かる。確率もまた0以上1以下であるため、この関数が何らかの役割を果たすこととなる。以下の図は\\(x\\)の値ごとのロジスティック関数の折れ線グラフである。\n\n\n\n\n\n\n\n\n\n　\\(x\\)の値が大きければ大きいほど、logistic(\\(x\\))の値は1へ近づくことが分かる。この\\(x\\)を\\(y^*\\)と表記した場合、ロジスティック回帰分析は\n\\[\n\\begin{align}\n\\mbox{Pr}(\\mbox{Voted} = 1) & = \\frac{1}{1 + e^{-y^*}} \\\\\ny^* & = \\alpha + \\beta_1 \\mbox{Knowledge} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Age} + \\beta_4 \\mbox{Educ} + \\beta_5 \\mbox{Ideology}\n\\end{align}\n\\]\nにおける\\(\\alpha\\)、\\(\\beta_1\\)、…を推定することである。ここでの\\(y^*\\)は線形予測子（linear predictor）と呼ばれる。\n\n\n実装\n　ロジスティックの実装はglm()関数を使用し、使い方はlm()関数とほぼ同様である。\n\nglm(応答変数 ~ 説明変数, data = データ名, family = binomial(\"logit\"))\n\n　lm()との違いはfamily引数が必要という点だ。ロジスティック回帰分析の場合はfamily = binomial(\"logit\")、本講義では取り上げないものの同目的の分析手法であるプロビット回帰分析の場合はfamily = binomial(\"probit\")を使用する。それでは以下のモデルを推定し、fit1に格納してみよう。\n\\[\n\\mbox{Pr}(\\mbox{Voted} = 1) = \\frac{1}{1 + e^{-(\\alpha + \\beta_1 \\mbox{Knowledge} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Age} + \\beta_4 \\mbox{Educ} + \\beta_5 \\mbox{Ideology})}}\n\\]\n\n\n\nCode 05\n\nfit1 &lt;- glm(Voted ~ Knowledge + Female + Age + Educ + Ideology, \n            data = df, family = binomial(\"logit\"))\n\nsummary(fit1)\n\n\n\nCall:\nglm(formula = Voted ~ Knowledge + Female + Age + Educ + Ideology, \n    family = binomial(\"logit\"), data = df)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.3275  -0.9980   0.5583   0.7739   2.0312  \n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -3.30579    0.32049 -10.315  &lt; 2e-16 ***\nKnowledge    0.59290    0.04294  13.808  &lt; 2e-16 ***\nFemale      -0.31597    0.09628  -3.282 0.001031 ** \nAge          0.02651    0.00320   8.284  &lt; 2e-16 ***\nEduc         0.20827    0.05430   3.835 0.000125 ***\nIdeology     0.02392    0.02254   1.061 0.288586    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 3078.9  on 2554  degrees of freedom\nResidual deviance: 2700.6  on 2549  degrees of freedom\nAIC: 2712.6\n\nNumber of Fisher Scoring iterations: 4\n\n\n\n\n\n\n\n\nロジスティック回帰分析の決定係数?\n\n\n\nロジスティック回帰分析の場合、決定係数（\\(R^2\\)）は表示されない。類似した概念として「疑似決定係数（Pseudo\\(R^2\\)）」があるが、あまり使われない。どうしても疑似決定係数を出したい場合は{DescTools}パッケージのPseduoR2()関数を使う。\n\n\n\nCode 06\n\n# 予め{DescTools}をインストールしておくこと (コンソール上でinstall.packages(\"DescTools\"))\nDescTools::PseudoR2(fit1) # McFaddenの疑似決定係数\n\n\n McFadden \n0.1228484 \n\n\n\n\n　それでは結果を解釈してみよう。線形確率モデルと同様、政治知識の\\(p\\)値は0.001未満であり、「主観的な政治知識と投票参加の間には統計的に有意な関係がある」ことが分かる。また、係数の符号（今回は+）を考えると、「主観的な政治知識が高くなると、投票に参加する確率も上がる」とも言えよう。しかし、政治知識が1単位上がると、投票参加の確率は具体的にどれくらい上がるか。線形確率モデルの場合は係数をそのまま解釈するだけで、具体的な上がりの度合いが分かったが、ロジスティック回帰分析では違う。\n　たとえば、政治知識の係数は約0.593であるが、「主観的な政治知識が1上がると、投票参加の確率が0.593%p上がる」ということは完全な間違いである。これをどう解釈すべきだろうか。\n　たおてば、主観的政治知識が3（Knowledge = 3）、女性（Female = 1）、20歳（Age = 20）、学歴が大卒（Educ = 4）、イデオロギーが中道（Ideology = 5）の場合の投票参加の予測確率を計算してみよう。まず、coef()関数で係数のみを抽出してみよう。\n\n\n\nCode 07\n\nfit1_coef &lt;- coef(fit1) # coef()関数で係数のみを抽出する\nfit1_coef\n\n\n(Intercept)   Knowledge      Female         Age        Educ    Ideology \n-3.30579506  0.59290164 -0.31596873  0.02650943  0.20827008  0.02391612 \n\n\n　続いて、切片には1を、その他の係数には各変数の具体的な値をかけて合計を求める。これが線形予測子だ。\n\n\n\nCode 08\n\nfit1_coef[1] * 1 + fit1_coef[2] * 3 + fit1_coef[3] * 1 + fit1_coef[4] * 20 + fit1_coef[5] * 4 + fit1_coef[6] * 5\n\n\n(Intercept) \n -0.3602094 \n\n\n　同じ長さのベクトルが2つあれば、同じ位置同士の要素が計算されることを考えると、以下のように線形予測子を計算することもできる。\n\n\n\nCode 09\n\nsum(coef(fit1) * c(1, 3, 1, 20, 4, 5))\n\n\n[1] -0.3602094\n\n\n　あとは線形予測子の値をロジスティック関数に代入するだけだ。\n\n\n\nCode 10\n\n1 / (1 + exp(-(-0.3602094))) # 予測確率の計算\n\n\n[1] 0.4109089\n\n\n　結果は0.411であり、これは投票参加の予測確率は約41.1%であるこを意味する（以下の図を参照）。\n\n\n\n\n\n\n\n\n\n　このような作業をより簡単にしてくれるのが、前回の講義で登場した{marginaleffects}パッケージである。このパッケージが提供するpredictions()関数の利用すれば予測確率が簡単に計算できる。使い方は以下の通りである。\n\npredictions(回帰分析オブジェクト名, \n            newdata = datagrid(説明変数名1 = 値,\n                               説明変数名2 = 値,\n                               ...))\n\n　たとえば、先程の例をpredictions()関数で計算してみよう。\n\n\n\nCode 11\n\npredictions(fit1, newdata = datagrid(Knowledge = 3, \n                                     Female    = 1,\n                                     Age       = 20, \n                                     Educ      = 4, \n                                     Ideology  = 5))\n\n\n\n Estimate Std. Error     z   Pr(&gt;|z|)  2.5 % 97.5 % Knowledge Female Age Educ\n   0.4109    0.02923 14.06 &lt; 2.22e-16 0.3551 0.4692         3      1  20    4\n Ideology\n        5\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Voted, Knowledge, Female, Age, Educ, Ideology \n\n\n　datagrid()内で変数を特定の値で指定しない場合、その変数は自動的に平均値が代入される。たとえば、Knowledgeが1〜5の場合の投票参加確率の予測値を計算してみよう。その他の変数はすべて平均値に固定する。計算結果はfit1_predに格納する。\n\n\n\nCode 12\n\nfit1_pred &lt;- predictions(fit1, newdata = datagrid(Knowledge = 1:5))\n\nfit1_pred\n\n\n\n Estimate Std. Error     z   Pr(&gt;|z|)  2.5 % 97.5 % Knowledge\n   0.3294   0.027936 11.79 &lt; 2.22e-16 0.2771 0.3863         1\n   0.4705   0.022009 21.38 &lt; 2.22e-16 0.4277 0.5138         2\n   0.6165   0.013584 45.39 &lt; 2.22e-16 0.5896 0.6428         3\n   0.7442   0.009492 78.40 &lt; 2.22e-16 0.7251 0.7623         4\n   0.8403   0.009821 85.56 &lt; 2.22e-16 0.8201 0.8587         5\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Voted, Female, Age, Educ, Ideology, Knowledge \n\n\n　Knowledgeの値に応じた投票参加の予測確率（0以上、1以下）がEstimate列に出力され、95%信頼区間の下限と上限は2.5%、97.5%列に表示される。ただし、こちらで表示された列名は本当の列名ではない。つまり、このfit1_predを用いて作図をする際、Estimateや2.5%という名前でマッピングすることはできない。今出力された列名はあくまでも読みやすさを重視したものであり、実際の列名は異なる。他にも実際にはあるものの出力されていない列も存在する。すべての列を、本当の列名と共に出力するなら、print()関数を使用し、style = \"data.frame\"を追加しよう。\n\n\n\nCode 13\n\nprint(fit1_pred, style = \"data.frame\")\n\n\n  rowid     type  estimate   std.error statistic       p.value  conf.low\n1     1 response 0.3293996 0.027936256  11.79111  4.337629e-32 0.2771235\n2     2 response 0.4705341 0.022008655  21.37950 2.073214e-101 0.4277233\n3     3 response 0.6165432 0.013584204  45.38677  0.000000e+00 0.5895934\n4     4 response 0.7441789 0.009492179  78.39916  0.000000e+00 0.7251353\n5     5 response 0.8403326 0.009821140  85.56365  0.000000e+00 0.8201318\n  conf.high    Voted   Female      Age     Educ Ideology Knowledge\n1 0.3862676 0.709589 0.458317 50.91155 3.207436 5.400391         1\n2 0.5137829 0.709589 0.458317 50.91155 3.207436 5.400391         2\n3 0.6427954 0.709589 0.458317 50.91155 3.207436 5.400391         3\n4 0.7623355 0.709589 0.458317 50.91155 3.207436 5.400391         4\n5 0.8586556 0.709589 0.458317 50.91155 3.207436 5.400391         5\n\n\n　Estimateの本当の列名はestimate、2.5%と97.5%の本当の列名はconf.low、conf.highであることが分かる。今回はここまで知らなくても良いかも知れないが、第13回（推定結果の可視化）では、この点を理解しないと絶対に作図できないため注意しておこう。\n　話を戻そう。これまでの結果を見れば、KnowledgeがVotedに与える影響は一定ではないことがわかる。たとえば、Knowledgeの値が1の場合、投票に参加する確率は32.94%である。ここでKnowledgeの値が2の場合、投票に参加する確率は47.05%であり、14.11%p増加したことが分かる（14.11「%」でなく、14.11「%p」であることに注意しよう。%pは「パーセントポイント」と読む）。それではKnowledgeの値が3の場合はどうだろうか。この場合の投票参加の確率は61.65%であり、先より14.60%p増加した。また、Knowledgeの値が4の場合の予測確率は74.42%（12.77%p増加）、5の場合のそれはは84.03%で、9.61%p増加したことが分かる。このようにロジスティック関数（から得られた曲線）の形が非線形であることを考えると、ある意味、当たり前のことであろう。\n\n\n\n\n\n\n\n\n\n　したがって、ロジスティック回帰分析を行う場合、「Xが1単位上がるとYはZZ上がる/下がる」という表現はあまり使わず、文章では「正（負）の関係がある」、「統計的に有意な関係は見られない」程度とし、予測確率をグラフとして示すのが一般的である。たとえば、以上の結果を可視化したものが以下の図である。可視化については次回の講義で解説する。\n\n\n\nCode 14\n\nfit1_pred %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Knowledge, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"主観的な政治知識\", \n       y = \"投票に参加する確率の予測値\") +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　Ageのように説明変数の中でも取り得る値が多い場合は以下のような図になってしまい、人によっては少し気持ち悪い図になってしまう。\n\n\n\nCode 14\n\npredictions(fit1, newdata = datagrid(Age = 18:86)) %&gt;%\n  ggplot() +\n  geom_pointrange(aes(x = Age, y = estimate, \n                      ymin = conf.low, ymax = conf.high)) +\n  labs(x = \"年齢 (歳)\", y = \"投票に参加する確率の予測値\") +\n  scale_x_continuous(breaks = c(20, 30, 40, 50, 60, 70, 80), \n                     labels = c(20, 30, 40, 50, 60, 70, 80)) +\n  theme_bw(base_size = 14)\n\n\n\n\n\n\n\n\n\n　したがって、取り得る値が多い連続変数を横軸にする場合は、折れ線グラフ (geom_line())とリボン (geom_ribbon())を併用することが一般的だ。\n\n\n\nCode 14\n\nfit1_pred2 &lt;- predictions(fit1, newdata = datagrid(Age = 18:86))\n\nfit1_pred2 %&gt;%\n  ggplot() +\n  geom_ribbon(aes(x = Age, ymin = conf.low, ymax = conf.high), \n              fill = \"gray80\") + \n  geom_line(aes(x = Age, y = estimate)) +\n  labs(x = \"年齢 (歳)\", y = \"投票に参加する確率の予測値\") +\n  scale_x_continuous(breaks = c(20, 30, 40, 50, 60, 70, 80), labels = c(20, 30, 40, 50, 60, 70, 80)) +\n  theme_bw(base_size = 14)"
  },
  {
    "objectID": "materials/macro/regression1.html",
    "href": "materials/macro/regression1.html",
    "title": "第8回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression1.html#スライド",
    "href": "materials/macro/regression1.html#スライド",
    "title": "第8回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression1.html#単回帰分析",
    "href": "materials/macro/regression1.html#単回帰分析",
    "title": "第8回講義資料",
    "section": "単回帰分析",
    "text": "単回帰分析\n　まず、今回の実習に必要なパッケージ（{tidyverse}、{summarytools}、{modelsummary}）を読み込み、実習用データを読み込む。単回帰分析の実習用データはBeer.csvであり、LMSからダウンロード可能だ。以下のコードはBeer.csvがプロジェクト内のDataフォルダー内にアップロードされている場合の例である。データの保存先がDataフォルダーではない場合、適宜フォルダー名を修正すること。読み込んだデータはbeer_dfという名のオブジェクトとして作業環境内に格納する。\n　データを読み込んだら、データの中身を出力する。\n\n\n\nCode 01\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(modelsummary)\n\nbeer_df &lt;- read_csv(\"Data/Beer.csv\")\n\nbeer_df\n\n\n# A tibble: 69 × 5\n    Year Month Temperature Icecream  Beer\n   &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1  2016     1         6.1      464   452\n 2  2016     2         7.2      397   584\n 3  2016     3        10.1      493   750\n 4  2016     4        15.4      617   835\n 5  2016     5        20.2      890   794\n 6  2016     6        22.4      883   961\n 7  2016     7        25.4     1292  1025\n 8  2016     8        27.1     1387  1021\n 9  2016     9        24.4      843   748\n10  2016    10        18.7      621   730\n# … with 59 more rows\n\n\n　{summarytools}のdescr()関数を使って記述統計量を出力する。beer_dfは数値型変数のみで構成されているため、ダミー変数に変換する変数はなく、そのままdescr()に渡して良い。\n\n\n\nCode 02\n\nbeer_df %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \nbeer_df  \nN: 69  \n\n                       Mean   Std.Dev       Min       Max   N.Valid\n----------------- --------- --------- --------- --------- ---------\n             Year   2018.39      1.67   2016.00   2021.00     69.00\n            Month      6.30      3.41      1.00     12.00     69.00\n      Temperature     16.58      7.48      4.70     29.10     69.00\n         Icecream    790.65    335.15    382.00   1658.00     60.00\n             Beer    698.19    222.40    227.00   1313.00     69.00\n\n\n　今回は気温（Temperature）とアサヒスーパードライの販売量（Beer）の関係を確認したい。この2つの変数は連続変数であるため、関係性を見る方法としてまず考えられるのが相関分析である。前回講義の内容を参照し、2つの変数の相関係数を統計的有意性検定を行ってみよう（\\(\\alpha = 0.05\\)を使用）。\n\n\n\nCode 03\n\ncor.test(beer_df$Temperature, beer_df$Beer)\n\n\n\n    Pearson's product-moment correlation\n\ndata:  beer_df$Temperature and beer_df$Beer\nt = 2.0899, df = 67, p-value = 0.04042\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.01137629 0.45729570\nsample estimates:\n      cor \n0.2473909 \n\n\n　相関係数は約0.247であり、（社会科学としては）そこそこ強い正の相関関係だと考えられる。つまり、気温が高い月はビールもよく売れていることを意味する。また、この相関関係は\\(p\\)値が約0.040であることから統計的に有意な相関関係とも言えよう。しかし、もう一つ知りたいことがある。それは「気温が1度上がればビールはどれほどもっと売れるか」である。相関係数はこの問いに対する答えを提供しない。ここで回帰分析と出番である。回帰分析は変数間の関係が線形関数で説明できると仮定する（線形性の仮定）。\\(x\\)の変動による\\(y\\)の変動は\\(y = \\alpha + \\beta \\times x\\)のような一次関数として表現することができ、ここでの\\(x\\)が気温、\\(y\\)がアサヒスーパードライの販売量である。回帰分析はこの一次関数の切片（\\(\\alpha\\)）と傾き（\\(\\beta\\)）を推定する手法である。\n\n\n\n\n\n\nもう少し詳しく!\n\n\n\n　線形回帰分析の場合、切片と傾き以外にももう一つ推定対象があり、それは誤差項の分散（\\(\\sigma\\)）である。また、切片と傾きは\\(\\alpha\\)、\\(\\beta\\)でなく、\\(\\beta_0\\)、\\(\\beta_1\\)と表記するケースもある。\n\n\n　一次関数の切片と傾きがわかれば以下のような直線（=回帰直線）を描くことができる。\n\n\n\nCode 04\n\nbeer_df %&gt;%\n  ggplot(aes(x = Temperature, y = Beer)) +\n  geom_point(size = 3) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"気温 (摂氏)\", y = \"アサヒ・スーパードライ販売量 (万箱)\") +\n  theme_bw(base_size = 16)\n\n\n\n\n\n\n\n\n\n　この回帰直線ってどのように決まるだろうか。それは残差の二乗和が最小化されるような直線である。残差とは任意の直線を引いた際、各点（観測値）と直線間の距離を意味する。観測値と直線間の距離は最短距離でなく、横軸に対して垂直方向の距離であることに注意すること（以下の図を参照）。ただし、この残差には符号が存在し、正と負が相殺される。したがって、全て正にするために残差を二乗する（絶対値を使うこともできるが、微分が大変なので使われない）。\n\n\n\n\n\n\n\n\n\n　この直線の切片と傾きはR内臓のlm()関数で簡単に計算できる。第一引数は回帰式であり、応答変数 ~ 説明変数と書く。第二引数はdataであり、回帰式に登場した変数が格納されているデータのオブジェクト名を指定する。今回の回帰式はBeer ~ Temperatureであり、この2つの変数はbeer_dfにあるため、data = beer_dfと指定する。推定結果は何らかの名前を付けて作業スペース内に格納する必要があるが、今回はbeer_fitと名付ける。推定結果を出力する際はsummary()関数を使用すること。\n\n\n\nCode 05\n\nbeer_fit &lt;- lm(Beer ~ Temperature, data = beer_df)\n\nsummary(beer_fit)\n\n\n\nCall:\nlm(formula = Beer ~ Temperature, data = beer_df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-392.8 -169.1  -10.8  115.1  677.2 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  576.227     63.941   9.012 3.64e-13 ***\nTemperature    7.355      3.519   2.090   0.0404 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 217.1 on 67 degrees of freedom\nMultiple R-squared:  0.0612,    Adjusted R-squared:  0.04719 \nF-statistic: 4.368 on 1 and 67 DF,  p-value: 0.04042\n\n\n　(Intercept)は切片を、その以下の行は各変数の傾きを意味する。点推定値はEstimate列である。切片は約576.227、気温の傾きは7.355であることから以下のような関係が分かる。\n\nアサヒスーパードライ販売量の予測値 = 576.227 + 7.355 \\(\\times\\) 気温\n\n　これは「Temperatureが1上がると、Beerの値が平均的に7.355上がる」ことを意味する。Temperatureの1は1度、Beerの1は1万箱であるため、これをより自然な形で解釈すると、「気温が1度上がると、アサヒスーパードライの販売量は平均的に約7.355万箱上がる」となる。また、気温とビールの販売量間の関係が統計的に有意な関係かを確認するためには、傾きの統計的有意性検定が必要である。帰無仮説は「傾きは0である（=関係がない）」であり、今回得られた\\(p\\)値は約0.040であることから、統計的に有意な関係があると考えられる。もし、\\(p \\geq 0.05\\)の場合は、「気温とビール販売量の間には統計的に有意な関係があるとは言えない」、または「気温とビール販売量の間には統計的に有意な関係が確認できない」こととなる。\n\n\n\n\n\n\n予測値 \\(\\neq\\) 観測値\n\n\n\n推定の結果、回帰式は「アサヒスーパードライ販売量の予測値 = 576.227 + 7.355 \\(\\times\\) 気温」のようになる。ここで注意すべき点は「予測値」だ。たとえば、2016年5月の場合、気温は20.2度である。これを代入すると「576.227 + 7.355 \\(\\times\\) 20.2 \\(\\simeq\\) 725」、つまり725万箱であり、これが予測値である。しかし、実際の販売量（観測値）は794万箱であり、約69万箱の差が存在する。この69万箱が2016年5月の残差であり、回帰分析はこの残差を最小化するような直線を推定する手法である。2つの変数間の相関係数が1、または-1でない限り、残差が0になることはない。\n\n\n　本モデルの説明力は決定係数から確認できる。Rの場合、デフォルトで2種類の決系係数が出力される。Multiple R-squaredが通常の決定係数、Adjusted R-squaredが自由度調整済み決定係数である。通常の決定係数は説明変数が増えると必ず大きくなるため、モデルのパフォーマンスの判断材料としては望ましくないとされる。一般的に、モデルはシンプルであるほど良い（オッカムの剃刀）と考えられるため、多少決定係数が小さくても説明変数の少ない方が良いモデルとされる。一方、自由度調整済み決定係数は説明変数が増えると決定係数にペナルティーを課するため、こちらの方がより適切である。いずれの決定係数も0以上1以下の値を取り、1に近いほど説明力の高いモデルであるとされる。"
  },
  {
    "objectID": "materials/macro/regression1.html#重回帰分析",
    "href": "materials/macro/regression1.html#重回帰分析",
    "title": "第8回講義資料",
    "section": "重回帰分析",
    "text": "重回帰分析\n　以上の例のように、説明変数が1つのみの回帰分析は「単回帰分析」と呼ばれる。しかし、実際のデータ分析の場面において、ある応答変数を1つの変数だけで説明することは滅多になく、複数の説明変数を回帰式に投入する。このように説明変数が2つ以上の回帰分析を「重回帰分析」と呼ぶ。以下では重回帰分析の実装、解釈、モデル間の比較について解説する。\n　まず、実習に必要なデータを読み込む。重回帰分析の実習用データはPrefData.csvであり、LMSからダウンロード可能だ。以下のコードはPrefData.csvがプロジェクト内のDataフォルダー内にアップロードされている場合の例である。データの保存先がDataフォルダーではない場合、適宜フォルダー名を修正すること。読み込んだデータはpref_dfという名のオブジェクトとして作業環境内に格納する。\n　データを読み込んだら、データの中身を出力する。\n\n\n\nCode 06\n\npref_df &lt;- read_csv(\"Data/PrefData.csv\")\n\npref_df\n\n\n# A tibble: 47 × 6\n      ID Pref      Jimin Zaisei Over65 Primary\n   &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 Hokkaido   32.8  0.435   29.2    7.00\n 2     2 Aomori     40.4  0.341   30.2   12.0 \n 3     3 Iwate      34.9  0.352   30.5   10.6 \n 4     4 Miyagi     36.7  0.614   25.9    4.36\n 5     5 Akita      43.5  0.309   33.9    9.62\n 6     6 Yamagata   42.5  0.351   30.9    9.19\n 7     7 Fukushima  33.8  0.533   28.8    6.48\n 8     8 Ibaraki    40.6  0.637   27.1    5.64\n 9     9 Tochigi    38.8  0.640   26.3    5.52\n10    10 Gunma      42.1  0.625   28.1    4.96\n# … with 37 more rows\n\n\n　分析の前にデータの記述統計量を出力する。今回は各行の番号（ID）と都道府県名（Pref）列の記述統計量は不要であるため、descr()関数に渡す前に2つの列を除外する。\n\n\n\nCode 07\n\npref_df %&gt;%\n  select(-c(ID, Pref)) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\n\nDescriptive Statistics  \npref_df  \nN: 47  \n\n                 Mean   Std.Dev     Min     Max   N.Valid\n------------- ------- --------- ------- ------- ---------\n        Jimin   38.71      5.43   22.12   48.24     47.00\n       Zaisei    0.51      0.19    0.25    1.10     47.00\n       Over65   28.52      2.72   19.76   33.94     47.00\n      Primary    5.64      3.14    0.39   12.03     47.00\n\n\n　ここでは「都道府県の財政力指数（Zaisei）が自民党得票率（Jimin）に与える影響」を調べるとし、まずは単回帰分析を実装する。\n\n自民党の得票率の予測値 = \\(\\alpha\\) + \\(\\beta \\times\\) 財政力指数\n\n　推定結果はjimin_fit1という名のオブジェクトとして作業環境内に格納し、summary()関数で推定結果を確認しよう。\n\n\n\nCode 08\n\njimin_fit1 &lt;- lm(Jimin ~ Zaisei, data = pref_df)\n\nsummary(jimin_fit1)\n\n\n\nCall:\nlm(formula = Jimin ~ Zaisei, data = pref_df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-13.216  -2.900   0.652   3.526   9.110 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   45.291      2.049  22.106  &lt; 2e-16 ***\nZaisei       -13.012      3.800  -3.424  0.00133 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.89 on 45 degrees of freedom\nMultiple R-squared:  0.2067,    Adjusted R-squared:  0.1891 \nF-statistic: 11.72 on 1 and 45 DF,  p-value: 0.001326\n\n\n　推定結果から以下のような一次関数が得られた。\n\n自民党の得票率の予測値 = 45.291 - 13.012 \\(\\times\\) 財政力指数\n\n　これは「財政力指数が1上がると、自民党の得票率の予測値は約13.012%p下がる」ことを意味し、この関係は統計的に有意である（\\(p\\) = 0.001）。\n　ここで注意すべき点が2つある。1点目は係数の符号である。今回得られたZaiseiの傾き係数は負（マイナス）である。したがって、解釈の際は「\\(x\\)が上がると、\\(y\\)は下がる」と解釈する必要がある。2点目は予測値の単位だ。Jimin変数の場合、単位は「%（パーセント）」であるが、解釈の際は「%p（パーセントポイント）」となる。たとえば、財政力指数が0の都道府県の場合、自民党得票率の予測値は45.291%である。一方、財政力指数が1の場合のそれは32.279%だ。財政力指数が1あがったところで自民党得票率は45.291%から32.279%へ下がる。つまり、「45.291% - 32.279%」分下がるということであるが、この場合「13.012%下がる」と解釈してはいけない。正しい解釈は「13.012%p下がる」だ。この2つには大きな違いがある。たとえば、得票率が20%から40%へ上昇した場合の解釈は「100%上がる」か「20%p上がる」どっちかである。「%」の差分は「%」でなく「%p」であることに注意すること。\n　話を戻そう。我々は「原因以外の重要な要因」を考慮する必要があることを既に知っている（リサーチデザインの講義資料を参照）。とりわけ、\\(y\\)に影響を与えそうな要因の中には、\\(x\\)にも影響を与えそうな要因もある。この第3の変数を\\(z\\)と呼ぼう。\n\n\n\n\n\n\n\n\n\n　この\\(z\\)に該当する変数は無限に存在するが、手元のデータ（pref_df）内の変数が限られている。それでも出来る限り、手元も変数を最大限活用したい。たとえば、65歳以上人口の割合（Over65）はどうだろうか。基本的に高齢者が多い地域ほど財政力指数が低い傾向がある。また、政治学では高齢者ほど政治的に保守的イデオロギーを持つとも言われている（加齢効果）。したがって、65歳以上人口の割合（Over65）は\\(z\\)に該当すると考えられる。このような\\(z\\)は回帰分析の説明変数として加える必要がある。\n　それでは先程の単回帰モデルに65歳以上人口の割合（Over65）を加えた以下の回帰モデルを推定する。\n\n自民党の得票率の予測値 = \\(\\alpha\\) + \\(\\beta_1 \\times\\) 財政力指数 + \\(\\beta_2 \\times\\) 65歳以上人口の割合\n\n　推定対象は\\(\\alpha\\)と\\(\\beta_1\\)、\\(\\beta_2\\)である。実装の方法は単回帰分析と同じであり、説明変数を+でつなぐだけである。推定結果はjimin_fit2という名のオブジェクトとして作業環境内に格納し、summary()関数で推定結果を確認しよう。\n\n\n\nCode 09\n\njimin_fit2 &lt;- lm(Jimin ~ Zaisei + Over65, data = pref_df)\n\nsummary(jimin_fit2)\n\n\n\nCall:\nlm(formula = Jimin ~ Zaisei + Over65, data = pref_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.6140  -2.8382   0.8015   3.1558   9.6759 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept)  15.8910    11.3983   1.394   0.1703  \nZaisei       -4.5472     4.8211  -0.943   0.3507  \nOver65        0.8810     0.3366   2.617   0.0121 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.6 on 44 degrees of freedom\nMultiple R-squared:  0.3135,    Adjusted R-squared:  0.2823 \nF-statistic: 10.05 on 2 and 44 DF,  p-value: 0.0002545\n\n\n　推定結果から以下のような一次関数が得られた。\n\n自民党の得票率の予測値 = 15.891 - 4.547 \\(\\times\\) 財政力指数 + 0.881 \\(\\times\\) 65歳以上人口の割合\n\n　以上の結果を解釈すると「65歳以上人口の割合が同じである場合、財政力指数が1上がると、自民党の得票率の予測値は約4.547%p下がる」となる。\n　ここでも解釈の際、2つの注意点がある。1点目は変数の統制である。重回帰分析の結果を解釈する際は、解釈の対象とする変数以外の変数の値が同じあることを意識する必要がある。「65歳以上人口の割合の効果を除いた財政力指数の影響」とも言えよう。このような統制変数によって係数の大きさも変わりうる。実際、単回帰分析では-13.012だった点推定値が-4.547となった。これは単回帰分析から得られた-13.012%pという効果には、実際のところ、65際以上人口の割合の効果が混ざっていたことを意味する。2点目は統計的有意性である。今回の例だとZaiseiの係数の\\(p\\)値は約0.351となり、0.05を上回る。単回帰分析とは違って、ZaiseiとJiminの間には統計的に有意な関係があるとは言えないこととなる。したがって、正しい解釈は「他の変数が同じである場合、財政力指数と自民党の得票率の間には統計的に有意な関係があるとは言えない」、あるいは「他の変数が同じである場合、財政力指数が1上がると、自民党の得票率の予測値は約4.547%p下がるものの統計的に有意な関係があるとは言えない」となる。\n　説明変数はもっと増やすこともできる（厳密には\\(n-1\\)個まで投入できる）。たとえば、当該都道府県の第一次産業の割合（Primary）はどうだろうか。自民党の固い支持基盤としての農協（JA）、そして財政力指数の大きい部分を製造業（第二次産業）、サービス業（第三次産業）が占めることを考えると、これもまた「第3の変数」であろう。先程のjimin_fit2モデルにPrimaryを追加したモデルも推定してみよう。\n\n\n\nCode 10\n\njimin_fit3 &lt;- lm(Jimin ~ Zaisei + Over65 + Primary, data = pref_df)\n\nsummary(jimin_fit3)\n\n\n\nCall:\nlm(formula = Jimin ~ Zaisei + Over65 + Primary, data = pref_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.6296  -2.8400   0.8063   3.1514   9.6538 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept) 15.914364  11.576998   1.375   0.1764  \nZaisei      -4.630626   6.131046  -0.755   0.4542  \nOver65       0.883231   0.355203   2.487   0.0169 *\nPrimary     -0.008154   0.363066  -0.022   0.9822  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.654 on 43 degrees of freedom\nMultiple R-squared:  0.3135,    Adjusted R-squared:  0.2656 \nF-statistic: 6.547 on 3 and 43 DF,  p-value: 0.0009578\n\n\n　推定結果から以下のような一次関数が得られた。\n\n自民党の得票率の予測値 = 15.914 - 4.631 \\(\\times\\) 財政力指数 + 0.883 \\(\\times\\) 65歳以上人口の割合 - 0.008 \\(\\times\\) 第一産業従事者の割合\n\n　これまで3つのモデルを推定してきたが、モデル間の比較する際には{modelsummary}パッケージが便利だ。{modelsummary}のmodelsummary()関数の第一引数として推定結果のオブジェクトをlist()でまとめて入れるだけである。\n\n\n\nCode 11\n\n# ない場合はinstall.packages(\"modelsummary\")でインストール\nlibrary(modelsummary) \nmodelsummary(list(jimin_fit1, jimin_fit2, jimin_fit3))\n\n\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n\n(Intercept)\n45.291\n15.891\n15.914\n\n\n\n(2.049)\n(11.398)\n(11.577)\n\n\nZaisei\n−13.012\n−4.547\n−4.631\n\n\n\n(3.800)\n(4.821)\n(6.131)\n\n\nOver65\n\n0.881\n0.883\n\n\n\n\n(0.337)\n(0.355)\n\n\nPrimary\n\n\n−0.008\n\n\n\n\n\n(0.363)\n\n\nNum.Obs.\n47\n47\n47\n\n\nR2\n0.207\n0.314\n0.314\n\n\nR2 Adj.\n0.189\n0.282\n0.266\n\n\nAIC\n286.5\n281.7\n283.7\n\n\nBIC\n292.1\n289.1\n293.0\n\n\nLog.Lik.\n−140.269\n−136.869\n−136.869\n\n\nF\n11.724\n10.048\n6.547\n\n\nRMSE\n4.79\n4.45\n4.45\n\n\n\n\n\n\n\n　カッコで囲まれている数値は標準誤差（Standard Error; SE）である。一般的な学術論文では\\(p\\)値よりも標準誤差の掲載が一般的である（標準誤差から\\(p\\)値の計算は簡単だが、その逆は面倒だから）。もし、標準誤差の代わりに\\(p\\)値を掲載する場合は以下のようにコードを修正する（statistic引数の追加）。また、coef_rename引数で変数名の任意の文字列に変更することも出来、notes引数で注を付けることもできる。\n\n\n\nCode 12\n\nmodelsummary(list(jimin_fit1, jimin_fit2, jimin_fit3),\n             statistic   = \"({p.value})\",\n             coef_rename = c(\"(Intercept)\" = \"切片\",\n                             \"Zaisei\"      = \"財政力指数\",\n                             \"Over65\"      = \"65歳以上人口の割合\",\n                             \"Primary\"     = \"第一次産業従事者の割合\"),\n             notes       = \"注: カッコ内はp値\")\n\n\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n\n切片\n45.291\n15.891\n15.914\n\n\n\n(\n(0.170)\n(0.176)\n\n\n財政力指数\n−13.012\n−4.547\n−4.631\n\n\n\n(0.001)\n(0.351)\n(0.454)\n\n\n65歳以上人口の割合\n\n0.881\n0.883\n\n\n\n\n(0.012)\n(0.017)\n\n\n第一次産業従事者の割合\n\n\n−0.008\n\n\n\n\n\n(0.982)\n\n\nNum.Obs.\n47\n47\n47\n\n\nR2\n0.207\n0.314\n0.314\n\n\nR2 Adj.\n0.189\n0.282\n0.266\n\n\nAIC\n286.5\n281.7\n283.7\n\n\nBIC\n292.1\n289.1\n293.0\n\n\nLog.Lik.\n−140.269\n−136.869\n−136.869\n\n\nF\n11.724\n10.048\n6.547\n\n\nRMSE\n4.79\n4.45\n4.45\n\n\n\n 注: カッコ内はp値\n\n\n\n\n\n\n\n\n\n\n\n　自由度調整済み決定係数は「R2 Adj.」行から確認できる。最も高いモデルは財政力指数と65歳以上人口の割合のみに構成されて2番目のモデル（jimin_fit2）である。第一次産業従事者の割合まで追加した3番目のモデルは、やや低い決定係数が得られた。追加された「第一次産業従事者の割合」の係数が非常に小さく、統計的に有意な関係も見られない。つまり、どちらかの言えば「不要（\\(\\simeq\\)あっても良いが、入れて得することもない）」に近い変数であることを意味する。説明力が同じであれば、説明変数は少ないことに越したことはないので、モデル2がより望ましいと評価できよう。"
  },
  {
    "objectID": "materials/macro/regression3.html",
    "href": "materials/macro/regression3.html",
    "title": "第10回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression3.html#スライド",
    "href": "materials/macro/regression3.html#スライド",
    "title": "第10回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/regression3.html#セットアップ",
    "href": "materials/macro/regression3.html#セットアップ",
    "title": "第10回講義資料",
    "section": "セットアップ",
    "text": "セットアップ"
  },
  {
    "objectID": "materials/macro/research_design.html",
    "href": "materials/macro/research_design.html",
    "title": "第2・3回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/macro/research_design.html#スライド",
    "href": "materials/macro/research_design.html#スライド",
    "title": "第2・3回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/dataset.html",
    "href": "materials/micro/dataset.html",
    "title": "第6回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/dataset.html#スライド",
    "href": "materials/micro/dataset.html#スライド",
    "title": "第6回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/datatype.html",
    "href": "materials/micro/datatype.html",
    "title": "第7回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/datatype.html#スライド",
    "href": "materials/micro/datatype.html#スライド",
    "title": "第7回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/datatype.html#データ型とは",
    "href": "materials/micro/datatype.html#データ型とは",
    "title": "第7回講義資料",
    "section": "データ型とは",
    "text": "データ型とは\n　ベクトル（vector）はデータ構造（data structure）であり、ベクトル内の一つ一つの要素は数値や、文字など様々なデータ型（data type）の値を取り得る。\n\n\n\nCode 01\n\nobj1 &lt;- c(1, 3, 5, 7, 9, 11)\nobj2 &lt;- c(\"Kansai\", \"Kwansei Gakuin\", \"Doshisha\", \"Ritsumeikan\")\nobj3 &lt;- c(TRUE, FALSE, FALSE)\nobj4 &lt;- \"R\"\n\n\n\nobj1: 長さ6の数値型ベクトル\nobj2: 長さ4の文字型ベクトル\nobj3: 長さ3の論理型ベクトル\nobj4: 長さ1の文字型ベクトル\n\n長さ1のベクトルは原子ベクトル（atomic vector）とも呼ばれる\n\n\n\n\n\n\n\n\nベクトルの長さが知りたい\n\n\n\nベクトルの長さはlength(オブジェクト名)で計算できる。たとえば、Object2の長さは4である。\n\n\n\nCode 02\n\nlength(obj2)\n\n\n[1] 4\n\n\n\n\n　他にもRには様々なデータ型が使える。以下のリストはRが提供するデータ型の一部であり、太字は本講義で紹介するデータ型である。ここでは説明を割愛するが日付型（Date型）もよく使われるデータ型であり、それそれの詳細は教科書第8章を参照されたい。\n\nLogical\nNumeric\nComplex\nCharacter\nFactor\nDate\nNA\nNULL\nNaN\nInf\nその他"
  },
  {
    "objectID": "materials/micro/datatype.html#データ型の確認",
    "href": "materials/micro/datatype.html#データ型の確認",
    "title": "第7回講義資料",
    "section": "データ型の確認",
    "text": "データ型の確認\n　ベクトル内の要素は全て同じデータ型を取るが、そのデータ型を確認するためには、class(ベクトル・オブジェクト名)関数を使用する。先ほど作成した4つのベクトルのデータ型を確認してみよう。\n\n\n\nCode 03\n\nclass(obj1) # 数値型 (numeric)\n\n\n[1] \"numeric\"\n\n\n\n\n\nCode 04\n\nclass(obj2) # 文字型 (character)\n\n\n[1] \"character\"\n\n\n\n\n\nCode 05\n\nclass(obj3) # 論理型 (logical)\n\n\n[1] \"logical\"\n\n\n\n\n\nCode 06\n\nclass(obj4) # 文字型 (character)\n\n\n[1] \"character\""
  },
  {
    "objectID": "materials/micro/datatype.html#logical型",
    "href": "materials/micro/datatype.html#logical型",
    "title": "第7回講義資料",
    "section": "Logical型",
    "text": "Logical型\n　論理型（logical型）とはTRUEとFALSEのみで構成されるデータ型である。論理演算子の計算結果は必ず以下のように論理型の結果が返される。\n\n\n\nCode 07\n\n(2 + 3) == (4 + 1)\n\n\n[1] TRUE\n\n\n　この結果を代入演算子（&lt;-）を使って、オブジェクトに格納するとlogical型ベクトルが作業環境内に格納される。\n\n\n\nCode 08\n\nlogi_vec1 &lt;- (2 + 3) == (2 * 3)\nlogi_vec1\n\n\n[1] FALSE\n\n\n\n\n\nCode 09\n\nclass(logi_vec1)\n\n\n[1] \"logical\"\n\n\nあるオブジェクトがlogical型か否かを判定するにはis.logical()を使用する。\n\n\n\nCode 10\n\nis.logical(FALSE)\n\n\n[1] TRUE\n\n\n\n作成\n　Logical型ベクトルを作成するためには、通常のベクトルと同様、c()関数で作成する。\n\n\n\nCode 11\n\nlogi_vec2 &lt;- c(TRUE, FALSE, TRUE, TRUE, FALSE)\nlogi_vec2\n\n\n[1]  TRUE FALSE  TRUE  TRUE FALSE\n\n\n　ここでのTRUEはT、FALSEはFと略すことが出来るが、推奨しない。必ずTRUEとFALSEで表記すること。\n\n\n\nCode 12\n\nlogi_vec3 &lt;- c(T, F, T, T, F)\nlogi_vec3\n\n\n[1]  TRUE FALSE  TRUE  TRUE FALSE\n\n\n\n\n注意点\n　Logical型の値であるTRUEとFALSEを\"で囲んではいけない。もし、一つでも\"で囲んでしまうと、そのベクトルlogical型でなく、後ほど紹介するcharacter型へ変換される。\n\n\n\nCode 13\n\n# 2つ目のFALSEを\"で囲むと...\nlogi_vec4 &lt;- c(TRUE, \"FALSE\", TRUE, TRUE, FALSE)\nlogi_vec4\n\n\n[1] \"TRUE\"  \"FALSE\" \"TRUE\"  \"TRUE\"  \"FALSE\"\n\n\n\n\n\nCode 14\n\nclass(logi_vec4)\n\n\n[1] \"character\"\n\n\n\n\n使い方\n　直接TRUEやFALSEが格納されたベクトルを使う場面はほとんどない。つまり、ほとんどのlogical型ベクトルは何らかの論理演算子から返されたものである。以下の例は、my_vec1から奇数の要素のみを抽出するために、logi_vec5というベクトルを作成する例である。\n\n\n\nCode 15\n\nmy_vec1  &lt;- c(89, 28, 93, 64, 6)\nlogi_vec5 &lt;- my_vec1 %% 2 == 1 # my_vec1を2で割ったら余りが1か\nlogi_vec5\n\n\n[1]  TRUE FALSE  TRUE FALSE FALSE\n\n\n\n\n\nCode 16\n\nclass(logi_vec5)\n\n\n[1] \"logical\"\n\n\n\n\n\nCode 17\n\nmy_vec1[logi_vec5] # my_vec1から奇数のみ抽出\n\n\n[1] 89 93\n\n\n\n\n\nCode 18\n\nmy_vec1[my_vec1 %% 2 == 0] # 直接式を入れてもOK\n\n\n[1] 28 64  6"
  },
  {
    "objectID": "materials/micro/datatype.html#numeric型",
    "href": "materials/micro/datatype.html#numeric型",
    "title": "第7回講義資料",
    "section": "Numeric型",
    "text": "Numeric型\n\n\n\nCode 19\n\nnum_vec1 &lt;- c(2, 0, 0, 1, 3)\nnum_vec1\n\n\n[1] 2 0 0 1 3\n\n\n\n\n\nCode 20\n\nclass(num_vec1) # num_vec1のデータ型\n\n\n[1] \"numeric\"\n\n\n\n\n\nCode 21\n\nis.numeric(num_vec1) # num_vec1がnumeric型か否かを判定\n\n\n[1] TRUE\n\n\n\nNumeric型の演算\n　以下ではnumeric型ベクトル同士の演算について解説する。Numeric型ベクトル同士は常に可能であるが、ベクトルの長さによって動きがやや異なる（ベクトル・リサイクル）。ベクトル・リサイクルは第3回にて解説したが、ここで改めて解説する。\nケース1: 同じ長さのベクトル同士の演算\n　2つのベクトルの長さが同じ場合、同じ位置の要素同士の演算となる。したがって、返ってくる結果（ベクトル）の長さは元のベクトルの長さと同じとなる。たとえば、長さ5の2つのベクトル同士の演算を考えてみよう。\n\n\n\nCode 22\n\nnum_vec2 &lt;- c(1, 2, 3, 4, 5)  # 長さ5のnumeric型ベクトル\nnum_vec3 &lt;- c(11, 7, 5, 3, 2) # 長さ5のnumeric型ベクトル\n\nnum_vec2 + num_vec3 # c(1+11, 2+7, 3+5, 4+3, 5+2)\n\n\n[1] 12  9  8  7  7\n\n\n　この場合、num_vec2の1番目の要素（1）とnum_vec3の1番目の要素（11）の足し算、num_vec2の2番目の要素（2）とnum_vec3の2番目の要素（7）の足し算、…が行われる。\nケース2: 長さ2以上 (A)と長さ1 (B)同士の演算\n　この場合、(A)のそれぞれ要素と(B)の要素同士で演算を行う。長さ5のベクトルに対し、たとえば長さ1のベクトルがc(10)であれば、自動的にc(10, 10, 10, 10, 10)へ変換されたと考えても良いだろう。\n\n\n\nCode 23\n\nnum_vec4 &lt;- 10 # 長さ1の場合、c()はなくてもOK\n\nnum_vec3 / num_vec4 # c(11/10, 7/10, 5/10, 3/10, 2/10)\n\n\n[1] 1.1 0.7 0.5 0.3 0.2\n\n\nケース3: 長さ2以上と長さ2以上で長さが異なる場合\n　この場合、より短いの要素がリサイクルされる。長さ5のベクトルに対し、たとえば長さ3のベクトルがc(1, 2, 3)であれば、自動的にc(1, 2, 3, 1, 2)へ変換されたと考えても良いだろう。これをRでは「ベクトル・リサイクル」（vector recycle）と呼ぶ。ちなみに、この場合、警告が表示される場合もある。これは長い方のベクトルの長さが短い方の長さの倍数になっていない場合に出力される。しかし、計算そのものには問題がない。\n\n\n\nCode 24\n\nnum_vec5 &lt;- c(1, 2, 3)\n\nnum_vec3 * num_vec5 # c(11*1, 7*2, 5*3, 3*1, 2*2)\n\n\n[1] 11 14 15  3  4\n\n\n\n\n注意点\n　Logical型と同じ理由でnumeric型の値を\"で囲んではいけない。一つでも\"で囲むとNumeric型でなく、Character型へ変換されてしまう。\n\n\n\nCode 25\n\n# 4つ目のFALSEを\"で囲むと...\nnum_vec6 &lt;- c(38, 29, 10, \"94\", 51)\nnum_vec6\n\n\n[1] \"38\" \"29\" \"10\" \"94\" \"51\"\n\n\n\n\n\nCode 26\n\nclass(num_vec6)\n\n\n[1] \"character\""
  },
  {
    "objectID": "materials/micro/datatype.html#character型",
    "href": "materials/micro/datatype.html#character型",
    "title": "第7回講義資料",
    "section": "Character型",
    "text": "Character型\n　Character型（文字型）は要素が\"で囲まれたデータ型である。\n\n\n\nCode 27\n\nchar_vec1 &lt;- c(\"Kansai\", \"Kwansei-gakuin\", \"Doshisha\", \"Ritsmeikan\")\nchar_vec1\n\n\n[1] \"Kansai\"         \"Kwansei-gakuin\" \"Doshisha\"       \"Ritsmeikan\"    \n\n\n\n\n\nCode 28\n\nclass(char_vec1)\n\n\n[1] \"character\"\n\n\n\n\n\nCode 29\n\nis.character(char_vec1) # char_vec1がcharacter型であればTRUE\n\n\n[1] TRUE\n\n\n\n文字列の長さ\n　文字列ベクトルの長さを求める場合はlength()関数を使用する。\n\n\n\nCode 30\n\nlength(char_vec1)\n\n\n[1] 4\n\n\n　ただし、length()関数はベクトルの長さを求める関数であって、各要素の文字数を求める関数ではない。各要素の文字数を求める場合はnchar()関数を使用する。\n\n\n\nCode 31\n\nnchar(char_vec1)\n\n\n[1]  6 14  8 10\n\n\n\n\n文字の結合\n　本講義では使うことはほとんどないものの、頻繁に使う関数としてpaste()関数（またはpaste0()関数）がある。これは2つの文字列を結合する関数であり、使い方はpaste(Character型ベクトル, Character型ベクトル)である。\nケース1: char_vec1の全要素の後に\"University\"を付ける。\n\n\n\nCode 32\n\nchar_vec2 &lt;- paste(char_vec1, \"University\")\nchar_vec2 # \"University\"の前に自動的にスペースが入る\n\n\n[1] \"Kansai University\"         \"Kwansei-gakuin University\"\n[3] \"Doshisha University\"       \"Ritsmeikan University\"    \n\n\n　この場合、大学名（たとえば、\"Kansai\"）と\"University\"の間には自動的にスペースが入る。スペースを無くしたい場合は、paste()内にsep = \"\"を追加するか、paste0()関数を使用する。このsep引数は結合される2つの文字列の間に入る文字を意味し、デフォルトはスペース（\" \"）である。\n\n\n\nCode 33\n\npaste(char_vec1, \"University\", sep = \"\")\n\n\n[1] \"KansaiUniversity\"         \"Kwansei-gakuinUniversity\"\n[3] \"DoshishaUniversity\"       \"RitsmeikanUniversity\"    \n\n\n\n\n\nCode 34\n\npaste0(char_vec1, \"University\")\n\n\n[1] \"KansaiUniversity\"         \"Kwansei-gakuinUniversity\"\n[3] \"DoshishaUniversity\"       \"RitsmeikanUniversity\"    \n\n\n\n\n\nCode 35\n\npaste(char_vec1, \"University\", sep = \"-\")\n\n\n[1] \"Kansai-University\"         \"Kwansei-gakuin-University\"\n[3] \"Doshisha-University\"       \"Ritsmeikan-University\"    \n\n\nケース2: char_vec2の全要素の前に1、2、…を付け、数字と大学名は\".\"で結合\n　結合する2つのベクトルの長さがいずれも2以上の場合、同じ位置の要素同士の結合となる。\n\n\n\nCode 36\n\nchar_vec3 &lt;- paste(1:4, char_vec2, sep = \".\")\nchar_vec3\n\n\n[1] \"1.Kansai University\"         \"2.Kwansei-gakuin University\"\n[3] \"3.Doshisha University\"       \"4.Ritsmeikan University\""
  },
  {
    "objectID": "materials/micro/datatype.html#factor型",
    "href": "materials/micro/datatype.html#factor型",
    "title": "第7回講義資料",
    "section": "Factor型",
    "text": "Factor型\n　Factor型は見た目上はcharacter型と同じであるが要素に順番（順位）が付いている点で異なる。つまり、factor型は順序付きcharacter型とも言えよう。\n　以下の2つの表形式データの内容は全く同じものである。しかし、左の表の場合大学名列のデータ型はcharacter型（列名の下に&lt;chr&gt;と表示される）、右の表の場合はfactor型（列名の下に&lt;fct&gt;と表示される）である。Factor型変数は要素の順番（順位）が決まっていて、ここでは\"Kansai\" &gt; \"Kwansei-gakuin\" &gt; \"Doshisha\" &gt; \"Ritsumeikan\"の順番で設定してある。\n\n\n大学名がcharacter型の場合\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;chr&gt;           &lt;dbl&gt;\n1 Kansai          27736\n2 Kwansei-gakuin  23671\n3 Doshisha        25974\n4 Ritsumeikan     32467\n\n\n\n\n\n大学名がfactor型の場合\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;fct&gt;           &lt;dbl&gt;\n1 Kansai          27736\n2 Kwansei-gakuin  23671\n3 Doshisha        25974\n4 Ritsumeikan     32467\n\n\n\n\n　この見た目上は全く同じの2つのデータを使って、大学別学生数の棒グラフを作成した例が以下の図である。\n\n\n\n\n\n\n\n大学名がcharacter型の場合\n\n\n\n\n\n\n\n\n\n\n\n\n大学名がfactor型の場合\n\n\n\n\n\n\n　このようにcharacter型だと、作図の際、大学がアルファベット順で並ぶものの、factor型であれば、予め決めておいた順番で並ぶ。Factor型は図表を作成する際に重宝されるデータ型である。\n\nFactor型の作成\n　ここでは、既存のcharacter型ベクトルをfactor型に変換する方法について紹介する。以下のchar_vec4は関関同立の名前をアルファベット順で格納した長さ4のcharacter型ベクトルである。\n\n\n\nCode 37\n\nchar_vec4 &lt;- c(\"Doshisha\", \"Kansai\", \"Kwansei-gakuin\", \"Ritsumeikan\")\n\n\n\n\n\nCode 38\n\nchar_vec4\n\n\n[1] \"Doshisha\"       \"Kansai\"         \"Kwansei-gakuin\" \"Ritsumeikan\"   \n\n\n\n\n\nCode 39\n\nclass(char_vec4)\n\n\n[1] \"character\"\n\n\n　Factor型ベクトルはfactor()関数で作成する。第一引数は元となるcharacter型ベクトルであり、levels引数に要素の順位を付ける。\n\n\n\nCode 40\n\nfct_vec1 &lt;- factor(char_vec4,\n                   levels = c(\"Kansai\", \"Kwansei-gakuin\", \"Doshisha\", \"Ritsumeikan\"))\n\n\n\n\n\nCode 41\n\nfct_vec1\n\n\n[1] Doshisha       Kansai         Kwansei-gakuin Ritsumeikan   \nLevels: Kansai Kwansei-gakuin Doshisha Ritsumeikan\n\n\n\n\n\nCode 42\n\nclass(fct_vec1)\n\n\n[1] \"factor\"\n\n\n　このようにfactor型ベクトルを出力した場合、ベクトルの中身に加え、下段に要素の順位が表示され、図表を作成する際はこの順番で自動的にソートされる。\n\n\nFactor型の詳細\n　このfactor型は非常に重要なデータ型であり、図表を作成する際には必ず考えなくてはならないものである。先ほどの例のように、文字列をfactor化しないと要素はアルファベット順になる。図表において順番が思い通りにならない原因は、factor化していない、またはfactor化が間違っているのがほとんどである。factor型については今後データハンドリング、可視化の講義で改めて解説する。"
  },
  {
    "objectID": "materials/micro/datatype.html#欠損値",
    "href": "materials/micro/datatype.html#欠損値",
    "title": "第7回講義資料",
    "section": "欠損値",
    "text": "欠損値\n　データ分析において頻繁に遭遇するのはNAであるが、これは欠損値（missing value）を意味する。欠損値は何らかの値があるはずであるものの、観察されていない値である。例えば、国連開発機構が毎年発表している「人間開発指数（Human Development Index; HDI）」では世界各国のデータが含まれている。しかし、世界における全ての国のデータが入っているわけではなく、たとえば台湾や北朝鮮のデータは含まれていない。これらの国/地域に人間開発という概念がないわけではなく、なんらかの理由（今回は政治的な理由）で値が欠損しているだけである。\n　自分でデータセットを構築しようとする時に、特定のケースに欠損が生じるケースは多々あり、世論調査でも例外ではない。たとえば答えづらい質問に対して「わからない」や「答えたくない」を選んだ場合、その回答者における当該質問は欠損となる。このように多くのデータには欠損値が含まれているため、欠損値処理は非常に重要である。欠損値の処理には様々な方法があるが、本講義では欠損値が含まれたケースを除外した分析を行う予定である。\n　他にも計算上、何らかの問題を生じさせうるものはあるが、以下では簡単にその例を紹介する。ただし、NaNとInfのベクトルを作ることは可能であるが、使う機会はほとんどなく、何かの計算の結果によって返ってくるケースが多いので、その意味さえ把握しておけば良い。\n\nNA: 何らかの値があるはずだが、欠損している状態\nNULL: そもそも存在しない\nNaN: 計算不可（例: 0 \\(\\div\\) 0）\nInf: 無限大（例: 10 \\(\\div\\) 0）\n\n\nNAとNULLの違い\n　値がないという点でNAとNULLは似ているように見えるが、実は全く異なる概念である。NAは要素としてカウントされるが、NULLはカウントされない。以下の例を見てみよう。\n\n\n\nCode 43\n\nNA_vec   &lt;- c(1, 2, 3, NA, 5, NA, 7)\nNULL_vec &lt;- c(1, 2, 3, NULL, 5, NULL, 7)\n\n\n\n\n\nCode 44\n\nNA_vec\n\n\n[1]  1  2  3 NA  5 NA  7\n\n\n\n\n\nCode 45\n\nNULL_vec\n\n\n[1] 1 2 3 5 7\n\n\n\n\n\nCode 46\n\nlength(NA_vec)\n\n\n[1] 7\n\n\n\n\n\nCode 47\n\nlength(NULL_vec)\n\n\n[1] 5\n\n\n　このようにNULLはそもそも存在しないことを意味する。NAが入居者がいない空き部屋であれば、NULLはそもそも部屋が存在しないことを意味する。ここまでの話だとNULLの存在意義が疑われるだろうが、中級者以上になるといずれ使う機会があろう。\n\n\n欠損値を含むベクトルの計算\n　ベクトルに欠損値が含まれている場合、平均値（mean()）、標準偏差（sd()）などの計算ができず、以下のように結果としてNAが返ってくる。\n\n\n\nCode 48\n\nmean(NA_vec)\n\n\n[1] NA\n\n\n　ここで欠損値を以外の要素のみを使って計算する方法としては以下の2つの方法がある1。\n方法1: データから欠損値を除外する。\n\n!演算子は否定を意味する（第3回参照）\nちなみに、NA_vec == NA、NA_vec != NAは使用不可\n\n\n\n\nCode 49\n\nis.na(NA_vec) # 各要素がNAか否かを判定\n\n\n[1] FALSE FALSE FALSE  TRUE FALSE  TRUE FALSE\n\n\n\n\n\nCode 50\n\n!is.na(NA_vec) # 各要素がNAか否かの判定を反転\n\n\n[1]  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE\n\n\n\n\n\nCode 51\n\nNA_vec[!is.na(NA_vec)] # 欠損値でない要素のみ抽出\n\n\n[1] 1 2 3 5 7\n\n\n\n\n\nCode 52\n\nmean(NA_vec[!is.na(NA_vec)])\n\n\n[1] 3.6\n\n\n方法2: 関数内にna.rm = TRUEを追加する。\n　mean()関数の場合、na.rmという引数が用意されており、これをTRUEにすると、欠損値を除外した平均値が求められる（既定値はFALSE）。通常、関数には様々な引数が用意されている。Rコンソール上で?関数名を入力するとヘルプが読める（mean()関数のヘルプは?meanで読める）。\n\n\n\nCode 53\n\nmean(NA_vec, na.rm = TRUE)\n\n\n[1] 3.6"
  },
  {
    "objectID": "materials/micro/datatype.html#ベクトル操作続",
    "href": "materials/micro/datatype.html#ベクトル操作続",
    "title": "第7回講義資料",
    "section": "ベクトル操作（続）",
    "text": "ベクトル操作（続）\n　今回はデータ型が主な内容であったが、ベクトル操作はこれからも必要となるため、以下では第3回に続き、ベクトルの操作方法について解説する。練習用のベクトルとしてmy_vec2を用意する。\n\n\n\nCode 54\n\nmy_vec2 &lt;- c(4, 3, 2, 1)\nmy_vec2\n\n\n[1] 4 3 2 1\n\n\n\n要素の追加\n　ベクトルに新しい要素を追加するためにはベクトル名[追加したい位置] &lt;- 追加する値と入力する。たとえば、my_vec2の5番目の要素として0を追加する場合は以下のように入力する。\n\n\n\nCode 55\n\nmy_vec2[5] &lt;- 0\nmy_vec2\n\n\n[1] 4 3 2 1 0\n\n\n　複数の要素を入れることができる。my_vec2の6、7、8番目の要素として、-1、-2、-3を追加する場合、以下のように入力する。\n\n\n\nCode 56\n\n# 6:8の代わりにc(6, 7, 8)もOK\nmy_vec2[6:8] &lt;- c(-1, -2, -3)\nmy_vec2\n\n\n[1]  4  3  2  1  0 -1 -2 -3\n\n\n　今、my_vec2の長さは8である。もし、このmy_vec2の11番目の要素としてに10を入れたらどうなるだろうか。\n\n\n\nCode 57\n\nmy_vec2[11] &lt;- 10\nmy_vec2\n\n\n [1]  4  3  2  1  0 -1 -2 -3 NA NA 10\n\n\n　このように11番目に10が追加され、9、10番目の要素は欠損値（NA）になる。\n\n\n要素の置換\n　要素の置換は要素の追加と同じである。つまり、ベクトル名[置換したい位置] &lt;- 置換する値と入力する。my_vec2の11番目の要素は10であったが、これを-6に置換する。\n\n\n\nCode 58\n\nmy_vec2[11] &lt;- -6\nmy_vec2\n\n\n [1]  4  3  2  1  0 -1 -2 -3 NA NA -6\n\n\n　要素の追加と同様、複数の要素を置換することもできる。ここではmy_vec2の9、10番目の要素（NAとNA）を-4、-5に置換してみよう。\n\n\n\nCode 59\n\nmy_vec2[9:10] &lt;- c(-4, -5)\nmy_vec2\n\n\n [1]  4  3  2  1  0 -1 -2 -3 -4 -5 -6\n\n\n　置換する位置を指定する[]内に論理演算子を使えば、条件に合致する要素のみ置換することができる。たとえば、my_vec2の要素の中で、0より小さい要素に-1を掛けて置換する場合、以下のように入力する。\n\n\n\nCode 60\n\nmy_vec2[my_vec2 &lt; 0] &lt;- my_vec2[my_vec2 &lt; 0] * -1\nmy_vec2\n\n\n [1] 4 3 2 1 0 1 2 3 4 5 6"
  },
  {
    "objectID": "materials/micro/datatype.html#教科書",
    "href": "materials/micro/datatype.html#教科書",
    "title": "第7回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「データ型」"
  },
  {
    "objectID": "materials/micro/handling2.html",
    "href": "materials/micro/handling2.html",
    "title": "第10回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling2.html#スライド",
    "href": "materials/micro/handling2.html#スライド",
    "title": "第10回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/handling2.html#記述統計量",
    "href": "materials/micro/handling2.html#記述統計量",
    "title": "第10回講義資料",
    "section": "記述統計量",
    "text": "記述統計量\n　記述統計量（descriptive statistics）とはある変数が持つ情報を要約した数値である。例えば、10人の学生の数学成績が格納されている以下のようなnumeric型ベクトルがあるとしよう。7番目の学生は試験を受けたものの、ポンコツな教師が解答用紙を紛失して欠損値となっている。\n\n\n\nCode 01\n\nMathScore &lt;- c(82, 45, 69, 94, 88, 73, NA, 51, 90, 63)\nMathScore\n\n\n [1] 82 45 69 94 88 73 NA 51 90 63\n\n\n　このクラスの数学成績について語る時、「うちのクラスの数学成績は82、45、69、94、…、63点ですよ」という人はいないだろう。数人のクラスならまだしも、数十人のクラスならあり得ない。我々は普段、「うちのクラスの数学成績はだいたいYY点ですよ」とか、「真ん中の成績はXX点ですよ」と言うだろう。また、クラス内の成績の格差/ばらつきを語るときも標準偏差や範囲（「できる子とできない子の点差は49点ですよ」）を言うのが普通である。このように元の長い情報を一つの数値として要約したものが記述統計量である。\n　たとえば、MathScoreを代表する値（=代表値）としては平均値（mean）、中央値（median）、最頻値（mode）などがある。\n\n\n\nCode 02\n\nmean(MathScore, na.rm = TRUE) # 平均値\n\n\n[1] 72.77778\n\n\n\n\n\nCode 03\n\nmedian(MathScore, na.rm = TRUE) # 中央値\n\n\n[1] 73\n\n\n　また、MathScoreの格差、ばらつきの具合としては分散（variance）、標準偏差（standard deviation）、四分位範囲（interquartile range）、範囲（range）がある。\n\n\n\nCode 04\n\nvar(MathScore, na.rm = TRUE) # 不偏分散\n\n\n[1] 302.4444\n\n\n\n\n\nCode 05\n\nsd(MathScore, na.rm = TRUE) # 不偏分散の平方根\n\n\n[1] 17.39093\n\n\n\n\n\nCode 06\n\nIQR(MathScore, na.rm = TRUE) # 四分位範囲\n\n\n[1] 25\n\n\n\n\n\nCode 07\n\nmax(MathScore, na.rm = TRUE) - min(MathScore, na.rm = TRUE) # 範囲\n\n\n[1] 49\n\n\n　今回は{dplyr}パッケージを用いて変数の記述統計量を計算する方法を紹介する。まず、今回の実習用データを読み込む。第9回に使用したデータと同じデータを使う。\n\n\n\nCode 08\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")\n\ndf\n\n\n# A tibble: 186 × 18\n   Country  Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghani…   38928346 6.53e5 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2877797 2.74e4 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria    43851044 2.38e6 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra       77265 4.7 e2 3.15e3 NA              40821.            NA      0\n 5 Angola     32866272 1.25e6 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua…      97929 4.4 e2 1.73e3  2.08e3         17643.         21267.     0\n 7 Argenti…   45195774 2.74e6 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2963243 2.85e4 1.37e4  3.84e4          4614.         12974.     0\n 9 Austral…   25499884 7.68e6 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9006398 8.24e4 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 10 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;\n\n\n　記述統計を計算する関数はsummarise()である。使い方は以下の通りである。\n\n\n\nCode 09\n\nデータフレーム |&gt;\n  summarise(記述統計の関数(変数名, ...))\n\n\n　たとえば、Population列の平均値を計算する場合は、\n\n\n\nCode 10\n\ndf |&gt;\n  summarise(mean(Population))\n\n\n# A tibble: 1 × 1\n  `mean(Population)`\n               &lt;dbl&gt;\n1          41737773.\n\n\nと入力する。HDI_2018のように欠損値が含まれている変数ならna.rm = TRUEを忘れないようにしよう。\n\n\n\nCode 11\n\ndf |&gt;\n  summarise(mean(HDI_2018, na.rm = TRUE))\n\n\n# A tibble: 1 × 1\n  `mean(HDI_2018, na.rm = TRUE)`\n                           &lt;dbl&gt;\n1                          0.713\n\n\n　平均値を計算するmean()以外にも様々な変数が使える。ここでは代表的な記述統計量の関数を紹介する。他にも様々な記述統計量があるが、詳細は教科書第13.1.2章を参照されたい。\n\nmean(): 平均値\nmedian(): 中央値\nsd(): 不偏標準偏差\nvar(): 不偏分散\nIQR(): 四分位範囲\nmin()、max(): 最小値と最大値\n\n　summarise()内には一つの変数、あるいは一つの記述統計量のみ書く必要はない。()内にいくらでも書ける。たとえば、dfのPopulationとAreaの平均値（mean()）と標準偏差（sd()）を計算する場合、計4つの記述統計量を計算することとなる。\n\n\n\nCode 12\n\ndf |&gt;\n  summarise(mean(Population), # Populationの平均値\n            sd(Population),   # Populationの不偏標準偏差\n            mean(Area),       # Areaの平均値\n            sd(Area))         # Areaの不偏標準偏差\n\n\n# A tibble: 1 × 4\n  `mean(Population)` `sd(Population)` `mean(Area)` `sd(Area)`\n               &lt;dbl&gt;            &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1          41737773.       151270298.      696069.   1872412.\n\n\n　出力結果はデータフレーム（tibble）形式で表示されるが、列名が長く、非常に読みにくい。この列名を修正するためにはsummarise()の後にrename()を使うことで修正することもできるが、summarise()内で指定することもできる。たとえば、dfのPopulationとAreaの平均値（mean()）と標準偏差（sd()）を計算し、結果の列名をMean_Pop、SD_Popなどとする。\n\n\n\nCode 13\n\ndf |&gt;\n  summarise(Mean_Pop  = mean(Population),\n            SD_Pop    = sd(Population),\n            Mean_Area = mean(Area),\n            SD_Area   = sd(Area))\n\n\n# A tibble: 1 × 4\n   Mean_Pop     SD_Pop Mean_Area  SD_Area\n      &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 41737773. 151270298.   696069. 1872412.\n\n\n　出力される列名 = 記述統計の関数()を指定することで、このように出力結果が読みやすくなる。"
  },
  {
    "objectID": "materials/micro/handling2.html#グルーピング",
    "href": "materials/micro/handling2.html#グルーピング",
    "title": "第10回講義資料",
    "section": "グルーピング",
    "text": "グルーピング\n　特定の変数の記述統計量を計算する場合はmean()やsd()などの関数のみを使った方が効率的なケースが多い。しかし、グループごとに記述統計量を計算する場合は、{dplyr}パッケージが大変便利である。{dplyr}を使わずに大陸ごとのPPP_per_capitaの平均値を計算するとしよう。たとえば、Continentの値が\"Africa\"である国のPPP_per_capitaの平均値を計算する場合は以下のように書く。\n\n\n\nCode 14\n\n# PPP_per_capitaは欠損値が含まれているため、na.rm = TRUEを指定\n#（指定しないと、結果はNAとなる）\nmean(df$PPP_per_capita[df$Continent == \"Africa\"], na.rm = TRUE)\n\n\n[1] 5667.087\n\n\n　これを全ての大陸に対して同じ計算を行う場合、以下のようなコードになる。\n\n\n\nCode 15\n\nmean(df$PPP_per_capita[df$Continent == \"Africa\"], na.rm = TRUE)\n\n\n[1] 5667.087\n\n\n\n\n\nCode 16\n\nmean(df$PPP_per_capita[df$Continent == \"America\"], na.rm = TRUE)\n\n\n[1] 18100.29\n\n\n\n\n\nCode 17\n\nmean(df$PPP_per_capita[df$Continent == \"Asia\"], na.rm = TRUE)\n\n\n[1] 22728.13\n\n\n\n\n\nCode 18\n\nmean(df$PPP_per_capita[df$Continent == \"Europe\"], na.rm = TRUE)\n\n\n[1] 37782.59\n\n\n\n\n\nCode 19\n\nmean(df$PPP_per_capita[df$Continent == \"Oceania\"], na.rm = TRUE)\n\n\n[1] 27572.65\n\n\n　たった5行のコードであるが、一行一行がかなり長く、可読性も優れているとは言えない。ここで{dplyr}のgroup_by()関数が力を発揮する。\n\n\n\nCode 20\n\nデータフレーム名 |&gt;\n  group_by(グループ化する変数名) |&gt;\n  summarise(...)\n\n\n　たとえば、dfのContinentでデータをグループ化し、PPP_per_capitaの平均値を計算する場合、summarise()の前にgroup_by(Continent)を使いしてパイプをつなぐことでContinentの値ごとにPPP_per_capitaの平均値が計算される。\n\n\n\nCode 21\n\n# PPP_per_capitaが欠損している国もあるので、na.rm = TRUEを追加\ndf |&gt;\n  group_by(Continent) |&gt;\n  summarise(Mean_PPP = mean(PPP_per_capita, na.rm = TRUE))\n\n\n# A tibble: 5 × 2\n  Continent Mean_PPP\n  &lt;chr&gt;        &lt;dbl&gt;\n1 Africa       5667.\n2 America     18100.\n3 Asia        22728.\n4 Europe      37783.\n5 Oceania     27573.\n\n\n　コードが3行になっただけではなく、可読性も大きく改善されていることが分かる。group_by()関数は二つ以上の変数でグルーピングすることもできる。たとえば、dfのContinentとG20でデータをグループ化し、HDI_2018の平均値を計算してみよう。\n\n\n\nCode 22\n\ndf |&gt;\n  group_by(Continent, G20) |&gt;\n  summarise(Mean_HDI = mean(HDI_2018, na.rm = TRUE))\n\n\n`summarise()` has grouped output by 'Continent'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 3\n# Groups:   Continent [5]\n   Continent   G20 Mean_HDI\n   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 Africa        0    0.550\n 2 Africa        1    0.705\n 3 America       0    0.727\n 4 America       1    0.84 \n 5 Asia          0    0.710\n 6 Asia          1    0.798\n 7 Europe        0    0.859\n 8 Europe        1    0.877\n 9 Oceania       0    0.729\n10 Oceania       1    0.938\n\n\n　Continentの値は5種類、G20の値は2種類であるため、計10個のグループができる。ちなみにこれを{dplyr}を使わず行うなら以下のようなコードになる。\n\n\n\nCode 23\n\nmean(df$HDI_2018[df$Continent == \"Africa\" & df$G20 == 0], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Africa\" & df$G20 == 1], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"America\" & df$G20 == 0], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"America\" & df$G20 == 1], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Asia\" & df$G20 == 0], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Asia\" & df$G20 == 1], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Europe\" & df$G20 == 0], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Europe\" & df$G20 == 1], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Oceania\" & df$G20 == 0], na.rm = TRUE)\nmean(df$HDI_2018[df$Continent == \"Oceania\" & df$G20 == 1], na.rm = TRUE)\n\n\n　{dplyr}の素晴らしさが分かるだろう。次の内容に進む前に、以下のような謎のメッセージが出力されたのではないだろうか。\n## `summarise()` has grouped output by 'Continent'. You can override using \nthe `.groups` argument.\n　このメッセージの理由は教科書第13.2章に譲るが、この気持ち悪いメッセージをなくすためには、とりあえず、group_by()の後にsummarise()を使う場合、summarise()の最後に.groups = \"drop\"を追加する。\n\n\n\nCode 24\n\ndf |&gt;\n  group_by(Continent, G20) |&gt;\n  summarise(Mean_HDI = mean(HDI_2018, na.rm = TRUE),\n            .groups  = \"drop\")\n\n\n# A tibble: 10 × 3\n   Continent   G20 Mean_HDI\n   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 Africa        0    0.550\n 2 Africa        1    0.705\n 3 America       0    0.727\n 4 America       1    0.84 \n 5 Asia          0    0.710\n 6 Asia          1    0.798\n 7 Europe        0    0.859\n 8 Europe        1    0.877\n 9 Oceania       0    0.729\n10 Oceania       1    0.938\n\n\n　これで謎のメッセージが出力されなくなっただろう。\n　グルーピングを行う場合、各グループに属するケース数を調べたい場合もあろう。たとえば、大陸ごとにPPP_per_capitaの平均値と標準偏差を出すだけでなく、各大陸に属する国数も表示したいとする。この時に使う関数がn()である。()内に別途の引数は不要である。\n\n\n\nCode 25\n\ndf |&gt;\n  group_by(Continent) |&gt;\n  summarise(Mean_PPP = mean(PPP_per_capita, na.rm = TRUE),\n            SD_PPP   = sd(PPP_per_capita, na.rm = TRUE),\n            Cases    = n())\n\n\n# A tibble: 5 × 4\n  Continent Mean_PPP SD_PPP Cases\n  &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1 Africa       5667.  6015.    54\n2 America     18100. 12601.    36\n3 Asia        22728. 24067.    42\n4 Europe      37783. 21276.    50\n5 Oceania     27573. 21984.     4\n\n\n　最後に、詳細は解説しないが、across()関数を利用することで、複数の変数に対して複数の記述統計量をより短いコードで計算することができる。たとえば、dfのPopulationからPPP列まで平均値と標準偏差を計算し、結果の変数名は元の変数名_Mean、元の変数名_SDとするコードを書いてみよう。\n\n\n\nCode 26\n\ndf |&gt;\n  summarise(Population_Mean = mean(Population, na.rm = TRUE),\n            Population_SD   = sd(Population, na.rm = TRUE),\n            Area_Mean       = mean(Area, na.rm = TRUE),\n            Area_SD         = sd(Area, na.rm = TRUE),\n            GDP_Mean        = mean(GDP, na.rm = TRUE),\n            GDP_SD          = sd(GDP, na.rm = TRUE),\n            PPP_Mean        = mean(PPP, na.rm = TRUE),\n            PPP_SD          = sd(PPP, na.rm = TRUE),)\n\n\n# A tibble: 1 × 8\n  Population_Mean Population_SD Area_Mean  Area_SD GDP_Mean   GDP_SD PPP_Mean\n            &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1       41737773.    151270298.   696069. 1872412.  473031. 1999504.  717953.\n# ℹ 1 more variable: PPP_SD &lt;dbl&gt;\n\n\n　以上の作業は、across()関数を使う場合、以下のようにたった4行でできる。\n\ndf |&gt;\n  #| filename: \"Code 27\"\n  summarise(across(Population:PPP,\n                   .fns = list(Mean = ~mean(.x, na.rm = TRUE),\n                               SD   = ~mean(.x, na.rm = TRUE))))\n\n# A tibble: 1 × 8\n  Population_Mean Population_SD Area_Mean Area_SD GDP_Mean  GDP_SD PPP_Mean\n            &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1       41737773.     41737773.   696069. 696069.  473031. 473031.  717953.\n# ℹ 1 more variable: PPP_SD &lt;dbl&gt;\n\n\n　across()関数の詳細については教科書第13.1章を参照されたい。ただし、無名関数（ラムダ式）の知識が必要である（そこまで難しいものではない）。"
  },
  {
    "objectID": "materials/micro/handling2.html#変数の計算",
    "href": "materials/micro/handling2.html#変数の計算",
    "title": "第10回講義資料",
    "section": "変数の計算",
    "text": "変数の計算\n　以下ではmutate()関数を利用して、データフレームの変数を用いた計算を行い、新しい列として追加する方法を紹介する。mutate()関数の使い方は以下の通りである。\n\n\n\nCode 28\n\nデータフレーム名 |&gt;\n  mutate(新しい列名 = 計算式)\n\n\n　ここで、新しい列名が既に存在するの列名である場合、既存の列が上書きされる。一方、データフレームに存在しない列名の場合、新しい列が最後の列として追加される1。\n　ここでは、dfのPopulationをAreaで割り（=人口密度）、Densityという名の列として追加してみよう。{dplyr}を使わずにこの処理を行う場合、以下のようなコードとなる。\n\n\n\nCode 29\n\ndf$Density &lt;- df$Population / df$Area\n\n\n　一方、{dplyr}のmutate()関数を使用する場合、以下のようなコードになる。\n\n\n\nCode 30\n\ndf |&gt;\n  mutate(Density = Population / Area)\n\n\n# A tibble: 186 × 19\n   Country  Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghani…   38928346 6.53e5 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2877797 2.74e4 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria    43851044 2.38e6 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra       77265 4.7 e2 3.15e3 NA              40821.            NA      0\n 5 Angola     32866272 1.25e6 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua…      97929 4.4 e2 1.73e3  2.08e3         17643.         21267.     0\n 7 Argenti…   45195774 2.74e6 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2963243 2.85e4 1.37e4  3.84e4          4614.         12974.     0\n 9 Austral…   25499884 7.68e6 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9006398 8.24e4 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 11 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;, Density &lt;dbl&gt;\n\n\n　出力される画面にDensity列が見当たらない。これは新しく追加されたDensity列が最後の列であり、画面に収まらないからである。むろん、Density列は問題なく追加されており、出力画面の下段に省略されている変数名に含まれていることが分かる。\n　もし、新しく追加される列の順番を指定したい場合はrelocate() 同様、.after、または.beforeを指定すればよい。以下のコードはDensity列をArea列の後に追加するコードである。\n\n\n\nCode 31\n\ndf |&gt;\n  mutate(Density = Population / Area, \n         .after  = Area)\n\n\n# A tibble: 186 × 19\n   Country             Population    Area Density     GDP     PPP GDP_per_capita\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   59.6   1.91e4  8.27e4           491.\n 2 Albania                2877797   27400  105.    1.53e4  3.97e4          5309.\n 3 Algeria               43851044 2381740   18.4   1.70e5  4.97e5          3876.\n 4 Andorra                  77265     470  164.    3.15e3 NA              40821.\n 5 Angola                32866272 1246700   26.4   9.46e4  2.19e5          2879.\n 6 Antigua and Barbuda      97929     440  223.    1.73e3  2.08e3         17643.\n 7 Argentina             45195774 2736690   16.5   4.50e5  1.04e6          9949.\n 8 Armenia                2963243   28470  104.    1.37e4  3.84e4          4614.\n 9 Australia             25499884 7682300    3.32  1.39e6  1.28e6         54615.\n10 Austria                9006398   82409  109.    4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 12 more variables: PPP_per_capita &lt;dbl&gt;, G7 &lt;dbl&gt;, G20 &lt;dbl&gt;, OECD &lt;dbl&gt;,\n#   HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;,\n#   FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "materials/micro/handling2.html#応用",
    "href": "materials/micro/handling2.html#応用",
    "title": "第10回講義資料",
    "section": "応用",
    "text": "応用\n　それでは前回と今回の内容を復習してみよう。最初の問題は「各国が世界人口に占める割合を計算し、降順で出力する」ことである。この問題を解くためには以下のような手順でデータをハンドリングする必要がある。\n\ndfのPopulationの合計をTotal_Popという列として追加する。\n\nmutate()使用\n\nPopulationをTotal_Popで割り、100を掛ける。結果はShare_Popという名の列としてPopulation後に追加する。\n\nmutate()使用\n\nCountryからShare_Popまでの列のみ残すが、Total_Pop列は除外する。\n\nselect()使用\n\nShare_Popが大きい順で行を並び替える\n\narrange()使用\n\n\n　以上の計算仮定の内、1と2は一つのmutate()関数内にまとめることができる。したがって、データ |&gt; mutate() |&gt; select() |&gt; arrange()の順番でコードを書く必要がある。\n\n\n\nCode 32\n\ndf |&gt; \n  mutate(Total_Pop = sum(Population),              # 手順1\n         Share_Pop = Population / Total_Pop * 100, # 手順2\n         .after    = Population) |&gt;                # 手順2\n  select(Country:Share_Pop, -Total_Pop) |&gt;         # 手順3\n  arrange(desc(Share_Pop))                         # 手順4\n\n\n# A tibble: 186 × 3\n   Country       Population Share_Pop\n   &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;\n 1 China         1447470092     18.6 \n 2 India         1380004385     17.8 \n 3 United States  334308644      4.31\n 4 Indonesia      273523615      3.52\n 5 Pakistan       220892340      2.85\n 6 Brazil         212559417      2.74\n 7 Nigeria        206139589      2.66\n 8 Bangladesh     164689383      2.12\n 9 Russia         145934462      1.88\n10 Mexico         128932753      1.66\n# ℹ 176 more rows\n\n\n　次の問題は「G7、G20、OECDのいずれかに加盟している国を\"先進国\"、それ以外は\"その他\"とし、二つのグループの人口密度、人間開発指数、民主主義度の平均値を出力する」ことである。\n\ndfのDevelopedという列を追加し、G7、G20、OECDのいずれかに加盟した国なら\"先進国\"、それ以外なら\"その他\"とする。\n\nmutate()使用\n\n人口密度をDensityという名の列として追加する。\n\nmutate()使用\n\nHDI_2018とPolity_Scoreのいずれかが欠損した行を除外する。\n\nfilter()使用\n\nDeveloped変数でデータをグルーピングする。\n\ngroup_by()使用\n\nHDI_2018、Polity_Score、Densityの平均値を求める。\n\nsummarise()使用\n\ndf2という名前のオブジェクトとして作業環境内に格納する。\n\n代入演算子（&lt;-）使用\n\ndf2を出力する。\n\n　今回も手順1と2は同じmuate()関数を使用するため、新しいオブジェクト名 &lt;- データ |&gt; mutate() |&gt; filter() |&gt; group_by() |&gt; summarise()の順番でコードを各必要がある。\n\n\n\nCode 33\n\ndf2 &lt;- df |&gt;\n  mutate(Developed = G7 + G20 + OECD,\n         Developed = if_else(Developed &gt; 1, \"先進国\", \"その他\"), # 上書き\n         Density   = Population / Area) |&gt;\n  filter(!is.na(HDI_2018), !is.na(Polity_Score)) |&gt;\n  group_by(Developed) |&gt;\n  summarise(Density = mean(Density),\n            HDI     = mean(HDI_2018),\n            Polity  = mean(Polity_Score))\n\ndf2\n\n\n# A tibble: 2 × 4\n  Developed Density   HDI Polity\n  &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 その他       197. 0.695   3.92\n2 先進国       174. 0.892   7.91\n\n\n　いきなり出てきたif_else()関数だが、これは何だろう。これから解説する。"
  },
  {
    "objectID": "materials/micro/handling2.html#名目変数の扱い方",
    "href": "materials/micro/handling2.html#名目変数の扱い方",
    "title": "第10回講義資料",
    "section": "名目変数の扱い方",
    "text": "名目変数の扱い方\n　先ほどのdf2だが、出力順番が\"その他\" \\(\\rightarrow\\) \"先進国\"になっている。これを\"先進国\" \\(\\rightarrow\\) \"その他\"の順番にするならどうすれば良いだろうか。summarise()を行う場合、グルーピング変数のアルファベット順で表示される。ただし、これはアルファベットや数字に限定される話であり、日本語の場合、50音順になるとは限らない。ひらがな、カタカナなら50音順になるが、漢字はそうではない。そもそも読み方が複数あるので、どの基準にすればもよく分からない。しかも、漢字は日本だけが使う文字でもないため、読み方も国によって異なるだろう。この場合、summarise()を使う前にグルーピング変数をfactor型に変換する必要がある。\n　ある変数をfactor型に変換する場合はfactor()関数を使う。第一引数は元となる変数名であり、levels =に順番を指定する。スペルミスに注意すること。\n\n\n\nCode 34\n\ndf |&gt;\n  mutate(Developed = G7 + G20 + OECD,\n         Developed = if_else(Developed &gt; 1, \"先進国\", \"その他\"),\n         Developed = factor(Developed, levels = c(\"先進国\", \"その他\")),\n         Density   = Population / Area) |&gt;\n  filter(!is.na(HDI_2018), !is.na(Polity_Score)) |&gt;\n  group_by(Developed) |&gt;\n  summarise(Density = mean(Density),\n            HDI     = mean(HDI_2018),\n            Polity  = mean(Polity_Score))\n\n\n# A tibble: 2 × 4\n  Developed Density   HDI Polity\n  &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 先進国       174. 0.892   7.91\n2 その他       197. 0.695   3.92\n\n\n　それではこれまで放置してきたif_else()について解説しよう。if_else()は後ほど解説するcase_when()やrecode()のように変数のリコーディング（re-coding）に使う関数である。if_else()関数の使い方は以下の通りである。\n\n\n\nCode 35\n\nif_else(条件式, TRUEの場合の戻り値, FALSEの場合の戻り値)\n\n\n　たとえば、dfのOECDが1なら\"OECD加盟国\"、それ以外なら\"OECD非加盟国\"に変換し、OECD_Jという列として追加する場合、以下のコードになる。リコーディングの場合、既存の変数を上書きするより、新しい列として追加することを推奨する。\n\n\n\nCode 36\n\ndf &lt;- df |&gt;\n  mutate(OECD_J = if_else(OECD == 1, \"OECD加盟国\", \"OECD非加盟国\"))\n\ndf\n\n\n# A tibble: 186 × 19\n   Country  Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n   &lt;chr&gt;         &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n 1 Afghani…   38928346 6.53e5 1.91e4  8.27e4           491.          2125.     0\n 2 Albania     2877797 2.74e4 1.53e4  3.97e4          5309.         13781.     0\n 3 Algeria    43851044 2.38e6 1.70e5  4.97e5          3876.         11324.     0\n 4 Andorra       77265 4.7 e2 3.15e3 NA              40821.            NA      0\n 5 Angola     32866272 1.25e6 9.46e4  2.19e5          2879.          6649.     0\n 6 Antigua…      97929 4.4 e2 1.73e3  2.08e3         17643.         21267.     0\n 7 Argenti…   45195774 2.74e6 4.50e5  1.04e6          9949.         22938.     0\n 8 Armenia     2963243 2.85e4 1.37e4  3.84e4          4614.         12974.     0\n 9 Austral…   25499884 7.68e6 1.39e6  1.28e6         54615.         50001.     0\n10 Austria     9006398 8.24e4 4.46e5  5.03e5         49555.         55824.     0\n# ℹ 176 more rows\n# ℹ 11 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;, OECD_J &lt;chr&gt;\n\n\n　それではまず、OECD変数でデータをグルーピングし、HDI_2018とFH_Totalの平均値を計算してみよう。\n\n\n\nCode 37\n\ndf |&gt;\n  group_by(OECD) |&gt;\n  summarise(HDI = mean(HDI_2018, na.rm = TRUE),\n            FH  = mean(FH_Total, na.rm = TRUE))\n\n\n# A tibble: 2 × 3\n   OECD   HDI    FH\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0 0.667  49.9\n2     1 0.894  89.1\n\n\n　続いて、OECDでなく、先ほど作成したOECD_J列でグルーピングしてみよう。\n\n\n\nCode 38\n\ndf |&gt;\n  group_by(OECD_J) |&gt;\n  summarise(PPP = mean(PPP_per_capita, na.rm = TRUE),\n            HDI = mean(HDI_2018, na.rm = TRUE),\n            FH  = mean(FH_Total, na.rm = TRUE))\n\n\n# A tibble: 2 × 4\n  OECD_J          PPP   HDI    FH\n  &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 OECD加盟国   46000. 0.894  89.1\n2 OECD非加盟国 14229. 0.667  49.9\n\n\n　出力される結果の第1列がOECD_Jになっているが、これをOECDに変更したい場合はgroup_by(OECD_J)をgroup_by(OECD = OECD_J)に変更すれば良い。\n　if_else()は条件が一つのみの場合に使用する関数である。もし、条件式を複数使いたい場合はどうすれば良いだろうか。ここではまず、mutate()内にcase_when()を使用する方法から紹介する。\n\n\n\nCode 39\n\nデータフレーム名 |&gt;\n  mutate(新しい変数名 = case_when(条件1 ~ 新しい値,\n                                条件2 ~ 新しい値,\n                                ...\n                                TRUE ~ 新しい値))\n\n\n　TRUE ~ 新しい値は「上記の条件全てが満たされない場合の値」を意味する。ここではdfのContinent列を日本語にし、Continent_Jとして追加してみよう。\n\n\n\nCode 40\n\ndf |&gt;\n  mutate(Continent_J = case_when(Continent == \"Africa\"  ~ \"アフリカ\",\n                                 Continent == \"America\" ~ \"アメリカ\",\n                                 Continent == \"Asia\"    ~ \"アジア\",\n                                 Continent == \"Europe\"  ~ \"ヨーロッパ\",\n                                 TRUE                   ~ \"オセアニア\")) |&gt;\n  group_by(大陸 = Continent_J) |&gt;\n  # 日本語は非推奨だが、一応使える（_と.を除く特殊記号不可）\n  summarise(OECD加盟国比率 = mean(OECD),\n            国家数         = n())\n\n\n# A tibble: 5 × 3\n  大陸       OECD加盟国比率 国家数\n  &lt;chr&gt;               &lt;dbl&gt;  &lt;int&gt;\n1 アジア             0.0714     42\n2 アフリカ           0          54\n3 アメリカ           0.139      36\n4 オセアニア         0.5         4\n5 ヨーロッパ         0.54       50\n\n\n　この「新しい値」は条件の数だけ存在する必要はない。たとえば、Continent列の値が\"Asia\"か\"Oceania\"、\"America\"なら\"Asia-Pafific\"に、それ以外は\"Others\"に変更し、その結果をAPという名の新しい列として追加するとしよう。\n\n\n\nCode 41\n\ndf |&gt;\n  mutate(AP = case_when(Continent == \"Africa\"  ~ \"Others\",\n                        Continent == \"America\" ~ \"Asia-Pacific\",\n                        Continent == \"Asia\"    ~ \"Asia-Pacific\",\n                        Continent == \"Europe\"  ~ \"Others\",\n                        TRUE                   ~ \"Asia-Pacific\")) |&gt;\n  group_by(Continent = AP) |&gt;\n  summarise(Population = mean(Population),\n            Countries  = n())\n\n\n# A tibble: 2 × 3\n  Continent    Population Countries\n  &lt;chr&gt;             &lt;dbl&gt;     &lt;int&gt;\n1 Asia-Pacific  68064598.        82\n2 Others        20980085.       104\n\n\n　以上の例は戻り値が2種類、つまり、\"Asia-Pacific\"か\"Others\"のみである。実はこの場合、if_else()関数を使うこともできる。ここで便利な演算子が%in%演算子である。これは左側の値が右側のベクトルに含まれていればTRUE、含まれていなければFALSEが返ってくる関数である。たとえば、dfのContinent列が\"Asia\"か\"Oceania\"、\"America\"のいずれかに該当するか確認してみよう。\n\n\n\nCode 42\n\ndf$Continent %in% c(\"Asia\", \"Oceania\", \"America\")\n\n\n  [1]  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE\n [13]  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE FALSE  TRUE\n [25]  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE\n [37]  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE\n [49] FALSE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE  TRUE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n [73]  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE\n [85] FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE\n [97]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE\n[109] FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE\n[121] FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE\n[133]  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE\n[145] FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\n[157] FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE\n[169] FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE\n[181]  TRUE  TRUE FALSE  TRUE FALSE FALSE\n\n\n　これをif_else()関数の条件式として使用する。\n\n\n\nCode 43\n\ndf |&gt;\n  mutate(AP = if_else(Continent %in% c(\"Asia\", \"America\", \"Oceania\"), \"Asia-Pacific\", \"Others\")) |&gt;\n  group_by(Continent = AP) |&gt;\n  summarise(Population = mean(Population),\n            Countries  = n())\n\n\n# A tibble: 2 × 3\n  Continent    Population Countries\n  &lt;chr&gt;             &lt;dbl&gt;     &lt;int&gt;\n1 Asia-Pacific  68064598.        82\n2 Others        20980085.       104\n\n\n　最後にrecode()関数について解説する。これまで紹介したif_else()とcase_when()は条件式を使うため、==、!=、%in%以外にも&gt;や&lt;=なども使える。ただし、書き方がやや複雑である。recode()は使う条件式が==のみの場合、if_else()やcase_when()を代替可能な関数である。ここでは例だけ紹介しよう。\n\n\n\nCode 44\n\ndf |&gt;\n  mutate(AP = recode(Continent,\n                     \"Asia\"    = \"Asia-Pacific\",\n                     \"America\" = \"Asia-Pacific\",\n                     \"Oceania\" = \"Asia-Pacific\",\n                     .default  = \"Others\")) |&gt;\n  group_by(Continent = AP) |&gt;\n  summarise(Population = mean(Population),\n            Countries  = n())\n\n\n# A tibble: 2 × 3\n  Continent    Population Countries\n  &lt;chr&gt;             &lt;dbl&gt;     &lt;int&gt;\n1 Asia-Pacific  68064598.        82\n2 Others        20980085.       104\n\n\n　recode()の第一引数はリコーディングする変数名であり、.defaultはいずれの条件にも該当しない場合の値を意味する。"
  },
  {
    "objectID": "materials/micro/handling2.html#欠損値の扱い方",
    "href": "materials/micro/handling2.html#欠損値の扱い方",
    "title": "第10回講義資料",
    "section": "欠損値の扱い方",
    "text": "欠損値の扱い方\n　世論調査などの場合、欠損値がNAでなく、9や99、\"\"などの場合がある。たとえば、以下のようなmy_dataというデータがあるとしよう。\n\n\n\nCode 45\n\nmy_data &lt;- tibble(ID       = 1:10,\n                  Age      = c(32, 35, 57, 999, 74, 66, 999, 49, 78, 67),\n                  HighEduc = c(1, 0, 0, 1, 0, 9, 1, 1, 9, 9))\nmy_data\n\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4   999        1\n 5     5    74        0\n 6     6    66        9\n 7     7   999        1\n 8     8    49        1\n 9     9    78        9\n10    10    67        9\n\n\n　IDは回答者の識別番号、Ageは回答者の年齢、HighEducは回答者が大卒以上なら1、それ以外は0を意味する。そして、年齢を回答しなかった回答者の年齢は999、学歴については9となっている。ここで回答者の年齢と学歴の平均値を出せばどうなるだろうか。\n\n\n\nCode 46\n\nmean(my_data$Age)\n\n\n[1] 245.6\n\n\n\n\n\nCode 47\n\nmean(my_data$HighEduc)\n\n\n[1] 3.1\n\n\n　回答者の平均年齢は245.6歳（!!）、学歴の平均値は3.1となっている。医学の発展によって人間の寿命が伸びたとしても、最大値が1のはずのHighEducの平均値が3.1ということはナンセンスである。データ分析の前に欠損値の確認と処理は必須であり、これを怠ると研究結果に大きな歪みな生じかねない。とりわけ、欠損値がNAでなく、9や999、\"\"などになっているケースはより注意が必要である。今回の実習データは既に欠損値の処理済み、つまり、欠損している値はNAになっている。ここでは上のmy_dataの使って考えてみよう。\n　まず、YoungAge変数を作成し、Ageが39以下なら1、それ以外は0にする。ただし、999ならNAとする。続いて、HighEduc2変数を作成し、HighEducが1なら\"大卒以上\"、それ以外は\"大卒未満\"にする。ただし、9ならNAとする。この作業を行うにはmutate()内にcase_when()を使えば良いだろう。\n\n\n\nCode 48\n\nmy_data |&gt;\n  mutate(YoungAge  = case_when(Age == 999 ~ NA,\n                               Age &lt;=  39 ~ 1,\n                               TRUE       ~ 0),\n         HighEduc2 = case_when(HighEduc == 9 ~ NA,\n                               HighEduc == 1 ~ \"大卒以上\",\n                               TRUE          ~ \"大卒未満\"))\n\n\n# A tibble: 10 × 5\n      ID   Age HighEduc YoungAge HighEduc2\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1     1    32        1        1 大卒以上 \n 2     2    35        0        1 大卒未満 \n 3     3    57        0        0 大卒未満 \n 4     4   999        1       NA 大卒以上 \n 5     5    74        0        0 大卒未満 \n 6     6    66        9        0 &lt;NA&gt;     \n 7     7   999        1       NA 大卒以上 \n 8     8    49        1        0 大卒以上 \n 9     9    78        9        0 &lt;NA&gt;     \n10    10    67        9        0 &lt;NA&gt;     \n\n\n　もう一つの例として特定の値を欠損値とし、それ以外の値は元も値にする場合を考えよう。つまり、AgeとHighEduc列においてそれぞれ999、9をNAにし、そのまま上書きするものである。例えばAgeはAgeの値が999なら（Age == 999）、NAを返し、それ以外の場合は既存のAgeの値を取る。この作業は以下のコードで実行できる。\n\n\n\nCode 49\n\nmy_data |&gt;\n  mutate(Age      = if_else(Age == 999,    NA, Age),\n         HighEduc = if_else(HighEduc == 9, NA, HighEduc))\n\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA\n\n\n　欠損を意味する値が複数の場合もある。my_dataのAgeは999のみが欠損値であるが、世論調査によっては888、999、-1のように複数の欠損値が存在するケースがある。この場合はcase_when()を使うか、if_else()関数内にOR演算子（| / %in%）を使えば良い。\n　最後に欠損値処理に特化した{naniar}パッケージのreplace_with_na()関数を紹介する。引数はリスト型オブジェクトであり、リストの各要素は変数名 = 欠損値の値となる。たとえば、Ageの欠損値は999だからAge = 999である。これは条件式ではないため、==でなく、=を使う。欠損値の値が複数ある場合は、変数名 = c(値1, 値2, ...)のように書く。\n\n\n\nCode 50\n\nlibrary(naniar) # 事前に install.package(naniar) でインストール\nmy_data |&gt;\n  # Ageは999、HighEducは9が欠損値\n  replace_with_na(list(Age = 999, HighEduc = 9))\n\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA\n\n\n　他にも似たような関数として、{expss}パッケージのna_if()関数などがあるが、自分が使いやすいものを使えば良い。以下のコードは、{expss}のna_if()関数を使って上記のコードを再現したものである2。\n\n\n\nCode 51\n\nlibrary(expss) # 事前に install.package(expss) でインストール\nmy_data |&gt;\n  mutate(Age      = na_if(Age, 999),\n         HighEduc = na_if(HighEduc, 9))\n\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA"
  },
  {
    "objectID": "materials/micro/handling2.html#教科書",
    "href": "materials/micro/handling2.html#教科書",
    "title": "第10回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「データハンドリング[拡張]」\n「データハンドリング[factor型]」"
  },
  {
    "objectID": "materials/micro/introduction.html",
    "href": "materials/micro/introduction.html",
    "title": "第1回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/introduction.html#スライド",
    "href": "materials/micro/introduction.html#スライド",
    "title": "第1回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/introduction.html#スライドの印刷方法",
    "href": "materials/micro/introduction.html#スライドの印刷方法",
    "title": "第1回講義資料",
    "section": "スライドの印刷方法",
    "text": "スライドの印刷方法\n本講義のスライドはPC閲覧を前提としているため、印刷は推奨しない。たとえば、タブが含まれているページの場合、1つ目のタブのみ印刷されるといったデメリットがある。しかし、どうしてもスライドを印刷したい場合は、以下の手順でスライドをPDFに保存し、印刷すること。\n\nGoogle Chromeブラウザーで本ページを開く。\n\nMicrosoft Explore、Edge、Firefox、Operaなどで試してみても良いものの、作動は保証しない。\n\n本ページ上段の「 新しいタブで開く」をクリックする。\nスライドが表示されたらキーボードの「E」、または「e」キーを押す。\nmacOSならCommand（⌘） + P、WindowsならControl（Ctrl）+ Pを押す。\n出力先をPDFにする。\n用紙のレイアウトを横向き（Landscape）に指定する。\n余白をなしにする。\n背景画像のオプションにチェックを入れる。\n保存\n保存されたPDFファイルをプリントする。\n\n\n\n\n\n\n\nスライドプリントの詳細\n\n\n\n　上記の手順はQuarto（本サポートページおよびスライドの作成言語）の開発元が公開している方法である。今後、より簡単なプリント方法が考案される可能性もある。詳細はQuarto公式ホームページを参照すること。"
  },
  {
    "objectID": "materials/micro/quarto.html",
    "href": "materials/micro/quarto.html",
    "title": "第5回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/quarto.html#スライド",
    "href": "materials/micro/quarto.html#スライド",
    "title": "第5回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/quarto.html#qmdファイルの作成",
    "href": "materials/micro/quarto.html#qmdファイルの作成",
    "title": "第5回講義資料",
    "section": "qmdファイルの作成",
    "text": "qmdファイルの作成\n手順1: RStudioを起動し、プロジェクトを作成する。\n手順2: File &gt; New &gt; Quarto Document…を選択する。\n\n\n\n\n\n手順3: OKをクリックする。\n\nこの段階で文書のタイトル（Title:）と作成者名（Author:）を指定することも出来るが、手順4で修正するので、ここではOKをクリックしても良い。ただし、「Use visual markdown editor」にチェックが付いている場合、予め外しておくこと。\n\n\n\n\n\n\n手順4: タイトル情報などを以下のように修正する。\n\n\n変更前\n\n---\ntitle: \"Untitled\"\nformat: html\n---\n\n\n\n\n変更後\n\n---\n1title: \"はじめてのR Markdown\"\n2author: \"関大花子\"\n3date: \"2023/5/11\"\n4lang: ja\n5format: html\n---\n\n\n1\n\nタイトル\n\n2\n\n作成者名\n\n3\n\n作成日\n\n4\n\n文書の言語\n\n5\n\n出力フォーマット\n\n\n\n\n\n\n\n\n\n\n\n\n自動的に日付を付けたい\n\n\n\ndate:の内容をdate: \"`r Sys.Date()`\"に修正するとRenderした日付が自動的につけられる。\n\n\n手順5: ファイルを保存する。ファイル名は適宜付けること。\n\nファイルの保存はFile &gt; Saveか、ショートカットキー（macOSだとCmd (⌘) + S、WindowsだとControl (Ctrl) + S）で出来る。\n\n手順6: Sourceペイン上段のRenderをクリックする。\n\n\n\n\n\n手順7: 新しいウィンドウ、またはViewerペインに出力物が表示される。\n\n\n\n\n\n\n出力物が新しいウィンドウに表示されて面倒くさい\n\n\n\n宋が推奨するRStudioの設定だと出力物がRStudioと同じ画面（Viewerペイン）に表示される。具体的にはTools &gt; Global Options… &gt; R Markdownへ移動し、Show output preview in:をWindowからViewer Paneに変更すれば良い。"
  },
  {
    "objectID": "materials/micro/quarto.html#markdown文法の基本",
    "href": "materials/micro/quarto.html#markdown文法の基本",
    "title": "第5回講義資料",
    "section": "Markdown文法の基本",
    "text": "Markdown文法の基本\n　ここでは本講義の課題を遂行するための必要最低限のことのみ解説する。R MarkdwonとQuartoの詳細については教科書の「R Markdown [基礎]」と「Quarto入門」を参照すること。\n\n改行\n　Markdownにおける改行はやや特殊である。特殊といっても難しいことではない。普段よりもう一行改行するだけだ。Markdownの場合、1回の改行は改行として判定されず、同じ行の連続と認識する。たとえば、Inputのように入力するとOutputのように文章1と文章2が繋がってしまう。\nInput:\n\n文章1\n文章2\n\nOutput:\n文章1 文章2\n　文章1と文章2を改行するためにはもう一行、改行する必要がある。以下の例を見てみよう。\nInput:\n\n文章1\n\n文章2\n\nOutput:\n文章1\n文章2\n　こうすることで段落間の間隔を強制的に入れることとなり、作成者側にも読みやすい文書構造になるといった利点がある1。\n\n\n強調\n　文章の一部を強調する方法として太字、イタリック2、アンダーラインがあり、強調ではないが、ついでに取り消し線についても紹介する。いずれも強調したい箇所を記号で囲むだけだ。\nInput:\n\n文章の一部を**太字**にしてみましょう。\n\n*イタリック*もいいですね。\n\n~~取り消し線~~はあまり使わないかも。\n\n&lt;u&gt;アンダーライン&lt;/u&gt;はHTMLタグを使います。\n\nOutput:\n文章の一部を太字にしてみましょう。\nイタリックもいいですね。\n取り消し線はあまり使わないかも。\nアンダーラインはHTMLタグを使います。\n\n\n箇条書き\n　箇条書きには順序なしと順序付きがある。順序なしの場合*または-の後に半角スペースを1つ入れるだけである。また、3文字以上の字下げで下位項目を追加することもできる。\nInput:\n\n- 項目1\n   - 項目1-1\n   - 項目1-2\n      - 項目1-2-1\n         - 項目1-2-1-1\n      - 項目1-2-2\n- 項目2\n- 項目3\n\nOutput:\n\n項目1\n\n項目1-1\n項目1-2\n\n項目1-2-1\n\n項目1-2-1-1\n\n項目1-2-2\n\n\n項目2\n項目3\n\n　順序付き箇条書きは、これは-（または*）を数字.に換えるだけである。順序なしの場合と違って数字の後にピリオド（.）が付くことに注意すること。また、順序付き箇条書きと順序なし箇条書きは組み合わせて使うことも出来る。\nInput:\n\n1. 項目1\n   1. 項目1-1\n   2. 項目1-2\n2. 項目2\n   * 項目2-1\n   * 項目2-2\n3. 項目3\n\nOutput:\n\n項目1\n\n項目1-1\n項目1-2\n\n項目2\n\n項目2-1\n項目2-2\n\n項目3\n\n\n\n見出し\n　章、節、段落のタイトルを付ける際は#を使う。#の数が多いほど文字が小さくなる。章の見出しを##にするなら節は###、小節または段落は####が適切だろう。R Markdownの使用上、見出しは####まで使える。\nInput:\n\n# 見出し1\n\n## 見出し2\n\n### 見出し3\n\n#### 見出し4\n\nOutput:\n見出し1\n見出し2\n見出し3\n見出し4\n\n\n区切り線\n　区切り線は---または***を使う。ただし、---または***の前後には必ず改行を行うこと。とりわけ、---の前に空いた行がないと、見出しとして認識されるケースがある。\nInput:\n\n---\n\nOutput:\n\n\n\n表\n　Markdownの表は非常にシンプルな書き方をしている。行は改行で、列は|で区切られる。ただ、表の第1行はヘッダー（変数名や列名が表示される行）扱いとなり、ヘッダーと内容の区分は|---|で行う。以下はMarkdownを利用した簡単な表の例である。ここでは可読性のために、適宜スペースを入れたが、スペースの有無は結果に影響を与えない。\nInput:\n\n|ID   |Name     |Math    |English |Favorite food|\n|:---:|---------|-------:|-------:|-------------|\n|1    |SONG     |15      |10      |Ramen        |\n|2    |Yanai    |100     |100     |Cat food     |\n|3    |Shigemura|80      |50      |Raw chicken  |\n|4    |Wickham  |80      |90      |Lamb         |\n\nOutput:\n\n\n\nID\nName\nMath\nEnglish\nFavorite food\n\n\n\n\n1\nSONG\n15\n10\nRamen\n\n\n2\nYanai\n100\n100\nCat food\n\n\n3\nShigemura\n80\n50\nRaw chicken\n\n\n4\nWickham\n80\n90\nLamb\n\n\n\n　1行目はヘッダーであり、太字かつ中央揃えになる。2行目以降はデフォルトでは左揃えになるが、|---|をいじることによって当該列の揃えを調整できる。|:---|は左 (デフォルト)、|---:|は右、|:---:|は中央揃えになる。また-の個数は1個以上なら問題なく、|-|も|---|も同じである。\n\n\n画像\n　Markdownに画像を入れるには![代替テキスト](ファイル名)と入力する。画像ファイル名はパス付きを指定する必要がある。[代替テキスト]は画像を読み込めなかった場合に出力されるテキストを意味する。これは画像が読み込めなかった場合の代替テキストでもあるが、視覚障害者用のウェブブラウザーのためにも使われる。これらのウェブブラウザーはテキストのみ出力されるものが多く、画像の代わりには代替テキストが読み込まれる。また、場合によっては代替テキストが図のタイトル（キャプション）として機能する場合もある（以下の例がそうである）。この代替テキストは必須でないため![](ファイル名)でも画像の添付は出来る。\n　例えば、Figsフォルダー内のfavicon.pngというファイルを読み込む場合、以下のように書く。\nInput:\n\n![『私たちのR』ロゴ](Figs/favicon.png)\n\nOutput:\n\n\n\n『私たちのR』ロゴ\n\n\n　ファイルのパスの代わりにURLを入れると、ウェブ上の画像を入れることもできる。\nInput:\n\n![『私たちのR』のカバー](https://www.jaysong.net/RBook/Figs/Cover.png)\n\nOutput:\n\n\n\n『私たちのR』のカバー\n\n\n　![キャプション](パス or URL)の後ろに{}を付けるといくつかのオプションが指定できる。たとえば、画像の幅を25%にしたい場合はwidth=25%を追加する。\nInput:\n\n![『私たちのR』のカバー](https://www.jaysong.net/RBook/Figs/Cover.png){width=25%}\n\nOutput:\n\n\n\n『私たちのR』のカバー\n\n\n\n\nリンク\n　ハイパーリンクは[テキスト](URL)のように書く。[]内は実際に表示されるテキストであり、()は飛ばすURLとなる。\nInput:\n\n毎日1回は[SONGのホームページ](https://www.jaysong.net)へアクセスしましょう。\n\nOutput:\n毎日1回はSONGのホームページへアクセスしましょう。\n\n\n脚注\n　脚注は[^固有識別子]と[^固有識別子]: 脚注内容の2つの要素が必要だ。まず、文末脚注を入れる箇所に[^xxxx]を挿入する。xxxxは任意の文字列で良い。しかし、同じR Markdown内においてこの識別子は被らないように注意すること（固有識別子だから）。実際の脚注の内容は[^xxxx]: 内容のように入力する。これはどこに位置しても問題ない。文書の途中でも、最後に入れても、脚注の内容は文末に位置する。ただし、脚注を入れる段落のすぐ後の方が作成する側としては読みやすいだろう。\nInput:\n\nこれは普通の文章です[^foot1]。\n\n[^foot1]: これは普通の脚注です。\n\nOutput:\nこれは普通の文章です3。\n\n\n数式\n　以下の内容（数式）は少なくとも本講義（ミクロ政治データ分析実習）では使わないため、飛ばしても良い。\n　インライン数式は$数式$で埋め込むことができる。数式は\\(\\LaTeX\\)の書き方とほぼ同じだ。ちなみに、R Markdown/Quartoの数式はMathJaxによってレンダリングされる。このMathJaxライブラリはHTMLに埋め込まれているのではないため、インターネットに接続せずにHTMLファイルを開くと数式が正しく出力されない可能性がある。\nInput:\n\nアインシュタインと言えば、$e = mc^2$でしょう。\n\nOutput:\nアインシュタインと言えば、\\(e = mc^2\\)でしょう。\n　数式を独立した行として出力する場合は、$の代わりに$$を使用する。\nInput:\n\n独立した数式の書き方\n\n$$\ny_i \\sim \\text{Normal}(\\mathbf{X} \\boldsymbol{\\beta}, \\sigma).\n$$\n\nOutput:\n独立した数式の書き方\n\\[\ny_i \\sim \\text{Normal}(\\mathbf{X} \\boldsymbol{\\beta}, \\sigma).\n\\]\n　もし数式が複数の行で構成されている場合は$$内にaligned環境（\\begin{aligned} … \\end{aligned}）を使用する。むろん、使い方は\\(\\LaTeX\\)と同じである。\nInput:\n\n複数の行にわたる数式の書き方\n\n$$\n\\begin{aligned}\n  Y_i      & \\sim \\text{Bernoulli}(\\theta_i), \\\\\n  \\theta_i & = \\text{logit}^{-1}(y_i^*), \\\\\n  y_i^*    & = \\beta_0 + \\beta_1 x_1 + \\beta_2 z_1.\n\\end{aligned}\n$$\n\nOutput:\n複数の行にわたる数式の書き方\n\\[\n\\begin{aligned}\n  Y_i      & \\sim \\text{Bernoulli}(\\theta_i), \\\\\n  \\theta_i & = \\text{logit}^{-1}(y_i^*), \\\\\n  y_i^*    & = \\beta_0 + \\beta_1 x_1 + \\beta_2 z_1.\n\\end{aligned}\n\\]\n　ここまで見れば\\(\\LaTeX\\)ユーザーはお分かりだろうが、$$の中には\\(\\LaTeX\\)コマンドが使える。たとえば、行列を作成する際は以下のように\\begin{bmatrix}環境を使う。\nInput:\n\n行列の書き方\n\n$$\nX = \\begin{bmatrix}\n  x_{11} & x_{12} \\\\\n  x_{21} & x_{22} \\\\\n  x_{31} & x_{32}\n\\end{bmatrix}.\n$$\n\nOutput:\n行列の書き方\n\\[\nX = \\begin{bmatrix}\n  x_{11} & x_{12} \\\\\n  x_{21} & x_{22} \\\\\n  x_{31} & x_{32}\n\\end{bmatrix}.\n\\]\n\n\n引用\n　引用の際は文章の最初に&gt;を入れるだけだ。&gt;の後に半角のスペースを1つ入れること。\nInput:\n\n「政治とは何か」についてイーストンは以下のように定義しました。\n\n&gt; [A] political system can be designated as those interactions through which values are authoritatively allocated for a society.\n\nOutput:\n「政治とは何か」についてイーストンは以下のように定義しました。\n\n[A] political system can be designated as those interactions through which values are authoritatively allocated for a society.\n\n\n\nコメント\n　Markdownにもコメントを付けることができる。とりあえず書いたが要らなくなった段落や文章があって、消すことがもったいない場合はコメントアウトするのも1つの方法だろう。ただし、Rのコメントアウトの方法は#だったが、これはMarkdownでは見出しの記号である。Markdownのコメントは&lt;!--と--&gt;で囲む必要がある。\nInput:\n\n文章1\n\n&lt;!--\nここはコメントです。\n--&gt;\n\n文章2\n\nOutput:\n文章1\n\n文章2"
  },
  {
    "objectID": "materials/micro/quarto.html#rコード",
    "href": "materials/micro/quarto.html#rコード",
    "title": "第5回講義資料",
    "section": "Rコード",
    "text": "Rコード\n\nRコードの入れ方\n　以上の内容まで抑えると、R Markdown/Quartoを使って、簡単な文法のみで構造化された文書が作成できる。しかし、R Markdown/Quartoの意義は文章とコード、結果が統合されることだろう。それでは文書内にRコードとその実行結果を入れる方法を紹介する。\n　コードは```{r}と```の間に入力するだけだ4。これでコードと結果が同時に出力される。たとえば、print(\"Hello World!\")を走らせるコードを入れてみよう。\n\n\n\n\n\n\n`はどこにありますか。\n\n\n\n　これは使用するキーボードの配列によって異なる。日本語配列キーボードの場合、「@」と同じ所に位置するケースが多い。ただ、日本語配列は世界標準からかなりずれている配列を採用しており、日本語以外の配列では主に「〜」と同じ所に位置する。たとえば、宋はUNIX配列（HHKB）を使っているため、キーボードの右上に位置するが、左上に位置するケースも多い。ちなみに単一引用符（'; 「シングル・クォーテーション」とも呼ばれる）とは別の記号であることに注意すること。\n\n\nInput:\n\"Hello World!\"を出力するコード\n\n```{r}\nprint(\"Hello World!\")\n```\nOutput:\n“Hello World!”を出力するコード\n\nprint(\"Hello World!\")\n\n[1] \"Hello World!\"\n\n\n　```{r}と```で囲まれた範囲をR Markdown/Quartoではチャンク（Chunk）と呼ぶ。このチャンク内ではRと全く同じことが出来る。パッケージやデータの読み込み、オブジェクトの生成、データハンドリング、可視化など、全てが出来る。可視化の方法については第12回講義以降の講義で解説するが、ここでは例として紹介する。\nInput: 　\n以下のコードは{tidyverse}パッケージを読み込み、irisデータセットを可視化するコードである。\n\n```{r}\n# パッケージの読み込み\nlibrary(tidyverse)\n# R内蔵データセットのirisを使った可視化\niris |&gt;\n  mutate(Species2 = recode(Species,\n                           \"setosa\"     = \"セトナ\",\n                           \"versicolor\" = \"バーシクル\",\n                           \"virginica\"  = \"バージニカ\")) |&gt;\n  ggplot() +\n  geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species2)) +\n  labs(x = \"萼片の長さ (cm)\", y = \"萼片の幅 (cm)\", color = \"品種\") +\n  theme_minimal(base_size = 12)\n```\n\nggplot()関数は{ggplot2}パッケージが提供するものであるが、{tidyverse}を読み込めば{ggplot2}も自動的に読み込まれるので、{ggplot2}パッケージを別途読み込む必要はない。\nOutput:\n以下のコードは{tidyverse}パッケージを読み込み、irisデータセットを可視化するコードである。\n\n# パッケージの読み込み\nlibrary(tidyverse)\n# R内蔵データセットのirisを使った可視化\niris |&gt;\n  mutate(Species2 = recode(Species,\n                           \"setosa\"     = \"セトナ\",\n                           \"versicolor\" = \"バーシクル\",\n                           \"virginica\"  = \"バージニカ\")) |&gt;\n  ggplot() +\n  geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species2)) +\n  labs(x = \"萼片の長さ (cm)\", y = \"萼片の幅 (cm)\", color = \"品種\") +\n  theme_minimal(base_size = 12)\n\n\n\n\n\n\n\n\nggplot()関数は{ggplot2}パッケージが提供するものであるが、{tidyverse}を読み込めば{ggplot2}も自動的に読み込まれるので、{ggplot2}パッケージを別途読み込む必要はない。\n\n\n\n\n\n\nチャンクの前後は必ず改行しよう\n\n\n\n　一つ注意すべき点がある。それはチャンクの前後は必ず改行することだ。以上のコード（Input:）の2行目と17行目がその例である。ここが改行されていない場合でも作動はするが、変なメッセージが表示されてしまう。また、改行されているように見えても、実は全角スペースが含まれているケースがある。全角スペースはスペースのように見えて、実は文字扱いとなる邪悪なものだ。しかも、特殊なフォントを使わない限り、目に見えない点でさらに邪悪だ。「普通に改行しているのに、なにかおかしいなー」と思ったら全角スペースが含まれていないか確認しよう。\n\n\n\n\nインラインコード\n　他にも文中にRコードを埋め込むこともできる（これをinline codeと呼ぶ）。例えば、ベクトルX &lt;- c(2, 3, 5, 7, 12)があり、この平均値を文中で示したいとする。むろん、文中に「5.8」と書いても問題なし。しかし、実はXの入力ミスが見つかり、実はc(2, 3, 5, 7, 11)になったらどうなるだろうか。この「5.8」と書いた箇所を見つけて5.6と修正したいといけない。これは非常に面倒な作業であり、ミスも起こりやすい。文中にRコードを入れるためには`r Rコード`のように入力する。\nInput:\n```{r}\nX &lt;- c(2, 3, 5, 7, 11)\n```\n\n変数`X`の平均値は`r mean(X)`です。\nOutput:\n\nX &lt;- c(2, 3, 5, 7, 11)\n\n変数Xの平均値は5.6です。\n　ここで`X`だが、単に`で囲まれただけだとコードのように表示してくれるものの、そのコードは実行されない。これは主に文中に短いコードのみを入れたり、変数名、関数名を示す際に使う機能である。\n\n\nコードの非表示\n　既に説明した通り、R Markdown（Quarto）はR + Markdownである。Rはチャンク内、Markdownはチャンク外の部分に相当し、それぞれのカスタマイズができる。分析のコードと結果はチャンクにオプションを付けることで修正できる。ここではチャンクのオプションについて解説する。\n　チャンクは```{r}で始まるが、実は{r}の箇所にオプションを追加することができる。具体的にはチャンクの最上行に「#| + 半角スペース」でオプションを指定する。ここではよく使う2つのオプションを紹介する。\n　まずはコードを表示せず、結果のみを表示させる方法である。Quartoでレポートや論文を執筆する場合、最終的に提出するものにコードは不要であろう5。Quartoではコードと結果が同時に表示されるが、片方（あるいは両方）を非表示にすることができる。オプションとしてecho: falseを指定すれば、コードは表示されず、結果のみ表示される。\nInput:\n```{r}\n#| echo: false\nprint(\"Rは楽しい!\")\n```\nOutput:\n\n\n[1] \"Rは楽しい!\"\n\n\n\n\n結果の非表示\n　一方、#| eval: falseを指定すれば、結果は表示されず、コードのみ表示される。本ページのようにマニュアルや技術書を書く際、時々使われる。\nInput:\n```{r}\n#| eval: false\nprint(\"Rは楽しい!\")\n```\nOutput:\n\nprint(\"Rは楽しい!\")\n\n　このようにコードのみ表示され、結果は表示されない。チャンクには他にも様々なオプションを付けることができる。出力される図の大きさ、位置、解像度、コードの非常時、結果の非表示、チャンク間の依存関係などが指定できるが、これらについては教科書の「R Markdown[基礎]」および「Quarto入門」を参照すること。\n　また、Quartoでは様々な形式の文書（以外のものも）が作成可能である。たとえば、本講義のサポートページだけでなく、宋のホームページや本講義の教科書、本講義のスライドもQuartoで作成されたものである。これらの作り方についてはQuarto公式ホームページを参照されたい。"
  },
  {
    "objectID": "materials/micro/quarto.html#番外編pdf出力",
    "href": "materials/micro/quarto.html#番外編pdf出力",
    "title": "第5回講義資料",
    "section": "番外編：PDF出力",
    "text": "番外編：PDF出力\n　以下の内容はある程度\\(\\LaTeX\\)に慣れているユーザー向けの内容である。まず、{tinytex}パッケージをインストールする。この作業はすぐ終わる。\n\n\n\nCode 01\n\ninstall.packages(\"tinytex\")\n\n\n　続いて、{tinytex}パッケージのinstall_tinytex()関数を走らせる。\n\n\n\nCode 02\n\ntinytex::install_tinytex()\n\n\n　以下のようなメッセージが出力されたらコンソールに「Y」を入力し、Enter / Returnを押す。\n\n\nFound '/usr/bin/tlmgr', which indicates a LaTeX distribution may have existed in the system.\nContinue the installation anyway? (Y/N) \n\n\n　続いて、日本語フォントをインストールする。LaTeXデフォルトの和文フォントであるHaranoajiをインストールする。\n\n\n\nCode 03\n\ntinytex::tlmgr_install(\"haranoaji\")\n\n\n　以上の作業は新しいサーバーを立ち上げない限り、1回だけで良い。通常のパッケージ同様、別のプロジェクトであっても以上の作業は不要だ。\n　最後に.qmdファイルのYAMLヘッダーを以下のように修正する。\n---\ntitle: \"かっこいいタイトルを付けよう\"\nsubtitle: \"こちらにもかっこいいサブタイトルを！\"\nauthor: \"児島惟謙\"\ndate: \"2023-05-12\"\nlang: ja\n# PDF設定\nformat:\n  pdf:\n    pdf-engine: lualatex\n    documentclass: ltjsarticle\n    classoption: [lualatex, a4paper, 10.5pt, ja=standard]\n    toc: false\n    toc-depth: 3\n    number-sections: true\n# チャンクのオプション\nknitr: \n  opts_chunk: \n1    dev: \"ragg_png\"\n2    fig.align: \"center\"\n3    dpi: 300\n4    warning: false\n5    message: false\n---\n\n1\n\n図の文字化け防止\n\n2\n\n画像は中央揃え\n\n3\n\n図の解像度（印刷を考えるなら300以上）\n\n4\n\n警告メッセージを表示させない\n\n5\n\nメッセージを表示させない\n\n\n　あとはこれまでと同様、Renderするだけだ。最初のRenderは必要なパッケージのインストールのため、数分くらいかかるが、次回からはそこまで時間はかからない。文書の量にも依るが、数ページ程度の文書なら1分以内にコンパイルが完了するはずだ。コンパイル時間が気になる人はPDFエンジンをlualatexからxelatexに変えることである程度改善できる（lualatexは柔軟かつ強力だが、動作がかなり重い）。ただし、エンジンを変更するとYAMLヘッダーを更に修正する必要がある。詳細はインターネット記事等を調べてみること。"
  },
  {
    "objectID": "materials/micro/quarto.html#教科書",
    "href": "materials/micro/quarto.html#教科書",
    "title": "第5回講義資料",
    "section": "教科書",
    "text": "教科書\n　Quartoにはここで紹介した内容の数十倍の機能を提供する。詳細は教科書、およびQuarto公式ホームページを参照すること。\n\n『私たちのR: ベストプラクティスの探求』\n\nR Markdown [基礎]\nR Markdown [応用]\nQuarto入門"
  },
  {
    "objectID": "materials/micro/visualization1.html",
    "href": "materials/micro/visualization1.html",
    "title": "第12回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization1.html#スライド",
    "href": "materials/micro/visualization1.html#スライド",
    "title": "第12回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization1.html#教科書",
    "href": "materials/micro/visualization1.html#教科書",
    "title": "第12回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「可視化[理論]」"
  },
  {
    "objectID": "materials/micro/visualization3.html",
    "href": "materials/micro/visualization3.html",
    "title": "第14回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization3.html#スライド",
    "href": "materials/micro/visualization3.html#スライド",
    "title": "第14回講義資料",
    "section": "",
    "text": "新しいタブで開く"
  },
  {
    "objectID": "materials/micro/visualization3.html#散布図",
    "href": "materials/micro/visualization3.html#散布図",
    "title": "第14回講義資料",
    "section": "散布図",
    "text": "散布図\n\n散布図の作成\n散布図は2つの連続変数（=間隔尺度、比率尺度で測定された変数）間の関係を調べる代表的な可視化方法である。散布図を作成する際に必要な最低限の情報、つまり散布図の必須要素は何だろうか。例えば、 図 1 の例を考えてみよう。この散布図はフリーダムハウスのスコアと人間開発指数の関係を表す散布図である。それぞれの点は一つの観察（国 or 地域）を意味する。散布図は2次元平面上に複数の点を載せたものであるが、それぞれの点はどのような情報を含んでいるのか。それは、その国（ or 地域）のフリーダムハウス・スコアと人間開発指数であり、それぞれ横軸の上の位置と縦軸上の位置から、その情報が読み取れる。\n\n\n\n\n\n図 1: 2次元散布図の例\n\n\n\n\n　それでは 図 1 を作ってみよう。使用するデータは第9回実習用データ（countries.csv）である。\n\n\n\nCode 01\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")\n\n\n　散布図を作成するためにはgeom_point()幾何オブジェクトを使用する。点の横軸上の位置はxに、縦軸上の位置はyにマッピングする。もし2つの変数の間に原因と結果の関係（因果関係）が考えられる2変数の場合、原因を横軸、結果を縦軸にするのが通例である。\n\n\n\nCode 02\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018))\n\n\n\n\n\n\n\n\n\n　しかし、横軸と縦軸のタイトルがFH_Total、HDI_2018になっている。図を作った人から見れば、これが何を意味するのか分かるだろうが、この図を初めて見る人にとっては何を意味するのかが分からないだろう。したがって、ラベル修正を修正し、せっかくなので点の色をおしゃれなロイヤルブルー（royal blue）にしてみよう。\n\n\n\nCode 03\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018), color = \"royalblue\") +\n   labs(x = \"フリーダムハウス・スコア\", y = \"人間開発指数 (2018)\")\n\n\n\n\n\n\n\n\n\n\n\n次元の追加\n　通常の散布図、例えば先ほど作成した散布図には、それぞれの点は各国の (1) フリーダムハウス・スコアと (2) 人間開発指数といった2つの情報を持つ。つまり、通常の散布図は2次元である。しかし、散布図は5次元、7次元までにも拡張することができる。たとえば、大陸ごとに色分けをすることによってもう一つの情報を持たせることも可能だし、人口や所得に応じて点の大きさを変えることも可能だろう。また、定番のファセット分割もできる。他にも点の枠線、点の形、透明度などに何かの情報を持たせることも可能である。\n　このように高次元の散布図を作ることはできる。ただし、宋は3次元までを推奨する（ファセット分割まで入れる場合、4次元）。なぜなら、一つのグラフの情報が多すぎると読みにくくなるからである。 図 2 は5次元散布図の例である。各点はフリーダムハウス・スコア、人間開発指数、人口（対数変換）、大陸、OECD加盟有無の情報を持つ。\n\n\n\nCode 04\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"Member\", \"Non-member\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018, color = Continent,\n                  size = Population, shape = OECD), alpha = 0.65) +\n   scale_size_continuous(trans = \"log10\") +\n   labs(x = \"Freedom House Score\", y = \"Human Development Index (2018)\",\n        size = \"Population (log)\")\n\n\n\n\n\n図 2: 5次元散布図の例\n\n\n\n\n　2次元散布図にもう一つの次元を追加、つまり3次元散布図を作成する場合は色分け（color）を推奨するが、白黒の図を作成する場合は形（shape）を使う必要がある。まずは色分けから説明しよう。色分けをする場合は、aes()の内部にcolor = 色分けする変数を指定する。\n　たとえば、一人上がり購買力平価GDP（PPP_per_capita）が2万ドル以上か未満かで点の色分けをするとしよう。まず、PPP_per_capitaが2万以上なら\"高\"、未満なら\"低\"にリコーディングしたHighIncome変数を作成する。つづいて、このHighIncome変数を利用し、点の色分けを行う（color = HighIncome）\n　他のカスタマイズとしては作図する側の自由であるが、ここでは点の大きさは2にし（全体に適用させるため、aes()の外側に指定）、labs()内で凡例タイトルを修正し、凡例を下側へ移動してみる。作成した図はscatter_plot1という名のオブジェクトとして格納しておく。\n\n\n\nCode 05\n\nscatter_plot1 &lt;- df |&gt;\n   # 散布図に使われる変数が一つでも欠損していれば、その行（国）は除外する\n   drop_na(FH_Total, HDI_2018, PPP_per_capita) |&gt;\n   # リコーディング\n   mutate(HighIncome = if_else(PPP_per_capita &gt;= 20000, \"高\", \"低\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018, color = HighIncome), \n              size = 2) +\n   # ラベル修正\n   labs(x = \"フリーダムハウス・スコア\", y = \"人間開発指数 (2018)\",\n        color = \"一人当たりPPP GDP\") +\n   # 凡例を下側に\n   theme(legend.position = \"bottom\")\n\nscatter_plot1\n\n\n\n\n\n\n\n\n\n　もし、点の色を変更したい場合はscale_color_manual()レイヤーを追加する。引数はvaluesであり、c(\"値1\" = \"色1\", \"値2\" = \"色2\", ...)のように名前付きcharacter型ベクトルを指定する。たとえば、HighIncomeの値が\"低\"ならオレンジ色（\"orange\"）、\"高\"ならロイヤルブルー色（\"royalblue\"）にしてみよう。\n\n\n\nCode 06\n\nscatter_plot1 +\n   scale_color_manual(values = c(\"低\" = \"orange\", \"高\" = \"royalblue\"))\n\n\n\n\n\n\n\n\n\n　{ggplot2}で使える色は無数にある。\"red\"、\"blue\"、\"royalblue\"のように文字で指定することもでき、全657種類が用意されている1。他にもRGBカラー（HEXコード; 16進数）で指定することもでる。たとえば赤なら\"#FF0000\"、ロイヤルブルーなら\"#4169E1\"と表記する。HEXコードを使う場合、非常に細かく色を指定することができ、全16,777,216種類の色が使える。以下の例はRで使える色の一部である。\n\n\n\n\n\n\n\n\n\n　Rで使用可能な色のリストはコンソール上でcolors()を打ち込むと確認できる。\n\n\n\nCode 07\n\ncolors()\n\n\n  [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n  [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n  [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n [13] \"azure\"                \"azure1\"               \"azure2\"              \n [16] \"azure3\"               \"azure4\"               \"beige\"               \n [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n [22] \"bisque3\"              \"bisque4\"              \"black\"               \n [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n [28] \"blue2\"                \"blue3\"                \"blue4\"               \n [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n [34] \"brown2\"               \"brown3\"               \"brown4\"              \n [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n [58] \"coral1\"               \"coral2\"               \"coral3\"              \n [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n[100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n[103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n[106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n[109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n[112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n[115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n[118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n[121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n[124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n[127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n[130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n[133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n[136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n[139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n[142] \"gold\"                 \"gold1\"                \"gold2\"               \n[145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n[148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n[151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n[154] \"gray1\"                \"gray2\"                \"gray3\"               \n[157] \"gray4\"                \"gray5\"                \"gray6\"               \n[160] \"gray7\"                \"gray8\"                \"gray9\"               \n[163] \"gray10\"               \"gray11\"               \"gray12\"              \n[166] \"gray13\"               \"gray14\"               \"gray15\"              \n[169] \"gray16\"               \"gray17\"               \"gray18\"              \n[172] \"gray19\"               \"gray20\"               \"gray21\"              \n[175] \"gray22\"               \"gray23\"               \"gray24\"              \n[178] \"gray25\"               \"gray26\"               \"gray27\"              \n[181] \"gray28\"               \"gray29\"               \"gray30\"              \n[184] \"gray31\"               \"gray32\"               \"gray33\"              \n[187] \"gray34\"               \"gray35\"               \"gray36\"              \n[190] \"gray37\"               \"gray38\"               \"gray39\"              \n[193] \"gray40\"               \"gray41\"               \"gray42\"              \n[196] \"gray43\"               \"gray44\"               \"gray45\"              \n[199] \"gray46\"               \"gray47\"               \"gray48\"              \n[202] \"gray49\"               \"gray50\"               \"gray51\"              \n[205] \"gray52\"               \"gray53\"               \"gray54\"              \n[208] \"gray55\"               \"gray56\"               \"gray57\"              \n[211] \"gray58\"               \"gray59\"               \"gray60\"              \n[214] \"gray61\"               \"gray62\"               \"gray63\"              \n[217] \"gray64\"               \"gray65\"               \"gray66\"              \n[220] \"gray67\"               \"gray68\"               \"gray69\"              \n[223] \"gray70\"               \"gray71\"               \"gray72\"              \n[226] \"gray73\"               \"gray74\"               \"gray75\"              \n[229] \"gray76\"               \"gray77\"               \"gray78\"              \n[232] \"gray79\"               \"gray80\"               \"gray81\"              \n[235] \"gray82\"               \"gray83\"               \"gray84\"              \n[238] \"gray85\"               \"gray86\"               \"gray87\"              \n[241] \"gray88\"               \"gray89\"               \"gray90\"              \n[244] \"gray91\"               \"gray92\"               \"gray93\"              \n[247] \"gray94\"               \"gray95\"               \"gray96\"              \n[250] \"gray97\"               \"gray98\"               \"gray99\"              \n[253] \"gray100\"              \"green\"                \"green1\"              \n[256] \"green2\"               \"green3\"               \"green4\"              \n[259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n[262] \"grey1\"                \"grey2\"                \"grey3\"               \n[265] \"grey4\"                \"grey5\"                \"grey6\"               \n[268] \"grey7\"                \"grey8\"                \"grey9\"               \n[271] \"grey10\"               \"grey11\"               \"grey12\"              \n[274] \"grey13\"               \"grey14\"               \"grey15\"              \n[277] \"grey16\"               \"grey17\"               \"grey18\"              \n[280] \"grey19\"               \"grey20\"               \"grey21\"              \n[283] \"grey22\"               \"grey23\"               \"grey24\"              \n[286] \"grey25\"               \"grey26\"               \"grey27\"              \n[289] \"grey28\"               \"grey29\"               \"grey30\"              \n[292] \"grey31\"               \"grey32\"               \"grey33\"              \n[295] \"grey34\"               \"grey35\"               \"grey36\"              \n[298] \"grey37\"               \"grey38\"               \"grey39\"              \n[301] \"grey40\"               \"grey41\"               \"grey42\"              \n[304] \"grey43\"               \"grey44\"               \"grey45\"              \n[307] \"grey46\"               \"grey47\"               \"grey48\"              \n[310] \"grey49\"               \"grey50\"               \"grey51\"              \n[313] \"grey52\"               \"grey53\"               \"grey54\"              \n[316] \"grey55\"               \"grey56\"               \"grey57\"              \n[319] \"grey58\"               \"grey59\"               \"grey60\"              \n[322] \"grey61\"               \"grey62\"               \"grey63\"              \n[325] \"grey64\"               \"grey65\"               \"grey66\"              \n[328] \"grey67\"               \"grey68\"               \"grey69\"              \n[331] \"grey70\"               \"grey71\"               \"grey72\"              \n[334] \"grey73\"               \"grey74\"               \"grey75\"              \n[337] \"grey76\"               \"grey77\"               \"grey78\"              \n[340] \"grey79\"               \"grey80\"               \"grey81\"              \n[343] \"grey82\"               \"grey83\"               \"grey84\"              \n[346] \"grey85\"               \"grey86\"               \"grey87\"              \n[349] \"grey88\"               \"grey89\"               \"grey90\"              \n[352] \"grey91\"               \"grey92\"               \"grey93\"              \n[355] \"grey94\"               \"grey95\"               \"grey96\"              \n[358] \"grey97\"               \"grey98\"               \"grey99\"              \n[361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n[364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n[367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n[370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n[373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n[376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n[379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n[382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n[385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n[388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n[391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n[394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n[397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n[400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n[403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n[406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n[409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n[412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n[415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n[418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n[421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n[424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n[427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n[430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n[433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n[436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n[439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n[442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n[445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n[448] \"limegreen\"            \"linen\"                \"magenta\"             \n[451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n[454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n[457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n[460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n[463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n[466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n[469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n[472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n[475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n[478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n[481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n[484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n[487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n[490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n[493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n[496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n[499] \"orange1\"              \"orange2\"              \"orange3\"             \n[502] \"orange4\"              \"orangered\"            \"orangered1\"          \n[505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n[508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n[511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n[514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n[517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n[520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n[523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n[526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n[529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n[532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n[535] \"peru\"                 \"pink\"                 \"pink1\"               \n[538] \"pink2\"                \"pink3\"                \"pink4\"               \n[541] \"plum\"                 \"plum1\"                \"plum2\"               \n[544] \"plum3\"                \"plum4\"                \"powderblue\"          \n[547] \"purple\"               \"purple1\"              \"purple2\"             \n[550] \"purple3\"              \"purple4\"              \"red\"                 \n[553] \"red1\"                 \"red2\"                 \"red3\"                \n[556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n[559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n[562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n[565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n[568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n[571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n[574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n[577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n[580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n[583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n[586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n[589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n[592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n[595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n[598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n[601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n[604] \"slategrey\"            \"snow\"                 \"snow1\"               \n[607] \"snow2\"                \"snow3\"                \"snow4\"               \n[610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n[613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n[616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n[619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n[622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n[625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n[628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n[631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n[634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n[637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n[640] \"violet\"               \"violetred\"            \"violetred1\"          \n[643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n[646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n[649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n[652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n[655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"         \n\n\n　図を白黒で印刷する場合、色によっては区別がつかない可能性がある。この場合、点の形を修正すれば、白黒でも識別できるだろう。点の形はaes()内にshapeで指定することができる。たとえば、scatter_plot1と同じ図を、今回は色分けせず形分けをしてみよう。\n\n\n\nCode 08\n\nscatter_plot2 &lt;- df |&gt;\n   drop_na(FH_Total, HDI_2018, PPP_per_capita) |&gt;\n   mutate(HighIncome = if_else(PPP_per_capita &gt;= 20000, \"高\", \"低\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018, shape = HighIncome), \n              size = 2) +\n   labs(x = \"フリーダムハウス・スコア\", y = \"人間開発指数 (2018)\",\n        shape = \"一人当たりPPP GDP\") +\n   theme(legend.position = \"bottom\")\n\nscatter_plot2\n\n\n\n\n\n\n\n\n\n　点の形を自分で調整したい場合はscale_shape_manual()を使用する。使い方はscale_color_manual()と同じであるが、色は\"red\"や\"blue\"など、人間が分かる名前になっているに対し、形は1、2、3などの数値を使う。たとえば、4はバツ記号、1は中身が空っぽの丸である。\n\n\n\nCode 09\n\nscatter_plot2 +\n   scale_shape_manual(values = c(\"低\" = 4, \"高\" = 1))\n\n\n\n\n\n\n\n\n\n　Rで使えるデフォルトのshapeは全23種類があり（0から22まで）、デフォルトは19である。0〜14の場合、中身が透明であり、枠線のみの形である。枠線の色を変えたい場合はcolor引数で調整できる。また15から20までは中身が埋まっており、枠線のない形である。この中身の色もcolorで調整可能である。注意が必要なのは21番と22番であり、21と22の場合、枠線はcolor、内側の色塗りはfillで調整する必要がある。"
  },
  {
    "objectID": "materials/micro/visualization3.html#折れ線グラフ",
    "href": "materials/micro/visualization3.html#折れ線グラフ",
    "title": "第14回講義資料",
    "section": "折れ線グラフ",
    "text": "折れ線グラフ\n　折れ線グラフはある連続変数が経時的に変化する具合を示す際に使われる最も代表的なグラフである。たとえば、株価の変動を示す場合、横軸は日付、縦軸は株価となるだろう。この日付は順序変数であり、株価は連続変数である。この意味で、折れ線グラフは順序変数\\(\\times\\)連続変数間の関係を調べるときにも使用可能である。\n\n折れ線グラフの作成\n　以下の 図 3 を見てみよう。この折れ線グラフにおける「線」にはどのような情報があるだろうか。実はこの線自体には大きな意味を持たない。大事なのはこの線の傾きが変化し得る「点」である。\n\n\n\n\n\n図 3: 折れ線グラフの例 (1)\n\n\n\n\nつまり、折れ線グラフはとは 図 4 のように各線の傾きが変わり得る点を線で繋いだだけである。座標平面上に点を載せるという意味で、折れ線グラフのマッピング要素は散布図のそれと大きく変わらない。\n\n\n\n\n\n図 4: 折れ線グラフの例 (2)\n\n\n\n\n　つまり、折れ線グラフの必須要素とは線の傾きが変化し得る点の横軸上の位置（x）と線の傾きが変化し得る点の縦軸上の位置（y）であり、線はその点を繋いだだけである。 図 3 の例だと、横軸は日付、縦軸は100万人当たり新規感染者数である。ただし、一つ注意が必要であり、それは線が2本以上ある場合だ。線が2本以上存在する折れ線グラフの場合、どの点とどの点を繋げばいいかを指定する必要がある。言い換えれば、それぞれの点がどのグループの点なのかを明確にしておく必要がある（groups）。\n　それでは、折れ線グラフを作ってみよう。最初に折れ線グラフの作成にひつ表なデータを読み込む。データは授業サポートページから実習用データ（Micro14.csv）をダウンロード可能であり、整然データとして加工済みのデータである。このデータは2つの変数で構成されており、Countryは国名、Dayは日付（2022年6月）、NewCasesは100万人当りCOVID-19新規感染者数を意味する。\n\n\n\nCode 10\n\nCOVID_df &lt;- read_csv(\"Data/covid_2022_06.csv\")\nCOVID_df\n\n\n# A tibble: 15 × 3\n   Country   Day NewCases\n   &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1 Japan      23    132. \n 2 Japan      24    127. \n 3 Japan      25    132. \n 4 Japan      26    113. \n 5 Japan      27     76.0\n 6 Korea      23    140. \n 7 Korea      24    132. \n 8 Korea      25    122. \n 9 Korea      26     66.8\n10 Korea      27    192. \n11 Taiwan     23   2022. \n12 Taiwan     24   1913. \n13 Taiwan     25   1689. \n14 Taiwan     26   1658. \n15 Taiwan     27   1196. \n\n\n　まず、線が一本の場合の折れ線グラフから始めよう。今のデータには複数の国があるのでfilter(Country == \"Japan\")で日本のみを抽出し、ggplot()関数に渡す。使用する幾何オブジェクトはgeom_line()、マッピングは散布図と同様、xとyに対して行う。\n\n\n\nCode 11\n\nCOVID_df |&gt;\n   filter(Country == \"Japan\") |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases)) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n折れ線グラフでよく出るメッセージ\n\n\n\n　折れ線グラフを作成する際、以下のようなエラーメッセージが表示され、グラフが出力されない場合がある（原因は不明）。\ngeom_path: Each group consists of only one observation. Do you need to adjust the group aesthetic?\n　このようなメッセージが出た場合は、aes()の中にgroup = 1を追加すると解決できる。\n\n\n　問題は線が二本以上ある場合だ。しかし、解決方法は簡単であり、aes()の中にgroup引数を追加するだけである。一本一本の線が国（or 地域）を意味するので、ここではgroup = Countryを入れるだけである。それでは今回は日本に限定せず、COVID_dfの全ケースを使って折れ線グラフを作ってみよう。まず、Covid_dfのCountry列を日本語にリコーディングし、要素の順番は日本、韓国、台湾の順にする。\n\n\n\nCode 12\n\nCOVID_df &lt;- COVID_df |&gt;\n   mutate(Country = case_when(Country == \"Japan\" ~ \"日本\",\n                              Country == \"Korea\" ~ \"韓国\",\n                              TRUE               ~ \"台湾\"),\n          Country = factor(Country, levels = c(\"日本\", \"韓国\", \"台湾\")))\n\nCOVID_df\n\n\n# A tibble: 15 × 3\n   Country   Day NewCases\n   &lt;fct&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1 日本       23    132. \n 2 日本       24    127. \n 3 日本       25    132. \n 4 日本       26    113. \n 5 日本       27     76.0\n 6 韓国       23    140. \n 7 韓国       24    132. \n 8 韓国       25    122. \n 9 韓国       26     66.8\n10 韓国       27    192. \n11 台湾       23   2022. \n12 台湾       24   1913. \n13 台湾       25   1689. \n14 台湾       26   1658. \n15 台湾       27   1196. \n\n\n\n\n\nCode 13\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country)) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\")\n\n\n\n\n\n\n\n\n\n　ただし、これでも問題は残る。どの線が日本で、どの線が韓国かが分からない。この場合、線の色分けを行うか、国・地域ごとに線の種類を分ける必要がある。まずは、おなじみの色分けはaes()の中にcolorを追加するだけである。また、線がやや細いので、若干太めに調整する。線の太さはaes()の外にlinewidthで調整可能である。\n\n\n\nCode 14\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country, color = Country), \n             linewidth = 1.5) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        color = \"国/地域\")\n\n\n\n\n\n\n\n\n\n　もう一つの方法はcolorでなく、linetypeで線のタイプを調整することだ。とりわけ、白黒図の場合、色分けは有効ではないため、線で国・地域を識別する必要があろう。\n\n\n\nCode 15\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country, \n                 linetype = Country), linewidth = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        linetype = \"国/地域\") \n\n\n\n\n\n\n\n\n\n　ただし、韓国と台湾の線はどれも破線に近く、区別しにくい。ここで韓国は破線、台湾は点線に変更してみよう。自分で線のタイプを指定したい場合はscale_linetype_manual()レイヤーを追加し、values引数にそれぞれの線のタイプを指定する。\n\n\n\nCode 16\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country, \n                 linetype = Country), linewidth = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        linetype = \"国/地域\") +\n   scale_linetype_manual(values = c(\"日本\" = 1, \"韓国\" = 2, \"台湾\" = 3))\n\n\n\n\n\n\n\n\n\n　linetypeで指定可能な線のタイプは6種類である。しかし、一部の線は見た目が非常に似ている。たとえば2と5、4と6は非常に似ており、実際の図になるとより区別がつかなくなる。線が4本以上になったらファセット分割などを使う必要がある。実線（1）、破線（2）、点線（3）まで使うことが良いだろう。\n\n\n\n\n\n\n\n\n\n　線が4本以上の場合は色分けや、以下のようなファセット分割を考慮すべきである。\n\n\n\nCode 17\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country), linewidth = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        linetype = \"国/地域\") + \n   facet_wrap(~Country, ncol = 3)\n\n\n\n\n\n\n\n\n\n　ファセット分割の際、知っておくと便利な機能としてfacet_wrap()内のscales引数である。上の図だと、台湾の存在により、日本と韓国は比較的変化がないようにも見える。実際、新規感染者数がそれなりに安定しているとは考えられるが、ファセットごとに縦軸のスケールを別々にすることもできる。縦軸のスケールをファセットごとに付ける場合はscales = \"free_y\"を追加する。他にもファセットごとに横軸スケールを付ける\"free_x\"や両方を対象とする\"free\"が使える。\n\n\n\nCode 18\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country), linewidth = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        linetype = \"国/地域\") + \n   facet_wrap(~Country, ncol = 3, scales = \"free_y\")\n\n\n\n\n\n\n\n\n\n　ただし、このようにファセットごとにスケールが異なると、実はあまり大きくない変動が大きく見えてしまうデメリットもある。たとえば、この図だけだと日本と台湾は急激な減少傾向、韓国は非常に大きいリバウンドが生じているかのようにも見える。しかし、たしかに台湾は減少傾向ではあるが、日韓はかなり安定していると考えられる。ある意味、異なるスケールを使うことによって、人を騙すこともできるということだ。作図の際は注意しよう。\n\n\n折れ線グラフ + 散布図\n　もう一つの方法として折れ線グラフに散布図を追加することもできる。線の傾きが変化する（可能性がある）点に散布図をオーバラップし、点の形を国・地域ごとに異なるように設定すれば良い。そのためには、geom_point()とgeom_line()を重ねる必要があるが、後に書いたレイヤーが前面に表示されることに注意されたい。また、点は線より大きめのほうが見やすいだろう。\n　それではそれぞれの幾何オブジェクトについて考えてみよう。折れ線グラフ（geom_line()）は国・地域ごとに色分けをするため、x、y、group、colorに対してマッピングを行う。続いて、散布図（geom_point()）は国・地域ごとに色分け・形分けをするのでx、y、color、shapeに対してマッピングをする。\n\n\n\nCode 19\n\nCOVID_df |&gt;\n   ggplot(aes()) +\n   geom_line(aes(x = Day, y = NewCases, color = Country, group = Country), \n             linewidth = 1) +\n   geom_point(aes(x = Day, y = NewCases, color = Country, shape = Country), \n              size = 3) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        color = \"国/地域\", shape = \"国/地域\") +\n   scale_color_manual(values = c(\"日本\" = \"royalblue\",\n                                 \"韓国\" = \"darkred\",\n                                 \"台湾\" = \"forestgreen\")) +\n   theme_bw()\n\n\n\n\n\n\n\n\n\n　以上のコードを見ると、2つの幾何オブジェクトはx、y、colorが同じ変数にマッピングされている。実は全幾何オブジェクトに共通するマッピングはggplot()内で行うことができる。\n\n\n\nCode 20\n\nCOVID_df |&gt;\n   # 共通するマッピングはggplot()内で指定可能\n   ggplot(aes(x = Day, y = NewCases, color = Country)) +\n   geom_line(aes(group = Country), linewidth = 1) +\n   geom_point(aes(shape = Country), size = 3) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        color = \"国/地域\", shape = \"国/地域\") +\n   scale_color_manual(values = c(\"日本\" = \"royalblue\",\n                                 \"韓国\" = \"darkred\",\n                                 \"台湾\" = \"forestgreen\")) +\n   theme_bw()"
  },
  {
    "objectID": "materials/micro/visualization3.html#箱ひげ図",
    "href": "materials/micro/visualization3.html#箱ひげ図",
    "title": "第14回講義資料",
    "section": "箱ひげ図",
    "text": "箱ひげ図\n\n箱ひげ図の作成\n　箱ひげ図は連続変数の分布を示す方法の一つであり、ヒストグラムと共に幅広く使われる可視化手法である。ただし、箱ひげ図はヒストグラムのように「どの辺が最も密度が高いか」を調べるよりも、特定の変数の記述統計量を素早く比較することに特化している。箱ひげ図を使えば、変数の最小値、最大値、第一四分位数、第二四分位数（中央値）、第三四分位数と極端な値である外れ値を素早くキャッチすることができる。\n　また、箱ひげ図のもう一つの特徴として、色分けやファセット分割を行わず、変数の分布をグループごとに見ることができるといったメリットがある。まずは箱ひげ図の読み方を 図 5 を見ながら説明しよう。\n\n\n\n\n\n図 5: 箱ひげ図の例\n\n\n\n\n　まず、四分位数であるが、これは箱の最上段（第三四分位数）、最下段（第一四分位数）、その間の線（第二四分位数 = 中央値）である。四分位数とはたとえば、以下のようなベクトルがあるとしよう。\n\n\n\nCode 21\n\nmy_vec1 &lt;- c(5, 1, 11, 2, 4, 2, 6, 15, 7, 8, 9)\nmy_vec1\n\n\n [1]  5  1 11  2  4  2  6 15  7  8  9\n\n\n　これを小さい値から大きい値の方向へ並び替えると以下のようになる。\n\n\n\nCode 22\n\nsort(my_vec1)\n\n\n [1]  1  2  2  4  5  6  7  8  9 11 15\n\n\n　この数例の中で真ん中の値が第二四分位数、つまり中央値である。my_vec1は長さ11のベクトルであるため、6番目の6が第二四分位数（中央値）である。続いて、中央値を基準に、中央値よりも大きい数列（my_vec2）と、小さい数例（my_vec3）に分ける。\n\n\n\n\n\nCode 23a\n\nmy_vec2 &lt;- my_vec1[my_vec1 &gt; 6]\n\nmy_vec2\n\n\n[1] 11 15  7  8  9\n\n\n\n\n\n\n\n\nCode 23b\n\nmy_vec3 &lt;- my_vec1[my_vec1 &lt; 6]\n\nmy_vec3\n\n\n[1] 5 1 2 4 2\n\n\n\n\n　ここで更にmy_vec2とmy_vec3の中央値を求める。my_vec2の中央値は9、my_vec3の中央値は2である。中央値より小さい数例における中央値（2）が第一四分位数、もう片方（9）が第三四分位数である。ちなみに中央値はmedian()関数から求めることもできる。したがって、四分位数は2、6、9である。第二四分位数は中央値とも呼ばれ平均値とともに幅広く使われる、変数を代表する値である。また第一四分位数と第三四分位数はそれぞれ使われるよりも、2つの組み合わせで使うケースが多い。それは第一四分位数と第三四分位数の間には半分の値が属するとく特徴である（長さが奇数の変数だとぴったり半分にはならないが、おおよそ半分）。今回はそれぞれ2と9であり、2より大きく、9より小さい要素は計5個である。my_vec1の長さが11であることを考えると、約半分である。つまり、箱ひげ図の箱だけでも「この変数の真中の値はXXであり、YY〜ZZの間に約半分の値が集まっている」ことが分かる。この箱が小さいほど、狭い範囲内に値が密集していることが分かる。また、第一四分位数と第三四分位数の距離は四分位範囲（IQR）とも呼ばれる。my_vec1の例だと、2と9の距離、つまりIQR = 7である。\n　続いて、箱ひげ図のひげの部分だ。ひげの最上段はその変数の最大値、最下段は最小値を意味する。my_vec1の例だと、最小値は1、最大値は15である。しかし、実際の箱ひげ図における最小値/最大値と、その変数の最小値/最大値が一致しないケースもある。それは外れ値の存在が原因である。中央から極端に離れている値を外れ値と呼び、箱ひげ図の最小値と最大値は外れ値を除いた最小値と最大値である2。\n　それではdfを使い、人間開発指数 (HDI_2018) の箱ひげ図を作ってみよう。幾何オブジェクト名はgeom_boxplot()であり、一変数の分布を確認する意味で、ヒストグラムのようにマッピングは一つのみでよい。通常、yにマッピングするが、xでも問題ない。yにマッピングすると 図 6 のような箱ひげ図が、xにマッピングすると時計回りに90度回転した箱ひげ図（ 図 7 ）が出来上がる。\n\n\n\n\n\nCode 24a\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018)) +\n   labs(x = \"\", \n        y = \"Human Development Index\") +\n   theme_bw(base_size = 14)\n\n\n\n\n\n図 6: 変数をyにマッピングした場合\n\n\n\n\n\n\n\n\n\n\nCode 24b\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(x = HDI_2018)) +\n   labs(x = \"Human Development Index\", \n        y = \"\") +\n   theme_bw(base_size = 14)\n\n\n\n\n\n図 7: 変数をxにマッピングした場合\n\n\n\n\n\n\n\n\n次元の追加\n　これまで作成した箱ひげ図の場合、yのみにマッピングされている。つまり、今のひ小ひげ図は「人間開発指数」の1次元グラフである。もう一つの次元を追加する場合は、xにマッピングするのがおすすめだ。もし、最初にxのみにマッピングされている場合は、追加的にyにマッピングすれば良い。それではHDI_2018の箱ひげ図を大陸（Continent）ごとに分けてみよう。これはxにContinentをマッピングするだけで十分である。この場合、「大陸\\(\\times\\)人間開発指数」といった2次元のグラフとなる。通常、箱ひげ図はこのように「ある変数のグループごとの分布」を示す時に使われる場合が多く、これまでの例のように「ある変数の分布」を示す時にはあまり使われない。グループごとの分布を見ない場合はヒストグラムが使われるケースが多い。\n\n\n\nCode 25\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent)) +\n   labs(x = \"Continent\", y = \"Human Development Index\") +\n   theme_bw()\n\n\n\n\n\n\n\n\n\n　もう一つの次元を追加するのであれば、次は色分けである。たとえば、OECD加盟有無で更に次元を追加する場合、fillにマッピングすれば良い。現在、OECD変数は0と1の値で構成されているnumeric型変数であるため、これをcharacter型、あるいはfactor型に変換し、OECD_Jという名の列として追加する。作図の際はfill = OECD_Jをマッピングするだけで色分けができる。もし色をカスタマイズしたい場合はscale_fill_manual()レイヤーを追加すれば良い。\n\n\n\nCode 26\n\ndf |&gt;\n   mutate(OECD_J = if_else(OECD == 1, \"Member\", \"Non-member\"),\n          OECD_J = factor(OECD_J, levels = c(\"Non-member\", \"Member\"))) |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent, fill = OECD_J)) +\n   labs(x = \"Continent\", y = \"Human Development Index\", fill = \"OECD\") +\n   theme_bw()\n\n\n\n\n\n\n\n\n\n　一つの箱ひげ図は1次元のグラフであるが、横軸を追加することで2次元に、色分けをすることで3次元まで拡張できる。4次元の箱ひげ図を作成する場合は、マッピングはx、y、fillまでとし、おとなしくファセット分割をしよう。5次元の箱ひげ図は作れなくはないが、非常に読みにくくなるため極力避けること。\n\n\nカスタマイズ\n　箱ひげ図の色はcolorでなく、fillにマッピングする。colorにマッピングする場合、箱の色でなく、枠線の色が変更される。もし、すべての箱の色を変更したい場合はaes()の外側にfill引数を追加する。以下の例はすべての箱の色をcornsilkに変更する例である。\n\n\n\nCode 27\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent), fill = \"cornsilk\") +\n   labs(x = \"Continent\", y = \"Human Development Index\") +\n   theme_bw()\n\n\n\n\n\n\n\n\n\n　あるいは大陸ごとに色を変えることもできる。xだけでなく、fillにもContinent変数をマッピングすれば大陸ごとに面の色が異なる箱ひげ図ができる。\n\n\n\nCode 28\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent, fill = Continent)) +\n   labs(x = \"Continent\", y = \"Human Development Index\") +\n   theme_bw() +\n   theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n　また、他のカスタマイズ要素としては箱の幅がある。箱の幅を狭くする場合は、aes()の外側にwidthを指定すれば良い。指定しない場合は0.75となっているが、これを0.75より小さくすると箱の幅が狭くなる。以下の例は箱の幅を3分の1にした例である。\n\n\n\nCode 29\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent), width = 0.25) +\n   labs(x = \"Continent\", y = \"Human Development Index\") +\n   theme_bw() +\n   theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n　最後に、マッピングの交換について説明する。箱が多すぎる場合、図は横に長くなるケースが多い。スライドの場合、横長の画面となるのでそれでも問題ないが、論文やレポートになると使用する用紙は基本的に縦長となる。横が狭い用紙/画面に箱の多い図を載せると、横軸のラベルが重なったり、箱の幅が狭すぎたりすることもあろう。この場合、xとyを交換すれば解決できるかも知れない。以下の例はこれまでの図のxとyを交換した例である。\n\n\n\nCode 30\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(x = HDI_2018, y = Continent)) +\n   labs(x = \"Human Development Index\", y = \"Continent\") +\n   theme_bw(base_size = 14) +\n   theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n　もし、縦軸の順番を反転するなら、scale_y_discrete(limits = rev)レイヤーを追加するだけで良い3。あるいはデータをggplot()に渡す前にContinentをfactor化し、要素の順番を逆にすることもできよう。\n\n\n\nCode 31\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(x = HDI_2018, y = Continent)) +\n   labs(x = \"Human Development Index\", y = \"Continent\") +\n   scale_y_discrete(limits = rev) +\n   theme_bw(base_size = 14) +\n   theme(legend.position = \"none\")"
  },
  {
    "objectID": "materials/micro/visualization3.html#教科書",
    "href": "materials/micro/visualization3.html#教科書",
    "title": "第14回講義資料",
    "section": "教科書",
    "text": "教科書\n\n『私たちのR: ベストプラクティスの探求』\n\n「可視化[基礎]」\n「可視化[応用]」\nその他のグラフについては「可視化[発展]」およびThe R Graph Galleryを参照"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#本日の内容",
    "href": "slides/macro/descriptive_statistics.html#本日の内容",
    "title": "マクロ政治データ分析実習",
    "section": "本日の内容",
    "text": "本日の内容\n\n記述統計とは何か\nどの変数にどの記述統計量を求めるべきか\n記述統計をどう報告するか\nRの復習\n\n前期履修者でも数ヶ月はRを触っていないはずなので、ウォーミングアップ\nゼロベースの解説ではない（Rの導入やデータの読み込みなどは解説しない）"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計",
    "href": "slides/macro/descriptive_statistics.html#記述統計",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計",
    "text": "記述統計\n記述統計量（descriptive statistics）\n\nある変数が持つ情報を要約した数値\nデータ分析を用いる論文、レポートにはデータ分析の結果を紹介する前に必ず分析に用いる変数の記述統計が必要\n記述統計量の種類\n\n各変数を代表する値: 平均値、中央値、最頻値\n値の散らばり具合: 標準偏差、分散、範囲（最大値 - 最小値）、四分位範囲など"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計量の必要性",
    "href": "slides/macro/descriptive_statistics.html#記述統計量の必要性",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計量の必要性",
    "text": "記述統計量の必要性\n通常、データ分析で用いるケースは数百〜数万であるため、一つずつ列挙することはほぼ不可能であり、記述統計量を用いた方が効率的\n\n例1) あるクラス（3人）の数学成績が82点、45点、69点なら\n\n「うちのクラスの数学成績は82点、45点、69点です！」で良い\n\n例2) あるクラス（30人）の数学成績が82点、45点、69点、94点、…、63点なら\n\n「うちのクラスの数学成績は82点、45点、69点、94点、…、63点です！」は長い\n「うちのクラスの数学成績は平均して75点で、標準偏差は8点です。」"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#実習の準備",
    "href": "slides/macro/descriptive_statistics.html#実習の準備",
    "title": "マクロ政治データ分析実習",
    "section": "実習の準備",
    "text": "実習の準備\nパッケージとデータの読み込み（データはLMSから入手可能）\n\nlibrary(tidyverse) # {tidyverse}パッケージを読み込む\ndf &lt;- read_csv(\"Data/descstat_data.csv\")　# Dataフォルダー内のdescstat_dataを読み込み、dfと名付ける\n\nprint(df) # dfの最初の10行を確認\n\n# A tibble: 3,000 × 272\n   USER_ID    Q1    Q2    Q3    Q4  Q5_1  Q5_2  Q5_3  Q5_4  Q5_5  Q5_6  Q5_7\n     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1       1     3     3     1     1    80    80    70    50    40    20    50\n 2       2     2     2     2     8     0    25    30    30    60    30    10\n 3       3     3     1     1     8    80    10     0     0     0     0    75\n 4       4     3     3     1     1   100    50     0     0    50     0   100\n 5       5     3     3     2     3    70    40    40    50    30    20    70\n 6       6     3     1     1     1   100     0     0     0     0     0   100\n 7       7     3     3     1     6   100    10    20    10    10    10    50\n 8       8     3     1     1     6    80     0    60    55     0     0    90\n 9       9     3     1     1     1   100    50   100    75    50    25   100\n10      10     3     3     1     8    25    25    25    25    55    50    50\n# … with 2,990 more rows, and 260 more variables: Q5_8 &lt;dbl&gt;, Q5_9 &lt;dbl&gt;,\n#   Q5_10 &lt;dbl&gt;, Q5_11 &lt;dbl&gt;, Q5_12 &lt;dbl&gt;, Q6_1 &lt;dbl&gt;, Q6_2 &lt;dbl&gt;, Q6_3 &lt;dbl&gt;,\n#   Q6_4 &lt;dbl&gt;, Q6_5 &lt;dbl&gt;, Q7 &lt;dbl&gt;, Q8 &lt;dbl&gt;, Q9 &lt;dbl&gt;, Q10_1 &lt;dbl&gt;,\n#   Q10_2 &lt;dbl&gt;, Q10_3 &lt;dbl&gt;, Q10_4 &lt;dbl&gt;, Q10_5 &lt;dbl&gt;, Q10_6 &lt;dbl&gt;,\n#   Q10_7 &lt;dbl&gt;, Q10_8 &lt;dbl&gt;, Q11 &lt;dbl&gt;, Q12 &lt;dbl&gt;, Q12S1 &lt;dbl&gt;, Q13 &lt;dbl&gt;,\n#   Q13S1 &lt;dbl&gt;, Q13S2 &lt;dbl&gt;, Q14 &lt;dbl&gt;, Q14S1 &lt;dbl&gt;, Q15 &lt;dbl&gt;, Q15S1 &lt;dbl&gt;,\n#   Q15S2 &lt;dbl&gt;, Q16 &lt;dbl&gt;, Q16S1 &lt;dbl&gt;, Q16S2 &lt;dbl&gt;, Q17_1 &lt;dbl&gt;, …"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#データの確認",
    "href": "slides/macro/descriptive_statistics.html#データの確認",
    "title": "マクロ政治データ分析実習",
    "section": "データの確認",
    "text": "データの確認\nデータの大きさ（行数と列数）の確認\n\ndim(df)\n\n[1] 3000  272\n\n\n変数名の確認\n\nnames(df)\n\n  [1] \"USER_ID\" \"Q1\"      \"Q2\"      \"Q3\"      \"Q4\"      \"Q5_1\"    \"Q5_2\"   \n  [8] \"Q5_3\"    \"Q5_4\"    \"Q5_5\"    \"Q5_6\"    \"Q5_7\"    \"Q5_8\"    \"Q5_9\"   \n [15] \"Q5_10\"   \"Q5_11\"   \"Q5_12\"   \"Q6_1\"    \"Q6_2\"    \"Q6_3\"    \"Q6_4\"   \n [22] \"Q6_5\"    \"Q7\"      \"Q8\"      \"Q9\"      \"Q10_1\"   \"Q10_2\"   \"Q10_3\"  \n [29] \"Q10_4\"   \"Q10_5\"   \"Q10_6\"   \"Q10_7\"   \"Q10_8\"   \"Q11\"     \"Q12\"    \n [36] \"Q12S1\"   \"Q13\"     \"Q13S1\"   \"Q13S2\"   \"Q14\"     \"Q14S1\"   \"Q15\"    \n [43] \"Q15S1\"   \"Q15S2\"   \"Q16\"     \"Q16S1\"   \"Q16S2\"   \"Q17_1\"   \"Q17_2\"  \n [50] \"Q17_3\"   \"Q17_4\"   \"Q17_5\"   \"Q17_6\"   \"Q17_7\"   \"Q17_8\"   \"Q18S1\"  \n [57] \"Q19S1\"   \"Q20S1\"   \"Q20S2\"   \"Q20S3_1\" \"Q20S3_2\" \"Q20S3_3\" \"Q20S3_4\"\n [64] \"Q20S3_5\" \"Q20S3_6\" \"Q21S1\"   \"Q21S2\"   \"Q21S3_1\" \"Q21S3_2\" \"Q21S3_3\"\n [71] \"Q21S3_4\" \"Q21S3_5\" \"Q21S3_6\" \"Q22S1\"   \"Q22S2\"   \"Q22S3_1\" \"Q22S3_2\"\n [78] \"Q22S3_3\" \"Q22S3_4\" \"Q22S3_5\" \"Q22S3_6\" \"Q23S1\"   \"Q23S2\"   \"Q23S3_1\"\n [85] \"Q23S3_2\" \"Q23S3_3\" \"Q23S3_4\" \"Q23S3_5\" \"Q23S3_6\" \"Q24S1\"   \"Q24S2\"  \n [92] \"Q24S3_1\" \"Q24S3_2\" \"Q24S3_3\" \"Q24S3_4\" \"Q24S3_5\" \"Q24S3_6\" \"Q25S1\"  \n [99] \"Q25S2\"   \"Q25S3_1\" \"Q25S3_2\" \"Q25S3_3\" \"Q25S3_4\" \"Q25S3_5\" \"Q25S3_6\"\n[106] \"Q26S1\"   \"Q26S2\"   \"Q26S3_1\" \"Q26S3_2\" \"Q26S3_3\" \"Q26S3_4\" \"Q26S3_5\"\n[113] \"Q26S3_6\" \"Q27S1\"   \"Q27S2\"   \"Q27S3_1\" \"Q27S3_2\" \"Q27S3_3\" \"Q27S3_4\"\n[120] \"Q27S3_5\" \"Q27S3_6\" \"Q28_1\"   \"Q29\"     \"Q30\"     \"Q31\"     \"Q32\"    \n[127] \"Q33\"     \"Q34\"     \"Q35_1\"   \"Q35_2\"   \"Q35_3\"   \"Q35_4\"   \"Q35_5\"  \n[134] \"Q35_6\"   \"Q35_7\"   \"Q35_8\"   \"Q35_9\"   \"Q35_10\"  \"Q35_11\"  \"Q35_12\" \n[141] \"Q35_13\"  \"Q35_14\"  \"Q35_15\"  \"Q36S1\"   \"Q36S2\"   \"Q36S3\"   \"Q36S4\"  \n[148] \"Q36S5\"   \"Q36S6\"   \"Q36S7\"   \"Q36S8\"   \"Q36S9\"   \"Q37\"     \"Q38\"    \n[155] \"Q39\"     \"Q40S1\"   \"Q40S2\"   \"Q40S3\"   \"Q40S4\"   \"Q40S5\"   \"Q41_1\"  \n[162] \"Q41_2\"   \"Q41_3\"   \"Q41_4\"   \"Q41_5\"   \"Q41_6\"   \"Q42\"     \"Q43\"    \n[169] \"Q44\"     \"Q45\"     \"Q46\"     \"Q47_1\"   \"Q47_2\"   \"Q47_3\"   \"Q47_4\"  \n[176] \"Q47_5\"   \"Q47_6\"   \"Q47_7\"   \"Q47_8\"   \"Q47_9\"   \"Q47_10\"  \"Q47_11\" \n[183] \"Q47_12\"  \"Q47_13\"  \"Q47_14\"  \"Q47_15\"  \"Q47_16\"  \"Q47_17\"  \"Q48_1\"  \n[190] \"Q48_2\"   \"Q48_3\"   \"Q48_4\"   \"Q48_5\"   \"Q48_6\"   \"Q49_1\"   \"Q49_2\"  \n[197] \"Q49_3\"   \"Q50_1\"   \"Q50_2\"   \"Q50_3\"   \"Q50_4\"   \"Q50_5\"   \"Q50_6\"  \n[204] \"Q51_1\"   \"Q51_2\"   \"Q51_3\"   \"Q51_4\"   \"Q51_5\"   \"Q51_6\"   \"Q51_7\"  \n[211] \"Q51_8\"   \"Q51_9\"   \"Q51_10\"  \"Q51_11\"  \"Q51_12\"  \"Q51_13\"  \"Q51_14\" \n[218] \"Q51_15\"  \"Q52\"     \"Q53\"     \"Q54\"     \"Q55\"     \"Q56_1\"   \"Q56_2\"  \n[225] \"Q56_3\"   \"Q56_4\"   \"Q56_5\"   \"Q56_6\"   \"Q56_7\"   \"Q57\"     \"Q58_1\"  \n[232] \"Q58_2\"   \"Q58_3\"   \"Q58_4\"   \"Q58_5\"   \"Q58_6\"   \"Q58_7\"   \"Q58_8\"  \n[239] \"Q58_9\"   \"Q58_10\"  \"Q58_11\"  \"Q58_12\"  \"Q58_13\"  \"Q58_14\"  \"Q58_15\" \n[246] \"Q58_16\"  \"Q59\"     \"Q59_1\"   \"Q59_2\"   \"Q59_3\"   \"Q59_4\"   \"X2_1\"   \n[253] \"X2_2\"    \"X2_3\"    \"Q60\"     \"Q60S1\"   \"Q61\"     \"Q62S1\"   \"Q62S2\"  \n[260] \"Q62S4\"   \"Q63\"     \"Q63S1\"   \"Q63S2\"   \"Q63S4\"   \"Q64\"     \"Q65\"    \n[267] \"seg\"     \"sex\"     \"age\"     \"chiiki\"  \"QVOTES\"  \"QVOTEP\""
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#データの加工変数の抽出",
    "href": "slides/macro/descriptive_statistics.html#データの加工変数の抽出",
    "title": "マクロ政治データ分析実習",
    "section": "データの加工（変数の抽出）",
    "text": "データの加工（変数の抽出）\n分析に使用する変数だけを残し、新しいオブジェクトとして格納\n\nselect()関数で列（=変数）抽出と変数名変更を同時に行う。\n\n\nコード結果\n\n\n\ndf2 &lt;- df %&gt;%\n  select(ID           = USER_ID, # 回答者ID\n         Gender       = sex,     # 性別\n         Age          = age,     # 年齢\n         Education    = Q61,     # 最終学歴\n         Voted        = Q15,     # 投票参加 (2016参院選)\n         VotedParty   = Q15S2,   # 投票先 (2016参院選)\n         T_Jimin      = Q5_7,    # 自民に対する感情温度\n         T_Minshin    = Q5_11)   # 民進に対する感情温度\n\n\n\n\ndf2 # print(df2)もOK\n\n# A tibble: 3,000 × 8\n      ID Gender   Age Education Voted VotedParty T_Jimin T_Minshin\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1     1      2    69         4     1          7      50        30\n 2     2      2    47         3     2         NA      10        50\n 3     3      2    37         2     1          1      75         0\n 4     4      1    51         4     1          1     100        50\n 5     5      1    38         4     2         NA      70        30\n 6     6      1    71         2     1          1     100         0\n 7     7      1    47         3     1          7      50        10\n 8     8      1    71         2     1          1      90         0\n 9     9      1    75         4     1          1     100        50\n10    10      2    66         3     1          2      50        55\n# … with 2,990 more rows"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#連続変数continuous-variable",
    "href": "slides/macro/descriptive_statistics.html#連続変数continuous-variable",
    "title": "マクロ政治データ分析実習",
    "section": "連続変数（continuous variable）",
    "text": "連続変数（continuous variable）\n間隔尺度、または比率尺度で測定された変数\n\n量的変数の例: 年齢 (Age)、感情温度 (T_JiminとT_Minshin)\n\n変数の尺度についてはミクロ政治データ分析実習の第6回を参照\n\n量的変数の記述統計量（太字は掲載がほぼ必須の記述統計量）\n\n平均値 (mean())\n中央値 (median())\n標準偏差 (sd())\n分散 (var())\n最小値 (min())\n最大値 (max())\n欠損値を除く有効ケース数 (Observation; Obs)\n\n一部の変数に欠損値が含まれている場合は必須\nただし、分析を行う場合、予め欠損値を含む行を削除 or 補完する場合が多い\n\nその他"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計の計算-base-rの場合",
    "href": "slides/macro/descriptive_statistics.html#記述統計の計算-base-rの場合",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計の計算: Base Rの場合",
    "text": "記述統計の計算: Base Rの場合\n\nmean(df2$Age)        # Ageの平均値\n\n[1] 47.34\n\nmedian(df2$Age)      # Ageの中央値\n\n[1] 47\n\nsd(df2$Age)          # Ageの標準偏差\n\n[1] 15.62839\n\nmin(df2$Age)         # Ageの最小値\n\n[1] 18\n\nmax(df2$Age)         # Ageの最大値\n\n[1] 75\n\nsum(!is.na(df2$Age)) # Ageの有効ケース数\n\n[1] 3000"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計の計算-dplyrを利用する",
    "href": "slides/macro/descriptive_statistics.html#記述統計の計算-dplyrを利用する",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計の計算: {dplyr}を利用する",
    "text": "記述統計の計算: {dplyr}を利用する\nsummarise()関数を使用\n\ndf2 %&gt;%\n  summarise(Mean   = mean(Age),         # Ageの平均値\n            Median = median(Age),       # Ageの中央値\n            SD     = sd(Age),           # Ageの標準偏差\n            Min    = min(Age),          # Ageの最小値\n            Max    = max(Age),          # Ageの最大値\n            Obs    = sum(!is.na(Age)))  # Ageの有効ケース数\n\n# A tibble: 1 × 6\n   Mean Median    SD   Min   Max   Obs\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;\n1  47.3     47  15.6    18    75  3000"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#一つの表としてまとめる",
    "href": "slides/macro/descriptive_statistics.html#一つの表としてまとめる",
    "title": "マクロ政治データ分析実習",
    "section": "一つの表としてまとめる",
    "text": "一つの表としてまとめる\n論文、レポートに記述統計を掲載する際は一つの表としてまとめること\n\n\n\n\n\n\n\n\n\n平均値\n標準偏差\n最小値\n最大値\n\n\n\n\n年齢\n47.340\n15.628\n18\n75\n\n\n感情温度: 自由民主党\n41.130\n28.015\n0\n100\n\n\n感情温度: 民進党\n34.248\n25.947\n0\n100"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#summarytoolsの利用1",
    "href": "slides/macro/descriptive_statistics.html#summarytoolsの利用1",
    "title": "マクロ政治データ分析実習",
    "section": "{summarytools}の利用（1）",
    "text": "{summarytools}の利用（1）\n\n{summarytools}のdescr()関数\n\ndescr()内には記述統計を確認するdata.frame / tibbleのオブジェクト名\n連続変数のみ記述統計量が出力される。\n\n\n\nコード結果\n\n\n\n# インストールされていない場合はRコンソール上にinstall.pacakges(\"summarytools\")\nlibrary(summarytools)\ndf2 %&gt;%\n  select(-ID) %&gt;% # 回答者IDの記述統計量は不要なので除外\n  descr()\n\n\n\n\n\nDescriptive Statistics  \ndf2  \nN: 3000  \n\n                        Age   Education    Gender   T_Jimin   T_Minshin     Voted   VotedParty\n----------------- --------- ----------- --------- --------- ----------- --------- ------------\n             Mean     47.34        3.11      1.50     41.13       34.25      1.30         2.94\n          Std.Dev     15.63        0.89      0.50     28.02       25.95      0.53         2.21\n              Min     18.00        1.00      1.00      0.00        0.00      1.00         1.00\n               Q1     34.00        2.00      1.00     20.00       10.00      1.00         1.00\n           Median     47.00        3.00      2.00     50.00       40.00      1.00         2.00\n               Q3     61.00        4.00      2.00     60.00       50.00      2.00         5.00\n              Max     75.00        4.00      2.00    100.00      100.00      3.00         7.00\n              MAD     19.27        1.48      0.00     29.65       29.65      0.00         1.48\n              IQR     27.00        2.00      1.00     40.00       40.00      1.00         4.00\n               CV      0.33        0.29      0.33      0.68        0.76      0.41         0.75\n         Skewness     -0.03       -0.38     -0.01      0.02        0.16      1.56         0.82\n      SE.Skewness      0.04        0.04      0.04      0.04        0.04      0.04         0.05\n         Kurtosis     -1.14       -1.28     -2.00     -0.83       -0.81      1.53        -0.82\n          N.Valid   3000.00     3000.00   3000.00   3000.00     3000.00   3000.00      2208.00\n        Pct.Valid    100.00      100.00    100.00    100.00      100.00    100.00        73.60"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#summarytoolsの利用2",
    "href": "slides/macro/descriptive_statistics.html#summarytoolsの利用2",
    "title": "マクロ政治データ分析実習",
    "section": "{summarytools}の利用（2）",
    "text": "{summarytools}の利用（2）\n\n主要統計量のみ、行と列の交換、変数の順番は固定\n\n\ndf2 %&gt;%\n  select(-ID) %&gt;%\n  # 平均値、標準偏差、最小値、最大値、有効ケース数\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, \n        sort = \"p\")\n\nDescriptive Statistics  \ndf2  \nN: 3000  \n\n                    Mean   Std.Dev     Min      Max   N.Valid\n---------------- ------- --------- ------- -------- ---------\n             Age   47.34     15.63   18.00    75.00   3000.00\n       Education    3.11      0.89    1.00     4.00   3000.00\n          Gender    1.50      0.50    1.00     2.00   3000.00\n         T_Jimin   41.13     28.02    0.00   100.00   3000.00\n       T_Minshin   34.25     25.95    0.00   100.00   3000.00\n           Voted    1.30      0.53    1.00     3.00   3000.00\n      VotedParty    2.94      2.21    1.00     7.00   2208.00"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#summarytoolsの利用3",
    "href": "slides/macro/descriptive_statistics.html#summarytoolsの利用3",
    "title": "マクロ政治データ分析実習",
    "section": "{summarytools}の利用（3）",
    "text": "{summarytools}の利用（3）\n\nRMarkdownを使う場合（Chunkオプションとしてresults = \"asis\"を指定）\n\n\ndf2 %&gt;%\n  select(-ID) %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, sort = \"p\", \n        style = \"rmarkdown\", plain.ascii = FALSE)\nDescriptive Statistics\ndf2\nN: 3000\n\n\n\n \nMean\nStd.Dev\nMin\nMax\nN.Valid\n\n\n\n\nAge\n47.34\n15.63\n18.00\n75.00\n3000.00\n\n\nEducation\n3.11\n0.89\n1.00\n4.00\n3000.00\n\n\nGender\n1.50\n0.50\n1.00\n2.00\n3000.00\n\n\nT_Jimin\n41.13\n28.02\n0.00\n100.00\n3000.00\n\n\nT_Minshin\n34.25\n25.95\n0.00\n100.00\n3000.00\n\n\nVoted\n1.30\n0.53\n1.00\n3.00\n3000.00\n\n\nVotedParty\n2.94\n2.21\n1.00\n7.00\n2208.00"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#カテゴリ変数categorical-variable",
    "href": "slides/macro/descriptive_statistics.html#カテゴリ変数categorical-variable",
    "title": "マクロ政治データ分析実習",
    "section": "カテゴリ変数（categorical variable）",
    "text": "カテゴリ変数（categorical variable）\nカテゴリ変数：名目尺度で測定された変数（=名目変数）\n\nカテゴリ変数の例: 性別 (Gender)、投票参加 (Voted)、投票先 (VotedParty)\n\n教育水準（Education）のような順序変数は、連続変数としてもカテゴリ変数としても扱うことが可能\n\n名目尺度は足し算、掛け算などができないため、平均値や標準偏差のような概念が存在しない。\n\nカテゴリ変数の可視化\n\n方法1: 度数分布表を作成する\n\n事前にfactor化する\n\n方法2: ダミー変数に変換し、量的変数と同じ扱い\n\n記述統計の表を作成する場合は、ダミー変換後、量的変数同様に扱う"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#度数分布表の作成",
    "href": "slides/macro/descriptive_statistics.html#度数分布表の作成",
    "title": "マクロ政治データ分析実習",
    "section": "度数分布表の作成",
    "text": "度数分布表の作成\nVoted（投票有無）変数の度数分布表\n\n値 (1, 2, 3, …)の意味は質問票、またはコードブックを参照\nカテゴリ変数が複数ある場合、一つ一つの変数に対し、度数分布表を作成する必要がある。\n\n\\(\\Rightarrow\\) できれば、連続変数の記述統計表と一つにまとめたい。\n\n\n\n\n\ntable(df2$Voted) # 度数\n\n\n   1    2    3 \n2208  687  105 \n\nprop.table(table(df2$Voted)) # 割合\n\n\n    1     2     3 \n0.736 0.229 0.035 \n\nprop.table(table(df2$Voted)) * 100 # パーセントで出力\n\n\n   1    2    3 \n73.6 22.9  3.5 \n\n\n\n\n\n\n\n\n\n度数分布表の例\n\n\n値\n度数\n割合 (%)\n\n\n\n\n投票した\n2208\n73.6\n\n\n棄権した\n687\n22.9\n\n\n投票権がなかった\n105\n3.5"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#カテゴリ変数のfactor化",
    "href": "slides/macro/descriptive_statistics.html#カテゴリ変数のfactor化",
    "title": "マクロ政治データ分析実習",
    "section": "カテゴリ変数のfactor化",
    "text": "カテゴリ変数のfactor化\nVotedとVotedParty変数のfactor化\n\nfactor()関数を使用\n\nlevels =には元の値を、labels =には各値に対応するラベルを指定\n\n\n\ndf2 &lt;- df2 %&gt;%\n  mutate(Voted_F      = factor(Voted, levels = 1:3, labels = c(\"投票\", \"棄権\", \"選挙権なし\")),\n         VotedParty_F = factor(VotedParty, levels = 1:7,\n                               labels = c(\"自民\", \"民進\", \"公明\", \"維新\", \"共産\", \"その他\", \"不明\")))"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#カテゴリ変数のfactor化-1",
    "href": "slides/macro/descriptive_statistics.html#カテゴリ変数のfactor化-1",
    "title": "マクロ政治データ分析実習",
    "section": "カテゴリ変数のfactor化",
    "text": "カテゴリ変数のfactor化\n\ntable(df2$Voted_F) # Voted_Fの度数分布表\n\n\n      投票       棄権 選挙権なし \n      2208        687        105 \n\ntable(df2$Voted_F) %&gt;% prop.table() * 100 # パイプ演算子も使用可能\n\n\n      投票       棄権 選挙権なし \n      73.6       22.9        3.5 \n\ntable(df2$VotedParty_F) # VotedParty_Fの度数分布表\n\n\n  自民   民進   公明   維新   共産 その他   不明 \n   880    439    113    220    173     24    359 \n\ntable(df2$VotedParty_F) %&gt;% prop.table() * 100 # パイプ演算子も使用可能\n\n\n     自民      民進      公明      維新      共産    その他      不明 \n39.855072 19.882246  5.117754  9.963768  7.835145  1.086957 16.259058"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#論文レポートでの掲載方法",
    "href": "slides/macro/descriptive_statistics.html#論文レポートでの掲載方法",
    "title": "マクロ政治データ分析実習",
    "section": "論文・レポートでの掲載方法",
    "text": "論文・レポートでの掲載方法\n値、度数、割合、累積割合を掲載\n\n\n\n\n\n\n\n\n\n度数 (人)\n割合 (%)\n累積割合 (%)\n\n\n\n\n1. 投票\n2208\n73.6\n73.6\n\n\n2. 棄権\n687\n22.9\n96.5\n\n\n3. 投票権なし\n105\n3.5\n100.0"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#ダミー変数",
    "href": "slides/macro/descriptive_statistics.html#ダミー変数",
    "title": "マクロ政治データ分析実習",
    "section": "ダミー変数",
    "text": "ダミー変数\nある属性を備えているかどうかを示す変数\n\n特定のカテゴリの属している場合は1、属さない場合は0の値をとる二値変数\n\n\n\n\n\n\n\n\n\n\nダミー変換「前」\n\n\nID\nVoted_F\n\n\n\n\n39\n投票\n\n\n40\n選挙権なし\n\n\n41\n投票\n\n\n42\n投票\n\n\n46\n投票\n\n\n47\n棄権\n\n\n48\n投票\n\n\n53\n選挙権なし\n\n\n54\n棄権\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nダミー変換「後」\n\n\nID\nVoted_F\n投票\n棄権\n選挙権なし\n\n\n\n\n39\n投票\n1\n0\n0\n\n\n40\n選挙権なし\n0\n0\n1\n\n\n41\n投票\n1\n0\n0\n\n\n42\n投票\n1\n0\n0\n\n\n46\n投票\n1\n0\n0\n\n\n47\n棄権\n0\n1\n0\n\n\n48\n投票\n1\n0\n0\n\n\n53\n選挙権なし\n0\n0\n1\n\n\n54\n棄権\n0\n1\n0"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#ダミー変数の作成",
    "href": "slides/macro/descriptive_statistics.html#ダミー変数の作成",
    "title": "マクロ政治データ分析実習",
    "section": "ダミー変数の作成",
    "text": "ダミー変数の作成\nmutate()内にif_else()で作成\n\n{fastDummies}パッケージを使えばより簡単にダミー変換が可能\n\n\ndf2 &lt;- df2 %&gt;%\n  mutate(Voted_F_Vote       = if_else(Voted_F == \"投票\", 1, 0),\n         Voted_F_Absent     = if_else(Voted_F == \"棄権\", 1, 0),\n         Voted_F_Ineligible = if_else(Voted_F == \"選挙権なし\", 1, 0))\n\ndf2 %&gt;%\n  select(ID, Voted_F:Voted_F_Ineligible)\n\n# A tibble: 3,000 × 6\n      ID Voted_F VotedParty_F Voted_F_Vote Voted_F_Absent Voted_F_Ineligible\n   &lt;dbl&gt; &lt;fct&gt;   &lt;fct&gt;               &lt;dbl&gt;          &lt;dbl&gt;              &lt;dbl&gt;\n 1     1 投票    不明                    1              0                  0\n 2     2 棄権    &lt;NA&gt;                    0              1                  0\n 3     3 投票    自民                    1              0                  0\n 4     4 投票    自民                    1              0                  0\n 5     5 棄権    &lt;NA&gt;                    0              1                  0\n 6     6 投票    自民                    1              0                  0\n 7     7 投票    不明                    1              0                  0\n 8     8 投票    自民                    1              0                  0\n 9     9 投票    自民                    1              0                  0\n10    10 投票    民進                    1              0                  0\n# … with 2,990 more rows"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#順序変数",
    "href": "slides/macro/descriptive_statistics.html#順序変数",
    "title": "マクロ政治データ分析実習",
    "section": "順序変数",
    "text": "順序変数\n順序尺度で測定された変数\n\n例) 最終学歴\nカテゴリー変数のように扱うことも、連続変数のように扱うことも可能\n\n記述統計の表としてまとめる場合は、連続変数同様に扱う"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計掲載の例",
    "href": "slides/macro/descriptive_statistics.html#記述統計掲載の例",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計掲載の例",
    "text": "記述統計掲載の例\n\n\n\n\n\n\n\n\n\n平均値\n中央値\n標準偏差\n最小値\n最大値\n有効ケース数\n\n\n\n\n女性\n0.503\n1\n0.500\n0\n1\n3000\n\n\n年齢\n47.340\n47\n15.628\n18\n75\n3000\n\n\n最終学歴\n0.018\n0\n0.134\n0\n1\n3000\n\n\n投票有無: 投票\n0.736\n1\n0.441\n0\n1\n3000\n\n\n投票有無: 棄権\n0.229\n0\n0.420\n0\n1\n3000\n\n\n投票有無: 選挙権なし\n0.035\n0\n0.184\n0\n1\n3000\n\n\n投票先: 自民\n0.399\n0\n0.490\n0\n1\n2208\n\n\n投票先: 民進\n0.199\n0\n0.399\n0\n1\n2208\n\n\n投票先: 公明\n0.051\n0\n0.220\n0\n1\n2208\n\n\n投票先: 維新\n0.100\n0\n0.300\n0\n1\n2208\n\n\n投票先: 共産\n0.078\n0\n0.269\n0\n1\n2208\n\n\n投票先: その他\n0.011\n0\n0.104\n0\n1\n2208\n\n\n投票先: 不明\n0.163\n0\n0.369\n0\n1\n2208\n\n\n感情温度: 自民\n41.130\n50\n28.015\n0\n100\n3000\n\n\n感情温度: 民進\n34.248\n40\n25.947\n0\n100\n3000"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#便利なパッケージ",
    "href": "slides/macro/descriptive_statistics.html#便利なパッケージ",
    "title": "マクロ政治データ分析実習",
    "section": "便利なパッケージ",
    "text": "便利なパッケージ\n{summarytools}パッケージのdfSummary()関数\n\n結果は各自RStudioのViewerペインから確認すること\n\ndf2 %&gt;%\n  # 記述統計を出力する変数を指定\n  select(Age, Education, Voted_F, VotedParty_F, T_Jimin, T_Minshin) %&gt;%\n  dfSummary() %&gt;% # 記述統計量を計算\n  view()          # RStudioのViewerペインに表示"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#離散変数間の関係",
    "href": "slides/macro/descriptive_statistics.html#離散変数間の関係",
    "title": "マクロ政治データ分析実習",
    "section": "離散変数間の関係",
    "text": "離散変数間の関係\nクロス表 (corss tabulation)\n\ntable(ベクトル1, ベクトル2)で作成可能\n\nwith(データ名, table(変数名1, 変数名2))も可能\n\n\n\ndf2 &lt;- df2 %&gt;%\n  mutate(Gender_F = factor(Gender, levels = 1:2, labels = c(\"男性\", \"女性\")))\n\n# dfのGender_F変数とVotedParty_F変数のクロス表\n# with(df2, table(Gender_F, VotedParty_F)) もOK\ntable(df2$Gender_F, df2$VotedParty_F)\n\n      \n       自民 民進 公明 維新 共産 その他 不明\n  男性  502  249   53  128   92     13  136\n  女性  378  190   60   92   81     11  223"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#グループごとの記述統計量",
    "href": "slides/macro/descriptive_statistics.html#グループごとの記述統計量",
    "title": "マクロ政治データ分析実習",
    "section": "グループごとの記述統計量",
    "text": "グループごとの記述統計量\n\n\n投票有無ごとの平均年齢\n\ndf2 %&gt;%\n  group_by(Voted_F) %&gt;%\n  summarise(Age = mean(Age))\n\n# A tibble: 3 × 2\n  Voted_F      Age\n  &lt;fct&gt;      &lt;dbl&gt;\n1 投票        49.9\n2 棄権        41.9\n3 選挙権なし  27.8\n\n\n\n\n\n投票先ごとの民進党に対する感情温度\n\ndf2 %&gt;%\n  # VotedParty_Fの値が欠損している行を除外\n  drop_na(VotedParty_F) %&gt;% \n  group_by(VotedParty_F) %&gt;%\n  summarise(T_Minshin = mean(T_Minshin))\n\n# A tibble: 7 × 2\n  VotedParty_F T_Minshin\n  &lt;fct&gt;            &lt;dbl&gt;\n1 自民              24.2\n2 民進              52.9\n3 公明              29.2\n4 維新              33.2\n5 共産              48.0\n6 その他            56.0\n7 不明              35.3"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#記述統計の可視化",
    "href": "slides/macro/descriptive_statistics.html#記述統計の可視化",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計の可視化",
    "text": "記述統計の可視化\nグループごとの記述統計を提示する際\n\n\n\n表: 情報量が多く、サイズも小さい\n\n単純記述統計は主に表を使用\n\n\n\n\n\n\n\n\n\n\n投票先\n自民感情温度\n\n\n\n\n自民\n60.40\n\n\n民進\n23.37\n\n\n公明\n45.06\n\n\n維新\n39.85\n\n\n共産\n18.79\n\n\nその他\n18.46\n\n\n不明\n35.04\n\n\n\n\n\n\n\n\n\n図: 全体的な傾向や差が読み取りやすい。主に棒グラフと箱ひげ図を利用\n\n単純記述統計でも主要変数については更に図を使う場合がある。"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#グループごとの記述統計-棒グラフ",
    "href": "slides/macro/descriptive_statistics.html#グループごとの記述統計-棒グラフ",
    "title": "マクロ政治データ分析実習",
    "section": "グループごとの記述統計 (棒グラフ)",
    "text": "グループごとの記述統計 (棒グラフ)\n\ndf2 %&gt;%\n  drop_na(VotedParty_F) %&gt;%   # 投票先（VotedParty_F）列の値が欠損した行を除外\n  group_by(VotedParty_F) %&gt;%  # 投票先ごとに行をグルーピング\n  summarise(T_Minshin = mean(T_Minshin)) %&gt;% # 民進党に対する感情温度の平均値\n  ggplot() +\n  geom_bar(aes(x = VotedParty_F, y = T_Minshin), stat = \"identity\") +\n  labs(x = \"投票先 (2016参院選比例区)\", y = \"民進党に対する\\n感情温度の平均値\")"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#グループごとの記述統計-箱ひげ図",
    "href": "slides/macro/descriptive_statistics.html#グループごとの記述統計-箱ひげ図",
    "title": "マクロ政治データ分析実習",
    "section": "グループごとの記述統計 (箱ひげ図)",
    "text": "グループごとの記述統計 (箱ひげ図)\n\ndf2 %&gt;%\n  drop_na(VotedParty_F) %&gt;%\n  ggplot() +\n  geom_boxplot(aes(x = VotedParty_F, y = T_Jimin)) +\n  labs(x = \"投票先 (2016参院選比例区)\", y = \"自民党に対する感情温度\")"
  },
  {
    "objectID": "slides/macro/descriptive_statistics.html#教科書との対応",
    "href": "slides/macro/descriptive_statistics.html#教科書との対応",
    "title": "マクロ政治データ分析実習",
    "section": "教科書との対応",
    "text": "教科書との対応\n副読本『私たちのR: ベストプラクティスの探求』\n\nlibrary(): 第5章\nread_csv(): 第7章\ndim(): 第9章\nnames(), select(): 第12章\nsummarise(), group_by(), mutate(), if_else(): 第14章\nfactor(): 第14章\nグラフの作成: 第17〜20章\n\nRの操作になれていない場合、当該章のみを読んでも内容を理解することは難しい。これは文法を勉強せずに辞書を調べることと同じ行為である。プログラミング、ソフトウェアの使い方は積み上げが重要であるため、第1章から読むことを推奨（当該章のみ抜粋して読むことは、その後の話）\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/interaction.html#授業開始前に",
    "href": "slides/macro/interaction.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\nコンソール上にinstall.packages(\"marginaleffects\")を入力し、インストールしてください。\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(marginaleffects)\n\njes_df &lt;- read_csv(\"Data/JES6_W1_2.csv\")\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/interaction.html#交互作用とは-1",
    "href": "slides/macro/interaction.html#交互作用とは-1",
    "title": "マクロ政治データ分析実習",
    "section": "交互作用とは",
    "text": "交互作用とは\n主な説明変数（\\(X\\)）と応答変数（\\(Y\\)）の関係において、\\(X\\)が\\(Y\\)に与える影響がその他の変数（\\(Z\\)）の影響を受ける場合\n\n\n\n\n\n\n\\(Z\\) は調整変数 (moderation variable; moderator)と呼ばれる。\n\n調整変数はダミー変数でも、連続変数でも可能\n\\(X\\) が \\(Y\\) に与える影響は \\(Z\\) によって変わる。"
  },
  {
    "objectID": "slides/macro/interaction.html#回帰分析における交互作用",
    "href": "slides/macro/interaction.html#回帰分析における交互作用",
    "title": "マクロ政治データ分析実習",
    "section": "回帰分析における交互作用",
    "text": "回帰分析における交互作用\n説明変数、調整変数、交差項を投入した回帰モデル\n\n\n\n\n\\[\n\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X \\cdot Z\n\\]\n\n交差項 (interaction term)\n\n説明変数に調整変数をかけた変数 ( \\(X \\cdot Z\\) )\n\n変数\\(X\\)が\\(Y\\)に与える効果は\\(\\beta_1\\)? \\(\\leftarrow\\) 間違い\n\n回帰式において\\(X\\)は\\(\\beta_3\\)にも登場する。\n式を変形すると…\n\n\n\\[\n\\hat{Y} = \\alpha + (\\beta_1 + \\beta_3 Z) X + \\beta_2 Z\n\\]\n\n変数\\(X\\)が\\(Y\\)に与える効果は \\(\\beta_1 + \\beta_3 Z\\)\n\n\\(\\Rightarrow\\) 変数\\(X\\)が\\(Y\\)に与える影響は\\(Z\\)の影響を受ける。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合",
    "text": "調整変数がダミー変数の場合\n調整変数\\(Z\\)が0、または1の値のみをとるダミー変数の場合（\\(Z \\in \\{0, 1\\}\\)）\n\\[\n\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X \\cdot Z\n\\]\n\n調整変数（\\(Z\\)）が0か1かによって、\\(X\\)が\\(Y\\)に与える影響が変化する。\n\\(Z = 0\\)の場合: \\(\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z\\)\n\n\\(X\\)が\\(Y\\) に与える影響は\\(\\beta_1\\)\n\n\\(Z = 1\\)の場合: \\(\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X = \\alpha + (\\beta_1 + \\beta_3) X + \\beta_2 Z\\)\n\n\\(X\\)が\\(Y\\)に与える影響は\\(\\beta_1 + \\beta_3\\)"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合-1",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合-1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合",
    "text": "調整変数がダミー変数の場合\n\n\n\n\n\n\n\n\n\n\n\n\n以下のモデルの場合…\n\\[\n\\begin{align}\n\\hat{Y} & = 3 + 2 X + 1 Z + 3 X \\cdot Z \\\\\n& = 3 + (2 + 3Z) X + 1 Z\n\\end{align}\n\\]\n\n\\(X\\)の係数は\\(2 + 3Z\\)\n\\(Z = 0\\)なら… (赤)\n\n\\(\\hat{Y} = 3 + 2X + 1Z\\)であるため、\\(X\\)が1上がると、\\(Y\\)は2上がる。\n\n\\(Z = 1\\)なら… (青)\n\n\\(\\hat{Y} = 3 + 5X + 1Z\\)であるため、\\(X\\)が1上がると、\\(Y\\)は5上がる。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合",
    "text": "調整変数が連続変数の場合\n調整変数 \\(Z\\) が無数の値をとる連続変数の場合\n\\[\n\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X \\cdot Z\n\\]\n\n調整変数 ( \\(Z\\) )の値によって、 \\(X\\) が \\(Y\\) に与える影響が変化する。\n\\(Z\\) が1の場合: \\(\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 X \\cdot 1 = \\alpha + (\\beta_1 + \\beta_3) X + \\beta_2 Z\\)\n\n\\(X\\) が \\(Y\\) に与える影響は \\(\\beta_1 + \\beta_3\\)\n\n\\(Z\\) が2.5の場合: \\(\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 2.5 \\cdot X = \\alpha + (\\beta_1 + 2.5\\beta_3) X + \\beta_2 Z\\)\n\n\\(X\\) が \\(Y\\) に与える影響は \\(\\beta_1 + 2.5\\beta_3\\)\n\n\\(Z\\) が6の場合: \\(\\hat{Y} = \\alpha + \\beta_1 X + \\beta_2 Z + \\beta_3 6 \\cdot X = \\alpha + (\\beta_1 + 6\\beta_3) X + \\beta_2 Z\\)\n\n\\(X\\) が \\(Y\\) に与える影響は \\(\\beta_1 + 6\\beta_3\\)\n\n無数のケースがあり得る。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合-1",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合-1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合",
    "text": "調整変数が連続変数の場合\n\n\n\n\n\n\n\n\n\n\n\n\n以下のモデルの場合…\n\\[\n\\begin{align}\n\\hat{Y} & = 2 + 3 X + 2 Z - 1 X \\cdot Z \\\\\n& = 2 + (3 - 1Z) X + 2 Z\n\\end{align}\n\\]\n\n\\(X\\)の係数は\\(3 - Z\\)\n\\(Z = -1\\)なら… (赤)\n\n\\(\\hat{Y} = 2 + 4X + 2Z\\)であるため、\\(X\\)が1上がると、\\(Y\\)は4上がる。\n\n\\(Z = 2\\)なら… (緑)\n\n\\(\\hat{Y} = 2 + 1X + 2Z\\)であるため、\\(X\\)が1上がると、\\(Y\\)は1上がる。\n\n\\(Z = 3.5\\)なら… (青)\n\n\\(\\hat{Y} = 2 - 0.5 X + 2Z\\)であるため、\\(X\\)が1上がると、\\(Y\\)は0.5下がる。"
  },
  {
    "objectID": "slides/macro/interaction.html#実習用データ",
    "href": "slides/macro/interaction.html#実習用データ",
    "title": "マクロ政治データ分析実習",
    "section": "実習用データ",
    "text": "実習用データ\n\nlibrary(tidyverse)\njes_df &lt;- read_csv(\"Data/JES6_W1_2.csv\")\n\njes_df\n\n# A tibble: 3,000 × 6\n   TempKyosan Female   Age Satisfaction Interest Ideology\n        &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1         20      1    69            4        4        9\n 2         20      1    47            1        1        7\n 3          0      1    37            3        3       11\n 4          0      0    51            4        3       11\n 5         20      0    38            2        3        7\n 6          0      0    71            5        4       11\n 7         10      0    47            3        3        9\n 8          0      0    71            4        4       11\n 9         25      0    75            3        4        9\n10         40      1    66            2        3        6\n# … with 2,990 more rows"
  },
  {
    "objectID": "slides/macro/interaction.html#実習用データの概要",
    "href": "slides/macro/interaction.html#実習用データの概要",
    "title": "マクロ政治データ分析実習",
    "section": "実習用データの概要",
    "text": "実習用データの概要\n\n\n\n変数\n説明\n備考\n\n\n\n\nTempKyosan\n日本共産党に対する感情温度\n高いほど好感\n\n\nFemale\n女性ダミー\n0: 男性 / 1: 女性\n\n\nAge\n回答者の年齢\n\n\n\nSatisfaction\n政治満足度\n高いほど満足\n\n\nInterest\n回答者の政治関心\n高いほど関心あり\n\n\nIdeology\n回答者のイデオロギー\n高いほど保守的"
  },
  {
    "objectID": "slides/macro/interaction.html#記述統計量",
    "href": "slides/macro/interaction.html#記述統計量",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計量",
    "text": "記述統計量\n今回のデータはすべて連続変数扱いとなるため、前処理は不要\n\n名目変数もダミー変数になると連続変数と同じ扱いでOK\n\n\njes_df %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\nDescriptive Statistics  \njes_df  \nN: 3000  \n\n                      Mean   Std.Dev     Min      Max   N.Valid\n------------------ ------- --------- ------- -------- ---------\n        TempKyosan   26.88     24.95    0.00   100.00   3000.00\n            Female    0.50      0.50    0.00     1.00   3000.00\n               Age   47.34     15.63   18.00    75.00   3000.00\n      Satisfaction    2.45      1.08    1.00     5.00   3000.00\n          Interest    2.74      0.83    1.00     4.00   3000.00\n          Ideology    6.34      2.10    1.00    11.00   3000.00"
  },
  {
    "objectID": "slides/macro/interaction.html#問題設定",
    "href": "slides/macro/interaction.html#問題設定",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　政治満足度が共産党に対する感情温度に与える影響を調べたい。ただし、この影響は一定ではなく、性別や年齢によって異なるかも知れない。政治満足度が共産党に対する感情温度に与える影響の不均一性を調べるためにはどうすれば良いだろうか。\n\nモデル1\n\n主な説明変数: 政治満足度 (Satisfaction)\n応答変数: 共産党に対する感情温度 (TempKoysan)\n調整変数: 女性ダミー (Female)\n統制変数: 政治関心 (Interest)、イデオロギー (Ideology)、年齢 (Age)\n\nモデル2\n\n主な説明変数: 政治満足度 (Satisfaction)\n応答変数: 共産党に対する感情温度 (TempKoysan)\n調整変数: 年齢 (Age)\n統制変数: 政治関心 (Interest)、イデオロギー (Ideology)、女性ダミー (Female)"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合-モデル1",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合-モデル1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合 (モデル1)",
    "text": "調整変数がダミー変数の場合 (モデル1)\n政治満足度 (= 説明変数)が共産党に対する感情温度 (= 応答変数)に与える影響は性別 (= 調整変数)によって変わる。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合の回帰式-モデル1",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合の回帰式-モデル1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合の回帰式 (モデル1)",
    "text": "調整変数がダミー変数の場合の回帰式 (モデル1)\n\\[\n\\widehat{\\mbox{TempKyosan}} = \\alpha + \\beta_1 \\mbox{Satisfaction} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Interest} + \\beta_4 \\mbox{Ideology} + \\beta_5 \\mbox{Age} + \\beta_6 (\\mbox{Satisfaction} \\cdot \\mbox{Female})\n\\]"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合-モデル2",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合-モデル2",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合 (モデル2)",
    "text": "調整変数が連続変数の場合 (モデル2)\n政治満足度 (= 説明変数)が共産党に対する感情温度 (= 応答変数)に与える影響は年齢 (= 調整変数)によって変わる。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合の回帰式-モデル2",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合の回帰式-モデル2",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合の回帰式 (モデル2)",
    "text": "調整変数が連続変数の場合の回帰式 (モデル2)\n\\[\n\\widehat{\\mbox{TempKyosan}} = \\alpha + \\beta_1 \\mbox{Satisfaction} + \\beta_2 \\mbox{Age} + \\beta_3 \\mbox{Interest} + \\beta_4 \\mbox{Ideology} + \\beta_5 \\mbox{Female} + \\beta_6 (\\mbox{Satisfaction} \\cdot \\mbox{Age})\n\\]"
  },
  {
    "objectID": "slides/macro/interaction.html#交差項を入れた回帰分析の推定方法",
    "href": "slides/macro/interaction.html#交差項を入れた回帰分析の推定方法",
    "title": "マクロ政治データ分析実習",
    "section": "交差項を入れた回帰分析の推定方法",
    "text": "交差項を入れた回帰分析の推定方法\nlm()内の回帰式 (formula)に2つの変数を*でつなぐだけ\n\nA * Bは説明変数としてA、B、A\\(\\times\\)Bが同時に投入することを意味する。\n\n\nfit1 &lt;- lm(TempKyosan ~ Satisfaction * Female + Interest + Ideology + Age, data = jes_df)\nfit2 &lt;- lm(TempKyosan ~ Satisfaction * Age + Interest + Ideology + Female + Age, data = jes_df)\n\n\n\n\n\nsummary(fit1)\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\nt値\np値\n\n\n\n\n切片\n49.275\n2.587\n19.047\n&lt; 0.001\n\n\n政治満足度\n−4.732\n0.561\n−8.429\n&lt; 0.001\n\n\n女性\n2.752\n2.186\n1.259\n0.208\n\n\n政治関心\n0.217\n0.571\n0.381\n0.703\n\n\nイデオロギー\n−1.887\n0.214\n−8.815\n&lt; 0.001\n\n\n年齢\n−0.040\n0.030\n−1.347\n0.178\n\n\n政治満足度 * 女性\n0.902\n0.817\n1.104\n0.270\n\n\n\n\n\n\n\n\n\n\n\nsummary(fit2)\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\nt値\np値\n\n\n\n\n切片\n28.250\n4.164\n6.784\n&lt; 0.001\n\n\n政治満足度\n3.308\n1.354\n2.442\n0.015\n\n\n年齢\n0.357\n0.073\n4.877\n&lt; 0.001\n\n\n政治関心\n−0.118\n0.570\n−0.207\n0.836\n\n\nイデオロギー\n−1.690\n0.215\n−7.845\n&lt; 0.001\n\n\n女性\n5.061\n0.888\n5.698\n&lt; 0.001\n\n\n政治満足度 * 年齢\n−0.157\n0.026\n−5.920\n&lt; 0.001"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合 (fit1)",
    "text": "調整変数がダミー変数の場合 (fit1)\n\n推定結果\n\n共産に対する感情温度の予測値 = 49.28 - 4.73 \\(\\times\\) 政治満足度 + 2.75 \\(\\times\\) 女性ダミー + 0.22 \\(\\times\\) 政治関心 - 1.89 \\(\\times\\) イデオロギー - 0.04 \\(\\times\\) 年齢 + 0.90 \\(\\times\\) 政治満足度 \\(\\times\\) 女性ダミー\n共産に対する感情温度の予測値 = 49.28 - (4.73 - 0.90 \\(\\times\\) 女性ダミー) \\(\\times\\) 政治満足度 + 2.75 \\(\\times\\) 女性ダミー + 0.22 \\(\\times\\) 政治関心 - 1.89 \\(\\times\\) イデオロギー - 0.04 \\(\\times\\) 年齢\n\n\n\n\n政治満足度が共産感情温度に与える影響: -(4.73 - 0.90 \\(\\times\\) 女性ダミーの値)\n\n男性の場合 (女性ダミーの値 = 0): -(4.73 - 0.90 \\(\\times\\) 0) = -4.73\n\n男性の場合、政治満足度が1単位上がると、共産に対する感情温度は約4.73度下がる。\n\n女性の場合 (女性ダミーの値 = 1): -(4.73 - 0.90 \\(\\times\\) 1) = -3.83\n\n女性の場合、政治満足度が1単位上がると、共産に対する感情温度は約3.83度下がる。\n\n\\(\\rightarrow\\) 政治満足度が共産に対する感情温度に与える影響は性別によって変わる。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1-1",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1-1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合 (fit1)",
    "text": "調整変数がダミー変数の場合 (fit1)"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合 (fit2)",
    "text": "調整変数が連続変数の場合 (fit2)\n\n推定結果\n\n共産に対する感情温度の予測値 = 28.25 + 3.31 \\(\\times\\) 政治満足度 + 0.37 \\(\\times\\) 年齢 - 0.12 \\(\\times\\) 政治関心 - 1.69 \\(\\times\\) イデオロギー + 5.06 \\(\\times\\) 女性ダミー - 0.16 \\(\\times\\) 政治満足度 \\(\\times\\) 年齢\n共産に対する感情温度の予測値 = 28.25 + (3.31 - 0.16 \\(\\times\\) 年齢) \\(\\times\\) 政治満足度 + 0.37 \\(\\times\\) 年齢 - 0.12 \\(\\times\\) 政治関心 - 1.69 \\(\\times\\) イデオロギー + 5.06 \\(\\times\\) 女性ダミー\n\n\n\n\n政治満足度が共産感情温度に与える影響 = (3.31 - 0.16 \\(\\times\\) 年齢の値)\n\n20歳の場合 (Ageの値 = 20): 3.31 - 0.16 \\(\\times\\) 20 = 0.11\n\n20歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約0.11度上がる。\n\n40歳の場合 (Ageの値 = 40): 3.31 - 0.16 \\(\\times\\) 40 = -3.09\n\n40歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約3.09度下がる。\n\n60歳の場合 (Ageの値 = 60): 3.31 - 0.16 \\(\\times\\) 60 = -6.29\n\n60歳の場合、政治満足度が1単位上がると、共産に対する感情温度は約6.29度下がる。\n\n\\(\\rightarrow\\) 政治満足度が共産に対する感情温度に与える影響は年齢によって変わる。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2-1",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2-1",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合 (fit2)",
    "text": "調整変数が連続変数の場合 (fit2)"
  },
  {
    "objectID": "slides/macro/interaction.html#交互作用をどう報告するか",
    "href": "slides/macro/interaction.html#交互作用をどう報告するか",
    "title": "マクロ政治データ分析実習",
    "section": "交互作用をどう報告するか",
    "text": "交互作用をどう報告するか\n交互作用: 説明変数が応答変数に与える影響は調整変数の値によって変わる\n\n\\(X\\)が\\(Y\\)に与える影響の統計的有意性を検定する際に用いられる検定統計量は「\\(X\\)の係数 / \\(X\\)の標準誤差」であるが、ここでの\\(X\\)の係数（と標準誤差）は\\(Z\\)の値によって変わる。\n\n\\(\\Rightarrow\\) \\(Z\\)の値によって\\(X \\rightarrow Y\\)の統計的有意性は変わる。\n\n調整変数の値ごとに、説明変数が応答変数に与える影響（= 限界効果; marginal effects）を計算するだけでなく、95%信頼区間 or \\(p\\)値も示すこと。\n\n95%信頼区間内に0が含まれない = \\(p &lt; 0.05\\)の場合、統計的に有意な関連があると判断する。\n表で\\(p\\)値を報告する場合、\\(p\\)値が非常に小さいケースがある（たとえば、\\(p\\) = 0.0000000235）。この場合、「\\(p\\) = 0.000」と表記せず、「\\(p\\) &lt; 0.001」と表記すること。\\(p\\)値がぴったり0になることは実質的にあり得ない。"
  },
  {
    "objectID": "slides/macro/interaction.html#marginaleffectパッケージを用いた限界効果の計算",
    "href": "slides/macro/interaction.html#marginaleffectパッケージを用いた限界効果の計算",
    "title": "マクロ政治データ分析実習",
    "section": "{marginaleffect}パッケージを用いた限界効果の計算",
    "text": "{marginaleffect}パッケージを用いた限界効果の計算\n{marginaleffect}パッケージのslopes()関数\n\nslopes(回帰オブジェクト名, variables = \"説明変数名\", \n       newdata = datagrid(調整変数名 = 調整変数の値))\n\n\nfit1の場合：Femaleの値が0と1の場合の限界効果\n\ndatagrid(Female = c(0, 1))、またはdatagrid(Female = 0:1)\n\nfit2の場合：Ageの値が18、19、20、…、75の場合の限界効果\n\ndatagrid(Age = 18:75)\n\n限界効果はestimate列、\\(p\\)値はp.value列、95%信頼区間はconf.low（下限）とconf.high（上限）"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1-2",
    "href": "slides/macro/interaction.html#調整変数がダミー変数の場合-fit1-2",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数がダミー変数の場合 (fit1)",
    "text": "調整変数がダミー変数の場合 (fit1)\n性別と関係なく、政治満足度は共産感情温度に負の影響を与える。\n\nfit1_ame &lt;- slopes(fit1, variables = \"Satisfaction\", \n                   newdata = datagrid(Female = c(0, 1)))\n\nfit1_ame\n\n\n         Term Estimate Std. Error     z Pr(&gt;|z|) 2.5 % 97.5 % Satisfaction\n Satisfaction    -4.73      0.561 -8.43   &lt;0.001 -5.83  -3.63         2.45\n Satisfaction    -3.83      0.611 -6.27   &lt;0.001 -5.03  -2.63         2.45\n Interest Ideology  Age Female\n     2.74     6.34 47.3      0\n     2.74     6.34 47.3      1\n\nPrediction type:  response \nColumns: rowid, type, term, estimate, std.error, statistic, p.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, TempKyosan, Satisfaction, Interest, Ideology, Age, Female \n\nfit1_ame %&gt;%\n  dplyr::select(Female, estimate:conf.high) # 必要な情報だけ出力\n\n\n Estimate Std. Error     z Pr(&gt;|z|) CI low CI high\n    -4.73      0.561 -8.43   &lt;0.001  -5.83   -3.63\n    -3.83      0.611 -6.27   &lt;0.001  -5.03   -2.63\n\nPrediction type:  \nColumns: Female, estimate, std.error, statistic, p.value, conf.low, conf.high \n\n\n\n\n\n::って何?おいしいの?\n\n\n同じ名前を持つ関数が複数のパッケージで提供される場合がある。今回のselect()関数は{marginaleffects}（厳密には{MASS}）にも含まれており、これまで使用してきた{tidyverse}（厳密には{dplyr}）のselect()関数と衝突するため、「どのパッケージのselect()」かを明記する必要があり、パッケージ名::関数()と表記する。"
  },
  {
    "objectID": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2-2",
    "href": "slides/macro/interaction.html#調整変数が連続変数の場合-fit2-2",
    "title": "マクロ政治データ分析実習",
    "section": "調整変数が連続変数の場合 (fit2)",
    "text": "調整変数が連続変数の場合 (fit2)\n30歳以上の場合のみ、政治満足度は共産感情温度に負の影響を与える。\n\nfit2_ame &lt;- slopes(fit2, variables = \"Satisfaction\", \n                   newdata = datagrid(Age = 18:75))\n\nfit2_ame %&gt;%\n  dplyr::select(Age, estimate:conf.high) %&gt;%\n  mutate(p.value = round(p.value, 3)) # p値を小数点3桁で丸める\n\n\n Estimate Std. Error        z Pr(&gt;|z|) CI low CI high\n   0.4860      0.913   0.5324    0.594  -1.30    2.28\n   0.3292      0.889   0.3702    0.711  -1.41    2.07\n   0.1725      0.866   0.1992    0.842  -1.52    1.87\n   0.0157      0.843   0.0186    0.985  -1.64    1.67\n  -0.1411      0.820  -0.1720    0.863  -1.75    1.47\n--- 48 rows omitted. See ?print.marginaleffects --- \n  -7.8227      0.724 -10.8050   &lt;0.001  -9.24   -6.40\n  -7.9795      0.746 -10.6994   &lt;0.001  -9.44   -6.52\n  -8.1362      0.768 -10.5958   &lt;0.001  -9.64   -6.63\n  -8.2930      0.790 -10.4943   &lt;0.001  -9.84   -6.74\n  -8.4498      0.813 -10.3953   &lt;0.001 -10.04   -6.86\nPrediction type:  \nColumns: Age, estimate, std.error, statistic, p.value, conf.low, conf.high"
  },
  {
    "objectID": "slides/macro/interaction.html#限界効果の可視化詳細は第13回で解説",
    "href": "slides/macro/interaction.html#限界効果の可視化詳細は第13回で解説",
    "title": "マクロ政治データ分析実習",
    "section": "限界効果の可視化（詳細は第13回で解説）",
    "text": "限界効果の可視化（詳細は第13回で解説）\n\n\n\n\nコード\nfit1_ame %&gt;%\n  mutate(Female = factor(Female, levels = 0:1, \n                         labels = c(\"男性\", \"女性\"))) %&gt;%\n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_pointrange(aes(x = Female, y = estimate, \n                      ymin = conf.low, ymax = conf.high),\n                  size = 1, linewidth = 1) +\n  labs(x = \"性別\", y = \"政治満足度の平均限界効果と95%信頼区間\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\nコード\nfit2_ame %&gt;%\n  ggplot(aes(x = Age)) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), fill = \"gray80\") +\n  geom_hline(yintercept = 0) +\n  geom_line(aes(y = estimate), linewidth = 1) +\n  labs(x = \"年齢\", y = \"政治満足度の平均限界効果と95%信頼区間\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/logit.html#授業開始前に",
    "href": "slides/macro/logit.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(marginaleffects)\n\ndf &lt;- read_csv(\"Data/Hino_Song.csv\")\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/logit.html#実習用データ",
    "href": "slides/macro/logit.html#実習用データ",
    "title": "マクロ政治データ分析実習",
    "section": "実習用データ",
    "text": "実習用データ\n\n\n\nlibrary(tidyverse)\nlibrary(marginaleffects)\ndf &lt;- read_csv(\"Data/Hino_Song.csv\")\n\ndf\n\n# A tibble: 2,555 × 6\n   Voted Female   Age  Educ Knowledge Ideology\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1     0      1    44     3         3        5\n 2     0      0    57     3         4        8\n 3     0      1    28     2         3        4\n 4     0      0    50     4         1        3\n 5     0      1    23     2         5        7\n 6     0      1    32     4         1        5\n 7     1      0    38     4         5       10\n 8     1      0    23     4         4        7\n 9     1      0    47     4         5        5\n10     1      0    48     2         5        6\n# … with 2,545 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n変数名\n説明\n\n\n\n\nVoted\n2019参院選の投票参加 (0:棄権 / 1:投票)\n\n\nFemale\n女性ダミー (0: 男性 / 1: 女性)\n\n\nAge\n回答者の年齢\n\n\nEduc\n回答者の学歴(1: 中卒以下; 2: 高卒; 3: 短大卒; 4: 大卒以上)\n\n\nKnowledge\n回答者の主観的な政治知識 (高いほど知識あり)\n\n\nIdeology\n回答者のイデオロギー(0:革新〜5:中道〜10:保守)"
  },
  {
    "objectID": "slides/macro/logit.html#問題設定",
    "href": "slides/macro/logit.html#問題設定",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　有権者の投票参加を規定する要因を調べたい。投票所に足を運ぶには予め投票先を決めておく必要があろう。しかし、数多い選択肢（候補者、政党）の中から自分の望みを実現してくれそうな選択肢を見つけることは簡単な作業ではない。政治に関する知識があれば、比較的簡単に見つかるため、投票参加しやすいと考えられる。一方、そうでない有権者は自分にとっても最適な選択肢を見つけることを諦め、棄権するだろう。これは本当だろうか。\n\n\n応答変数: 投票参加（Voted）\n\n「投票（= 1）」と「棄権（= 0）」の値のみを取るダミー変数（= 二値変数、バイナリー変数）\n説明変数として0/1の値を取る変数は「ダミー変数」と呼ぶが、応答変数として使われる場合も「バイナリー変数」、または「二値変数」の方がより一般的\n\n主な説明変数: 回答者の主観的な政治知識（Knowledge）\n統制変数: 性別（Female）、年齢（Age）、学歴（Educ）、イデオロギー（Ideology）"
  },
  {
    "objectID": "slides/macro/logit.html#モデル",
    "href": "slides/macro/logit.html#モデル",
    "title": "マクロ政治データ分析実習",
    "section": "モデル",
    "text": "モデル"
  },
  {
    "objectID": "slides/macro/logit.html#記述統計",
    "href": "slides/macro/logit.html#記述統計",
    "title": "マクロ政治データ分析実習",
    "section": "記述統計",
    "text": "記述統計\n\ndf %&gt;%\n  descr(stats = c(\"mean\", \"sd\", \"min\", \"max\", \"n.valid\"),\n        transpose = TRUE, order = \"p\")\n\nDescriptive Statistics  \ndf  \nN: 2555  \n\n                   Mean   Std.Dev     Min     Max   N.Valid\n--------------- ------- --------- ------- ------- ---------\n          Voted    0.71      0.45    0.00    1.00   2555.00\n         Female    0.46      0.50    0.00    1.00   2555.00\n            Age   50.91     15.69   18.00   86.00   2555.00\n           Educ    3.21      0.90    1.00    4.00   2555.00\n      Knowledge    3.95      1.12    1.00    5.00   2555.00\n       Ideology    5.40      2.16    0.00   10.00   2555.00"
  },
  {
    "objectID": "slides/macro/logit.html#線形確率モデル",
    "href": "slides/macro/logit.html#線形確率モデル",
    "title": "マクロ政治データ分析実習",
    "section": "線形確率モデル",
    "text": "線形確率モデル\nバイナリー変数を応答変数とする線形回帰モデル: 線形確率モデル (linear probability model; LPM)\n\nlm_fit &lt;- lm(Voted ~ Knowledge + Female + Age + Educ + Ideology, data = df)\n\n\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\n検定統計量\np値\n\n\n\n\n切片\n−0.109\n0.056\n−1.959\n0.050\n\n\n主観的な政治知識\n0.119\n0.008\n15.359\n&lt; 0.001\n\n\n女性ダミー\n−0.055\n0.017\n−3.213\n0.001\n\n\n年齢\n0.005\n0.001\n8.408\n&lt; 0.001\n\n\n学歴\n0.036\n0.010\n3.714\n&lt; 0.001\n\n\nイデオロギー\n0.004\n0.004\n1.054\n0.292\n\n\n\n\n\n\n\n\n\n政治知識の係数は約0.119\n\n政治知識が1上がると、投票に参加する確率は約11.9%p上がる。\n分かりやすい解釈であるものの、一つ、深刻な問題がある。\nたとえば?"
  },
  {
    "objectID": "slides/macro/logit.html#線形確率モデルの限界",
    "href": "slides/macro/logit.html#線形確率モデルの限界",
    "title": "マクロ政治データ分析実習",
    "section": "線形確率モデルの限界",
    "text": "線形確率モデルの限界\n主観的政治知識が5、男性、86歳、教育水準が4、イデオロギーが10の回答者がいる場合、投票に参加する確率の予測値は?\n\n-0.1093644 + 0.1186971 * 5 - 0.0549171 * 0 + 0.0046902 * 86 + 0.0357970 * 4 + 0.0040744 * 10\n\n[1] 1.07141\n\n\n\n投票参加確率の予測値は1.07141 \\(\\rightarrow\\) 107.141%\n確率は0以上、1以下 (0%〜100%)であるものの、あり得ない予測値が出る。\n他にも線形確率モデルにはいくつかの問題がある (分散の不均一性など)。\n\n\n\n参考) 応答変数がバイナリー変数であっても、線形確率モデルが推奨される場合もある。\n\nFreedman, David A.. 2008. “Randomization Does Not Justify Logistic Regression,” Statistical Science, 23 (2): 237-249."
  },
  {
    "objectID": "slides/macro/logit.html#ロジスティック関数-1",
    "href": "slides/macro/logit.html#ロジスティック関数-1",
    "title": "マクロ政治データ分析実習",
    "section": "ロジスティック関数",
    "text": "ロジスティック関数\n\\[\n\\mbox{logistic}(x) = \\frac{1}{1 + e^{-x}}\n\\]\n\n\\(e\\)はネイピア数: \\(e = 1 + 1 + \\frac{1}{2!} + \\frac{1}{3!} + \\frac{1}{4!} + ... \\frac{1}{\\infty!}\\) = 2.71828184590…\n\\(x\\)は\\(-\\infty \\sim \\infty\\)の値を取り得る。\n\n\\(x\\)が\\(-\\infty\\)の場合、\\(e^{-x}\\)は\\(e^{-(-\\infty)} = \\infty\\)、\\(x\\)が\\(\\infty\\)の場合、\\(e^{-x}\\)は\\(e^{-(\\infty)} = 0\\)\n\\(\\rightarrow\\) \\(e^{-x}\\) は\\(0 \\sim \\infty\\)\n\n\\(e^{-x}\\) は \\(0 \\sim \\infty\\) の値をとる。\n\n\\(e^{-x}\\)が0の場合、\\(\\mbox{logistic}(x)\\)は1、\\(e^{-x}\\)が\\(\\infty\\)の場合、\\(\\mbox{logistic}(x)\\)は0\n\\(\\rightarrow\\) \\(\\mbox{logistic}(x)\\)は0以上、1以下\n\\(\\rightarrow\\) \\(x\\)の値が大きいほど、\\(\\mbox{logistic}(x)\\)は1へ近づく"
  },
  {
    "objectID": "slides/macro/logit.html#ロジスティック関数-図",
    "href": "slides/macro/logit.html#ロジスティック関数-図",
    "title": "マクロ政治データ分析実習",
    "section": "ロジスティック関数 (図)",
    "text": "ロジスティック関数 (図)"
  },
  {
    "objectID": "slides/macro/logit.html#ロジスティック回帰分析",
    "href": "slides/macro/logit.html#ロジスティック回帰分析",
    "title": "マクロ政治データ分析実習",
    "section": "ロジスティック回帰分析",
    "text": "ロジスティック回帰分析\nロジスティック関数の\\(x\\)の部分が回帰式となる回帰分析\n\\[\n\\mbox{Pr}(y = 1) = \\frac{1}{1 + e^{-(\\alpha + \\beta_1 X_1 + \\beta_2 X_2 + ...)}}\n\\]\n\n\\(\\mbox{Pr}(y = 1)\\)は\\(y\\)が1を取る確率\n\\(\\alpha + \\beta_1 X_1 + \\beta_2 X_2 + ...\\)は線形予測子（linear predictor）と呼ばれる。\n\n線形予測子は\\(-\\infty \\sim \\infty\\)の値を取り得る。\n線形予測子がどのような値をとってもロジスティック関数を経由することで、必ず0以上1以下の値に収まる。\n\n\n\nロジスティック回帰分析は線形予測子内の\\(\\alpha\\)、\\(\\beta_1\\)、…を推定する手法\n\n最小二乗法（OLS）を使わず、最尤推定法（maximum likelihood estimation; MLE）を使用\n詳細は割愛"
  },
  {
    "objectID": "slides/macro/logit.html#ロジスティック回帰分析の実装-使い方",
    "href": "slides/macro/logit.html#ロジスティック回帰分析の実装-使い方",
    "title": "マクロ政治データ分析実習",
    "section": "ロジスティック回帰分析の実装 (使い方)",
    "text": "ロジスティック回帰分析の実装 (使い方)\nglm()関数を使用\n\nlm()関数とほぼ同じ書き方であるが、family引数を指定する必要がある。\n\n参考) family = gaussian(\"identity\")にするとlm()と同じ結果が得られる。\n\n\n\nglm(応答変数 ~ 説明変数, data = データ名, family = binomial(\"logit\"))\n\n実装例\n\nfit1 &lt;- glm(Voted ~ Knowledge + Female + Age + Educ + Ideology, \n            data = df, family = binomial(\"logit\"))\n\n\\[\n\\mbox{Pr}(\\mbox{Voted} = 1) = \\frac{1}{1 + e^{-(\\alpha + \\beta_1 \\mbox{Knowledge} + \\beta_2 \\mbox{Female} + \\beta_3 \\mbox{Age} + \\beta_4 \\mbox{Educ} + \\beta_5 \\mbox{Ideology})}}\n\\]"
  },
  {
    "objectID": "slides/macro/logit.html#ロジスティック回帰分析の実装",
    "href": "slides/macro/logit.html#ロジスティック回帰分析の実装",
    "title": "マクロ政治データ分析実習",
    "section": "ロジスティック回帰分析の実装",
    "text": "ロジスティック回帰分析の実装\n\nsummary(fit1)\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\n検定統計量\np値\n\n\n\n\n切片\n−3.306\n0.320\n−10.315\n&lt; 0.001\n\n\n主観的な政治知識\n0.593\n0.043\n13.808\n&lt; 0.001\n\n\n女性ダミー\n−0.316\n0.096\n−3.282\n0.001\n\n\n年齢\n0.027\n0.003\n8.284\n&lt; 0.001\n\n\n学歴\n0.208\n0.054\n3.835\n&lt; 0.001\n\n\nイデオロギー\n0.024\n0.023\n1.061\n0.289\n\n\n\n\n\n\n\n\nロジスティック回帰分析の場合、決定係数（\\(R^2\\)）は表示されない。\n\n類似した概念として「疑似決定係数（Pseudo-\\(R^2\\)）」がある）あまり使われない）。\nロジスティック回帰分析のモデル間比較はAIC、BIC、AUCなどを使用する。\n\n\n\n# 予め{DescTools}をインストールしておくこと (コンソール上でinstall.packages(\"DescTools\"))\nDescTools::PseudoR2(fit1) # McFaddenの疑似決定係数\n\n McFadden \n0.1228484"
  },
  {
    "objectID": "slides/macro/logit.html#係数の解釈",
    "href": "slides/macro/logit.html#係数の解釈",
    "title": "マクロ政治データ分析実習",
    "section": "係数の解釈",
    "text": "係数の解釈\n\n\n\nsummary(fit1)\n\n\n\n\n\n\n\n\n\n\n係数\n標準誤差\n検定統計量\np値\n\n\n\n\n切片\n−3.306\n0.320\n−10.315\n&lt; 0.001\n\n\n主観的な政治知識\n0.593\n0.043\n13.808\n&lt; 0.001\n\n\n女性ダミー\n−0.316\n0.096\n−3.282\n0.001\n\n\n年齢\n0.027\n0.003\n8.284\n&lt; 0.001\n\n\n学歴\n0.208\n0.054\n3.835\n&lt; 0.001\n\n\nイデオロギー\n0.024\n0.023\n1.061\n0.289\n\n\n\n\n\n\n\n\n\n政治知識の\\(p\\)値は0.001未満\n\n主観的な政治知識と投票参加の間には統計的に有意な関係がある。\n主観的な政治知識が高くなると、投票に参加する確率も上がる。\n\\(\\rightarrow\\) 正しい解釈\n具体的にどれくらい上がるか。\\(\\leftarrow\\) 係数?\n\n\n\n\n政治知識の係数は約0.593\n\n主観的な政治知識が1上がると、投票参加の確率が0.593%p上がる?\n\\(\\rightarrow\\) 間違った解釈\nどう解釈するか。"
  },
  {
    "objectID": "slides/macro/logit.html#予測値を計算する方法-1",
    "href": "slides/macro/logit.html#予測値を計算する方法-1",
    "title": "マクロ政治データ分析実習",
    "section": "予測値を計算する方法 (1)",
    "text": "予測値を計算する方法 (1)\n\n主観的政治知識が3（Knowledge = 3）、女性（Female = 1）、20歳（Age = 20）、学歴が大卒（Educ = 4）、イデオロギーが中道（Ideology = 5）の場合の投票参加の予測確率\n\n\nfit1_coef &lt;- coef(fit1) # coef()関数で係数のみを抽出する\nfit1_coef\n\n(Intercept)   Knowledge      Female         Age        Educ    Ideology \n-3.30579506  0.59290164 -0.31596873  0.02650943  0.20827008  0.02391612 \n\n# 線形予測子の計算（1）\nfit1_coef[1] + fit1_coef[2] * 3 + fit1_coef[3] * 1 + fit1_coef[4] * 20 + fit1_coef[5] * 4 + fit1_coef[6] * 5\n\n(Intercept) \n -0.3602094 \n\n# 線形予測子の計算（2）\nsum(coef(fit1) * c(1, 3, 1, 20, 4, 5))\n\n[1] -0.3602094\n\n1 / (1 + exp(-(-0.3602094))) # 予測確率の計算\n\n[1] 0.4109089\n\n\n\n投票参加の予測確率は約41%"
  },
  {
    "objectID": "slides/macro/logit.html#予測値を計算する方法1",
    "href": "slides/macro/logit.html#予測値を計算する方法1",
    "title": "マクロ政治データ分析実習",
    "section": "予測値を計算する方法（1）",
    "text": "予測値を計算する方法（1）"
  },
  {
    "objectID": "slides/macro/logit.html#予測値を計算する方法2",
    "href": "slides/macro/logit.html#予測値を計算する方法2",
    "title": "マクロ政治データ分析実習",
    "section": "予測値を計算する方法（2）",
    "text": "予測値を計算する方法（2）\n{marginaleffects}パッケージのpredictions()関数の利用\n\npredictions(回帰分析オブジェクト名, \n            type    = \"response\",\n            newdata = datagrid(説明変数名1 = 値,\n                               説明変数名2 = 値,\n                               ...))\n\n\nnewdataで指定されなかった説明変数は平均値に固定される。\n\n論文、レポートでは「XXは1、ZZは5、…に固定し、その他の説明変数は平均値に固定した予測値を算出した」と書く。"
  },
  {
    "objectID": "slides/macro/logit.html#marginaleffectsを使った予測値の計算例",
    "href": "slides/macro/logit.html#marginaleffectsを使った予測値の計算例",
    "title": "マクロ政治データ分析実習",
    "section": "{marginaleffects}を使った予測値の計算（例）",
    "text": "{marginaleffects}を使った予測値の計算（例）\n先ほどの手計算（?）の結果を{marginaleffects}のpredictions()関数で再現\n\n# 主観的政治知識が3 (Knowledge = 3)、女性 (Female = 1)、20歳 (Age = 20)、学歴が大卒 (Educ = 4)、\n# イデオロギーが中道 (Ideology = 5)の場合の投票参加の予測確率\npredictions(fit1, type = \"response\",\n            newdata = datagrid(Knowledge = 3, \n                               Female    = 1,\n                               Age       = 20, \n                               Educ      = 4, \n                               Ideology  = 5))\n\n\n Estimate Std. Error    z Pr(&gt;|z|) 2.5 % 97.5 % Knowledge Female Age Educ Ideology\n    0.411     0.0292 14.1   &lt;0.001 0.354  0.468         3      1  20    4        5\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Voted, Knowledge, Female, Age, Educ, Ideology \n\n\n\nEstimate列の値が予測確率: 0.411（約41%）"
  },
  {
    "objectID": "slides/macro/logit.html#marginaleffectsを使った予測値の計算",
    "href": "slides/macro/logit.html#marginaleffectsを使った予測値の計算",
    "title": "マクロ政治データ分析実習",
    "section": "{marginaleffects}を使った予測値の計算",
    "text": "{marginaleffects}を使った予測値の計算\nKnowledgeが1〜5の場合の投票参加確率の予測値\n\nfit1_pred &lt;- predictions(fit1, type = \"response\",\n                         newdata = datagrid(Knowledge = 1:5))\nfit1_pred\n\n\n Estimate Std. Error    z Pr(&gt;|z|) 2.5 % 97.5 % Female  Age Educ Ideology Knowledge\n    0.329    0.02794 11.8   &lt;0.001 0.275  0.384  0.458 50.9 3.21      5.4         1\n    0.471    0.02201 21.4   &lt;0.001 0.427  0.514  0.458 50.9 3.21      5.4         2\n    0.617    0.01358 45.4   &lt;0.001 0.590  0.643  0.458 50.9 3.21      5.4         3\n    0.744    0.00949 78.4   &lt;0.001 0.726  0.763  0.458 50.9 3.21      5.4         4\n    0.840    0.00982 85.6   &lt;0.001 0.821  0.860  0.458 50.9 3.21      5.4         5\n\nPrediction type:  response \nColumns: rowid, type, estimate, std.error, statistic, p.value, conf.low, conf.high, Voted, Female, Age, Educ, Ideology, Knowledge \n\n\n\nKnowledgeがVotedに与える影響は一定ではない。\n\nKnowledgeの値が1の場合: 投票に参加する確率は32.94%\nKnowledgeの値が2の場合: 投票に参加する確率は47.05% (14.11%p増加)\nKnowledgeの値が3の場合: 投票に参加する確率は61.65% (14.60%p増加)\nKnowledgeの値が4の場合: 投票に参加する確率は74.42% (12.77%p増加)\nKnowledgeの値が5の場合: 投票に参加する確率は84.03% (9.61%p増加)"
  },
  {
    "objectID": "slides/macro/logit.html#予測値の可視化",
    "href": "slides/macro/logit.html#予測値の可視化",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化",
    "text": "予測値の可視化\n\n可視化は第14回で解説"
  },
  {
    "objectID": "slides/macro/logit.html#説明変数が連続変数の場合",
    "href": "slides/macro/logit.html#説明変数が連続変数の場合",
    "title": "マクロ政治データ分析実習",
    "section": "説明変数が連続変数の場合",
    "text": "説明変数が連続変数の場合\n\n説明変数がダミー変数、順序変数ならこれまでのやり方で可視化すると良い\n説明変数が連続変数の場合、取りうる値は無数にあるため、これまでの図は読みにくい。"
  },
  {
    "objectID": "slides/macro/logit.html#予測値の可視化-説明変数が連続変数",
    "href": "slides/macro/logit.html#予測値の可視化-説明変数が連続変数",
    "title": "マクロ政治データ分析実習",
    "section": "予測値の可視化 (説明変数が連続変数)",
    "text": "予測値の可視化 (説明変数が連続変数)\n\n折れ線グラフ (geom_line())とリボン (geom_ribbon())を使用する。"
  },
  {
    "objectID": "slides/macro/logit.html#参考-4分の1ルール",
    "href": "slides/macro/logit.html#参考-4分の1ルール",
    "title": "マクロ政治データ分析実習",
    "section": "参考) 4分の1ルール",
    "text": "参考) 4分の1ルール\n4分の1ルール (divide by 4 rule)\n\n係数の値を4分の1にすると、予測値のだいたいの変化量が分かる。\n\n\n\n例) 政治知識の係数は約0.593\n\n4分の1は約0.148\n政治知識が1から2へ変化した場合: 予測値は0.135上がる。\n政治知識が2から3へ変化した場合: 予測値は0.139上がる。\n政治知識が3から4へ変化した場合: 予測値は0.124上がる。\n政治知識が4から5へ変化した場合: 予測値は0.096上がる。\n\n\n\n\n予測値を計算する前の大雑把な計算としては便利であるものの、常に使える技（?）ではない。\n\n係数の値が大きい場合はズレが大きくなる。\nなるべく{marginaleffects}などで予測値を計算すること。\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/regression1.html#授業開始前に",
    "href": "slides/macro/regression1.html#授業開始前に",
    "title": "マクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\nlibrary(modelsummary)\n\nbeer_df &lt;- read_csv(\"Data/Beer.csv\")\npref_df &lt;- read_csv(\"Data/PrefData.csv\")\n\n\nトラブルが生じた場合、速やかにTAを読んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/macro/regression1.html#サンプルデータの読み込み",
    "href": "slides/macro/regression1.html#サンプルデータの読み込み",
    "title": "マクロ政治データ分析実習",
    "section": "サンプルデータの読み込み",
    "text": "サンプルデータの読み込み\n\n\n\nlibrary(tidyverse)\nbeer_df &lt;- read_csv(\"Data/Beer.csv\")\n\nbeer_df\n\n# A tibble: 69 × 5\n    Year Month Temperature Icecream  Beer\n   &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1  2016     1         6.1      464   452\n 2  2016     2         7.2      397   584\n 3  2016     3        10.1      493   750\n 4  2016     4        15.4      617   835\n 5  2016     5        20.2      890   794\n 6  2016     6        22.4      883   961\n 7  2016     7        25.4     1292  1025\n 8  2016     8        27.1     1387  1021\n 9  2016     9        24.4      843   748\n10  2016    10        18.7      621   730\n# … with 59 more rows\n\n\n\n\n\n\n変数\n説明\n\n\n\n\nYear\n年\n\n\nMonth\n月\n\n\nTemperature\n東京都の平均気温 (℃)\n\n\nIcecream\n一人あたりアイスクリーム支出額 (円)\n\n\nBeer\nアサヒ・スーパードライの販売量 (万箱)"
  },
  {
    "objectID": "slides/macro/regression1.html#気温とビール売上の関係",
    "href": "slides/macro/regression1.html#気温とビール売上の関係",
    "title": "マクロ政治データ分析実習",
    "section": "気温とビール売上の関係",
    "text": "気温とビール売上の関係\nTemperatureとBeerの相関係数（\\(\\alpha\\) = 0.05）\n\ncor.test(beer_df$Temperature, beer_df$Beer)\n\n\n    Pearson's product-moment correlation\n\ndata:  beer_df$Temperature and beer_df$Beer\nt = 2.0899, df = 67, p-value = 0.04042\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.01137629 0.45729570\nsample estimates:\n      cor \n0.2473909 \n\n\n\n相関係数は約0.25であり、\\(p\\)値は0.04であるため、統計的に有意な正の相関関係があると判断できる。"
  },
  {
    "objectID": "slides/macro/regression1.html#気温とビール売上の関係-1",
    "href": "slides/macro/regression1.html#気温とビール売上の関係-1",
    "title": "マクロ政治データ分析実習",
    "section": "気温とビール売上の関係",
    "text": "気温とビール売上の関係\n\n\nTemperatureとBeerの散布図\n\n原因と考えられる変数を横軸（x）にマッピング\n結果と考えられる変数を横軸（y）にマッピング\n\n\nbeer_df %&gt;%\n  ggplot(aes(x = Temperature, y = Beer)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(x = \"気温 (摂氏)\", \n       y = \"アサヒ・スーパードライ販売量 (万箱)\")"
  },
  {
    "objectID": "slides/macro/regression1.html#回帰直線",
    "href": "slides/macro/regression1.html#回帰直線",
    "title": "マクロ政治データ分析実習",
    "section": "回帰直線",
    "text": "回帰直線\n回帰直線（regression line）: 二変数の散布図を描く場合、その関係も最も正確に表す直線\n\n前ページの青い直線（一次関数）\n\n切片が576.227、傾きが7.355の直線\nビールの販売量 = 576.227 + 7.355 \\(\\times\\) 気温\n\n\n\n回帰直線の特徴\n\n二次元平面上に描ける直線は無数にあるが、回帰直線は「直線と点のズレが最も小さい」直線\n説明変数（原因）が変わると応答変数（結果）はどう変化するかを示す。\n回帰直線は必ず（説明変数の平均値, 応答変数の平均値）を通過する"
  },
  {
    "objectID": "slides/macro/regression1.html#一次関数",
    "href": "slides/macro/regression1.html#一次関数",
    "title": "マクロ政治データ分析実習",
    "section": "一次関数",
    "text": "一次関数\n\\(y = \\alpha + \\beta x\\) の一次関数\n\n\\(\\alpha\\): 切片（\\(x\\) = 0の場合の\\(y\\)の値）\n\\(\\beta\\): 傾き（\\(x\\)が1増加した場合の\\(y\\)の増加量）"
  },
  {
    "objectID": "slides/macro/regression1.html#回帰直線を引くことは",
    "href": "slides/macro/regression1.html#回帰直線を引くことは",
    "title": "マクロ政治データ分析実習",
    "section": "回帰直線を引くことは",
    "text": "回帰直線を引くことは\n\n一次関数 ( \\(y = \\alpha + \\beta x\\) )において \\(x\\) と \\(y\\) がそれぞれ説明変数、応答変数の場合、点とのズレが最も小さい直線が描ける \\(\\alpha\\) と \\(\\beta\\) の値を明らかにする (=推定)すること\n\n\\(\\rightarrow\\) 回帰分析 (regression analysis)\n\nどのように \\(\\alpha\\) と \\(\\beta\\) の値を推定するか\n\n最小二乗法 (least squares methods)\nordinary least suqaresの略、OLSと呼ばれることも多い"
  },
  {
    "objectID": "slides/macro/regression1.html#残差",
    "href": "slides/macro/regression1.html#残差",
    "title": "マクロ政治データ分析実習",
    "section": "残差",
    "text": "残差\n二変数の相関係数が1、または-1の場合、散布図上の点はすべて直線上に乗る\n\nしかし、実際の場合、多くの点が直線上に乗らない。\n\n\n観測値、予測値、残差\n\n観測値: 実際に観察されている値\n\n2016年5月 (beer_dfの5行目)の「気温は20.2度であり、ビールの販売量は794万箱」である。\n\\(x_5\\) = 20.2 / \\(y_5\\) = 794\n\n予測値: 推定された一次関数に観測値における説明変数を代入した場合に得られる値\n\n「ビールの販売量の予測値 = 576.227 + 7.355\\(\\times\\)気温」であるため、気温20.2度を外挿すると、約725万箱となる\n\n576.227 + 7.355 \\(\\times\\) 20.2 = 724.798\n\n794は応答変数の観測値（=\\(y\\)）であり、724.798は予測値であり、主に\\(\\hat{y}\\)（ワイ・ハット）と表記する。\n予測値は回帰直線によって予測された値であるため、必ず回帰直線上に乗る\n\n回帰直線は予測値の集合として考えることも可能\n\n\n残差 (residual): 残差と予測値の距離（\\(e_i = y_i - \\hat{y}_i\\)）"
  },
  {
    "objectID": "slides/macro/regression1.html#観測値予測値残差-1",
    "href": "slides/macro/regression1.html#観測値予測値残差-1",
    "title": "マクロ政治データ分析実習",
    "section": "観測値、予測値、残差",
    "text": "観測値、予測値、残差"
  },
  {
    "objectID": "slides/macro/regression1.html#最小二乗法",
    "href": "slides/macro/regression1.html#最小二乗法",
    "title": "マクロ政治データ分析実習",
    "section": "最小二乗法",
    "text": "最小二乗法\nすべての観測値とそれぞれの予測値との距離（=残差; \\(e_i\\)）の二乗和が最も小さくなる直線を推定"
  },
  {
    "objectID": "slides/macro/regression1.html#推定方法",
    "href": "slides/macro/regression1.html#推定方法",
    "title": "マクロ政治データ分析実習",
    "section": "推定方法",
    "text": "推定方法\n残差（\\(e_i\\)）の二乗和が最小となる\\(\\alpha\\)と\\(\\beta\\)を推定する方法\n\n行列で解く: \\((X^{\\top}X)^{-1}X^{\\top}y\\)\n微分方程式で解く\n(説明変数が一つのみの場合) 公式で解く\n\n\\(\\beta = \\frac{\\sum (x_i - \\bar{x}) (y_i - \\bar{y})}{\\sum (x_i - \\bar{x})} = \\frac{\\text{Cov}_{x, y}}{u_x}\\) ; \\(\\alpha = \\bar{y} - \\beta \\bar{x}\\)\n回帰直線は必ず\\((\\bar{x}, \\bar{y})\\)を通過する特徴を利用\n\nいずれも面倒なので、パソコンに任せる (lm()関数の利用)"
  },
  {
    "objectID": "slides/macro/regression1.html#lm関数の利用",
    "href": "slides/macro/regression1.html#lm関数の利用",
    "title": "マクロ政治データ分析実習",
    "section": "lm()関数の利用",
    "text": "lm()関数の利用\n\n\n\n第一引数はformula\n\n応答変数 ~ 説明変数\n応答変数と説明変数はチルダ (~)で区切る\n\n第二引数はdata = データオブジェクト名\n推定した結果を別途のオブジェクトとして格納\n\n以下の例ではbeer_fit\n\n推定結果を確認するにはsummary()関数を使用\n\n\n\n# 応答変数 (結果): ビールの販売量\n# 説明変数 (原因): 気温\nbeer_fit &lt;- lm(Beer ~ Temperature, data = beer_df)\nsummary(beer_fit)\n\n\nCall:\nlm(formula = Beer ~ Temperature, data = beer_df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-392.8 -169.1  -10.8  115.1  677.2 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  576.227     63.941   9.012 3.64e-13 ***\nTemperature    7.355      3.519   2.090   0.0404 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 217.1 on 67 degrees of freedom\nMultiple R-squared:  0.0612,    Adjusted R-squared:  0.04719 \nF-statistic: 4.368 on 1 and 67 DF,  p-value: 0.04042"
  },
  {
    "objectID": "slides/macro/regression1.html#結果の解釈",
    "href": "slides/macro/regression1.html#結果の解釈",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\n\n(Intercept): 切片 = \\(\\alpha\\)\n\n点推定値は576.227\n\nTemperature: 傾き = \\(\\beta\\)\n\n点推定値は7.335\n\n\n\nビール販売量の予測値 = 576.227 + 7.355 \\(\\times\\) 気温\n\n\n意味：気温が1度上がると、ビールの販売量は7.355万箱上がる。\n\n単位に注意：Beerは「万箱」単位であるため、「Beerの値が1上がる」ことは「ビール販売量の予測値が1万箱上がる」ことを意味する。"
  },
  {
    "objectID": "slides/macro/regression1.html#実習データの読み込み",
    "href": "slides/macro/regression1.html#実習データの読み込み",
    "title": "マクロ政治データ分析実習",
    "section": "実習データの読み込み",
    "text": "実習データの読み込み\n\n\n\npref_df &lt;- read_csv(\"Data/PrefData.csv\")\n\npref_df\n\n# A tibble: 47 × 6\n      ID Pref      Jimin Zaisei Over65 Primary\n   &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n 1     1 Hokkaido   32.8  0.435   29.2    7.00\n 2     2 Aomori     40.4  0.341   30.2   12.0 \n 3     3 Iwate      34.9  0.352   30.5   10.6 \n 4     4 Miyagi     36.7  0.614   25.9    4.36\n 5     5 Akita      43.5  0.309   33.9    9.62\n 6     6 Yamagata   42.5  0.351   30.9    9.19\n 7     7 Fukushima  33.8  0.533   28.8    6.48\n 8     8 Ibaraki    40.6  0.637   27.1    5.64\n 9     9 Tochigi    38.8  0.640   26.3    5.52\n10    10 Gunma      42.1  0.625   28.1    4.96\n# … with 37 more rows\n\n\n\n\n\n\n変数\n説明\n\n\n\n\nID\n都道府県ID\n\n\nPref\n都道府県名\n\n\nJimin\n2016年参院選の自民得票率 (比例)\n\n\nZaisei\n2016年度財政力指数\n\n\nOver65\n65歳以上人口割合\n\n\nPrimary\n第一次産業従事者割合"
  },
  {
    "objectID": "slides/macro/regression1.html#重回帰分析",
    "href": "slides/macro/regression1.html#重回帰分析",
    "title": "マクロ政治データ分析実習",
    "section": "重回帰分析",
    "text": "重回帰分析\n重回帰分析 (multiple regression): 説明変数が2つ以上の回帰分析\n\n単回帰分析 (single regression): 説明変数が1のみ回帰分析\n単回帰分析同様、lm()関数を使用するが、説明変数を+でつなぐ\n応答変数が\\(y\\)、説明変数が\\(x\\)と\\(z\\)の場合の回帰式\n\n\\[\n\\hat{y} = \\alpha + \\beta_1 x + \\beta_2 z\n\\]\n\n単回帰分析同様、残差（\\(e\\)）の自乗和が最小となる\\(\\alpha\\)、\\(\\beta_1\\)、\\(\\beta_2\\)を推定\n\n\n\n\n参考）単回帰分析と重回帰分析の違い\n\n\n　単回帰分析において残差は「観測値と回帰直線間の距離」であるが、重回帰分析の場合、「観測値と回帰平面間の距離」が残差となる。説明変数が2つの場合は、回帰平面、3つ以上の場合は回帰超平面となる。"
  },
  {
    "objectID": "slides/macro/regression1.html#問題設定",
    "href": "slides/macro/regression1.html#問題設定",
    "title": "マクロ政治データ分析実習",
    "section": "問題設定",
    "text": "問題設定\n\n　2016年行われた参院選における自民党の得票率（都道府県）はどのような要因で説明出来るだろうか。財政的に豊かではない地域が国からの補助金への依存度が高く、高齢者ほど保守的であることは先行研究において指摘されている。ならば、自民党の得票率は、その都道府県の財政力指数と高齢者の割合で説明できるだろうか。\n\n\n応答変数（結果）: 2016年参院選における都道府県ごとの自民党得票率（比例区）\n説明変数1（原因1）: 2016年度の都道府県ごとの財政力指数\n説明変数2（原因2）: 2015年度の都道府県ごとの65歳以上人口の割合\n\n\n自民党の得票率の予測値 = \\(\\alpha\\) + \\(\\beta_1\\) \\(\\times\\) 財政力指数 + \\(\\beta_2\\) \\(\\times\\) 65歳以上人口の割合\n\n\n残差（\\(e = y - \\hat{y}\\)）の自乗和が最小となる\\(\\alpha\\)、\\(\\beta_1\\)、\\(\\beta_2\\)を推定"
  },
  {
    "objectID": "slides/macro/regression1.html#lm関数による重回帰分析",
    "href": "slides/macro/regression1.html#lm関数による重回帰分析",
    "title": "マクロ政治データ分析実習",
    "section": "lm()関数による重回帰分析",
    "text": "lm()関数による重回帰分析\n複数の説明変数を+で区切るだけ\n\njimin_fit1 &lt;- lm(Jimin ~ Zaisei + Over65, data = pref_df)\nsummary(jimin_fit1)\n\n\nCall:\nlm(formula = Jimin ~ Zaisei + Over65, data = pref_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.6140  -2.8382   0.8015   3.1558   9.6759 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept)  15.8910    11.3983   1.394   0.1703  \nZaisei       -4.5472     4.8211  -0.943   0.3507  \nOver65        0.8810     0.3366   2.617   0.0121 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.6 on 44 degrees of freedom\nMultiple R-squared:  0.3135,    Adjusted R-squared:  0.2823 \nF-statistic: 10.05 on 2 and 44 DF,  p-value: 0.0002545"
  },
  {
    "objectID": "slides/macro/regression1.html#結果の解釈-1",
    "href": "slides/macro/regression1.html#結果の解釈-1",
    "title": "マクロ政治データ分析実習",
    "section": "結果の解釈",
    "text": "結果の解釈\n自民党の得票率の予測値 = 15.891 - 4.547 \\(\\times\\) 財政力指数 + 0.881 \\(\\times\\) 65歳以上人口の割合\n\n\n\nsummary(jimin_fit1)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\np.value\n\n\n\n\n(Intercept)\n15.891\n11.398\n0.170\n\n\nZaisei\n−4.547\n4.821\n0.351\n\n\nOver65\n0.881\n0.337\n0.012\n\n\n\n\n\n\n\n\n\n\n\n切片の係数: 15.891\n\n財政力指数が0、かつ65歳以上人口の割合が0%の都道府県の場合、自民党得票率の予測値は15.891%である。\nただし、財政力指数が0、65歳以上人口の割合が0%の都道府県はあり得ため、この15.891%に大きな意味はない。\n\n財政力指数の係数: -4.547\n\n財政力指数が1上がると、その都道府県の自民党得票率の予測値は4.547%p下がる。\n参考) 財政力指数の最小値は0.252、最大値は1.101\n\n65歳以上人口の割合の係数: 0.881\n\n65歳以上人口の割合が1%p上がると、その都道府県の自民党得票率の予測値は0.881%p上がる。\n「1%」でなく「1%ポイント」であることに注意"
  },
  {
    "objectID": "slides/macro/regression1.html#係数間の比較はダメ",
    "href": "slides/macro/regression1.html#係数間の比較はダメ",
    "title": "マクロ政治データ分析実習",
    "section": "係数間の比較はダメ!",
    "text": "係数間の比較はダメ!\n財政力指数の係数は-4.547、65歳以上人口の割合の係数は0.881\n\n係数の大きさ（=絶対値）は「財政力指数」の方が大きい\nこの結果から「高齢者割合よりも、その都道府県の財政力指数の方が、自民得票率に与える影響が大きい」と解釈出来るだろうか。\n\n\\(\\rightarrow\\) できない\n-4.547は財政力指数が1上がる場合の自民得票率の変化量\n0.881は65歳以上人口の割合が1%p上がる場合の自民得票率の変化量\n\nなぜ?\n\n2つの説明変数の単位は異なるため、直接比較することはできない。\n「財政力指数が1上がる」ことと、「65歳以上人口の割合が1%p上がる」ことの意味は大きく異る。\n\n財政力指数が1上がることは島根(0.252)の財政状況が東京(1.100)並に改善されること。\n高齢者の割合が1%p増えることはあり得るが、財政力指数が1上がることはなかなかあり得ない。"
  },
  {
    "objectID": "slides/macro/regression1.html#単回帰と重回帰の違い",
    "href": "slides/macro/regression1.html#単回帰と重回帰の違い",
    "title": "マクロ政治データ分析実習",
    "section": "単回帰と重回帰の違い",
    "text": "単回帰と重回帰の違い\n\njimin_fit1 &lt;- lm(Jimin ~ Zaisei + Over65, data = pref_df) # 重回帰分析\njimin_fit2 &lt;- lm(Jimin ~ Zaisei, data = pref_df) # 単回帰分析 1\njimin_fit3 &lt;- lm(Jimin ~ Over65, data = pref_df) # 単回帰分析 2\n\n\n\n\n\nsummary(jimin_fit1)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n15.891\n11.398\n1.394\n0.170\n\n\nZaisei\n−4.547\n4.821\n−0.943\n0.351\n\n\nOver65\n0.881\n0.337\n2.617\n0.012\n\n\n\n\n\n\n\n\n\n\n\nsummary(jimin_fit2)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n45.291\n2.049\n22.106\n0.000\n\n\nZaisei\n−13.012\n3.800\n−3.424\n0.001\n\n\n\n\n\n\n\n\n\n\n\n\n\nsummary(jimin_fit3)\n\n\n\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n7.518\n7.141\n1.053\n0.298\n\n\nOver65\n1.094\n0.249\n4.388\n0.000"
  },
  {
    "objectID": "slides/macro/regression1.html#重回帰分析-neq-複数の単回帰分析",
    "href": "slides/macro/regression1.html#重回帰分析-neq-複数の単回帰分析",
    "title": "マクロ政治データ分析実習",
    "section": "重回帰分析 \\(\\neq\\) 複数の単回帰分析",
    "text": "重回帰分析 \\(\\neq\\) 複数の単回帰分析\n\n\n\n\nモデル1\nモデル2\nモデル3\n\n\n\n\n切片（Intercept）\n15.819\n45.291\n7.518\n\n\n財政力指数（Zaisei）\n-4.547\n-13.012\n\n\n\n65歳以上人口の割合（Over65）\n0.881\n\n1.094\n\n\n\nモデル1: 自民党の得票率の予測値 = 15.891 - 4.547 \\(\\times\\) 財政力指数 + 0.881 \\(\\times\\) 65歳以上人口の割合\nモデル2: 自民党の得票率の予測値 = 45.291 - 13.012 \\(\\times\\) 財政力指数\nモデル3: 自民党の得票率の予測値 = 7.518 + 1.094 \\(\\times\\) 65歳以上人口の割合\n\n単回帰分析における係数と重回帰分析の係数は一致しない。\n重回帰分析の係数は「他の説明変数を一定に保ったとき、ある説明変数の増加が応答変数の値をどの程度変化させるか」を示す\n\n他の説明変数をコントロール (統制)したときに説明変数が応答変数に与える影響\nリサーチデザインの講義における「原因以外の重要な要因」(第2・3回)\n\n具体的な意味は教科書pp.215-218を参照"
  },
  {
    "objectID": "slides/macro/regression1.html#変数の統制",
    "href": "slides/macro/regression1.html#変数の統制",
    "title": "マクロ政治データ分析実習",
    "section": "変数の統制",
    "text": "変数の統制\n\n\n\n\n\n\n\n\n\n\nY: 自民党の得票率\nX: 財政力指数\nZ: 65歳以上人口の割合\n財政力指数が高い地域において自民得票率が低い場合、それは財政力指数の影響でなく、高齢者割合の影響かも知れない。\n高齢者割合が同じ場合、財政力指数が自民得票率に与える影響は?\n\n=「高齢者割合を統制する」"
  },
  {
    "objectID": "slides/macro/regression1.html#決定係数-1",
    "href": "slides/macro/regression1.html#決定係数-1",
    "title": "マクロ政治データ分析実習",
    "section": "決定係数",
    "text": "決定係数\nモデルの当てはまりの良さを評価する指標\n\n決定係数 ( \\(R^2\\) )、または自由度調整済み決定係数 (adjusted \\(R^2\\) )\n\n\\[\nR^2 = \\frac{\\sum(\\hat{y}_i - \\bar{y})^2}{\\sum(y_i - \\bar{y})^2} = \\frac{\\text{回帰変動}}{\\text{全変動}}\n\\]\n\n観測された応答変数のばらつき (全変動)のうち何％が予測値のばらつき (回帰変動)で説明されるか。\n\n予測値の分散を観測値の分散で割った値と一致\n分子の \\(\\bar{y}\\) は \\(\\bar{\\hat{y}}\\) にしても良いが、 \\(\\bar{\\hat{y}} = \\bar{y}\\)\n\n予測値の変動が観測値の変動と一致する場合、 \\(R^2\\) は1となる。\n\n「このモデルで応答変数の変動を完璧に説明できる。」\n\n決定係数が0.7なら…\n\n「このモデルで応答変数の変動の約70%が説明できる。」\n\n決定係数は0以上1以下"
  },
  {
    "objectID": "slides/macro/regression1.html#決定係数の計算方法-1",
    "href": "slides/macro/regression1.html#決定係数の計算方法-1",
    "title": "マクロ政治データ分析実習",
    "section": "決定係数の計算方法 (1)",
    "text": "決定係数の計算方法 (1)\n\ny_bar &lt;- mean(pref_df$Jimin)\ny_bar # 応答変数の「平均値」\n\n[1] 38.71447\n\ny &lt;- pref_df$Jimin\nhead(y) # 応答変数の「観測値」の最初の6つだけ出力\n\n[1] 32.82 40.44 34.90 36.68 43.46 42.49\n\ny_hat &lt;- predict(jimin_fit1)\nhead(y_hat) # 応答変数の「予測値」の最初の6つだけ出力\n\n       1        2        3        4        5        6 \n39.62745 40.95864 41.15184 35.87845 44.38813 41.51710 \n\nR_2 &lt;- sum((y_hat - y_bar)^2) / sum((y - y_bar)^2)\nR_2 # 決定係数\n\n[1] 0.3135332"
  },
  {
    "objectID": "slides/macro/regression1.html#決定係数の計算方法-2",
    "href": "slides/macro/regression1.html#決定係数の計算方法-2",
    "title": "マクロ政治データ分析実習",
    "section": "決定係数の計算方法 (2)",
    "text": "決定係数の計算方法 (2)\n\nvar_y_hat &lt;- var(predict(jimin_fit1)) # 予測値の分散\nvar_y_hat\n\n[1] 9.246157\n\nvar_y &lt;- var(pref_df$Jimin) # 観測値の分散 \nvar_y\n\n[1] 29.4902\n\nvar_y_hat / var_y # 決定係数\n\n[1] 0.3135332"
  },
  {
    "objectID": "slides/macro/regression1.html#参考-自由度調整済み決定係数",
    "href": "slides/macro/regression1.html#参考-自由度調整済み決定係数",
    "title": "マクロ政治データ分析実習",
    "section": "参考) 自由度調整済み決定係数",
    "text": "参考) 自由度調整済み決定係数\n説明変数が増えると決定係数は必ず大きくなるため、説明変数の数で決定係数にペナルティーを与える。\n\n回帰分析のモデルを評価する際、決定係数よりも以下の自由度調整済み決定係数を用いる。\n\n\\[\n\\text{Adjusted } R^2 = 1 - \\frac{(1 - R^2)(n - 1)}{(n - k - 1)}\n\\]\n\n\\(R^2\\) は決定係数、 \\(n\\) は標本サイズ、 \\(k\\) は説明変数の数\n\n\n1 - (((1 - R_2) * (47 - 1)) / (47 - 2 - 1))\n\n[1] 0.2823302"
  },
  {
    "objectID": "slides/macro/regression1.html#決定係数の確認方法",
    "href": "slides/macro/regression1.html#決定係数の確認方法",
    "title": "マクロ政治データ分析実習",
    "section": "決定係数の確認方法",
    "text": "決定係数の確認方法\n\n\n\nsummary(jimin_fit1)\n\n\nCall:\nlm(formula = Jimin ~ Zaisei + Over65, data = pref_df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.6140  -2.8382   0.8015   3.1558   9.6759 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)  \n(Intercept)  15.8910    11.3983   1.394   0.1703  \nZaisei       -4.5472     4.8211  -0.943   0.3507  \nOver65        0.8810     0.3366   2.617   0.0121 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.6 on 44 degrees of freedom\nMultiple R-squared:  0.3135,    Adjusted R-squared:  0.2823 \nF-statistic: 10.05 on 2 and 44 DF,  p-value: 0.0002545\n\n\n\nsummary()関数から出力される推定結果の下段\n\n決定係数: 0.3135\n\nMultiple R-squared\n\n自由度調整済み決定係数: 0.2823\n\nAdjusted R-squared\n\n説明変数が多くなると「Multiple R-squared（決定係数）」は必ず大きくなる\n\n応答変数と無関係な説明変数を入れても必ず大きくなるため、あまり参考にならない\n「Adjusted R-squared」を利用する\n\n財政力指数と高齢者の割合を説明変数とした場合、自民得票率の約28%が説明できる。"
  },
  {
    "objectID": "slides/macro/regression1.html#望ましい決定係数は存在しない",
    "href": "slides/macro/regression1.html#望ましい決定係数は存在しない",
    "title": "マクロ政治データ分析実習",
    "section": "「望ましい」決定係数は存在しない",
    "text": "「望ましい」決定係数は存在しない\n「決定係数は0.XX以上が望ましい」といった基準は存在しない\n\n自然科学、経済学などにおける時系列分析の場合、0.9を超える場合も多くある。\n国、人間などを扱う社会科学の場合、0.1程度やその以下もしばしばある。\n\n近年の社会科学では決定係数をあまり重要視しない\n調整済み決定係数が負になる場合もあるが、さすがにこれは良くないかも\n\nモデルを評価する一つの目安に過ぎないことに注意すること。\n\n応答変数が同じ複数のモデルがある場合、比較の指標としては意義があるものの、決定係数以外にも様々な指標がある（AIC、BIC、WAIC、Cohenの\\(\\kappa\\)など）。"
  },
  {
    "objectID": "slides/macro/regression1.html#モデル間比較modelsummaryパッケージ",
    "href": "slides/macro/regression1.html#モデル間比較modelsummaryパッケージ",
    "title": "マクロ政治データ分析実習",
    "section": "モデル間比較（{modelsummary}パッケージ）",
    "text": "モデル間比較（{modelsummary}パッケージ）\n\nlibrary(modelsummary) # ない場合はinstall.packages(\"modelsummary\")でインストール\nmodelsummary(list(jimin_fit1, jimin_fit2, jimin_fit3))\n\n\n\n\n\n (1)\n  (2)\n  (3)\n\n\n\n\n(Intercept)\n15.891\n45.291\n7.518\n\n\n\n(11.398)\n(2.049)\n(7.141)\n\n\nZaisei\n−4.547\n−13.012\n\n\n\n\n(4.821)\n(3.800)\n\n\n\nOver65\n0.881\n\n1.094\n\n\n\n(0.337)\n\n(0.249)\n\n\nNum.Obs.\n47\n47\n47\n\n\nR2\n0.314\n0.207\n0.300\n\n\nR2 Adj.\n0.282\n0.189\n0.284\n\n\nAIC\n281.7\n286.5\n280.7\n\n\nBIC\n289.1\n292.1\n286.2\n\n\nLog.Lik.\n−136.869\n−140.269\n−137.340\n\n\nF\n10.048\n11.724\n19.254\n\n\nRMSE\n4.45\n4.79\n4.50\n\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/macro/research_design.html#本日の内容",
    "href": "slides/macro/research_design.html#本日の内容",
    "title": "マクロ政治データ分析実習",
    "section": "本日の内容",
    "text": "本日の内容\n\n研究テーマの種類\n優れた研究テーマの基準\n論文の構成\n理論と仮説\n分析単位の問題"
  },
  {
    "objectID": "slides/macro/research_design.html#研究テーマの種類",
    "href": "slides/macro/research_design.html#研究テーマの種類",
    "title": "マクロ政治データ分析実習",
    "section": "研究テーマの種類",
    "text": "研究テーマの種類\n\n実証的問題\n\n本講義で扱う内容\n\n規範的問題\n\n実証的アプローチによる解決は不可能であるものの、実証的問題へ変換させることによって実証可能に\n\n分析的問題"
  },
  {
    "objectID": "slides/macro/research_design.html#実証的問題",
    "href": "slides/macro/research_design.html#実証的問題",
    "title": "マクロ政治データ分析実習",
    "section": "実証的問題",
    "text": "実証的問題\n何が真実で、何が真実でないか\n\n観察や経験から実証\n世論調査や統計調査だけでなく、インタビュー記録、議事録、史料などを使うことも可能\n\n\\(\\Rightarrow\\) 実証 \\(\\neq\\) 統計分析\n\n「良い/悪い」、「善/悪」、「〜すべき」のような価値判断は介入 \\(\\times\\)\n事実 (or データ) に語らせる"
  },
  {
    "objectID": "slides/macro/research_design.html#実証的問題の例",
    "href": "slides/macro/research_design.html#実証的問題の例",
    "title": "マクロ政治データ分析実習",
    "section": "実証的問題の例",
    "text": "実証的問題の例\n\n民主主義国家間においては、戦争は行われないか\n2022年9月29日時点での内閣支持率は何%か\nある国に対する経済的制裁は当該国の態度変化をもたらすか\n少人数クラスは学習効果を向上させるか"
  },
  {
    "objectID": "slides/macro/research_design.html#規範的問題",
    "href": "slides/macro/research_design.html#規範的問題",
    "title": "マクロ政治データ分析実習",
    "section": "規範的問題",
    "text": "規範的問題\n何が望ましく、何が望ましくないか\n\n主に「∼すべき/あるべき」の結論\n研究者は価値判断が介入 (= 主観的)\n\n\\(\\Rightarrow\\) 客観性が必要な科学的アプローチは不向き"
  },
  {
    "objectID": "slides/macro/research_design.html#規範的問題の例",
    "href": "slides/macro/research_design.html#規範的問題の例",
    "title": "マクロ政治データ分析実習",
    "section": "規範的問題の例",
    "text": "規範的問題の例\n\nヘイトスピーチは規制すべきか\n\n表現の自由を重視するか、マイノリティーの人権を重視するか\n\nトランプは悪い大統領だったのか\n\n「悪い」の基準は人それぞれであり、基準によって評価が変わってくる\n\n宋さんは超爽やかイケメンである\n\n(事実の可能性が高いが) 美の基準は人それぞれ"
  },
  {
    "objectID": "slides/macro/research_design.html#科学的なものとは何か",
    "href": "slides/macro/research_design.html#科学的なものとは何か",
    "title": "マクロ政治データ分析実習",
    "section": "「科学的なもの」とは何か",
    "text": "「科学的なもの」とは何か\n反証可能性 (Falsifiability) が存在すること\n\n\n\nPopper, Karl. 1959. The Logic of Scientific Discovery. Routledge\n\n「反証可能性」以外にも科学的なものの条件として「演繹」も\n\n仮説が実験や観察によって反証される可能性があること\n\n同じ手順で行われた実験、観察 (= データ収集) から既存の結果に反する結果が得られる可能性が存在する\n反証されない場合、既存の理論は補強される\n反証された場合、既存の理論は棄却されるか、信憑性が低下する\n\n\n\n\n陰謀論は反証可能性がない"
  },
  {
    "objectID": "slides/macro/research_design.html#鈴木-2008-から",
    "href": "slides/macro/research_design.html#鈴木-2008-から",
    "title": "マクロ政治データ分析実習",
    "section": "鈴木 (2008) から",
    "text": "鈴木 (2008) から\n鈴木光太郎. 2008.『オオカミ少女はいなかった:心理学の神話をめぐる冒険』新曜社\n\n\n\n教科書には正しいことだけが書かれていなければならないとは思っていない。むしろ、誤った記述があっても許されると思う(誤りは直せばよい)。科学は誤ることがあたりまえであって、そもそも科学とは、そうした誤りをたえず書き改めてゆく営みだからだ。私が許されないと思うのは、だれかが誤って書いたものをなにも考えずに受け売りしたり、それを孫引きやひ孫引きしたり、果ては先祖がたどれない引き方をしている場合である。あるいは、誤りであることが判明しても、直しもしない場合である。"
  },
  {
    "objectID": "slides/macro/research_design.html#科学的なものとは何か続き",
    "href": "slides/macro/research_design.html#科学的なものとは何か続き",
    "title": "マクロ政治データ分析実習",
    "section": "「科学的なもの」とは何か（続き）",
    "text": "「科学的なもの」とは何か（続き）\n\n全てのカラスは黒である \\(\\leftarrow\\) 反証可能性 \\(\\bigcirc\\)\n\n黒いカラスが発見されると、理論が強化される\n虹色のカラスが発見されると、理論が否定される\n\n太陽が東から昇るのは宋さんの意志である \\(\\leftarrow\\) 反証可能性 \\(\\times\\)\n\n翌日も東から昇ると、理論が強化される\n翌日は西から昇ると、それも宋さんの意志だから理論に反しない\n\n3·11 大震災はアメリカのよる人工地震である \\(\\leftarrow\\) 反証可能性 \\(\\times\\)\n\n証拠が見つからなかったら \\(\\rightarrow\\) アメリカの巨大資本による隠蔽だ！\n\n理論が否定されない\n\n証拠が見つからなかったら \\(\\rightarrow\\) ほら! 見てみ!"
  },
  {
    "objectID": "slides/macro/research_design.html#規範的問題から実証的問題へ1",
    "href": "slides/macro/research_design.html#規範的問題から実証的問題へ1",
    "title": "マクロ政治データ分析実習",
    "section": "規範的問題から実証的問題へ（1）",
    "text": "規範的問題から実証的問題へ（1）\n参照枠組み (frame of reference) の変更\n\n規範: ヘイトスピーチは規制すべきか\n実証: ヘイトスピーチ規制に対する賛成世論は何%か\n\n\n\n規範: トランプは悪い大統領だったのか\n実証: トランプは悪い大統領だったと思う市民が過半数か\n\n\n\n規範: 宋さんは超爽やかイケメンか\n実証: 宋さんを超爽やかイケメンと評価する専門家はいるか"
  },
  {
    "objectID": "slides/macro/research_design.html#規範的問題から実証的問題へ2",
    "href": "slides/macro/research_design.html#規範的問題から実証的問題へ2",
    "title": "マクロ政治データ分析実習",
    "section": "規範的問題から実証的問題へ（2）",
    "text": "規範的問題から実証的問題へ（2）\n背後にある前提条件を実証する\n\n価値判断によって問いの立て方が変わってくるものの、実証可能に\n\n銃器事故による死亡者は何人いるか\n\n銃器の善悪を死亡者数で判断\n\n銃器市場がもたらす経済効果は何ドルくらいか\n\n銃器の善悪を経済効果で判断\n\nトランプ政権の間、失業率のどれほど下がったか\n\n政権の善悪を経済で判断\n\nヘイトスピーチを規制している国ほど報道自由度 (Press Freedom Index) が高いか\n\nヘイトスピーチの善悪を表現の自由で判断\n表現の自由の尺度として報道自由度ランキングを使用"
  },
  {
    "objectID": "slides/macro/research_design.html#分析的問題",
    "href": "slides/macro/research_design.html#分析的問題",
    "title": "マクロ政治データ分析実習",
    "section": "分析的問題",
    "text": "分析的問題\n現実世界よりも抽象度の高い命題の妥当性を検討\n\n数学の証明問題と類似\n\n\\(\\Rightarrow\\) フォーマル理論 (formal theory)\n\n演繹的アプローチ\n\n前提が正しく、計算のミスがない限り、結果は常に「真」"
  },
  {
    "objectID": "slides/macro/research_design.html#分析的問題の例",
    "href": "slides/macro/research_design.html#分析的問題の例",
    "title": "マクロ政治データ分析実習",
    "section": "分析的問題の例",
    "text": "分析的問題の例\n\nコンドルセのパラドックス\n\n個々人の選好が推移的であるにも関わらず、集団としては選好順位の循環が起こること\n\nアローの不可能性定理\n\n選択肢が3つ以上存在するとき、公正な選挙制度の4条件である (1) 非独裁性、(2) 定義域の非限定性、(3) 無関係な選択肢からの独立、(4) パレート効率性、全てを満たす選挙制度は存在しないこと"
  },
  {
    "objectID": "slides/macro/research_design.html#良い研究テーマの条件",
    "href": "slides/macro/research_design.html#良い研究テーマの条件",
    "title": "マクロ政治データ分析実習",
    "section": "良い研究テーマの条件",
    "text": "良い研究テーマの条件\nMonroe (2000) の「良い研究テーマ」の条件\n\nMonroe, Alan. 2000. Essential of Political Research. Westview Press\n\n\n\n\n明快さ (clarity)\n検証可能性 (testability)\n理論的重要性 (theoretical significance)\n実用性 (practical relevance)\n独創性 (originality)\n\n\n\n1と2は研究のための不可欠な条件"
  },
  {
    "objectID": "slides/macro/research_design.html#明快さ",
    "href": "slides/macro/research_design.html#明快さ",
    "title": "マクロ政治データ分析実習",
    "section": "明快さ",
    "text": "明快さ\n問いは具体的である同時に、一般化可能性を目指す必要がある\n\n日本では、なぜ投票率が下降傾向にあるのか?\n\n有権者の意識の問題?選挙制度の問題?経済的な問題?\n\\(\\rightarrow\\) どの面に注目すれば良いのか分からない\n\\(\\rightarrow\\) 研究の方向性を具体的に示す必要がある\n\n例\n\n修正前: どうすれば開発途上国の貧困問題は解決できるか\n修正後: 海外からの投資は開発途上国の貧困率を下げるか\n\n\n\n\n問いが具体的 \\(\\rightarrow\\) 特定の国/地域/時代などが限定されやすい\n一般化可能性が高いほど理論的重要性、実用性も高まる\n具体性と一般化可能性のトレードオフ関係\n適切な (\\(\\leftarrow\\) 無責任な言い方) バランスが必要"
  },
  {
    "objectID": "slides/macro/research_design.html#検証可能性",
    "href": "slides/macro/research_design.html#検証可能性",
    "title": "マクロ政治データ分析実習",
    "section": "検証可能性",
    "text": "検証可能性\n問いは経験的分析によって答えることが出来なければならない\n\n検証不可能な問いは研究テーマとして成立しない\n\n\n\n研究テーマが「実証的問題」であること\n\n規範的問題は実証的問題へ変換する\n\nデータが入手可能であること\n\n高費用 (お金、時間、労力)のため入手出来ないデータ\n倫理的問題のため入手できないデータ\nその他の理由\n\n織田信長のインタービュー (守護霊に聞けば問題なし! )\n金正恩の政治意識など\n\n学部生などにとっては「二次データ」や「集計データ」がおすすめ\n\n参考) 佐藤博樹・池田謙一・石田浩. 2000『社会調査の公開データ―2次分析への招待』東京大学出版会"
  },
  {
    "objectID": "slides/macro/research_design.html#理論的重要性",
    "href": "slides/macro/research_design.html#理論的重要性",
    "title": "マクロ政治データ分析実習",
    "section": "理論的重要性",
    "text": "理論的重要性\n当該テーマに対する理解や知識を高めること\n\n既存の理論を再確認、支持、強化させる方向\n\n新しいデータ (異なる国、時代、測定法)、方法を用いることで既存の理論を支持・補強\n既存の結果と異なる結果が示された場合、理論の修正、新しいリサーチクエスチョンへ繋ぐことが可能\n\n既存の理論を批判すること\n\n既存の先行研究の全体、または一部に疑念を持ち、独自のリサーチデザインで研究をやり直す\n\n\n\n\n既存の理論の修正や新しい知見だけが科学的に有意味なものではない\n\n「知の蓄積」が重要"
  },
  {
    "objectID": "slides/macro/research_design.html#実用性",
    "href": "slides/macro/research_design.html#実用性",
    "title": "マクロ政治データ分析実習",
    "section": "実用性",
    "text": "実用性\n研究の成果が社会に貢献できること\n\n社会だけでなく、個人・企業の利益への貢献なども含まれる\n\n\n\n自然科学の場合、応用学問は言うまでもないが、数学など純粋学問も結果的には社会に貢献できることが多い\n\n素数の特徴を活用した暗号化 (RSA)\n量子力学と量子コンピューター\n\n\n\n\n社会科学の場合、社会問題から生まれた問いは社会貢献しやすい\n\n選管の啓発活動は本当に投票率を上げるのか\n少人数クラスは子どもの教育効果を向上させるか\n保育所整備率が上がれば女性（母親）の就労率が上がるか"
  },
  {
    "objectID": "slides/macro/research_design.html#独創性",
    "href": "slides/macro/research_design.html#独創性",
    "title": "マクロ政治データ分析実習",
    "section": "独創性",
    "text": "独創性\nあまりにも常識的な結果が予想される問いは避ける\n\n研究内容が全く新しい必要はない\n\n先行研究が存在しない研究は (1) 実は先行研究があるか、(2) 研究としてあまり意味がないから誰も研究していないケースが多い\nむろん、天才的なひらめきで全く新しい問いが生まれる可能性もある\n\n当たり前の結果を見て誰が喜ぶだろうか/何がハッピーだろうか\n\n\n\n例1: 政党帰属意識 (Campbell et al., 1969) は有権者の投票選択に影響を与えるか\n\n共和党に帰属意識を持つ有権者は共和党へ投票する傾向 ⇒ 当たり前\n\n例2: 政党帰属意識が投票選択に与える影響が昔に比べ低下したのはなぜか\n\n「明快さ」を欠けるが、出発点としては意味のある問い"
  },
  {
    "objectID": "slides/macro/research_design.html#パズルから探す",
    "href": "slides/macro/research_design.html#パズルから探す",
    "title": "マクロ政治データ分析実習",
    "section": "パズルから探す",
    "text": "パズルから探す\n一般的な常識からかけ離れた事実から出発\n\n学術研究の場合、一般常識は「既存の理論/先行研究」になることが多い\n\n\n\n例1: 民主主義は貧困層に対する福祉を充実させる (Boone 1996; Bueno de Mesquita et al. 2003; Dasgupta 1993; Moon and Dixon 1985; Przeworski et al. 2000; Sen 1981 など)\n\n本当にそうなのか?\nRoss, Michael. 2006. “Is Democracy Good for the Poor?” American Journal of Political Science. 50(4): 860–874\n\n例2: 比例代表制は死票が少ないため、投票率が高い\n\n逆に候補者/政党が多すぎて認知コストが高いのではないか?"
  },
  {
    "objectID": "slides/macro/research_design.html#パズルから探す-1",
    "href": "slides/macro/research_design.html#パズルから探す-1",
    "title": "マクロ政治データ分析実習",
    "section": "パズルから探す",
    "text": "パズルから探す\n一般的な常識からかけ離れた事実から出発\n\n世界的な傾向、全国/全体の傾向からかけ離れた事実など\n\n\n\n例1: 世界的に見て投票率は国政&gt;地方選挙であるにもかかわらず、なぜ日本は地方選挙の投票率が高いか\n\nYusaku, Horiuchi. 2005. Institutions, Incentives and Electoral Participation in Japan: Cross-Level and Cross-National Perspectives. Routledge.\n\n例2: 国政選挙において大都市の投票率は低いにもかかわらず、18歳の投票率のみ高いのはなぜか\n\n東京都: 全体11位 \\(\\leftrightarrow\\) 18歳1位\n島根県: 全体3位 \\(\\leftrightarrow\\) 18歳37位"
  },
  {
    "objectID": "slides/macro/research_design.html#パズルから探す-2",
    "href": "slides/macro/research_design.html#パズルから探す-2",
    "title": "マクロ政治データ分析実習",
    "section": "パズルから探す",
    "text": "パズルから探す\n一般的な常識からかけ離れた事実から出発\n\n既存の理論を支持/再確認/強化する場合はやや異なるかも\nそれでも、既存の理論を再検証することは「既存の研究成果が間違っている可能性がある/修正の必要がある」ことを前提としている\n再現研究であっても既存の研究/理論を鵜呑みにしていることではない\n\nたとえば、デュヴェルジェの法則\n\n\n\n例\n\n昔は通用したかも知れないが、今はどうだろう\nアメリカでもそうかも知れないが、日本ではどうだろう\nAという方法/尺度ではそうかも知れないが、Bという方法/尺度を採用すればどうだろう"
  },
  {
    "objectID": "slides/macro/research_design.html#論文の全体的な流れ",
    "href": "slides/macro/research_design.html#論文の全体的な流れ",
    "title": "マクロ政治データ分析実習",
    "section": "論文の全体的な流れ",
    "text": "論文の全体的な流れ\n政治学を含む社会科学における論文の構成\n\nイントロダクション\n先行研究のレビュー\n理論の提示\n仮説の提示\n対抗仮説の提示\n作業化 (操作化) の提示\n証拠の提示\n結論\n\n\n\n理論と仮説については講義後半にて改めて解説"
  },
  {
    "objectID": "slides/macro/research_design.html#イントロダクション",
    "href": "slides/macro/research_design.html#イントロダクション",
    "title": "マクロ政治データ分析実習",
    "section": "イントロダクション",
    "text": "イントロダクション\n落語における「つかみ」に該当\n\nリサーチクエスチョンの提示\n\n「なぜ、この問いが大事か/興味深いか」を示す \\(\\Rightarrow\\) 問題の背景\n読者に興味を持たせるために、分かりやすく説明する\n\n\n\n\n例1: 既存の理論で、この現象は説明できない\n例2: 世界的に見られる傾向から逸脱している\n例3: これまでとは異なる新しいパターンである\n例4: 未だこの現象の説明が明らかではない (論争中である/未解明である)\n例5: 非常に重要なことであるものの、まだ注目されていない\n\n\n\n分析の概要と、得られた結果を簡潔に紹介する\n論文全体のロードマップを提示"
  },
  {
    "objectID": "slides/macro/research_design.html#先行研究",
    "href": "slides/macro/research_design.html#先行研究",
    "title": "マクロ政治データ分析実習",
    "section": "先行研究",
    "text": "先行研究\n自分のRQに関連する既存の研究を紹介\n\nこのRQに対してこれまでどのような知見が得られたか\n論文の核心ではないため、RQと関連するもののみとし、簡潔に\n\n近年の学術論文は先行研究レビューの章がないケースも多い\n\n自分の理論を支持する結果だけでなく、異なる結果を示す研究も取り上げる\n\n既存の研究に対する疑問/問題点を指摘する場合が多い\n\n研究の位置づけ\n\n既存の研究に比べ、自分の研究は何が異なるか\n自分の研究は既存の知見をどれくらい拡大できるか\n\n先行研究を読みながら新しいRQが思いついたり、RQを修正\n\n\n\n参考) 曽我謙悟.「先行研究を読むとはいかなる営みなのか (上)（中）(下)」『書斎の窓』\n\n全文ネット公開"
  },
  {
    "objectID": "slides/macro/research_design.html#理論",
    "href": "slides/macro/research_design.html#理論",
    "title": "マクロ政治データ分析実習",
    "section": "理論",
    "text": "理論\n自分のRQにおける原因と結果の関係/メカニズムを提示\n\nここでの原因と結果は抽象的概念\n\n抽象性が高い = 一般性が高い (様々な場面で応用可能)\n例1: 社会的地位 (原因) が高いほど政治参加 (結果) が促進される\n例2: 景気 (原因) が良いと、有権者は与党/現職への支持 (結果) が高まる\n\n\n\n\n「論理の飛躍」がないように注意\n\n\n\nなぜこの関係が成立するかについて述べる\n\n政治参加には時間/金銭/認知的な費用を伴う\n社会的地位が高いほど、時間/金銭的に余裕がある\n社会的地位が高いほど、教育水準が高く、比較的に認知費用も低い\n結果として社会的地位が高い人ほど政治参加の度合いが高くなる"
  },
  {
    "objectID": "slides/macro/research_design.html#理論-1",
    "href": "slides/macro/research_design.html#理論-1",
    "title": "マクロ政治データ分析実習",
    "section": "理論",
    "text": "理論\n自分のRQにおける原因と結果の関係/メカニズムを提示\n\nここでの原因と結果は抽象的概念\n\n抽象性が高い = 一般性が高い (様々な場面で応用可能)\n例1: 社会的地位 (原因) が高いほど政治参加 (結果) が促進される\n例2: 景気 (原因) が良いと、有権者は与党/現職への支持 (結果) が高まる\n\n\n\n\n「論理の飛躍」がないように注意\n\n\n\nなぜこの関係が成立するかについて述べる\n\n有権者は自分の効用/利益を最大化する選択肢を選ぶ\n野党が多数派になる場合、経済がどうなるかを予測するのは困難\n与党が続けて多数派になった場合でも同じ\n予測に伴うコストを最小化するために、有権者は現政権の実績に注目\n与党の実績に満足すれば、今後も続くだろうと予想し、与党へ投票"
  },
  {
    "objectID": "slides/macro/research_design.html#理論-2",
    "href": "slides/macro/research_design.html#理論-2",
    "title": "マクロ政治データ分析実習",
    "section": "理論",
    "text": "理論\n自分のRQにおける原因と結果の関係/メカニズムを提示\n\nここでの原因と結果は抽象的概念\n\n抽象性が高い = 一般性が高い (様々な場面で応用可能)\n例1: 社会的地位 (原因) が高いほど政治参加 (結果) が促進される\n例2: 景気 (原因) が良いと、有権者は与党/現職への支持 (結果) が高まる\n\n\n\n\n「論理の飛躍」がないように注意\n\n\n\nなぜこの関係が成立するかについて述べる\n\n人間は得することよりも損することに敏感\n未来の経済状況よりも、現政権によって自分が得したか/損したかに注目\n自分が損したと判断した場合、与党を罰するために野党に投票\n少なくとも損したと言えないと判断した場合、続けて与党に政権を託す"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説",
    "href": "slides/macro/research_design.html#仮説",
    "title": "マクロ政治データ分析実習",
    "section": "仮説",
    "text": "仮説\n理論を変数間の関係として説明したもの\n\n原因と結果は必ず変数である必要\n\n「Xが変わるとYも変わる」ことを立証するため\n観察/測定可能なものでなければならない\n\n分析の単位を明確にする\n\n人? クラス? 自治体? 国?\n\n理論はより一般的/抽象的であるため、直接検証することが困難\n理論に比べ、より具体的な形で描写する\n理論と仮説は同じ章で提示される場合が多い"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説-1",
    "href": "slides/macro/research_design.html#仮説-1",
    "title": "マクロ政治データ分析実習",
    "section": "仮説",
    "text": "仮説\n同じ理論でも仮説は複数存在し得る\n\n理論: 経済成長は政治的発展を促す\n\n仮説1: より産業化が進むほど、大衆の政治参加が促される\n仮説2: GDPが上がるほど、議会内政党数が多くなり、有権者の様々な意見が反映されやすい\n\n理論: 社会的地位が高いほど、政治参加が促される\n\n仮説1: 収入が高い人ほど、投票率が高い\n仮説2: 教育水準が高い人ほど、投票率が高い"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説の種類",
    "href": "slides/macro/research_design.html#仮説の種類",
    "title": "マクロ政治データ分析実習",
    "section": "仮説の種類",
    "text": "仮説の種類\nMonroe, Alan. 2000. Essential of Political Research. Westview Press"
  },
  {
    "objectID": "slides/macro/research_design.html#データと操作化分析方法と分析結果",
    "href": "slides/macro/research_design.html#データと操作化分析方法と分析結果",
    "title": "マクロ政治データ分析実習",
    "section": "データと操作化/分析方法と分析結果",
    "text": "データと操作化/分析方法と分析結果\n\nデータの概要\n\n世論調査、実験データ、集計データなど\n\n仮説内の変数がどのように測定されたか\n\n政治的知識はどう定義され、どう測定されたか\n政治に関するクイズの正解率? 学歴?\n\nどのような分析手法を用いるか\n分析結果の提示\n\n図、表、解釈"
  },
  {
    "objectID": "slides/macro/research_design.html#リサーチデザインの重要性",
    "href": "slides/macro/research_design.html#リサーチデザインの重要性",
    "title": "マクロ政治データ分析実習",
    "section": "リサーチデザインの重要性",
    "text": "リサーチデザインの重要性\nGarbage in, garbage out\n\n分析方法といくら洗練されていても、リサーチデザインが精緻でないと \\(\\times\\)\n\nゴミをいくら上手く調理しても結果はゴミ\n\n理論・仮説と分析モデルが一致することが重要\n\n理論・仮説の検証にならない/足りない分析は \\(\\times\\)\n\n本日の内容が、社会科学の唯一のリサーチデザインではない\n\n例) 実験研究/自然実験研究の場合、理論・仮説の重要性が低下し、実験デザインがより重要になる場合も\nむろん、理論・仮説も精緻であることが望ましい"
  },
  {
    "objectID": "slides/macro/research_design.html#理論とは",
    "href": "slides/macro/research_design.html#理論とは",
    "title": "マクロ政治データ分析実習",
    "section": "理論とは",
    "text": "理論とは\n原因と結果の関係についての一般的な記述\n\n原因と結果を示し、この2つに因果関係があることを示す"
  },
  {
    "objectID": "slides/macro/research_design.html#因果関係の条件-old-ver.",
    "href": "slides/macro/research_design.html#因果関係の条件-old-ver.",
    "title": "マクロ政治データ分析実習",
    "section": "因果関係の条件 (Old Ver.)",
    "text": "因果関係の条件 (Old Ver.)\n\n\n今はやや古い議論\n\n因果推論の三条件 (高根 1979、久米 2013)\n\n原因が結果より先に起こること\n原因と結果が共変すること\n原因以外の重要な要因が変化しないこと\n\nただし、第三条件は社会科学において正当化されにくい。\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n現在の因果推論は潜在的結果、内生性 ( \\(\\leftrightarrow\\) 外生性)を重視する\n\n福元健太郎. 2015. 「新しい革袋の古い酒:久米郁男著『原因を推論する—政治分析方法論のすゝめ』有斐閣」『レヴァイアサン』56\n実験、自然実験、共変量調整などで対処\n\n因果推論以外の関心事として予測（prediction）"
  },
  {
    "objectID": "slides/macro/research_design.html#原因以外の重要な要因とは",
    "href": "slides/macro/research_design.html#原因以外の重要な要因とは",
    "title": "マクロ政治データ分析実習",
    "section": "原因以外の重要な要因とは",
    "text": "原因以外の重要な要因とは\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n例1\n例2\n\n\n\n\n\\(X\\)\n朝食\nアクション映画の視聴時間\n\n\n\\(Y\\)\n学力\n暴力性"
  },
  {
    "objectID": "slides/macro/research_design.html#原因以外の重要な要因とは-1",
    "href": "slides/macro/research_design.html#原因以外の重要な要因とは-1",
    "title": "マクロ政治データ分析実習",
    "section": "原因以外の重要な要因とは",
    "text": "原因以外の重要な要因とは\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n例1\n例2\n\n\n\n\n\\(X\\)\n朝食\nアクション映画の視聴時間\n\n\n\\(Y\\)\n学力\n暴力性\n\n\n\\(Z\\)\n親の経済力\n元々の暴力性\n\n\n\n\n\n\n原因と結果、両方に影響を与える要因がある場合、すべてを固定\n\n現実的には不可能\n\n親の経済力が等しい場合、朝食が学力に与える影響\n元々の暴力性が等しい場合、視聴時間が暴力性に与える影響"
  },
  {
    "objectID": "slides/macro/research_design.html#理論とは-1",
    "href": "slides/macro/research_design.html#理論とは-1",
    "title": "マクロ政治データ分析実習",
    "section": "理論とは",
    "text": "理論とは\n原因と結果の関係についての一般的な記述\n\n原因と結果を示し、この2つに因果関係があることを示す\nなぜ X が起こると Y になるのか?\n\nX \\(\\rightarrow\\) Y\n\nしかし、X と Y が直接結びつくことはほとんどなく、X から Y へたどり着くまでの経路が存在\n\nX \\(\\rightarrow\\) A \\(\\rightarrow\\) B \\(\\rightarrow\\) Y\nX \\(\\rightarrow\\) Y が成立するためには、X \\(\\rightarrow\\) A、A \\(\\rightarrow\\) B、B \\(\\rightarrow\\) Y が全て成立する必要がある\nX \\(\\rightarrow\\) A、A \\(\\rightarrow\\) B、B \\(\\rightarrow\\) Y \\(\\Rightarrow\\) 前提条件\n\n理論とは前提条件の積み重ね\n\n理論は自明な公理、先行研究から\n\nX \\(\\rightarrow\\) Y の経路は複数あり得る"
  },
  {
    "objectID": "slides/macro/research_design.html#例デュヴェルジェの法則",
    "href": "slides/macro/research_design.html#例デュヴェルジェの法則",
    "title": "マクロ政治データ分析実習",
    "section": "例:デュヴェルジェの法則",
    "text": "例:デュヴェルジェの法則\n小選挙区制は二大政党制を促す\n\n機械的メカニズム: 小選挙区制は第一党を過大代表させる\n\n相対多数で議席が獲得できる小選挙区制\n候補者が多い場合、少ない得票数でも当選可能\n\n2014 年衆院選 (小選挙区) の自民得票率: 48.10%、議席率: 75.59%\nCube Rule\n\n第二党は過小代表されるが、第三党以下においてはより深刻\n\n2014年の民主得票率: 22.51%、議席率: 12.88%\n2014年の共産得票率: 13.30%、議席率: 0.34%\n\n当選可能性のある政党は第一政党と第二政党のみ"
  },
  {
    "objectID": "slides/macro/research_design.html#例デュヴェルジェの法則-1",
    "href": "slides/macro/research_design.html#例デュヴェルジェの法則-1",
    "title": "マクロ政治データ分析実習",
    "section": "例:デュヴェルジェの法則",
    "text": "例:デュヴェルジェの法則\n小選挙区制は二大政党制を促す\n\n心理的メカニズム: 有権者は死票を嫌う\n\n当選者へ投票した票以外は国政へ反映されない \\(\\Rightarrow\\) 死票\n好む候補者に当選の見込みがない場合、当選の見込みがある候補者の中から選択\n第一党と第二党に得票が集中"
  },
  {
    "objectID": "slides/macro/research_design.html#良い理論の条件",
    "href": "slides/macro/research_design.html#良い理論の条件",
    "title": "マクロ政治データ分析実習",
    "section": "良い理論の条件",
    "text": "良い理論の条件\n\n誤りの可能性 (= 反証可能性) があること\n観察可能な含意が多いこと\n具体的であること\n単純であること\n\n\n\n単純さ \\(\\rightarrow\\) 観察可能な含意の多さ \\(\\rightarrow\\) 反証可能性の高さ\n具体性 \\(\\rightarrow\\) 反証可能性の高さ"
  },
  {
    "objectID": "slides/macro/research_design.html#反証可能性",
    "href": "slides/macro/research_design.html#反証可能性",
    "title": "マクロ政治データ分析実習",
    "section": "反証可能性",
    "text": "反証可能性\n仮説が観察・実験などによって反証される可能性\n\n理論には必ず反証可能性が必要\n同じ手順で行われた実験、観察から既存の結果に反する結果が得られる可能性が存在\n\n反証されない場合、既存の理論が強化される\n反証される場合、既存の理論が修正・廃棄される\n\n反証可能性が高いほど良い理論\n\n一般性の高い(= 情報量が多い)理論ほど反証されやすい\n\n\n\n\nデュヴェルジェの法則の修正\n\nデュヴェルジェの法則: 小選挙区制 \\(\\rightarrow\\) 二大政党制\nM+1ルール: 選挙区において有力候補者数はM+1 (定数+1)名へ収斂 (リード 2000)"
  },
  {
    "objectID": "slides/macro/research_design.html#観察可能な含意",
    "href": "slides/macro/research_design.html#観察可能な含意",
    "title": "マクロ政治データ分析実習",
    "section": "観察可能な含意",
    "text": "観察可能な含意\n観察可能な含意の多さ \\(\\propto\\) 反証可能性の高さ\n\n理論が正しければ当然に生じるであろう事象\n\n\n\n例 1) 恐竜は隕石衝突によって絶滅した\n\nこの理論が正しいなら、6500 万年前の地層からイリジウムが見つかるはず\n\n例 2) 小選挙区制は二大政党制を促す\n\nこの理論が正しいなら、アメリカは二大政党制であるはず\nこの理論が正しいなら、イギリスは二大政党制であるはず\nこの理論が正しいなら、スウェーデンは多党制であるはず\n\n\n\n\n観察可能な含意が多いほど、反証される可能性が高まる"
  },
  {
    "objectID": "slides/macro/research_design.html#具体性",
    "href": "slides/macro/research_design.html#具体性",
    "title": "マクロ政治データ分析実習",
    "section": "具体性",
    "text": "具体性\n正確に記述され、具体的な予測をする\n\n具体的な理論は間違っていることを容易に明らかにできる\n\n\\(\\rightarrow\\) 反証可能性が高い\n\n正確に記述され、特定 (specific) の予測が可能な理論\n\n曖昧さを避ける\n理論によって相反する結果が予測される場合、理論の検証が困難\n\n\\(\\rightarrow\\) 反証可能性が低い\n\n\n\n\n\n例1) 気温が変わると、ビールの売上も変わる\n\n高気温 \\(\\rightarrow\\) 高い売上、低気温 \\(\\rightarrow\\) 低い売上、高気温 \\(\\rightarrow\\) 低い売上、低気温 \\(\\rightarrow\\) 高い売上\n\n例2) 気温が上がると、ビールの売上も上がる\n\n高気温 \\(\\rightarrow\\) 高い売上"
  },
  {
    "objectID": "slides/macro/research_design.html#単純さ",
    "href": "slides/macro/research_design.html#単純さ",
    "title": "マクロ政治データ分析実習",
    "section": "単純さ",
    "text": "単純さ\n単純な理論ほど (アプリオリに) 高い説明力を持つ (Jeffreys 1961)\n\n複雑な世界を出来る限り単純に描写\n\n\n\n例1)AかつBかつCの条件下で、XはYをもたらす\n例2)Aの条件下で、XはYをもたらす\n後者の方がより単純であり、観察可能な含意も多い = 反証されやすい\n社会を対象にする社会科学において単純化できるケースは稀という意見も (King, Keohane, and Verba 2021)\n\n単純さは望ましいが、研究対象としている世界が単純だと分かっている場合に有効\n\\(\\Rightarrow\\) 単純さを理論設計における一般原則とすべきではない\n\nそれでも極端に単純化しないなら、単純な理論の方が良い\n\n複雑だからこそ、単純化が必要"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説とは",
    "href": "slides/macro/research_design.html#仮説とは",
    "title": "マクロ政治データ分析実習",
    "section": "仮説とは",
    "text": "仮説とは\n理論から引き出された特定の変数間の関係に関する記述\n\nこの理論が正しければ···のはず\n一つ一つの仮説が「観察可能な含意」となる\n\n仮説が支持される ⇒ 理論が強化される\n仮説が支持されない ⇒ 理論が棄却/修正される\n\n理論より具体的\n\n理論における原因と結果に該当する概念を、具体的かつ測定可能な変数間の関係で記述\n一つの理論から複数の仮説が考えられる"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説の例",
    "href": "slides/macro/research_design.html#仮説の例",
    "title": "マクロ政治データ分析実習",
    "section": "仮説の例",
    "text": "仮説の例\n理論: 学歴が高いほど政治参加が高まる\n\n学歴と政治参加は様々な形の変数として表現可能\n\n\n\n学歴をどう測るか\n\n方法1: 高卒以下か、大卒以上か\n方法2: 教育年数\n方法3: 出身高校の偏差値\n方法4: センター試験の成績\n方法5: 出身大学の偏差値\n\n\n政治参加をどう測るか\n\n方法1: 直近5年間の選挙における投票率\n方法2: 2022年参院選での投票有無\n方法3: デモの参加経験\n方法4: 選挙での立候補\n\n\n\n\n組み合わせによって20種類（5 \\(\\times\\) 4）の仮説であり、実際は無限\n\n例) 方法1 \\(\\times\\) 方法2: 大卒以上の人は高卒以下の人に比べ、2022年参院選で投票する傾向がある。\n例) 方法3 \\(\\times\\) 方法4: 出身高校の偏差値が高い人ほど、選挙に立候補する傾向がある。"
  },
  {
    "objectID": "slides/macro/research_design.html#変数の理論的役割",
    "href": "slides/macro/research_design.html#変数の理論的役割",
    "title": "マクロ政治データ分析実習",
    "section": "変数の理論的役割",
    "text": "変数の理論的役割\n仮説内の変数は理論においてそれぞれの役割を有する\n\n説明変数 (独立変数)\n\n理論における「原因」に該当\n「…ならば」\n\n応答変数 (従属変数、被説明変数、結果変数)\n\n理論における「結果」に該当\n「…になるはず」\n\n統制変数\n\n理論における「原因以外の重要な要因」に該当\n「…の条件下で、」、「…が同じならば、」\n仮説で統制変数は具体的に記述されない場合もある (主に後者の場合)\n\n\n\n\n例:「統制変数」の条件下で、「説明変数」が上がれば「応答変数」は下がる"
  },
  {
    "objectID": "slides/macro/research_design.html#仮説を考える際の注意点",
    "href": "slides/macro/research_design.html#仮説を考える際の注意点",
    "title": "マクロ政治データ分析実習",
    "section": "仮説を考える際の注意点",
    "text": "仮説を考える際の注意点\n\n分析単位の問題\n測定の問題\n生態学的誤謬"
  },
  {
    "objectID": "slides/macro/research_design.html#分析単位",
    "href": "slides/macro/research_design.html#分析単位",
    "title": "マクロ政治データ分析実習",
    "section": "分析単位",
    "text": "分析単位\nどのレベルに注目するか\n\n個人、集団、自治体、国、企業、時間など\n\n集団を単なる個人の集合として考える場合、単位は細かいのが望ましい (方法論的個人主義)\n方法論的個人主義に対する批判も多い\n\nデータの1行1行がそれぞれの単位であること\n\n1行目:個人1、2行目:個人2、3行目:個人3… \\(\\leftarrow\\) 分析単位は個人\n1行目:国1、2行目:国2、3行目:国3… \\(\\leftarrow\\) 分析単位は国\n1行目: 2019/4/1、2行目: 2019/4/2、3行目: 2019/4/3… \\(\\leftarrow\\) 分析単位は時間 (日)\n1行目: 2019年の国1、2行目: 2020年の国1、3行目: 2021年の国1、…、100行目: 2021年の国10 \\(\\leftarrow\\) 分析単位は国 \\(\\times\\) 時間 (年)\n\n原因と結果の単位が一致すること\n\n原因が個人単位なら結果も個人単位\nマルチレベル分析を用いると個人 \\(\\times\\) 集団レベルの推定も可能\n\nリサーチの種類、目的、データの制約を勘案して分析者が決定"
  },
  {
    "objectID": "slides/macro/research_design.html#例-分析単位",
    "href": "slides/macro/research_design.html#例-分析単位",
    "title": "マクロ政治データ分析実習",
    "section": "例: 分析単位",
    "text": "例: 分析単位\n収入が高いと投票率が上がる?\n\n\n\n分析単位\n説明変数\n応答変数\n\n\n\n\n有権者\n個々人の年収\n投票有無\n\n\n市区町村\n各市区町村の平均所得\n各市区町村の投票率\n\n\n選挙区（衆）\n各選挙区の平均所得\n各選挙区の衆院選投票率\n\n\n選挙区（参）\n各都道府県の平均所得\n各都道府県の参院選投票率\n\n\n国\n各国の一人あたりGDP\n各国の国政選挙の投票率\n\n\n\n\n分析単位を揃える\nどの単位にするかを決める\n\n適切な単位を選択しない場合、生態学的誤謬の可能性"
  },
  {
    "objectID": "slides/macro/research_design.html#変数の測定",
    "href": "slides/macro/research_design.html#変数の測定",
    "title": "マクロ政治データ分析実習",
    "section": "変数の測定",
    "text": "変数の測定\n測定可能かつ正確に測定すること\n\n変数の測定は可能か\n\n個人が特定可能な情報\n敏感な情報 (犯罪経歴など)\n\n測定は可能でも測定誤差が大きい: Social Desirability Bias\n\n\n様々な測定方法がある場合\n\n学歴をどう測定するか (前の例)\n\n人間の心理が対象である場合\n\n知識、関心、イデオロギー、陰キャか陽キャかなど\n心理学の場合、『心理測定尺度集 (I)∼(VI)』など、測定への関心が高い\n\n人間の主観に大きく左右される場合\n\n例) 選挙ポスターで笑顔の候補者ほど得票率は高いか\n方法 1: Asano and Patterson (2018) の Smile Index\n方法 2: 複数人を対象に笑顔度を評価してもらい、その平均値を利用"
  },
  {
    "objectID": "slides/macro/research_design.html#人の笑顔をどう測定するか",
    "href": "slides/macro/research_design.html#人の笑顔をどう測定するか",
    "title": "マクロ政治データ分析実習",
    "section": "人の「笑顔」をどう測定するか",
    "text": "人の「笑顔」をどう測定するか"
  },
  {
    "objectID": "slides/macro/research_design.html#人の笑顔をどう測定するか-1",
    "href": "slides/macro/research_design.html#人の笑顔をどう測定するか-1",
    "title": "マクロ政治データ分析実習",
    "section": "人の「笑顔」をどう測定するか",
    "text": "人の「笑顔」をどう測定するか\nMasahiko Asano and Dennis P. Patterson. 2018. “Smiles, turnout, candidates, and the winning of district seats: Evidence from the 2015 local elections in Japan,” Politics and the Life Sciences, 37 (1): 16–31."
  },
  {
    "objectID": "slides/macro/research_design.html#生態学的誤謬",
    "href": "slides/macro/research_design.html#生態学的誤謬",
    "title": "マクロ政治データ分析実習",
    "section": "生態学的誤謬",
    "text": "生態学的誤謬\n個人に関する推論の際、集計データを不適切に用いること\n\n集団レベルのデータで個人レベルを推論する\n\n一般的に、個人レベルのデータは入手のコストが高い\n\n例) 理論: 高齢者は投票参加する傾向が強い。\n\n理論における単位: 個人\n仮説A: 高齢者は2022参院選において投票参加する傾向が強い \\(\\leftarrow\\) 個人\n仮説B: 65歳以上人口比が高い市区町村ほど、2022参院選の投票率が強い \\(\\leftarrow\\) 集団\n\n例) 理論: 維新の支持基盤は関西地域である。\n\n仮説C: 関西出身の人は維新に投票する傾向がある \\(\\leftarrow\\) 個人\n仮説D: 関西の市区町村は、維新の得票率が高い \\(\\leftarrow\\) 集団\n\n2つの結果が異なる場合もある\n\n\n\nデータの制約がある場合 (= 個人レベルのデータが入手困難)\n\n理論・仮説を修正し、分析の単位を集団レベルにする (個人レベルのデータの入手難易度は高い)"
  },
  {
    "objectID": "slides/macro/research_design.html#例-生態学的誤謬",
    "href": "slides/macro/research_design.html#例-生態学的誤謬",
    "title": "マクロ政治データ分析実習",
    "section": "例: 生態学的誤謬",
    "text": "例: 生態学的誤謬\nケーキにおける砂糖の量と味の関係"
  },
  {
    "objectID": "slides/macro/research_design.html#例-生態学的誤謬-1",
    "href": "slides/macro/research_design.html#例-生態学的誤謬-1",
    "title": "マクロ政治データ分析実習",
    "section": "例: 生態学的誤謬",
    "text": "例: 生態学的誤謬\nケーキにおける砂糖の量と味の関係"
  },
  {
    "objectID": "slides/macro/research_design.html#例-生態学的誤謬-2",
    "href": "slides/macro/research_design.html#例-生態学的誤謬-2",
    "title": "マクロ政治データ分析実習",
    "section": "例: 生態学的誤謬",
    "text": "例: 生態学的誤謬\nケーキにおける砂糖の量と味の関係"
  },
  {
    "objectID": "slides/macro/research_design.html#例-生態学的誤謬-3",
    "href": "slides/macro/research_design.html#例-生態学的誤謬-3",
    "title": "マクロ政治データ分析実習",
    "section": "例: 生態学的誤謬",
    "text": "例: 生態学的誤謬\nケーキにおける砂糖の量と味の関係"
  },
  {
    "objectID": "slides/macro/research_design.html#第2回課題",
    "href": "slides/macro/research_design.html#第2回課題",
    "title": "マクロ政治データ分析実習",
    "section": "第2回課題",
    "text": "第2回課題\nLMSの課題提出窓口で提出\n\nLMSにあるリサーチクエスチョンの一覧から2つの問いを選択する。\n\nこれまで宋が担当してきた授業における履修者のリサーチクエスチョンの一部\n最も良いと思うRQと最も改善の余地があると思うRQをそれぞれ1つずつ\n\nその問いが (1) 実証的問題、 (2) 規範的問題、 (3) 分析的問題、 (4) その他のどれに該当するか\n明快さ、検証可能性、理論的重要性、実用性、独創性の観点からその問いを評価する。\n\n点数でなく文章で評価すること。\n高い/低いだけでなく、その理由も述べること\n\n\n\n\n正解のない問題であり、自分の考えを、自分の言葉で述べよう。\n提出期限：2022年10月5日（水）23時59分"
  },
  {
    "objectID": "slides/macro/research_design.html#第3回課題",
    "href": "slides/macro/research_design.html#第3回課題",
    "title": "マクロ政治データ分析実習",
    "section": "第3回課題",
    "text": "第3回課題\n期末レポートで取り組みたいリサーチクエスチョンの提出\n\nLSMの授業後アンケートにて記入\nリサーチクエスチョンはどの時点でも変更可（宋に報告は不要）\n実証的問題であること\n分析単位を考慮し、データが入手可能（だと考えられる）な問い\n政治に関連する問いが望ましい（「マクロ政治データ分析実習」だから）が、政治に関連しない問でもOK（減点なし）\n\n\n\n提出期限：2022年10月12日（水）23時59分\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/dataset.html#授業を始める前に",
    "href": "slides/micro/dataset.html#授業を始める前に",
    "title": "ミクロ政治データ分析実習",
    "section": "授業を始める前に",
    "text": "授業を始める前に\n\n分析単位、仮説のような概念が登場するが、これらについては後期の「マクロ政治データ分析実習」の前半（リサーチデザイン）で解説する。\n本日の内容は前期の内容とあまり関係のない内容だが、後期の授業は自分でデータセットを構築/入手して、独自の問いに対する分析行う（= 期末レポート）必要があるため、非常に重要。"
  },
  {
    "objectID": "slides/micro/dataset.html#データの形-1",
    "href": "slides/micro/dataset.html#データの形-1",
    "title": "ミクロ政治データ分析実習",
    "section": "データの形",
    "text": "データの形\nデータの構造は基本的に「四角形」\n\n\n\n\n\n  \n    \n    \n      ID\n      都道府県\n      自民得票率\n      財政力指数\n      高齢者比\n      第一次産業従事者比率\n    \n  \n  \n    1\n北海道\n32.820\n0.435\n29.190\n6.995\n    2\n青森県\n40.440\n0.341\n30.214\n12.029\n    3\n岩手県\n34.900\n0.352\n30.489\n10.644\n    4\n宮城県\n36.680\n0.614\n25.860\n4.362\n    5\n秋田県\n43.460\n0.309\n33.942\n9.621\n    6\n山形県\n42.490\n0.351\n30.901\n9.194\n    7\n福島県\n33.820\n0.533\n28.779\n6.483\n    8\n茨城県\n40.640\n0.637\n27.103\n5.640\n    9\n栃木県\n38.780\n0.640\n26.342\n5.516\n    10\n群馬県\n42.060\n0.625\n28.081\n4.963\n    11\n埼玉県\n32.300\n0.766\n25.177\n1.592\n    12\n千葉県\n37.790\n0.778\n26.166\n2.786\n    13\n東京都\n34.370\n1.101\n23.171\n0.387\n    14\n神奈川県\n34.920\n0.908\n24.209\n0.834\n    15\n新潟県\n43.660\n0.451\n29.994\n5.760\n    16\n富山県\n44.160\n0.467\n30.822\n3.266\n    17\n石川県\n48.090\n0.485\n28.070\n3.019\n    18\n福井県\n45.290\n0.394\n28.890\n3.714\n    19\n山梨県\n37.360\n0.396\n28.734\n7.183\n    20\n長野県\n35.270\n0.496\n30.391\n9.057\n    21\n岐阜県\n39.710\n0.534\n28.530\n3.086\n    22\n静岡県\n37.470\n0.720\n28.200\n3.802\n    23\n愛知県\n34.320\n0.921\n24.216\n2.072\n    24\n三重県\n33.670\n0.585\n28.321\n3.578\n    25\n滋賀県\n37.850\n0.550\n24.423\n2.645\n    26\n京都府\n31.180\n0.584\n27.781\n2.052\n    27\n大阪府\n22.120\n0.765\n26.473\n0.505\n    28\n兵庫県\n31.710\n0.634\n27.292\n1.968\n    29\n奈良県\n33.510\n0.421\n28.809\n2.625\n    30\n和歌山県\n39.610\n0.327\n30.978\n8.757\n    31\n鳥取県\n41.620\n0.266\n29.865\n8.782\n    32\n島根県\n48.240\n0.252\n32.707\n7.758\n    33\n岡山県\n37.870\n0.518\n28.890\n4.574\n    34\n広島県\n39.930\n0.602\n27.778\n3.091\n    35\n山口県\n46.750\n0.440\n32.202\n4.808\n    36\n徳島県\n38.440\n0.329\n31.142\n8.191\n    37\n香川県\n44.070\n0.476\n30.152\n5.263\n    38\n愛媛県\n43.570\n0.425\n30.812\n7.343\n    39\n高知県\n37.010\n0.258\n32.994\n11.417\n    40\n福岡県\n36.520\n0.634\n26.092\n2.779\n    41\n佐賀県\n43.530\n0.341\n27.791\n8.442\n    42\n長崎県\n41.700\n0.326\n29.758\n7.422\n    43\n熊本県\n46.540\n0.399\n28.912\n9.589\n    44\n大分県\n39.440\n0.371\n30.695\n6.678\n    45\n宮崎県\n40.110\n0.333\n29.595\n10.790\n    46\n鹿児島県\n45.970\n0.333\n29.568\n9.319\n    47\n沖縄県\n27.820\n0.332\n19.760\n4.510"
  },
  {
    "objectID": "slides/micro/dataset.html#行と列",
    "href": "slides/micro/dataset.html#行と列",
    "title": "ミクロ政治データ分析実習",
    "section": "行と列",
    "text": "行と列\n\n行: ケース\n\n人、クラス、都道府県、国、年など\n分析単位に注意すること\n\n列: 変数\n\n性別、年齢、人口、成績など\n\n一行目は変数名。ヘッダー (header) とも呼ぶ。"
  },
  {
    "objectID": "slides/micro/dataset.html#分析単位-1",
    "href": "slides/micro/dataset.html#分析単位-1",
    "title": "ミクロ政治データ分析実習",
    "section": "分析単位",
    "text": "分析単位\n各行（ケース）は分析単位を表すこと\n\n仮説: 高齢者ほど政党Xに投票する\n分析単位は「人」\n\n\n\n\n\n\n  \n    \n    \n      ID\n      年齢\n      政党Xへの投票有無\n    \n  \n  \n    1\n41\n1\n    2\n28\n0\n    3\n47\n1\n    4\n34\n0\n    5\n46\n0\n    6\n49\n1\n    7\n26\n1\n    8\n53\n0\n    9\n50\n0\n    10\n60\n0"
  },
  {
    "objectID": "slides/micro/dataset.html#分析単位-2",
    "href": "slides/micro/dataset.html#分析単位-2",
    "title": "ミクロ政治データ分析実習",
    "section": "分析単位",
    "text": "分析単位\n各行（ケース）は分析単位を表すこと\n\n仮説: 高齢者が多い都道府県ほど政党Xの得票率が高い\n分析単位は「都道府県」\n\n\n\n\n\n\n  \n    \n    \n      ID\n      都道府県\n      政党Xの得票率\n      高齢者比\n    \n  \n  \n    1\n北海道\n32.82\n29.19036\n    2\n青森県\n40.44\n30.21411\n    3\n岩手県\n34.90\n30.48886\n    4\n宮城県\n36.68\n25.85974\n    5\n秋田県\n43.46\n33.94153\n    6\n山形県\n42.49\n30.90099\n    7\n福島県\n33.82\n28.77917\n    8\n茨城県\n40.64\n27.10318\n    9\n栃木県\n38.78\n26.34192\n    10\n群馬県\n42.06\n28.08067"
  },
  {
    "objectID": "slides/micro/dataset.html#変数の尺度",
    "href": "slides/micro/dataset.html#変数の尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の尺度",
    "text": "変数の尺度\n多くの場合、間隔尺度と比率尺度の区別は行わない\n\n離散変数 (Discrete variable)\n\n名目尺度 (Nomial scale)\n順序尺度 (Ordinal scale)\n\n連続変数 (Continuous variable)\n\n間隔尺度 (Interval scale)\n比率尺度 (Ratio scale)"
  },
  {
    "objectID": "slides/micro/dataset.html#名目尺度",
    "href": "slides/micro/dataset.html#名目尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "名目尺度",
    "text": "名目尺度\n「範疇尺度」、「名義尺度」とも\n\n例) 男性は0、女性は1\n例) 北海道 = 1、青森 = 2、…、鹿児島 = 46、沖縄 = 47\n\n数字は各項目を.kenten[識別]するものであり、数字として意味を持たない\n\n沖縄 - 北海道 = 鹿児島?\n男性 = 1、女性 = 0でも問題ない\n\n\nできること\n\n度数 (Frequency): 女性は何人? 大阪出身は何人?\n最頻値 (Mode): 最も多い出身地はどこ?"
  },
  {
    "objectID": "slides/micro/dataset.html#順序尺度",
    "href": "slides/micro/dataset.html#順序尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "順序尺度",
    "text": "順序尺度\n「大小」に関する情報のみを持つ\n\n例) 1位、2位、3位、···\n例)とても幸せ、どちらかといえば幸せ、···、とても不幸\n1位と2位の差 \\(\\neq\\) 2位と3位の差\n幸せの基準は人それぞれ\n\n\nできること\n\n名目尺度でできること\n順位 (Order, Rank): 1 位 &gt; 2 位 &gt; 3 位\n中央値 (Median): 真ん中は何か"
  },
  {
    "objectID": "slides/micro/dataset.html#間隔尺度",
    "href": "slides/micro/dataset.html#間隔尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "間隔尺度",
    "text": "間隔尺度\nわりと少ない尺度\n\n例として「気温」\n「0」の意味はない\n\n0 \\(^\\circ\\)C は「温度がない」ではない\n0 \\(^\\circ\\)C = 32 \\(^\\circ\\)F\n\n掛け算ができない\n\n2 \\(^\\circ\\)Cは1 \\(^\\circ\\)Cより2倍暑い?\n\n\n\nできること\n\n順序尺度でできること\n足し算と引き算\n平均値 (Average): 平均気温\n差の比較: 30度 − 20度 = 10度 − 0度"
  },
  {
    "objectID": "slides/micro/dataset.html#比率尺度",
    "href": "slides/micro/dataset.html#比率尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "比率尺度",
    "text": "比率尺度\n最も一般的な変数\n\n「0」の意味あり\n\n0円=お金がない\n0 Km/s. = 動かない\n\n\n\nできること\n\n間隔尺度でできること\n掛け算と割り算: 1 万円 × 2 = 2 万円"
  },
  {
    "objectID": "slides/micro/dataset.html#尺度の比較",
    "href": "slides/micro/dataset.html#尺度の比較",
    "title": "ミクロ政治データ分析実習",
    "section": "尺度の比較",
    "text": "尺度の比較\n尺度によって使える統計量・手法が異なる\n\n\n\n\n\n名目\n順序\n間隔\n連続\n\n\n\n\n順位（大小関係）\n\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n度数（頻度）\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n最頻値\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n中央値\n\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n平均値\n\n\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n差の比較\n\n\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n足し算と引き算\n\n\n\\(\\bigcirc\\)\n\\(\\bigcirc\\)\n\n\n掛け算と割り算\n\n\n\n\\(\\bigcirc\\)\n\n\n0の有無\n\n\n\n\\(\\bigcirc\\)"
  },
  {
    "objectID": "slides/micro/dataset.html#変数と尺度",
    "href": "slides/micro/dataset.html#変数と尺度",
    "title": "ミクロ政治データ分析実習",
    "section": "変数と尺度",
    "text": "変数と尺度\n\\(\\bigcirc\\bigcirc\\) 尺度で測定された変数 \\(\\rightarrow\\) \\(\\bigcirc\\bigcirc\\) 変数\n\n同じ対象でも用いる尺度は複数あり得る。\n例) 年収\n\n順序: ∼200万円、201万円∼400万円、401万円∼\n比率: 178万円, 308万円, 968万円, 1兆300円, ···\n\n例) 年齢\n\n順序: 20代未満, 20代, 30代, 40代, 50代, 60代以上\n比率: 88歳, 37歳, 11歳, 130歳, ···"
  },
  {
    "objectID": "slides/micro/dataset.html#尺度の変換",
    "href": "slides/micro/dataset.html#尺度の変換",
    "title": "ミクロ政治データ分析実習",
    "section": "尺度の変換",
    "text": "尺度の変換\n情報量の多さは\n\n比率 &gt; 間隔 &gt; 順序 &gt; 名目\n情報量の多い尺度は下位の尺度へ変換が可能\n\n例) 358万円 (比率) \\(\\rightarrow\\) 「300万円以上、400万円未満」 (順序)\n\nその逆は不可能\n例) 「300万円以上、400万円未満」 \\(\\rightarrow\\) 301万? 358万? 399万?"
  },
  {
    "objectID": "slides/micro/dataset.html#データセット構築の手順",
    "href": "slides/micro/dataset.html#データセット構築の手順",
    "title": "ミクロ政治データ分析実習",
    "section": "データセット構築の手順",
    "text": "データセット構築の手順\n\n仮説を立てる。\n\nデータから仮説を立てる方法もあるが、現時点では非推奨\n\n分析単位を明らかにする。\n\n個人? 自治体? 国?\n\n必要な変数を特定する。\n\n入手可能な変数か。\n個人の投票先? 各政党の都道府県別得票率?\n\nとりわけ「個人」が単位のデータ（世論調査データ等）は入手難易度が高い。\n\n\n公開済みのデータが存在するか。\n\nあればダウンロード\nない場合は世論調査の実施 or データセットの構築"
  },
  {
    "objectID": "slides/micro/dataset.html#データセット構築の2つの方法",
    "href": "slides/micro/dataset.html#データセット構築の2つの方法",
    "title": "ミクロ政治データ分析実習",
    "section": "データセット構築の2つの方法",
    "text": "データセット構築の2つの方法\n\n分析単位が国、自治体、選挙区などの場合（集計データ）\n\n既に構築されているデータをダウンロード\n\n非常に稀なケース; 自分の問いに答えるためのピッタリのデータはなかなか存在しない。\n\n自力で構築（政府統計などを結合）\n\n分析単位が個人の場合（個票データ）\n\nデータ・アーカイブから公開されている世論調査データを入手する。\n自分で世論調査を実施する。\n\n非常に高い（金銭的）コストを伴う。"
  },
  {
    "objectID": "slides/micro/dataset.html#集計データ-自力で構築する",
    "href": "slides/micro/dataset.html#集計データ-自力で構築する",
    "title": "ミクロ政治データ分析実習",
    "section": "集計データ: 自力で構築する",
    "text": "集計データ: 自力で構築する\n公開されているデータの計算・結合\n\nほとんどの場合、集計データ（市区町村、都道府県、国、年など）\n多くの場合、無料で入手することが可能\n\n例) 財政力指数と政党得票率\n例) 民主化指標と武力紛争の頻度\n例) 一人当たりたこ焼き消費量と投票率\n\n\n\n\n信頼できる機関のデータを利用すること\n\n政府機関、企業、研究所など「データのミスについて責任の所在が明確な機関」"
  },
  {
    "objectID": "slides/micro/dataset.html#個票データ-公開データの利用",
    "href": "slides/micro/dataset.html#個票データ-公開データの利用",
    "title": "ミクロ政治データ分析実習",
    "section": "個票データ: 公開データの利用",
    "text": "個票データ: 公開データの利用\n\nSSJDA, ICPSR などのデータアーカイブを利用\n一部の大規模調査は専用ホームページで入手\n\nWorld Value Survey\nComparative Study of Electoral Systems\nAmerican National Election Studies\nJapaneses General Social Surveys\n東京大学谷口研究室・朝日新聞社共同調査など\n\n学術論文で使われたデータなら著者がデータを公開する場合も (Harvard Dataverse、著者のHPなど)\nデータの入手先は多岐にわたるため、見つからない場合、指導教員、授業担当教員と相談すること\n\n学部生の場合、指導教員の許可がないとダウンロードできないデータも\nとりわけ、日本のデータは条件が厳しい\n\n参考) 佐藤博樹・池田謙一・石田浩. 2000. 『社会調査の公開データ―2次分析への招待』東京大学出版会."
  },
  {
    "objectID": "slides/micro/dataset.html#個票データ-自力で構築する",
    "href": "slides/micro/dataset.html#個票データ-自力で構築する",
    "title": "ミクロ政治データ分析実習",
    "section": "個票データ: 自力で構築する",
    "text": "個票データ: 自力で構築する\n分析単位が「人」であり、公開されているデータがない場合\n\n世論調査を実施\n一般的に高額（数万〜数百万円）\n世論調査を行う前に社会調査法の知識は必須\n\n調査倫理\n調査設計の方法\nサンプリング\n\nSNSでアンケートを拡散して収集したデータは「日本人の意識」、「若者の行動」と解釈できない。"
  },
  {
    "objectID": "slides/micro/dataset.html#実習内容",
    "href": "slides/micro/dataset.html#実習内容",
    "title": "ミクロ政治データ分析実習",
    "section": "実習内容",
    "text": "実習内容\n\n既に公開されている世論調査データの入手\n\nデータ・アーカイブの利用: SSJDAの例 (https://csrda.iss.u-tokyo.ac.jp/)\n調査の独自HPから入手: 世界価値観調査の例 (https://www.worldvaluessurvey.org/)\n\n\n\n\n政府統計などを入手時、独自のデータセットを構築\n\n2016参院選の自民党・立憲民主党の得票率\n財政力指数\n都道府県別高齢者比率\n都道府県別一次産業従事者比率"
  },
  {
    "objectID": "slides/micro/dataset.html#データアーカイブの利用-ssjdaの例",
    "href": "slides/micro/dataset.html#データアーカイブの利用-ssjdaの例",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・アーカイブの利用: SSJDAの例",
    "text": "データ・アーカイブの利用: SSJDAの例\n仮説: 高校時代に主権者教育を受けた若年層ほど2016年参院選で投票する傾向がある。\n\n分析単位: 個人 (若年層)　\\(\\rightarrow\\)　世論調査データが必要\n必要な変数\n\n高校時代に主権者教育を受けたか否か\n2016年参院選で投票したかどうか\n\n\n手順\n\nSSJDAへアクセス (https://csrda.iss.u-tokyo.ac.jp/)\nキーワードで検索（例: 「若年 選挙」）\n\n明るい選挙推進協会の「新有権者等若年層の参院選投票後の意識調査，2016」など\n\n調査票を確認し、必要な変数が含まれているかを確認\n\nQ9とQ17など\n\n教員（ゼミ教員や授業担当者）と相談する\n\n学部生は教員経由でしか入手できない　\\(\\rightarrow\\)　教員による代理申請\n大学院生は指導教員の事前承認の下で入手可能"
  },
  {
    "objectID": "slides/micro/dataset.html#調査ホームページの利用-wvsの例",
    "href": "slides/micro/dataset.html#調査ホームページの利用-wvsの例",
    "title": "ミクロ政治データ分析実習",
    "section": "調査ホームページの利用: WVSの例",
    "text": "調査ホームページの利用: WVSの例\n仮説: 日本において高学歴、かつ平等より自由を重視するの人ほど民主主義を重視する\n\n分析単位: 個人　\\(\\rightarrow\\)　世論調査データが必要\n必要な変数\n\n学歴、平等と自由のどちらを重視するか\n民主主義の重視程度\n\n\n手順\n\nWVSのHPへアクセス (https://www.worldvaluessurvey.org/)\nData and Documentation　\\(\\rightarrow\\)　Data Download　\\(\\rightarrow\\)　Wave 7 (2017-2020)\nJapan 2019を選択\nQuestionnaire（質問票; 日本語）とCodebook（コードブック; 英語）を確認\n\n質問票: F10a (Q275)、問37 (Q149)、問70 (Q250)\nカッコ内はコードブック上の番号（データの変数名はコードブック基準）\n質問票とコードブックの設問番号は一致しないため注意が必要\n\nExcel形式のデータをダウンロード (WVS Wave 7 Japan Excel v2.0)"
  },
  {
    "objectID": "slides/micro/dataset.html#データ構築の例",
    "href": "slides/micro/dataset.html#データ構築の例",
    "title": "ミクロ政治データ分析実習",
    "section": "データ構築の例",
    "text": "データ構築の例\n仮説: 2023年7月の参院選において財政力指数が低く、高齢者の比率が高い都道府県ほど、投票率が高い\n\n分析単位：都道府県\n必要な変数\n\n都道府県ごとの財政力指数（googleで「財政力指数」）\n都道府県ごとの65歳以上人口比（e-statで「国勢調査」）\n\n\n都道府県ごとの人口、(2) 65歳以上人口が必要\n\n\n都道府県ごとの2023年参院選における投票率（googleで「総務省 選挙結果」）\n\n\n手順\n\n各データの公表先からデータをダウンロード\n必要な変数のみを抜粋\n表計算ソフト (Excel, Numbers, LibreOffice Calc)などを利用し、一つのデータとして統合\n\n必要に応じて計算も行う。"
  },
  {
    "objectID": "slides/micro/dataset.html#完成したデータ",
    "href": "slides/micro/dataset.html#完成したデータ",
    "title": "ミクロ政治データ分析実習",
    "section": "完成したデータ",
    "text": "完成したデータ\n\nDataAnalysis1Analysis2Analysis3\n\n\n\n\n\n\n\n  \n    \n    \n      ID\n      Pref\n      Finance\n      Above65\n      Turnout\n    \n  \n  \n    1\n北海道\n0.44595\n32.26170\n53.97137\n    2\n青森県\n0.34205\n33.69179\n49.48735\n    3\n岩手県\n0.35856\n33.81424\n55.37885\n    4\n宮城県\n0.59731\n28.43901\n48.79890\n    5\n秋田県\n0.31066\n37.60177\n55.55781\n    6\n山形県\n0.36209\n33.98365\n61.85932\n    7\n福島県\n0.52158\n31.82748\n53.39401\n    8\n茨城県\n0.63115\n30.30695\n47.21866\n    9\n栃木県\n0.61976\n29.56807\n46.98227\n    10\n群馬県\n0.61177\n30.88517\n48.49059\n    11\n埼玉県\n0.74351\n27.33047\n50.24647\n    12\n千葉県\n0.75112\n28.02414\n50.00762\n    13\n東京都\n1.07301\n23.29183\n56.54098\n    14\n神奈川県\n0.85330\n25.86952\n54.49929\n    15\n新潟県\n0.45700\n32.97734\n55.30748\n    16\n富山県\n0.46248\n32.92857\n51.36568\n    17\n石川県\n0.49718\n30.17642\n46.40330\n    18\n福井県\n0.40511\n31.06232\n55.31287\n    19\n山梨県\n0.38432\n31.14433\n56.22731\n    20\n長野県\n0.50787\n32.28879\n57.70064\n    21\n岐阜県\n0.53634\n31.11373\n53.58751\n    22\n静岡県\n0.69278\n30.66518\n52.96779\n    23\n愛知県\n0.88545\n25.83282\n52.17229\n    24\n三重県\n0.58573\n30.58887\n52.78095\n    25\n滋賀県\n0.54836\n26.71561\n54.58415\n    26\n京都府\n0.56803\n29.47203\n50.90311\n    27\n大阪府\n0.75219\n27.65828\n52.44176\n    28\n兵庫県\n0.62258\n29.32041\n51.61156\n    29\n奈良県\n0.41700\n31.72145\n55.90187\n    30\n和歌山県\n0.32297\n33.42466\n52.41777\n    31\n鳥取県\n0.27259\n32.47166\n48.92498\n    32\n島根県\n0.25379\n34.66566\n56.36724\n    33\n岡山県\n0.51083\n30.67966\n47.22801\n    34\n広島県\n0.59332\n29.79257\n46.79144\n    35\n山口県\n0.43531\n34.84154\n47.59254\n    36\n徳島県\n0.31217\n34.34980\n45.71976\n    37\n香川県\n0.46068\n32.14574\n49.22103\n    38\n愛媛県\n0.42493\n33.43253\n48.80868\n    39\n高知県\n0.26105\n35.61885\n47.36278\n    40\n福岡県\n0.62808\n28.21122\n48.76012\n    41\n佐賀県\n0.34218\n30.85767\n51.11522\n    42\n長崎県\n0.33484\n33.16014\n48.71595\n    43\n熊本県\n0.40305\n31.66006\n49.12638\n    44\n大分県\n0.37501\n33.53593\n52.98119\n    45\n宮崎県\n0.34168\n32.85051\n47.51680\n    46\n鹿児島県\n0.33756\n32.70230\n48.62981\n    47\n沖縄県\n0.36177\n22.70253\n50.53120\n  \n  \n  \n\n\n\n\n\n\n可視化は第12回講義以降で解説\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n線形回帰分析は後期の「マクロ政治データ分析実習」で解説\n\n\n\nCall:\nlm(formula = Turnout ~ Finance + Above65, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-5.673 -2.663  0.015  2.597 10.376 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  46.0475    10.3292   4.458 5.64e-05 ***\nFinance       2.7695     4.6641   0.594    0.556    \nAbove65       0.1305     0.2718   0.480    0.634    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.673 on 44 degrees of freedom\nMultiple R-squared:  0.007994,  Adjusted R-squared:  -0.0371 \nF-statistic: 0.1773 on 2 and 44 DF,  p-value: 0.8381\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/datatype.html#データ型とは",
    "href": "slides/micro/datatype.html#データ型とは",
    "title": "ミクロ政治データ分析実習",
    "section": "データ型とは",
    "text": "データ型とは\n\nRにおける最小単位であるベクトル（vector）内の要素の種類\n\nベクトルはデータ構造（data structure）の一つ\n\\(\\bigcirc\\bigcirc\\bigcirc\\)型ベクトル呼ぶ。\n\n例) 全ての要素が数値型（numeric型）なら「numeric型ベクトル」\n例) 全ての要素が文字型（character型）なら「character型ベクトル」"
  },
  {
    "objectID": "slides/micro/datatype.html#データ型の種類",
    "href": "slides/micro/datatype.html#データ型の種類",
    "title": "ミクロ政治データ分析実習",
    "section": "データ型の種類",
    "text": "データ型の種類\n以下のデータ型はRが提供しているデータ型の一部（太字は本講義で紹介するデータ型）\n\nLogical\nNumeric\nComplex\nCharacter\nFactor\nDate\nNA\nNULL\nその他"
  },
  {
    "objectID": "slides/micro/datatype.html#データ型の確認",
    "href": "slides/micro/datatype.html#データ型の確認",
    "title": "ミクロ政治データ分析実習",
    "section": "データ型の確認",
    "text": "データ型の確認\nclass()関数を使用\n\nオブジェクトがベクトルの場合はデータ型が出力され、ベクトル以外の場合はデータ構造が出力される。\n\n\nmy_vec1 &lt;- c(2, 3, 5, 7, 11)\nmy_vec2 &lt;- c(\"Ramen\", \"Soba\", \"Udon\")\nmy_vec3 &lt;- c(TRUE, TRUE, FALSE, FALSE)\n\n\n\nclass(my_vec1) # my_vec1のデータ型は?\n\n[1] \"numeric\"\n\nclass(my_vec2) # my_vec2のデータ型は?\n\n[1] \"character\"\n\nclass(my_vec3) # my_vec3のデータ型は?\n\n[1] \"logical\""
  },
  {
    "objectID": "slides/micro/datatype.html#logical型-紹介",
    "href": "slides/micro/datatype.html#logical型-紹介",
    "title": "ミクロ政治データ分析実習",
    "section": "Logical型: 紹介",
    "text": "Logical型: 紹介\n\nTRUEとFALSEのみで構成されるデータ型\n\n論理型とも呼ばれる。\n\n\n\nlogi_vec1 &lt;- (2 + 3) == (2 * 3)\nlogi_vec1\n\n[1] FALSE\n\n\n\n\nlogi_vec1のデータ型の確認\n\n\nclass(logi_vec1)\n\n[1] \"logical\"\n\n\n\n\nあるベクトルがlogical型かどうかはis.logical()で確認可能。\n\n()内のオブジェクトがlogical型ならTRUE、それ以外はFALSEが返ってくる。\n\n\n\nis.logical(logi_vec1)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/micro/datatype.html#logical型-作成",
    "href": "slides/micro/datatype.html#logical型-作成",
    "title": "ミクロ政治データ分析実習",
    "section": "Logical型: 作成",
    "text": "Logical型: 作成\n\n長さ2以上のlogical型ベクトルを作成する場合、c()を使用\n\nTRUEとFALSEは\"で囲んではいけない（character型として認識される）。\n\n\n\nlogi_vec2 &lt;- c(TRUE, FALSE, TRUE, TRUE, FALSE)\n\n\nただし、このように直接logical型ベクトルを作成することは非常に稀であり、通常、論理演算子の計算から得られた結果で作成する。\n\n\nmy_vec4 &lt;- 1:15\nlogi_vec3 &lt;- my_vec4 %% 3 == 0 # my_vec4の要素は3で割り切れるか"
  },
  {
    "objectID": "slides/micro/datatype.html#logical型-活用",
    "href": "slides/micro/datatype.html#logical型-活用",
    "title": "ミクロ政治データ分析実習",
    "section": "Logical型: 活用",
    "text": "Logical型: 活用\n\n何かの条件（=論理演算子）に合致する要素のみを抽出する際に使用\n\n\nmy_vec4[logi_vec3]\n\n[1]  3  6  9 12 15\n\n\n\n\nLogical型ベクトルを作成せず、[]内に直接打ち込んでも良い\n\n\n# my_vec4の要素の中から3で割り切れる要素（=3の倍数）を抽出する。\nmy_vec4[my_vec4 %% 3 == 0]\n\n[1]  3  6  9 12 15"
  },
  {
    "objectID": "slides/micro/datatype.html#numeric型-1",
    "href": "slides/micro/datatype.html#numeric型-1",
    "title": "ミクロ政治データ分析実習",
    "section": "Numeric型",
    "text": "Numeric型\n\n第3回講義を参照"
  },
  {
    "objectID": "slides/micro/datatype.html#character型-紹介作成",
    "href": "slides/micro/datatype.html#character型-紹介作成",
    "title": "ミクロ政治データ分析実習",
    "section": "Character型: 紹介&作成",
    "text": "Character型: 紹介&作成\n\n要素が\"で囲まれているデータ型\n\n文字型とも呼ばれる。\n長さ2以上のcharacter型のベクトル作成はc()を使用\n\n\n\nchar_vec1 &lt;- c(\"Kansai\", \"Kwansei-gakuin\", \"Doshisha\", \"Ritsumeikan\")\nchar_vec1\n\n[1] \"Kansai\"         \"Kwansei-gakuin\" \"Doshisha\"       \"Ritsumeikan\"   \n\n\n\n\nchar_vec1のデータ型の確認\n\n\nclass(char_vec1)\n\n[1] \"character\"\n\n\n\n\nあるベクトルがcharacter型かどうかはis.character()で確認可能。\n\n()内のオブジェクトがlogical型ならTRUE、それ以外はFALSEが返ってくる。\n\n\n\nis.character(char_vec1)\n\n[1] TRUE"
  },
  {
    "objectID": "slides/micro/datatype.html#character型-活用",
    "href": "slides/micro/datatype.html#character型-活用",
    "title": "ミクロ政治データ分析実習",
    "section": "Character型: 活用",
    "text": "Character型: 活用\n\n文字列の長さ\n\nlength(): ベクトルの長さ\nnchar(): 各要素の文字数\n\n\n\nlength(char_vec1) # char_vec1の長さ\n\n[1] 4\n\nnchar(char_vec1)  # char_vec1の各要素の文字数\n\n[1]  6 14  8 11\n\n\n\npaste(): 文字列の結合\n\npaste0()にすると、結合時、スペースが入らない。\n\n\n\n# 各要素の後にUniversityを付ける（スペースあり）\nchar_vec2 &lt;- paste(char_vec1, \"Univeristy\")\nchar_vec2\n\n[1] \"Kansai Univeristy\"         \"Kwansei-gakuin Univeristy\"\n[3] \"Doshisha Univeristy\"       \"Ritsumeikan Univeristy\""
  },
  {
    "objectID": "slides/micro/datatype.html#factor型-1",
    "href": "slides/micro/datatype.html#factor型-1",
    "title": "ミクロ政治データ分析実習",
    "section": "Factor型",
    "text": "Factor型\n\n順序付き文字型\n\n主に図表を作成する際に使用する。\n\n\n\nデータ行のソート可視化\n\n\n列名の下が&lt;chr&gt;ならcharacter型、&lt;fct&gt;ならfactor型\n\n\n大学名がcharacter型の場合\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;chr&gt;           &lt;dbl&gt;\n1 Ritsumeikan     32467\n2 Kwansei-gakuin  23671\n3 Kansai          27736\n4 Doshisha        25974\n\n\n\n\n\n大学名がfactor型の場合\n\n順番は関西-関学-同志社-立命館\n\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;fct&gt;           &lt;dbl&gt;\n1 Ritsumeikan     32467\n2 Kwansei-gakuin  23671\n3 Kansai          27736\n4 Doshisha        25974\n\n\n\n\n\n\n行のソートについてはデータ・ハンドリングの講義にて解説\n\n\n大学名がcharacter型の場合\n\nアルファベット順になる。\n\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;chr&gt;           &lt;dbl&gt;\n1 Doshisha        25974\n2 Kansai          27736\n3 Kwansei-gakuin  23671\n4 Ritsumeikan     32467\n\n\n\n\n\n大学名がfactor型の場合\n\n予め指定した順番で表示される。\n\n\n\n# A tibble: 4 × 2\n  大学名         学生数\n  &lt;fct&gt;           &lt;dbl&gt;\n1 Kansai          27736\n2 Kwansei-gakuin  23671\n3 Doshisha        25974\n4 Ritsumeikan     32467\n\n\n\n\n\n\n作図については可視化の講義にて解説\n\n\n大学名がcharacter型の場合\n\nアルファベット順になる。\n\n\n\n\n\n\n\n\n\n\n\n\n\n大学名がfactor型の場合\n\n予め指定した順番で表示される。"
  },
  {
    "objectID": "slides/micro/datatype.html#factor型-作成-1",
    "href": "slides/micro/datatype.html#factor型-作成-1",
    "title": "ミクロ政治データ分析実習",
    "section": "Factor型: 作成 (1)",
    "text": "Factor型: 作成 (1)\n\nCharacter型からfactor型へ\n\n\nchar_vec3 &lt;- c(\"Ritsumeikan\", \"Kwansei-gakuin\", \"Kansai\", \"Doshisha\")\nchar_vec3\n\n[1] \"Ritsumeikan\"    \"Kwansei-gakuin\" \"Kansai\"         \"Doshisha\"      \n\nclass(char_vec3)\n\n[1] \"character\"\n\n\n\n要素をソートしてみると、アルファベット順になる。\n\nsort()関数を使用\n\n\n\nsort(char_vec3)\n\n[1] \"Doshisha\"       \"Kansai\"         \"Kwansei-gakuin\" \"Ritsumeikan\""
  },
  {
    "objectID": "slides/micro/datatype.html#factor型-作成-2",
    "href": "slides/micro/datatype.html#factor型-作成-2",
    "title": "ミクロ政治データ分析実習",
    "section": "Factor型: 作成 (2)",
    "text": "Factor型: 作成 (2)\n\nfactor()関数でfactor化\n\nlevels引数に順番を指定すること\nfactor型ベクトルを出力すると水準 (level)の順番も下に表示される。\n\n\n\nfct_vec1 &lt;- factor(char_vec3, \n                   levels = c(\"Kansai\", \"Kwansei-gakuin\", \"Doshisha\", \"Ritsumeikan\"))\nfct_vec1\n\n[1] Ritsumeikan    Kwansei-gakuin Kansai         Doshisha      \nLevels: Kansai Kwansei-gakuin Doshisha Ritsumeikan\n\nclass(fct_vec1)\n\n[1] \"factor\"\n\n\n\n要素をソートしてみると、予め指定した順番になる。\n\n\nsort(fct_vec1)\n\n[1] Kansai         Kwansei-gakuin Doshisha       Ritsumeikan   \nLevels: Kansai Kwansei-gakuin Doshisha Ritsumeikan"
  },
  {
    "objectID": "slides/micro/datatype.html#factor型-作成-3",
    "href": "slides/micro/datatype.html#factor型-作成-3",
    "title": "ミクロ政治データ分析実習",
    "section": "Factor型: 作成 (3)",
    "text": "Factor型: 作成 (3)\n\nNumeric型変数のFactor化\n\nfactor()内にlevelsとlabelsを両方指定する（Charactrer型のfactor化はlevelsのみで十分）。\n多くのデータはサイズを小さくするために、文字列より数値を使用する。\nたとえば、「北海道」は「1」、「青森県」は「2」、…、「沖縄県」は「47」のように\n\n例）男性は1、女性が2の場合、各値にラベルを付け、順番を女性、男性にする場合\n\n\ngender_vec &lt;- c(2, 2, 1, 2, 1, 1, 1, 1, 2)\ngender_vec\n\n[1] 2 2 1 2 1 1 1 1 2\n\ngender_fct &lt;- factor(gender_vec, levels = c(2, 1), labels = c(\"女性\", \"男性\"))\ngender_fct\n\n[1] 女性 女性 男性 女性 男性 男性 男性 男性 女性\nLevels: 女性 男性"
  },
  {
    "objectID": "slides/micro/datatype.html#factor型-活用",
    "href": "slides/micro/datatype.html#factor型-活用",
    "title": "ミクロ政治データ分析実習",
    "section": "Factor型: 活用",
    "text": "Factor型: 活用\n\n詳細はデータハンドリング、および可視化の講義で説明"
  },
  {
    "objectID": "slides/micro/datatype.html#欠損値-1",
    "href": "slides/micro/datatype.html#欠損値-1",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値",
    "text": "欠損値\n\n欠損値（missing value）\n\n何らかの値があるはずであるものの、観察されていない値である。\n例) 人間開発指数（Human Development Index; HDI）」では世界各国のデータが含まれているものの、台湾や北朝鮮のデータは含まれていない。これらの国（地域）に人間開発という概念がないわけではなく、なんらかの理由（今回は政治的な理由）で値が欠損しているだけ\n\n\n\n\n欠損値以外に計算上、何らかの問題を生じさせ得る値\n\n\n\n\n値\n意味\n例\n\n\n\n\nNA\n何らかの値があるはずだが、欠損している状態\n\n\n\nNULL\nそもそも存在しない\n\n\n\nNaN\n計算不可\n0 / 0\n\n\nInf\n無限大\n10 / 0"
  },
  {
    "objectID": "slides/micro/datatype.html#naとnull-1",
    "href": "slides/micro/datatype.html#naとnull-1",
    "title": "ミクロ政治データ分析実習",
    "section": "NAとNULL (1)",
    "text": "NAとNULL (1)\n\nVec1 &lt;- c(1, 2, 3, 5, 7, 11, 13)\nVec2 &lt;- c(1, NA, 3, 5, NA, NA, 13)\nVec3 &lt;- c(1, NULL, 3, 5, NULL, NULL, 13)\n\n\n\nVec1\n\n[1]  1  2  3  5  7 11 13\n\nVec2\n\n[1]  1 NA  3  5 NA NA 13\n\nVec3\n\n[1]  1  3  5 13\n\n\n\nlength(Vec1)\n\n[1] 7\n\nlength(Vec2)\n\n[1] 7\n\nlength(Vec3)\n\n[1] 4"
  },
  {
    "objectID": "slides/micro/datatype.html#naとnull-2",
    "href": "slides/micro/datatype.html#naとnull-2",
    "title": "ミクロ政治データ分析実習",
    "section": "NAとNULL (2)",
    "text": "NAとNULL (2)\n初心者レベルでNULLを使うことはないが、中級以上からは（そこそこ）使う機会がある。"
  },
  {
    "objectID": "slides/micro/datatype.html#欠損値が含まれたベクトルの動き",
    "href": "slides/micro/datatype.html#欠損値が含まれたベクトルの動き",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値が含まれたベクトルの動き",
    "text": "欠損値が含まれたベクトルの動き\n\nmean()関数でVec2の平均値を計算してみよう。\n\n\nmean(Vec2)\n\n[1] NA\n\n\n\nコンソール上で?meanを入力し、mean()関数の詳細について調べてみると、mean()関数で使用可能な引数の一覧が表示される。\n\nna.rm    a logical value indicating whether NA values should be stripped before \n         the computation proceeds.\n\n意味: 「na.rmはlogical型の値であり、計算の前に欠損値（NA）を除去するか否かを示す引数である。」\n\n\n\nmean(Vec2, na.rm = TRUE)\n\n[1] 5.5\n\n\n\nこのように一部の関数では欠損値が含まれているオブジェクトの計算ができないため、おかしいと思ったらヘルプを読んでみること。"
  },
  {
    "objectID": "slides/micro/datatype.html#共通-要素の追加",
    "href": "slides/micro/datatype.html#共通-要素の追加",
    "title": "ミクロ政治データ分析実習",
    "section": "共通: 要素の追加",
    "text": "共通: 要素の追加\n\nmy_vec5 &lt;- c(4, 3, 2, 1)\nmy_vec5\n\n[1] 4 3 2 1\n\n\n\nmy_vec5の5番目の要素として、0を追加\n\n\nmy_vec5[5] &lt;- 0\nmy_vec5\n\n[1] 4 3 2 1 0\n\n\n\nmy_vec5の6、7、8番目の要素として、-1、-2、-3を追加\n\n\n# 6:8の代わりにc(6, 7, 8)もOK\nmy_vec5[6:8] &lt;- c(-1, -2, -3)\nmy_vec5\n\n[1]  4  3  2  1  0 -1 -2 -3\n\n\n\nmy_vec5の11番目に10を入れたら?\n\n\nmy_vec5[11] &lt;- 10\nmy_vec5\n\n [1]  4  3  2  1  0 -1 -2 -3 NA NA 10"
  },
  {
    "objectID": "slides/micro/datatype.html#共通-要素の置換",
    "href": "slides/micro/datatype.html#共通-要素の置換",
    "title": "ミクロ政治データ分析実習",
    "section": "共通: 要素の置換",
    "text": "共通: 要素の置換\n\n要素の追加と方法は同じ\n\n\nmy_vec5[11] &lt;- -6\nmy_vec5\n\n [1]  4  3  2  1  0 -1 -2 -3 NA NA -6\n\n\n\n複数の要素を置換する場合\n\n\nmy_vec5[9:10] &lt;- c(-4, -5)\nmy_vec5\n\n [1]  4  3  2  1  0 -1 -2 -3 -4 -5 -6\n\n\n\nmy_vec5の要素の中から0より小さい要素に-1を掛けて置換する。\n\n\nmy_vec5[my_vec5 &lt; 0] &lt;- my_vec5[my_vec5 &lt; 0] * -1\nmy_vec5\n\n [1] 4 3 2 1 0 1 2 3 4 5 6\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/handling2.html#授業開始前に",
    "href": "slides/micro/handling2.html#授業開始前に",
    "title": "ミクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\n\n先週と同じデータです。\n\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプトファイル、またはQuartoファイルを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\n\n# countries.csvのアップロード先に応じて、パスを適宜修正すること\ndf &lt;- read_csv(\"Data/countries.csv\")\n\n\nトラブルが生じた場合、速やかにTAを呼んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/micro/handling2.html#目標",
    "href": "slides/micro/handling2.html#目標",
    "title": "ミクロ政治データ分析実習",
    "section": "目標",
    "text": "目標\n\n変数の記述統計量を計算する\n\n記述統計量: 平均値、中央値、標準偏差、分散、ケース数など\n\nグループごとに記述統計量を計算する\n\n例) 大陸ごとに政治的権利（FH_PR）と市民的自由（FH_CL）の平均値を計算する\n\n\n# A tibble: 5 × 3\n  Continent Politial_Right Civil_Liberty\n  &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;\n1 Africa              15.8          25.8\n2 America             29.4          42.6\n3 Asia                14.7          24.2\n4 Europe              31.9          47.6\n5 Oceania             31.8          47.2"
  },
  {
    "objectID": "slides/micro/handling2.html#記述統計量",
    "href": "slides/micro/handling2.html#記述統計量",
    "title": "ミクロ政治データ分析実習",
    "section": "記述統計量",
    "text": "記述統計量\n変数が持つ情報を要約した数値\n\n詳細は後期の「マクロ政治データ分析実習」で\n\n元の情報:\n\nMathScore &lt;- c(82, 45, 69, 94, 88, 73, NA, 51, 90, 63)\n\n\n\nMathScoreを代表する値\n\n# 平均値\nmean(MathScore, na.rm = TRUE) \n\n[1] 72.77778\n\n# 中央値\nmedian(MathScore, na.rm = TRUE)\n\n[1] 73\n\n\n\n\n\nMathScoreのばらつきの具合\n\n# 不偏分散\nvar(MathScore, na.rm = TRUE)\n\n[1] 302.4444\n\n# 不偏標準偏差\nsd(MathScore, na.rm = TRUE)\n\n[1] 17.39093\n\n# 四分位範囲\nIQR(MathScore, na.rm = TRUE)\n\n[1] 25"
  },
  {
    "objectID": "slides/micro/handling2.html#summariseの使い方",
    "href": "slides/micro/handling2.html#summariseの使い方",
    "title": "ミクロ政治データ分析実習",
    "section": "summarise()の使い方",
    "text": "summarise()の使い方\nsummarise(): 記述統計量を計算する{dplyr}の関数\nデータフレーム |&gt;\n  summarise(記述統計の関数(変数名, ...))\n記述統計の関数の例\n\nmean(): 平均値\nmedian(): 中央値\nsd(): 不偏分散の平方根（一般的に「標準偏差」と呼ばれるもの）\nvar(): 不偏分散\nIQR(): 四分位範囲\nmin()、max(): 最小値と最大値\nn(): ケース数（引数不要）\nその他（教科書第14.1.2章）"
  },
  {
    "objectID": "slides/micro/handling2.html#記述統計量の計算1",
    "href": "slides/micro/handling2.html#記述統計量の計算1",
    "title": "ミクロ政治データ分析実習",
    "section": "記述統計量の計算（1）",
    "text": "記述統計量の計算（1）\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\") # 第9回の実習用データ\n\n例) dfのPopulationとAreaの平均値（mean()）を計算\n\ndf |&gt;\n  summarise(mean(Population),\n            mean(Area))\n\n# A tibble: 1 × 2\n  `mean(Population)` `mean(Area)`\n               &lt;dbl&gt;        &lt;dbl&gt;\n1          41737773.      696069."
  },
  {
    "objectID": "slides/micro/handling2.html#記述統計量の計算2",
    "href": "slides/micro/handling2.html#記述統計量の計算2",
    "title": "ミクロ政治データ分析実習",
    "section": "記述統計量の計算（2）",
    "text": "記述統計量の計算（2）\nsummarise()内に異なる関数を使うことも可能\n例) dfのPopulationとAreaの平均値（mean()）と標準偏差（sd()）を計算\n\ndf |&gt;\n  summarise(mean(Population),\n            sd(Population),\n            mean(Area),\n            sd(Area))\n\n# A tibble: 1 × 4\n  `mean(Population)` `sd(Population)` `mean(Area)` `sd(Area)`\n               &lt;dbl&gt;            &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1          41737773.       151270298.      696069.   1872412."
  },
  {
    "objectID": "slides/micro/handling2.html#出力された結果をより見やすく",
    "href": "slides/micro/handling2.html#出力された結果をより見やすく",
    "title": "ミクロ政治データ分析実習",
    "section": "出力された結果をより見やすく",
    "text": "出力された結果をより見やすく\nsummarise()内に出力される結果の列名 = 関数()を指定\n例) dfのPopulationとAreaの平均値（mean()）と標準偏差（sd()）を計算し、結果の列名をMean_Pop、SD_Popなどとする\n\nPop_Area_df &lt;- df |&gt;\n  summarise(Mean_Pop  = mean(Population),\n            SD_Pop    = sd(Population),\n            Mean_Area = mean(Area),\n            SD_Area   = sd(Area))\nPop_Area_df\n\n# A tibble: 1 × 4\n   Mean_Pop     SD_Pop Mean_Area  SD_Area\n      &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 41737773. 151270298.   696069. 1872412."
  },
  {
    "objectID": "slides/micro/handling2.html#グループごとの記述統計量",
    "href": "slides/micro/handling2.html#グループごとの記述統計量",
    "title": "ミクロ政治データ分析実習",
    "section": "グループごとの記述統計量",
    "text": "グループごとの記述統計量\n{dplyr}のgroup_by()を使用\n\nデータフレーム名 |&gt;\n  group_by(グループ化する変数名) |&gt;\n  summarise(...)\n\n例) dfのContinentでデータをグループ化し、PPP_per_capitaの平均値を計算\n\n# PPP_per_capitaが欠損している国もあるので、na.rm = TRUEを追加\ndf |&gt;\n  group_by(Continent) |&gt;\n  summarise(Mean_PPP = mean(PPP_per_capita, na.rm = TRUE))\n\n# A tibble: 5 × 2\n  Continent Mean_PPP\n  &lt;chr&gt;        &lt;dbl&gt;\n1 Africa       5667.\n2 America     18100.\n3 Asia        22728.\n4 Europe      37783.\n5 Oceania     27573.\n\n\n\n\ngroup_by()を使わず、summarise()の内部に.by = グルーピングする変数名のような書き方でも良い（{dplyr} 1.1.0から）"
  },
  {
    "objectID": "slides/micro/handling2.html#複数の変数でグルーピング",
    "href": "slides/micro/handling2.html#複数の変数でグルーピング",
    "title": "ミクロ政治データ分析実習",
    "section": "複数の変数でグルーピング",
    "text": "複数の変数でグルーピング\n例) dfのContinentとG20でデータをグループ化し、HDI_2018の平均値を計算\n\ndf |&gt;\n  group_by(Continent, G20) |&gt;\n  summarise(Mean_HDI = mean(HDI_2018, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Continent'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 × 3\n# Groups:   Continent [5]\n   Continent   G20 Mean_HDI\n   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 Africa        0    0.550\n 2 Africa        1    0.705\n 3 America       0    0.727\n 4 America       1    0.84 \n 5 Asia          0    0.710\n 6 Asia          1    0.798\n 7 Europe        0    0.859\n 8 Europe        1    0.877\n 9 Oceania       0    0.729\n10 Oceania       1    0.938"
  },
  {
    "objectID": "slides/micro/handling2.html#グルービング後のsummarise",
    "href": "slides/micro/handling2.html#グルービング後のsummarise",
    "title": "ミクロ政治データ分析実習",
    "section": "グルービング後のsummarise()",
    "text": "グルービング後のsummarise()\n謎のメッセージが出力される\n## `summarise()` has grouped output by 'Continent'. You can override using \nthe `.groups` argument.\nとりあえず、group_by()の後にsummarise()を使う場合、summarise()の最後に.groups = \"drop\"を追加する。\n\n理由は割愛するが、詳細は教科書第14.2章を参照\n多くの場合、メッセージが出力されるだけで、問題が生じることはあまりない。\nしかし、複数の変数でグルーピングしたり、記述統計量が複数計算される関数（quantile()など）を使う場合、問題が生じる可能性あり\n\n特にsummarise()の後に更にパイプ（|&gt;）を使って計算を続ける場合\n\nとりあえず、.groups = \"drop\"をしておけば安全\nsummarise()の代わりにreframe()を使えば.groups = \"drop\"は不要（{dplyr} 1.1.0から）"
  },
  {
    "objectID": "slides/micro/handling2.html#groups-dropを追加する",
    "href": "slides/micro/handling2.html#groups-dropを追加する",
    "title": "ミクロ政治データ分析実習",
    "section": ".groups = \"drop\"を追加する",
    "text": ".groups = \"drop\"を追加する\n謎のメッセージが出力されなくなる\n\ndf |&gt;\n  group_by(Continent, G20) |&gt;\n  summarise(Mean_HDI = mean(HDI_2018, na.rm = TRUE),\n            .groups  = \"drop\")\n\n# A tibble: 10 × 3\n   Continent   G20 Mean_HDI\n   &lt;chr&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 Africa        0    0.550\n 2 Africa        1    0.705\n 3 America       0    0.727\n 4 America       1    0.84 \n 5 Asia          0    0.710\n 6 Asia          1    0.798\n 7 Europe        0    0.859\n 8 Europe        1    0.877\n 9 Oceania       0    0.729\n10 Oceania       1    0.938"
  },
  {
    "objectID": "slides/micro/handling2.html#便利な関数-グループごとのケース数を計算",
    "href": "slides/micro/handling2.html#便利な関数-グループごとのケース数を計算",
    "title": "ミクロ政治データ分析実習",
    "section": "便利な関数) グループごとのケース数を計算",
    "text": "便利な関数) グループごとのケース数を計算\nsummarise()の中にn()を使用\n\ndf |&gt;\n  group_by(Continent) |&gt;\n  summarise(Mean_PPP = mean(PPP_per_capita, na.rm = TRUE),\n            SD_PPP   = sd(PPP_per_capita, na.rm = TRUE),\n            Cases    = n())\n\n# A tibble: 5 × 4\n  Continent Mean_PPP SD_PPP Cases\n  &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt; &lt;int&gt;\n1 Africa       5667.  6015.    54\n2 America     18100. 12601.    36\n3 Asia        22728. 24067.    42\n4 Europe      37783. 21276.    50\n5 Oceania     27573. 21984.     4"
  },
  {
    "objectID": "slides/micro/handling2.html#おまけ-効率的な方法",
    "href": "slides/micro/handling2.html#おまけ-効率的な方法",
    "title": "ミクロ政治データ分析実習",
    "section": "おまけ: 効率的な方法",
    "text": "おまけ: 効率的な方法\nacross()関数を利用: 詳細は教科書第14.1章を参照\n例) dfのPopulationからPPP列まで平均値と標準偏差を計算し、結果の変数名は元の変数名_Mean、元の変数名_SDとする\n\ndf |&gt;\n  summarise(across(Population:PPP,\n                   .fns = list(Mean = ~mean(.x, na.rm = TRUE),\n                               SD   = ~mean(.x, na.rm = TRUE))))\n\n# A tibble: 1 × 8\n  Population_Mean Population_SD Area_Mean Area_SD GDP_Mean  GDP_SD PPP_Mean\n            &lt;dbl&gt;         &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1       41737773.     41737773.   696069. 696069.  473031. 473031.  717953.\n# ℹ 1 more variable: PPP_SD &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/handling2.html#変数の計算-1",
    "href": "slides/micro/handling2.html#変数の計算-1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の計算",
    "text": "変数の計算\nmutate(): データフレームの変数を用いた計算を行い、新しい列として追加\n\n新しい列名として既存の列名を指定すると上書きされる\n新しく追加された列は最後に位置する（指定可能）\n\n\nデータフレーム名 |&gt;\n  mutate(新しい列名 = 計算式)\n\n例) dfのPopulationをAreaで割り（=人口密度）、Densityという名の列として追加する\n\n\n{dplyr}を使わない方法\n\ndf$Density &lt;- df$Population / df$Area\n\n\n\n\n{dplyr}を使う方法\n\ndf |&gt;\n  mutate(Density = Population / Area)"
  },
  {
    "objectID": "slides/micro/handling2.html#dplyrの例",
    "href": "slides/micro/handling2.html#dplyrの例",
    "title": "ミクロ政治データ分析実習",
    "section": "{dplyr}の例",
    "text": "{dplyr}の例\n例) dfのPopulationをAreaで割り（人口密度）、Densityという名の列として追加する\n\n新しく追加された列は最後に位置する\n\nただし、上書きの場合、位置はそのまま\n\n\n\ndf |&gt;\n  mutate(Density = Population / Area) |&gt;\n  print(n = 5) # 最初の5行のみ出力\n\n# A tibble: 186 × 19\n  Country   Population   Area    GDP     PPP GDP_per_capita PPP_per_capita    G7\n  &lt;chr&gt;          &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt; &lt;dbl&gt;\n1 Afghanis…   38928346 6.53e5 1.91e4  82737.           491.          2125.     0\n2 Albania      2877797 2.74e4 1.53e4  39658.          5309.         13781.     0\n3 Algeria     43851044 2.38e6 1.70e5 496572.          3876.         11324.     0\n4 Andorra        77265 4.7 e2 3.15e3     NA          40821.            NA      0\n5 Angola      32866272 1.25e6 9.46e4 218533.          2879.          6649.     0\n# ℹ 181 more rows\n# ℹ 11 more variables: G20 &lt;dbl&gt;, OECD &lt;dbl&gt;, HDI_2018 &lt;dbl&gt;,\n#   Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;, FH_CL &lt;dbl&gt;,\n#   FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;, Density &lt;dbl&gt;"
  },
  {
    "objectID": "slides/micro/handling2.html#新しい列の位置指定",
    "href": "slides/micro/handling2.html#新しい列の位置指定",
    "title": "ミクロ政治データ分析実習",
    "section": "新しい列の位置指定",
    "text": "新しい列の位置指定\nmutate()内に.after、または.beforeを指定\n\nrelocate()関数と同じ仕組み（第9回）\n\n例) PopulationをAreaで割り、Densityという名の新しい列Areaの後に追加する。\n\ndf |&gt;\n  mutate(Density = Population / Area, \n         .after  = Area)\n\n# A tibble: 186 × 19\n   Country             Population    Area Density     GDP     PPP GDP_per_capita\n   &lt;chr&gt;                    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 Afghanistan           38928346  652860   59.6   1.91e4  8.27e4           491.\n 2 Albania                2877797   27400  105.    1.53e4  3.97e4          5309.\n 3 Algeria               43851044 2381740   18.4   1.70e5  4.97e5          3876.\n 4 Andorra                  77265     470  164.    3.15e3 NA              40821.\n 5 Angola                32866272 1246700   26.4   9.46e4  2.19e5          2879.\n 6 Antigua and Barbuda      97929     440  223.    1.73e3  2.08e3         17643.\n 7 Argentina             45195774 2736690   16.5   4.50e5  1.04e6          9949.\n 8 Armenia                2963243   28470  104.    1.37e4  3.84e4          4614.\n 9 Australia             25499884 7682300    3.32  1.39e6  1.28e6         54615.\n10 Austria                9006398   82409  109.    4.46e5  5.03e5         49555.\n# ℹ 176 more rows\n# ℹ 12 more variables: PPP_per_capita &lt;dbl&gt;, G7 &lt;dbl&gt;, G20 &lt;dbl&gt;, OECD &lt;dbl&gt;,\n#   HDI_2018 &lt;dbl&gt;, Polity_Score &lt;dbl&gt;, Polity_Type &lt;chr&gt;, FH_PR &lt;dbl&gt;,\n#   FH_CL &lt;dbl&gt;, FH_Total &lt;dbl&gt;, FH_Status &lt;chr&gt;, Continent &lt;chr&gt;"
  },
  {
    "objectID": "slides/micro/handling2.html#変数の計算いろいろ1",
    "href": "slides/micro/handling2.html#変数の計算いろいろ1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の計算いろいろ（1）",
    "text": "変数の計算いろいろ（1）\n各国が世界人口に占める割合を計算し、降順で出力\n\ndfのPopulationの合計をTotal_Popという列として追加する。\nPopulationをTotal_Popで割り、100を掛ける。結果はShare_Popという名の列としてPopulation後に追加する。\nCountryからShare_Popまでの列のみ残す。\nTotal_Pop列を除外する。\nShare_Popが大きい順で行を並び替える"
  },
  {
    "objectID": "slides/micro/handling2.html#変数の計算いろいろ1-1",
    "href": "slides/micro/handling2.html#変数の計算いろいろ1-1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の計算いろいろ（1）",
    "text": "変数の計算いろいろ（1）\n\ndf |&gt; \n  # Total_Popを作らずにShare_Pop作成時に直接sum(Population)を入れてもOK\n  mutate(Total_Pop = sum(Population),\n         Share_Pop = Population / Total_Pop * 100,\n         .after    = Population) |&gt;\n  select(Country:Share_Pop) |&gt;\n  select(!Total_Pop) |&gt;\n  arrange(desc(Share_Pop))\n\n# A tibble: 186 × 3\n   Country       Population Share_Pop\n   &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;\n 1 China         1447470092     18.6 \n 2 India         1380004385     17.8 \n 3 United States  334308644      4.31\n 4 Indonesia      273523615      3.52\n 5 Pakistan       220892340      2.85\n 6 Brazil         212559417      2.74\n 7 Nigeria        206139589      2.66\n 8 Bangladesh     164689383      2.12\n 9 Russia         145934462      1.88\n10 Mexico         128932753      1.66\n# ℹ 176 more rows"
  },
  {
    "objectID": "slides/micro/handling2.html#変数の計算いろいろ2",
    "href": "slides/micro/handling2.html#変数の計算いろいろ2",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の計算いろいろ（2）",
    "text": "変数の計算いろいろ（2）\nG7、G20、OECDのいずれかに加盟している国を「先進国」、それ以外は「その他」とし、二つのグループの人口密度、人間開発指数、民主主義度の平均値を出力する。\n\ndfを利用する\nDevelopedという列を追加し、G7、G20、OECDのいずれかに加盟した国なら\"先進国\"、それ以外なら\"その他\"とする。\n人口密度をDensityという名の列として追加する。\nHDI_2018とPolity_Scoreのいずれかが欠損した行を除外する。\nDeveloped変数でデータをグルーピングする。\nHDI_2018、Polity_Score、Densityの平均値を求める。\ndf2という名前のオブジェクトとして作業環境内に格納する。"
  },
  {
    "objectID": "slides/micro/handling2.html#変数の計算いろいろ2-1",
    "href": "slides/micro/handling2.html#変数の計算いろいろ2-1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数の計算いろいろ（2）",
    "text": "変数の計算いろいろ（2）\n\ndf2 &lt;- df |&gt;\n  mutate(Developed = G7 + G20 + OECD,\n         Developed = if_else(Developed &gt; 1, \"先進国\", \"その他\"), # 上書き\n         Density   = Population / Area) |&gt;\n  filter(!is.na(HDI_2018), !is.na(Polity_Score)) |&gt;\n  group_by(Developed) |&gt;\n  summarise(Density = mean(Density),\n            HDI     = mean(HDI_2018),\n            Polity  = mean(Polity_Score))\n\ndf2\n\n# A tibble: 2 × 4\n  Developed Density   HDI Polity\n  &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 その他       197. 0.695   3.92\n2 先進国       174. 0.892   7.91"
  },
  {
    "objectID": "slides/micro/handling2.html#summariseの結果を並び替えたい",
    "href": "slides/micro/handling2.html#summariseの結果を並び替えたい",
    "title": "ミクロ政治データ分析実習",
    "section": "summarise()の結果を並び替えたい",
    "text": "summarise()の結果を並び替えたい\ndf2を\"先進国\" &gt; \"その他\"の順番で表示させたい。\n\nsummarise()を行う場合、グルーピング変数のアルファベット順で表示される。\nただし、日本語の場合、50音順にはならない。\n\nひらがな、カタカナなら50音順になるが、漢字は \\(\\times\\)\n\nしたがって、summarise()の前にグルーピング変数をFactor型に変換する必要がある。\n\nFactor型: 順序付きの文字型"
  },
  {
    "objectID": "slides/micro/handling2.html#developedをfactor型に",
    "href": "slides/micro/handling2.html#developedをfactor型に",
    "title": "ミクロ政治データ分析実習",
    "section": "DevelopedをFactor型に",
    "text": "DevelopedをFactor型に\n\ndf |&gt;\n  mutate(Developed = G7 + G20 + OECD,\n         Developed = if_else(Developed &gt; 1, \"先進国\", \"その他\"),\n         Developed = factor(Developed, levels = c(\"先進国\", \"その他\")),\n         Density   = Population / Area) |&gt;\n  filter(!is.na(HDI_2018), !is.na(Polity_Score)) |&gt;\n  group_by(Developed) |&gt;\n  summarise(Density = mean(Density),\n            HDI     = mean(HDI_2018),\n            Polity  = mean(Polity_Score))\n\n# A tibble: 2 × 4\n  Developed Density   HDI Polity\n  &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 先進国       174. 0.892   7.91\n2 その他       197. 0.695   3.92"
  },
  {
    "objectID": "slides/micro/handling2.html#変数のリコーディング-2値の例",
    "href": "slides/micro/handling2.html#変数のリコーディング-2値の例",
    "title": "ミクロ政治データ分析実習",
    "section": "変数のリコーディング: 2値の例",
    "text": "変数のリコーディング: 2値の例\nmutate()内にif_else()を使用（または、ifelse()）\n\ndfのOECDが1なら\"OECD加盟国\"、それ以外なら\"OECD非加盟国\"に変換し、OECD_Jという列として追加\n\n\ndf |&gt;\n  mutate(OECD_J = if_else(OECD == 1, \"OECD加盟国\", \"OECD非加盟国\"))\n\n例) 変換前\n\ndf |&gt;\n  group_by(OECD) |&gt;\n  summarise(PPP = mean(PPP_per_capita, na.rm = TRUE),\n            HDI = mean(HDI_2018, na.rm = TRUE),\n            FH  = mean(FH_Total, na.rm = TRUE))\n\n# A tibble: 2 × 4\n   OECD    PPP   HDI    FH\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0 14229. 0.667  49.9\n2     1 46000. 0.894  89.1"
  },
  {
    "objectID": "slides/micro/handling2.html#変数のリコーディング-2値の例-1",
    "href": "slides/micro/handling2.html#変数のリコーディング-2値の例-1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数のリコーディング: 2値の例",
    "text": "変数のリコーディング: 2値の例\n例) 変換後\n\ndf |&gt;\n  mutate(OECD_J = if_else(OECD == 1, \"OECD加盟国\", \"OECD非加盟国\")) |&gt;\n  group_by(OECD = OECD_J) |&gt; # 「=」で列名の変更が可能\n  summarise(PPP = mean(PPP_per_capita, na.rm = TRUE),\n            HDI = mean(HDI_2018, na.rm = TRUE),\n            FH  = mean(FH_Total, na.rm = TRUE))\n\n# A tibble: 2 × 4\n  OECD            PPP   HDI    FH\n  &lt;chr&gt;         &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 OECD加盟国   46000. 0.894  89.1\n2 OECD非加盟国 14229. 0.667  49.9"
  },
  {
    "objectID": "slides/micro/handling2.html#変数のリコーディング-3値以上の例",
    "href": "slides/micro/handling2.html#変数のリコーディング-3値以上の例",
    "title": "ミクロ政治データ分析実習",
    "section": "変数のリコーディング: 3値以上の例",
    "text": "変数のリコーディング: 3値以上の例\nmutate()内にcase_when()を使用\n\nデータフレーム名 |&gt;\n  mutate(新しい変数名 = case_when(条件1 ~ 新しい値,\n                                条件2 ~ 新しい値,\n                                ...\n                                TRUE ~ 新しい値))\n\n\nTRUE ~ 新しい値は「上記の条件全てが満たされない場合の値」を意味する\n\n.default = \"新しい値\"でもOK（{dplyr} 1.1.0から）"
  },
  {
    "objectID": "slides/micro/handling2.html#変数のリコーディング-3値以上の例-1",
    "href": "slides/micro/handling2.html#変数のリコーディング-3値以上の例-1",
    "title": "ミクロ政治データ分析実習",
    "section": "変数のリコーディング: 3値以上の例",
    "text": "変数のリコーディング: 3値以上の例\n例) dfのContinentを日本語にし、Continent_Jとして追加\n\ndf |&gt;\n  mutate(Continent_J = case_when(Continent == \"Africa\"  ~ \"アフリカ\",\n                                 Continent == \"America\" ~ \"アメリカ\",\n                                 Continent == \"Asia\"    ~ \"アジア\",\n                                 Continent == \"Europe\"  ~ \"ヨーロッパ\",\n                                 TRUE                   ~ \"オセアニア\")) |&gt;\n  group_by(大陸 = Continent_J) |&gt;\n  # 日本語は非推奨だが、一応使える（_と.を除く特殊記号不可）\n  summarise(OECD加盟国比率 = mean(OECD),\n            国家数        = n())\n\n# A tibble: 5 × 3\n  大陸       OECD加盟国比率 国家数\n  &lt;chr&gt;               &lt;dbl&gt;  &lt;int&gt;\n1 アジア             0.0714     42\n2 アフリカ           0          54\n3 アメリカ           0.139      36\n4 オセアニア         0.5         4\n5 ヨーロッパ         0.54       50"
  },
  {
    "objectID": "slides/micro/handling2.html#変数のリコーディング-応用",
    "href": "slides/micro/handling2.html#変数のリコーディング-応用",
    "title": "ミクロ政治データ分析実習",
    "section": "変数のリコーディング: 応用",
    "text": "変数のリコーディング: 応用\n例) ContinentがAP列を追加し、\"Asia\"か\"Oceania\"、\"America\"なら1、以外は0\n方法1: if_else()の利用\n\ndf |&gt;\n  mutate(AP = if_else(Continent %in% c(\"Asia\", \"America\", \"Oceania\"), 1, 0))\n\n方法2: case_when()の利用\n\ndf |&gt;\n  mutate(AP = case_when(Continent == \"Asia\"    ~ 1, \n                        Continent == \"America\" ~ 1, \n                        Continent == \"Oceania\" ~ 1,\n                        TRUE                   ~ 0))\n\n方法3: case_when() + %in%の利用\n\ndf |&gt;\n  mutate(AP = case_when(Continent %in% c(\"Asia\", \"America\", \"Oceania\") ~ 1, \n                        TRUE                                           ~ 0))"
  },
  {
    "objectID": "slides/micro/handling2.html#naではない欠損値もあることに注意",
    "href": "slides/micro/handling2.html#naではない欠損値もあることに注意",
    "title": "ミクロ政治データ分析実習",
    "section": "NAではない欠損値もあることに注意",
    "text": "NAではない欠損値もあることに注意\n世論調査などの場合、欠損値がNAでなく、9や99、\"\"などの場合がある。\n例) my_dataの例\n\nYoungAge変数を作成し、Ageが39以下なら1、それ以外は0にする。ただし、999ならNAとする。\nHighEduc2変数を作成し、HighEducが1なら\"大卒以上\"、それ以外は\"大卒未満\"にする。ただし、9ならNAとする。\n\n\n\n\nmy_data &lt;- tibble(ID       = 1:10,\n                  Age      = c(32, 35, 57, 999, 74, \n                               66, 999, 49, 78, 67),\n                  HighEduc = c(1, 0, 0, 1, 0,\n                               9, 1, 1, 9, 9))\n\n\n\nmy_data\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4   999        1\n 5     5    74        0\n 6     6    66        9\n 7     7   999        1\n 8     8    49        1\n 9     9    78        9\n10    10    67        9"
  },
  {
    "objectID": "slides/micro/handling2.html#欠損値を指定する場合",
    "href": "slides/micro/handling2.html#欠損値を指定する場合",
    "title": "ミクロ政治データ分析実習",
    "section": "欠損値を指定する場合",
    "text": "欠損値を指定する場合\n\n戻り値としてNAを指定（if_else()も同様）\n\n\nmy_data |&gt;\n  mutate(YoungAge  = case_when(Age == 999 ~ NA,\n                               Age &lt;=  39 ~ 1,\n                               TRUE       ~ 0),\n         HighEduc2 = case_when(HighEduc == 9 ~ NA,\n                               HighEduc == 1 ~ \"大卒以上\",\n                               TRUE          ~ \"大卒未満\"))\n\n# A tibble: 10 × 5\n      ID   Age HighEduc YoungAge HighEduc2\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;    \n 1     1    32        1        1 大卒以上 \n 2     2    35        0        1 大卒未満 \n 3     3    57        0        0 大卒未満 \n 4     4   999        1       NA 大卒以上 \n 5     5    74        0        0 大卒未満 \n 6     6    66        9        0 &lt;NA&gt;     \n 7     7   999        1       NA 大卒以上 \n 8     8    49        1        0 大卒以上 \n 9     9    78        9        0 &lt;NA&gt;     \n10    10    67        9        0 &lt;NA&gt;"
  },
  {
    "objectID": "slides/micro/handling2.html#特定の値を欠損値にコーディング場合",
    "href": "slides/micro/handling2.html#特定の値を欠損値にコーディング場合",
    "title": "ミクロ政治データ分析実習",
    "section": "特定の値を欠損値にコーディング場合",
    "text": "特定の値を欠損値にコーディング場合\n特定の値を欠損値とし、それ以外の値は元も値にする場合\n\n主にif_else()を使用し、条件に合致した場合はNAを、合致しない場合は元の変数のままにする。\n\n\nmy_data |&gt;\n  mutate(Age      = if_else(Age      == 999, NA, Age),\n         HighEduc = if_else(HighEduc == 9,   NA, HighEduc))\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA"
  },
  {
    "objectID": "slides/micro/handling2.html#特定の値を欠損値にコーディング場合-1",
    "href": "slides/micro/handling2.html#特定の値を欠損値にコーディング場合-1",
    "title": "ミクロ政治データ分析実習",
    "section": "特定の値を欠損値にコーディング場合",
    "text": "特定の値を欠損値にコーディング場合\nif_else()でなく、case_when()を使うことも可能\n\n欠損を意味する値が複数の場合、case_when()を使うか、OR演算子（| / %in%）を用いたif_else()を使用する。\n\n\nmy_data |&gt;\n  mutate(Age      = case_when(Age == 999 ~ NA, \n                              TRUE       ~ Age),\n         HighEduc = case_when(HighEduc == 9 ~ NA, \n                              TRUE          ~ HighEduc))\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA"
  },
  {
    "objectID": "slides/micro/handling2.html#参考特定の値を欠損値にコーディング場合",
    "href": "slides/micro/handling2.html#参考特定の値を欠損値にコーディング場合",
    "title": "ミクロ政治データ分析実習",
    "section": "参考）特定の値を欠損値にコーディング場合",
    "text": "参考）特定の値を欠損値にコーディング場合\n{naniar}パッケージのreplace_with_na()関数を利用\n\n引数はリスト型オブジェクトであり、リストの中には変数名 = 欠損値の値\n欠損値の値が複数の場合、変数名 = c(値1, 値2, ...)\n似たような関数として{expss}のna_if()関数\n\n\nlibrary(naniar) # 事前に install.package(naniar) でインストール\nmy_data |&gt;\n  # Ageは999、HighEducは9が欠損値\n  replace_with_na(list(Age = 999, HighEduc = 9))\n\n# A tibble: 10 × 3\n      ID   Age HighEduc\n   &lt;int&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1     1    32        1\n 2     2    35        0\n 3     3    57        0\n 4     4    NA        1\n 5     5    74        0\n 6     6    66       NA\n 7     7    NA        1\n 8     8    49        1\n 9     9    78       NA\n10    10    67       NA"
  },
  {
    "objectID": "slides/micro/handling2.html#参考mutateにおける複数の処理",
    "href": "slides/micro/handling2.html#参考mutateにおける複数の処理",
    "title": "ミクロ政治データ分析実習",
    "section": "参考）mutate()における複数の処理",
    "text": "参考）mutate()における複数の処理\n同じ内容のコードであるため、好きな書き方で問題ないが、まとめた方が効率的\n一つのmutate()内に2つの処理\n\nmy_data |&gt;\n  mutate(Age      = if_else(Age      == 999 ~ NA, TRUE ~ Age),\n         HighEduc = if_else(HighEduc == 9   ~ NA, TRUE ~ HighEduc))\n\n一つのmutate()内に1つの処理\n\nmy_data |&gt;\n  mutate(Age = if_else(Age == 999 ~ NA, TRUE ~ Age)) |&gt;\n  mutate(HighEduc = if_else(HighEduc == 9 ~ NA, TRUE ~ HighEduc))\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/introduction.html#講義概要",
    "href": "slides/micro/introduction.html#講義概要",
    "title": "ミクロ政治データ分析実習",
    "section": "講義概要",
    "text": "講義概要\n\n講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: Rの使い方\n\nRの基本的な操作 & R Markdown（Quarto）\nデータの入出力\nデータのハンドリング（前処理）\nデータの可視化\n\n統計学、確率、多変量解析、因果推論の授業ではない。\n\nデータ分析の手法は後期の「マクロ政治データ分析実習」\n後期の授業ではRの使い方について解説しない。\n\n到達目標: Rを用いたデータ分析の教科書が読める土台づくり"
  },
  {
    "objectID": "slides/micro/introduction.html#講義内容予定",
    "href": "slides/micro/introduction.html#講義内容予定",
    "title": "ミクロ政治データ分析実習",
    "section": "講義内容（予定）",
    "text": "講義内容（予定）\n\n第1回 イントロダクション\n第2回 RとIDEの導入\n第3回 Rの基本的な操作\n第4回 プログラミングの基本的な概念\n第5回 R Markdownと再現可能な研究\n第6回 データ収集\n第7回 データ型\n第8回 データ構造\n第9回 データハンドリング（1）\n第10回 データハンドリング（2）\n第11回 データハンドリング（3）\n第12回 可視化（1）\n第13回 可視化（2）\n第14回 可視化（3）\n第15回 期末テスト"
  },
  {
    "objectID": "slides/micro/introduction.html#参考-マクロ政治データ分析実習の内容予定",
    "href": "slides/micro/introduction.html#参考-マクロ政治データ分析実習の内容予定",
    "title": "ミクロ政治データ分析実習",
    "section": "参考) マクロ政治データ分析実習の内容（予定）",
    "text": "参考) マクロ政治データ分析実習の内容（予定）\n\nリサーチデザイン\n記述統計\n統計的推定\n統計的仮説検定\n変数間の関係（\\(t\\)検定、\\(\\chi^2\\)検定、相関分析）\n線形回帰分析\n交互作用\nロジスティック回帰分析\n分析結果の可視化"
  },
  {
    "objectID": "slides/micro/introduction.html#ミクロ政治とマクロ政治",
    "href": "slides/micro/introduction.html#ミクロ政治とマクロ政治",
    "title": "ミクロ政治データ分析実習",
    "section": "ミクロ政治とマクロ政治",
    "text": "ミクロ政治とマクロ政治\nデータの分析単位として「ミクロ」と「マクロ」\n\nミクロデータ（個票データ）\n\n主に個人データ（いわゆる世論調査データ）\n\nマクロデータ（集計データ）\n\n国家、市区町村、選挙区など\nミクロにおける主体（たとえば、人）の集合\n\n\n分析における「ミクロ」と「マクロ」\n\n「ミクロ」のための手法、「マクロ」のための手法の区別はほぼない\n\nほとんどぼ分析手法はミクロ、マクロ区別なく使用\n\n計量分析のツールとしてのR：敷居が高い\n\n「ミクロ政治データ分析実習」で学習\n\nツールの使い方を習得から具体的な分析手法へ\n\n「マクロ政治データ分析実習」で学習"
  },
  {
    "objectID": "slides/micro/introduction.html#前提知識",
    "href": "slides/micro/introduction.html#前提知識",
    "title": "ミクロ政治データ分析実習",
    "section": "前提知識",
    "text": "前提知識\n\nファイル・システムの理解\n\nフォルダー (ディレクトリ)の概念\n相対パスと絶対パスの違いと書き方\nC:/AAA/BBB/CCC.txtや~/AAA/BBB/CCC.textの意味が理解できること\nサポートページの「ファイル・システム」、「プロジェクト管理」、「ファイル管理」を読んでおくこと\nこれができないとデータの読み込みすらきでない。\n\nブラインド・タッチ (重要)\n\n期末レポートは第15回の授業中に執筆する。\nタイピングが遅いと、90分内に期末レポートの完成ができない。\n第15回の授業までにブラインドタッチの練習を推奨\nこの授業に限らず、現代社会で極めて重要なスキル"
  },
  {
    "objectID": "slides/micro/introduction.html#教科書",
    "href": "slides/micro/introduction.html#教科書",
    "title": "ミクロ政治データ分析実習",
    "section": "教科書",
    "text": "教科書\n宋財泫・矢内勇生.『私たちのR: ベストプラクティスの探求』Web-book\n\n本講義内容を全てカバーする\n無料 (https://www.jaysong.net/RBook)"
  },
  {
    "objectID": "slides/micro/introduction.html#教科書と本講義の位置づけ",
    "href": "slides/micro/introduction.html#教科書と本講義の位置づけ",
    "title": "ミクロ政治データ分析実習",
    "section": "教科書と本講義の位置づけ",
    "text": "教科書と本講義の位置づけ\n章立ては予告なく変更される可能性がある。\n\nRとIDEの導入: 第1〜5章\nRの基本的な操作: 第6〜8章、「付録：ファイルシステム」\nRプログラミング基礎: 第11、12章\nR Markdown/Quartoと再現可能な研究: 第23〜25章\nデータ型とデータ構造: 第9、10章\nデータハンドリング: 第13〜16章\n可視化: 第18〜21章"
  },
  {
    "objectID": "slides/micro/introduction.html#参考書",
    "href": "slides/micro/introduction.html#参考書",
    "title": "ミクロ政治データ分析実習",
    "section": "参考書",
    "text": "参考書\n\n松村優哉 他. 2021. 『改訂2版 RユーザのためのRStudio[実践]入門』技術評論社\nGarrett Grolemund and Hadley Wickham. 2017. R for Data Science. O’Reilly.\n\n邦訳『Rではじめるデータサイエンス』(原著は無料: https://r4ds.had.co.nz/)\n\nJared P. Lander. 2018. R for Everyone. Addison-Wesley Professional.\n\n邦訳『みんなのR』"
  },
  {
    "objectID": "slides/micro/introduction.html#成績評価",
    "href": "slides/micro/introduction.html#成績評価",
    "title": "ミクロ政治データ分析実習",
    "section": "成績評価",
    "text": "成績評価\n\n平常点（30%）課題（40%）期末レポート（30%）\n\n\n\n欠席4回以上は評価の対象外（3回まで評価対象）\n45分以上欠席は出席0.5回扱い\n欠席届を提出した場合は出席扱い（事前連絡/報告は不要）\n\n事前連絡の有無と関係なく、欠席届があれば出席扱いとなり、提出しない場合は欠席扱い\n\n\n\n\n\n計5〜6回の課題を予定\n未提出3回以上は不可（未提出2回まで評価対象）\n\n評価の対象 \\(\\neq\\) 単位がもらえる\n\n課題提出期限の延長はない (提出までの期間が長めであるため)\n\n提出期限は次回講義の前日23時59分まで\n期限内に提出出来なかった場合でも宋に連絡する必要はない（どうせ延ばしてくれない）。\n\n不正行為厳禁\n\n\n\n\n第15回の授業内 + 持ち帰りで期末レポートを執筆\n\n授業内で完成した分を提出し、残りを持ち帰りで執筆して再提出。\n持ち帰り分の解答は減点\n\n未提出者は不可\n不正行為厳禁"
  },
  {
    "objectID": "slides/micro/introduction.html#オフィスアワー",
    "href": "slides/micro/introduction.html#オフィスアワー",
    "title": "ミクロ政治データ分析実習",
    "section": "オフィス・アワー",
    "text": "オフィス・アワー\n宋、またはTAが研究室に待機し、事前予約なしに相談、質問などが可能な時間\n\n毎週水曜日2限（10時40分〜12時10分）\n\n宋が対応\n\n毎週木曜日3・5限（13時00分〜14時30分/16時20分〜17時50分）\n\n宋とTAが対応\n\n場所：TA227研究室（A棟の2階）"
  },
  {
    "objectID": "slides/micro/introduction.html#授業時間外のフィードバックについて",
    "href": "slides/micro/introduction.html#授業時間外のフィードバックについて",
    "title": "ミクロ政治データ分析実習",
    "section": "授業時間外のフィードバックについて",
    "text": "授業時間外のフィードバックについて\n\nオフィス・アワー以外のフィードバック方法\n\n対面（推奨）\n\n事前予約が必要（LMS、メール、対面、Discord等）\nメール: song@kansai-u.ac.jp\n\nDiscord（推奨）\n\nDiscordでフィードバックを受けたい場合は、事前に宋まで自分のDiscord IDを伝えること。宋からフレンド申請を行う。\n\nLMSの質問コーナー\nLMSメッセージ\nメール\n\n質問コーナー、メッセージ、メールの場合、相対的に返事が遅い。\n\nとりわけ週末、平日17時以降は返事が翌日になる可能性もある。\nすぐに返事ができたとしても数回のやり取りが必要となり、時間がかかる。\nむろん、「正しい質問のやり方に自信がある」 AND 「急いでいない」場合ならこれでもOK"
  },
  {
    "objectID": "slides/micro/introduction.html#課題",
    "href": "slides/micro/introduction.html#課題",
    "title": "ミクロ政治データ分析実習",
    "section": "課題",
    "text": "課題\n課題の遂行有無は確認しない（履修者の良心に任せる）。\n\n課題1課題2\n\n\n\n以下の内容を熟読する。\n\n『私たちのR』の「ファイルシステム」\nサポートページ\n\nファイル・システム\nプロジェクト管理\nファイル管理\n\n\n本講義では簡単には説明するが、予め読んでおくこと。\n\n\n\n\n英字のブラインドタッチの練習\n\nGoogleで「タイピング練習」を検索\n例) https://manabi-gakushu.benesse.ne.jp/gakushu/typing/eigonyuryoku.html\n\n1分間、約150文字以上が打てるようにすること\n\n毎日欠かさず30分程度練習すれば2週間でできるようになる。\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/quarto.html#r-markdown-quartoとは",
    "href": "slides/micro/quarto.html#r-markdown-quartoとは",
    "title": "ミクロ政治データ分析実習",
    "section": "R Markdown / Quartoとは",
    "text": "R Markdown / Quartoとは\n\n\n\n\n\nR Markdown\n\n\n\nR + Markdown\nRのコードと結果、文章が一つの文書としてまとまったもの\n\nHTML、Microsoft Word（.docx）、PDF等\n\nスライド、ホームページ、ポスター、書籍なども作成可能\n\n\n\n\n\n\n\nQuarto\n\n\n\n読み方は「クゥオート」（クワトロじゃない）\n断片化されつつあるR Markdown生態系を一つに統合したもの\n\nR Markdownだとホームページには{blogdown}、書籍執筆は{bookdown}、スライド作成は{xaringan}など\n本講義のスライド、サポートページ、教科書、宋のホームページも全てQuartoで作成\n\nR Markdownと使い方はほぼ同じ\n\n本講義ではQuartoを使用\n\nPython/Julia/Observable JSも使用可能"
  },
  {
    "objectID": "slides/micro/quarto.html#プレーンテキストとリッチテキスト",
    "href": "slides/micro/quarto.html#プレーンテキストとリッチテキスト",
    "title": "ミクロ政治データ分析実習",
    "section": "プレーンテキストとリッチテキスト",
    "text": "プレーンテキストとリッチテキスト\n\nPlain text: 書式情報などが含まれていない純粋なテキストのみで構成されている文書\n\nmacOSの「テキストエディット」、Windowsの「メモ帳」など\n\nRich text: 書式情報だけでなく、図表なども含まれる文書\n\nMicrosoft Word、Apple Pagesなど\n\n書式情報の例: 文書の余白、行間の幅、文字サイズ、太さ、色\nリッチテキストには文字情報以外にも様々な書式情報が含まれているため、サイズが大きく、パソコンへの負担も大きい"
  },
  {
    "objectID": "slides/micro/quarto.html#プレーンからリッチへ",
    "href": "slides/micro/quarto.html#プレーンからリッチへ",
    "title": "ミクロ政治データ分析実習",
    "section": "プレーンからリッチへ",
    "text": "プレーンからリッチへ\n\nMarkup言語：プレーンテキストをリッチテキストへ変換するための言語\nHTML（HyperText Markup Language）が代表的\n\n例1） &lt;b&gt;と&lt;/b&gt;で囲まれた文字は太字として出力される。\n例2） &lt;a&gt;と&lt;/a&gt;で囲まれた文字はリンクであり、&lt;a&gt;のhref引数で指定されたリンク先へ飛ばされる。\n\n\nInput:\nこの文字は&lt;b&gt;太字&lt;/b&gt;にしましょう。&lt;br/&gt;\nこの文字は&lt;a href = \"https://www.jaysong.net\"&gt;リンク&lt;/a&gt;にしましょう。\nOutput:\nこの文字は太字にしましょう。 この文字はリンクにしましょう。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownとは",
    "href": "slides/micro/quarto.html#markdownとは",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownとは",
    "text": "Markdownとは\n\nMarkdown（）: Markup言語の軽量版\n\n文章作成に必要なタグ（tag）をより簡単に記述できる。\nブラインドタッチに慣れればWordよりも素早く文書を作成することができるようになる。\n\n\n\n以下の2つのコードは同じ結果を返す。\nMarkupの場合（HTML）\nこの文字は&lt;b&gt;太字&lt;/b&gt;にしましょう。&lt;br/&gt;\nこの文字は&lt;a href = \"https://www.jaysong.net\"&gt;リンク&lt;/a&gt;にしましょう。\nMarkdownの場合\nこの文字は**太字**にしましょう。\n\nこの文字は[リンク](https://www.jaysong.net)にしましょう。\n結果\nこの文字は太字にしましょう。\nこの文字はリンクにしましょう。"
  },
  {
    "objectID": "slides/micro/quarto.html#markup-vs.-markdown",
    "href": "slides/micro/quarto.html#markup-vs.-markdown",
    "title": "ミクロ政治データ分析実習",
    "section": "Markup vs. Markdown",
    "text": "Markup vs. Markdown\n表の作成\n\n\nMarkup\n&lt;table&gt;\n    &lt;thead style = \"font-weight:bold;\"&gt;\n        &lt;td&gt;ID&lt;/td&gt;\n        &lt;td&gt;Name&lt;/td&gt;\n    &lt;/thead&gt;\n    &lt;tr&gt;\n        &lt;td&gt;1&lt;/td&gt;\n        &lt;td&gt;Song&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;2&lt;/td&gt;\n        &lt;td&gt;Yanai&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n\n\nMarkdown\n| ID | Name  |\n|----|-------|\n| 1  | Song  |\n| 2  | Yanai |\n綺麗に揃えなくてもOK\n|ID|Name|\n|---|---|\n|1|Song|\n|2|Yanai|\n\n\n\nOutput\n\n\n\nID\nName\n\n\n\n\n1\nSong\n\n\n2\nYanai"
  },
  {
    "objectID": "slides/micro/quarto.html#markup-vs.-markdown-1",
    "href": "slides/micro/quarto.html#markup-vs.-markdown-1",
    "title": "ミクロ政治データ分析実習",
    "section": "Markup vs. Markdown",
    "text": "Markup vs. Markdown\n箇条書き\n\n\nMarkup\n&lt;ul&gt;\n  &lt;li&gt;箇条書き1&lt;/li&gt;\n    &lt;ul&gt;\n      &lt;li&gt;箇条書き1A&lt;/li&gt;\n      &lt;li&gt;箇条書き1B&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;li&gt;箇条書き2&lt;/li&gt;\n  &lt;li&gt;箇条書き3&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\nMarkdown\n* 箇条書き1\n  * 箇条書き1A\n  * 箇条書き1B\n* 箇条書き2\n* 箇条書き3\n\n\n\nOutput\n\n箇条書き1\n\n箇条書き1A\n箇条書き1B\n\n箇条書き2\n箇条書き3"
  },
  {
    "objectID": "slides/micro/quarto.html#qmdファイルの生成",
    "href": "slides/micro/quarto.html#qmdファイルの生成",
    "title": "ミクロ政治データ分析実習",
    "section": ".qmdファイルの生成",
    "text": ".qmdファイルの生成\n\nRStudioを起動し、プロジェクトを作成する。\nFile &gt; New &gt; Quarto Document…を選択する。\nOKをクリックする。\nYAMLヘッダーを修正する。\nファイルを保存する（File &gt; Save）。\n\nショートカットキー: ⌘+S（macOS）、または Ctrl + S (Windows)\n\nSourceペイン上段のRenderをクリックする。"
  },
  {
    "objectID": "slides/micro/quarto.html#yamlヘッダー",
    "href": "slides/micro/quarto.html#yamlヘッダー",
    "title": "ミクロ政治データ分析実習",
    "section": "YAMLヘッダー",
    "text": "YAMLヘッダー\n.qmdファイル最上段に位置する文書の情報に関する内容\n\n最初はtitleとformatのみになっているため、適宜修正（場合によってはtitleのみになっている）\n\n---\ntitle: \"はじめてのQuarto\"\nauthor: \"関大花子\"\ndate: \"2023/5/11\"\nformat: html\nlang: ja\n---\n\ntitle: 文書のタイトル\n\nsubtitle:でサブタイトルも付けられる。\n\nauthor: 文書の作成者\ndate: 日付（「年/月/日」形式で入力）\n\ndate: \"`r Sys.Date()`\"に修正すると、Renderした日の日付が自動的につけられる。\n\nformat: 出力形式（htmlのままで良い）\nlang: 出力言語（デフォルトはen）"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-文章の改行",
    "href": "slides/micro/quarto.html#markdownの文法-文章の改行",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 文章の改行",
    "text": "Markdownの文法: 文章の改行\n1回のみの改行は連続した文字列として認識するため、文章を改行するためには、必ず2回改行が必要\n\n\nInput\nこれは文章1です。\nこれは文章2です。\nOutput\nこれは文章1です。 これは文章2です。\n\n\n\nInput\nこれは文章1です。\n\nこれは文章2です。\nOutput\nこれは文章1です。\nこれは文章2です。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-強調",
    "href": "slides/micro/quarto.html#markdownの文法-強調",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 強調",
    "text": "Markdownの文法: 強調\n\n英語の強調はイタリック、日本語の強調は太字を使用\n\nInput\n文章の一部を**太字**にしてみましょう。\n\nThe G7 consists of Canada, France, Germany, Italy, *Japan*, UK, and USA.\n\n~~取り消し線~~はあまり使わないかも。\n\n&lt;u&gt;アンダーライン&lt;/u&gt;はHTMLタグを使います。\nOutput\n文章の一部を太字にしてみましょう。\nThe G7 consists of Canada, France, Germany, Italy, Japan, UK, and USA.\n取り消し線はあまり使わないかも。\nアンダーラインはHTMLタグを使います。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-リンク",
    "href": "slides/micro/quarto.html#markdownの文法-リンク",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: リンク",
    "text": "Markdownの文法: リンク\n\n[リンク文](URL)\n[]で囲まれた文章をクリックすると()内で指定したURLへ移動\n\nInput\n[ここ](https://www.jaysong.net)をクリックすると、宋のHPへ移動します。\nOutput\nここをクリックすると、宋のHPへ移動します。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-見出し",
    "href": "slides/micro/quarto.html#markdownの文法-見出し",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 見出し",
    "text": "Markdownの文法: 見出し\n\n# + 半角スペース + 見出し（#が多いほど小さくなる）\n\nInput\n# 見出し1 (ヘッディング1)\n## 見出し2 (ヘッディング2)\n### 見出し3 (ヘッディング3)\n#### 見出し4 (ヘッディング4)\nOutput\n\n見出し1 (ヘッディング1)\n\n\n見出し2 (ヘッディング2)\n\n\n見出し3 (ヘッディング3)\n\n\n見出し4 (ヘッディング4)"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-水平線",
    "href": "slides/micro/quarto.html#markdownの文法-水平線",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 水平線",
    "text": "Markdownの文法: 水平線\n\n任意の行に---を挿入\n章と章の区切り、節と節の区切りなどに使用\n\nInput\n文章1\n\n---\n\n文章2\nOutput\n文章1\n\n文章2"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-箇条書き順序なし",
    "href": "slides/micro/quarto.html#markdownの文法-箇条書き順序なし",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 箇条書き（順序なし）",
    "text": "Markdownの文法: 箇条書き（順序なし）\n\n* + 半角スペース + 文字列\n階層構造にする場合、*の前に半角スペースを3個以上入れる\n*の代わりに-も可\n\n\n\nInput\n* リスト1\n* リスト2\n   * リスト2-1\n      * リスト2-1-1\n      * リスト2-1-2\n   * リスト2-1\n* リスト3\n\n\n\nOutput\n\nリスト1\nリスト2\n\nリスト2-1\n\nリスト2-1-1\nリスト2-1-2\n\nリスト2-1\n\nリスト3"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-箇条書き順序付き",
    "href": "slides/micro/quarto.html#markdownの文法-箇条書き順序付き",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 箇条書き（順序付き）",
    "text": "Markdownの文法: 箇条書き（順序付き）\n\n1. + 半角スペース + 文字列\n1.の箇所は任意の数字でもOK。1.、2.、…も可\n階層構造にする場合、1.の前に半角スペースを3個入れる\n1.と*の組み合わせも可能\n\n\n\nInput\n1. リスト1\n2. リスト2\n   1. リスト2-1\n      1. リスト2-1-1\n      2. リスト2-1-2\n   2. リスト2-1\n3. リスト3\n\n\n\nOutput\n\nリスト1\nリスト2\n\nリスト2-1\n\nリスト2-1-1\nリスト2-1-2\n\nリスト2-1\n\nリスト3"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-数式",
    "href": "slides/micro/quarto.html#markdownの文法-数式",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 数式",
    "text": "Markdownの文法: 数式\n\n文中数式は$数式$、独立した行の数式は$$で囲む\n\\(\\LaTeX\\) の数式表記法を理解する必要がある\n\nInput\n文中の数式の例: $e = mc^2$\n\n独立した数式の例は、\n\n$$\ny_i \\sim \\text{Normal}(\\mathbf{X} \\boldsymbol{\\beta}, \\sigma).\n$$\n\nのように書きます。\nOutput\n文中の数式の例: \\(e = mc^2\\)\n独立した数式の例は、\n\\[\ny_i \\sim \\text{Normal}(\\mathbf{X} \\boldsymbol{\\beta}, \\sigma).\n\\]\nのように書きます。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-表",
    "href": "slides/micro/quarto.html#markdownの文法-表",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: 表",
    "text": "Markdownの文法: 表\n\n行は改行で、列は|で区切る\n1行目は表のヘッダーであり、|---|で区切る（-は1個以上でOK）\n\n|---|と|:---|は左揃え、|---:|は右揃え、|:---:|は中央揃え\n\n\n\n\nInput\n|ID |Name   |Birth (Year)|Pref   |\n|:-:|-------|-----------:|-------|\n|1  |Ogura  |1852        |Tokyo  |\n|2  |Tsurumi|1858        |Tochigi|\n|3  |Yoshida|1858        |Fukuoka|\n|4  |Hotta  |1859        |Chiba  |\n|5  |Inoue  |1847        |Nagano |\n|6  |Tezuka |1862        |Tokyo  |\n|7  |Shikata|1857        |Saitama|\n|8  |Nomura |1855        |Gunma  |\n\n\n\nOutput\n\n\n\nID\nName\nBirth (Year)\nPref\n\n\n\n\n1\nOgura\n1852\nTokyo\n\n\n2\nTsurumi\n1858\nTochigi\n\n\n3\nYoshida\n1858\nFukuoka\n\n\n4\nHotta\n1859\nChiba\n\n\n5\nInoue\n1847\nNagano\n\n\n6\nTezuka\n1862\nTokyo\n\n\n7\nShikata\n1857\nSaitama\n\n\n8\nNomura\n1855\nGunma"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-コメント",
    "href": "slides/micro/quarto.html#markdownの文法-コメント",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: コメント",
    "text": "Markdownの文法: コメント\n出力に影響されないコメントを入れる場合\n\n&lt;!--と--&gt;内に囲む\n&lt;!--と--&gt;の間の文章は出力されない\n自分用のメモ、とりあえず出力させない内容などに使用\nチャンク内コメントは#（チャンクは後に解説）\n\n\n\nInput:\nこれは文章1です。\n\n&lt;!--\nこれはコメントです。\n--&gt;\n\nこれは文章2です。\n\n\n\nOutput:\nこれは文章1です。\n\nこれは文章2です。"
  },
  {
    "objectID": "slides/micro/quarto.html#markdownの文法-その他",
    "href": "slides/micro/quarto.html#markdownの文法-その他",
    "title": "ミクロ政治データ分析実習",
    "section": "Markdownの文法: その他",
    "text": "Markdownの文法: その他\n教科書の「R Markdown入門」と「Quarto入門」を参照\n\n図の挿入\n脚注\n引用\nQuarto独自の機能など"
  },
  {
    "objectID": "slides/micro/quarto.html#rコード-チャンクchunk",
    "href": "slides/micro/quarto.html#rコード-チャンクchunk",
    "title": "ミクロ政治データ分析実習",
    "section": "Rコード: チャンク（Chunk）",
    "text": "Rコード: チャンク（Chunk）\nRのコードを挿入する領域\n\n```{r}と```で囲む。\n\nチャンクの外にコードを書いても文章として認識する。\nチャンク内においてMarkdown文法は通用しない。純粋なRコードのみ。\n`は「バッククォート（back quote）」と読む。\nチャンクの前後は必ず改行する（下のコードの4・9行目のように）。\n\nコードの出力 &gt; 結果の出力の順番\n\n\n\nInput\nここはチャンクの外\n\nここに書いたものは文章として扱われる。\n\n```{r}\nx &lt;- 5 # 円の半径\nprint(3.14 * x^2)\n```\n\nここに書いたのも文章\n\n\n\nOutput\nここはチャンクの外\nここに書いたものは文章として扱われる。\n\nx &lt;- 5 # 円の半径\nprint(3.14 * x^2)\n\n[1] 78.5\n\n\nここに書いたのも文章"
  },
  {
    "objectID": "slides/micro/quarto.html#rコード-チャンクのオプション",
    "href": "slides/micro/quarto.html#rコード-チャンクのオプション",
    "title": "ミクロ政治データ分析実習",
    "section": "Rコード: チャンクのオプション",
    "text": "Rコード: チャンクのオプション\nチャンク内に各チャンクのオプションが指定可能\n\n\nチャンクオプションの付け方\n```{r}\n#| label: my_chunk_1\n#| warning: false\n#| echo: false\n#| fig-width: 8\n#| fig-align: center\n\nRのコード\n```\n\n他にも数十のオプションの指定が可能\n\nR Markdown Cheetsheet\nQuarto公式ホームページ\n\n\n\n\n\n\n#| label: チャンクの名前\n\nチャンクに名前を付ける\n\n#| eval: false\n\nコードのみ出力し、結果は出力しない\n\n#| echo: false\n\n結果のみ出力し、コードは出力しない\n\n#| fig-width: 5\n\n出力される図の幅を8インチに\n\n#| fig-height: 500px\n\n出力される図の幅を高さを500ピクセルに\n\n#| fig-align: center\n\n出力される図を中央揃えに\n\n#| warning: false\n\n警告メッセージを隠す\n\n#| error: true\n\nエラーが発生してもとりあえずRenderする"
  },
  {
    "objectID": "slides/micro/quarto.html#rコード-インラインコード",
    "href": "slides/micro/quarto.html#rコード-インラインコード",
    "title": "ミクロ政治データ分析実習",
    "section": "Rコード: インラインコード",
    "text": "Rコード: インラインコード\n文章内にRコードの結果を埋め込む場合\n\n`rと`の間にコードを挿入\n単に`で囲まれたものはコードのように表示してくれるものの、そのコードは実行されない。文中に短いコードのみを入れたり、変数名、関数名を示す際に使う機能である。\n\n\n\nInput:\n```{r}\nX &lt;- c(2, 3, 5, 7, 11)\n```\n\n変数`X`の平均値は`r mean(X)`です。\n\n\n\nOutput:\n\nX &lt;- c(2, 3, 5, 7, 11)\n\n変数Xの平均値は5.6です。"
  },
  {
    "objectID": "slides/micro/quarto.html#再現可能性と再生可能性",
    "href": "slides/micro/quarto.html#再現可能性と再生可能性",
    "title": "ミクロ政治データ分析実習",
    "section": "再現可能性と再生可能性",
    "text": "再現可能性と再生可能性\n国里 (2020)による定義\n\n学会、分野によっては正反対の概念になる場合もある (Barba 2018)\n\n\n再生可能性 (Reproducibility)\n\n同じデータ + 同じ方法 = 同じ結果\nQuarto/R Markdownの主な目的は再生可能性\n\n\n再現可能性 (Replicability)\n\n新しいデータ + 同じ方法 = 同じ結果\n新しいデータ + 違う方法 = 同じ結果\n\n\n\n参考文献\n\n国里愛彦. 2020.「再現可能な心理学研究入門」『専修大学人間科学論集:心理学篇』10. 21-33.\nLorena A. Barba. 2018. “Terminologies for Reproducible Research.” ArXiv. 1802.03311"
  },
  {
    "objectID": "slides/micro/quarto.html#quartor-markdownと再生可能性",
    "href": "slides/micro/quarto.html#quartor-markdownと再生可能性",
    "title": "ミクロ政治データ分析実習",
    "section": "Quarto/R Markdownと再生可能性",
    "text": "Quarto/R Markdownと再生可能性\n\n具体的にどのような手順で分析が行われたかが分かる\n\nコードを記録&公開\n\nコードに対する説明が付いている\n\n自分が書いたコードであっても、昔書いたコードは読みにくい\n過去、自分が行った分析の再生する出来ない場合も\n\n今、教壇に立っている人の話ではない\n\n\nコードと結果が同時に照会できる\n\nわざわざRを立ち上げなくても、その場で分析の手順が分かる"
  },
  {
    "objectID": "slides/micro/quarto.html#再生可能な研究を目指して",
    "href": "slides/micro/quarto.html#再生可能な研究を目指して",
    "title": "ミクロ政治データ分析実習",
    "section": "再生可能な研究を目指して",
    "text": "再生可能な研究を目指して\n\n可能な限り、詳細な説明を付ける\n\n文章領域では「以下のコードがどのような目的で書かれたコードであるか」などを明示する。\nチャンク内にもこまめにコメント（#）を付ける\n\n理想としては一行ごとにコメントを付ける\n\n\n\n悪い例 (悪くはないが、良くもない)\nx &lt;- rep(NA, 5)\n良い例\nx &lt;- rep(NA, 5) # 欠損値で埋められた長さ5のベクトル"
  },
  {
    "objectID": "slides/micro/quarto.html#再生可能な研究を目指して-1",
    "href": "slides/micro/quarto.html#再生可能な研究を目指して-1",
    "title": "ミクロ政治データ分析実習",
    "section": "再生可能な研究を目指して",
    "text": "再生可能な研究を目指して\n\nコードを分かりやすく書く\n\n長いオブジェクト名を避ける\n分かりやすいオブジェクト名\n適宜スペースと字下げを入れるなど\n読みやすいコードの書き方（前回講義を参照）\n\nデータについても詳細に書く\n\nどのように収集されたデータであるのか\nどのような変数があるのか"
  },
  {
    "objectID": "slides/micro/quarto.html#課題",
    "href": "slides/micro/quarto.html#課題",
    "title": "ミクロ政治データ分析実習",
    "section": "課題",
    "text": "課題\n今回以降の課題はQuartoを利用する。\n\n今回課題用のプロジェクトを作成する。\nLMSの「第5回課題」から「問題ファイル（.qmd形式）」ダウンロードし、プロジェクトのフォルダーにアップロードする。\nアップロードした.qmdファイルを開く。\nRenderし、結果を確認する。\n本講義のサポートページの「課題 &gt; 第5回課題」へアクセスする。\nサンプルのような体裁になるように問題ファイルを修正する。\n\n学籍番号・氏名は自分の学籍番号・氏名に直すこと。\n\n完成後、生成された.htmlファイルを自分のPCにダウンロードし、ダウンロードした.htmlファイルを関大LMSに提出する。\n\nファイルのダウンロード方法はサポートページの「Rの使い方 &gt; ファイル管理」を参照すること\n\n期限は2023年5月17日（水）の23時59分とする。\n\n\n\n\n注意！！\n\n\n\n間違ったファイルを提出しないこと（期限内の差し替えは何度でも可; 期限外の差し替えは不可）\n\nダメな例）.qmdファイルの提出 \\(\\leftarrow \\times\\)\n邪悪な例）.qmdファイルの拡張子を.htmlに変えて提出 \\(\\leftarrow \\times\\)（Androidスマホにリンゴのシールだけ貼って、「これiPhoneです」と言うのと同じレベルの話）\n\nサポートページの「課題の取り組み方」を必ず確認すること。毎年、間違って提出方法で未提出扱いとなった学生がいる。自分が提出したファイルが問題ないかを確認したい場合、LMSの「マイレポート」から提出物をダウンロードし、自分のPCで開いてみることを推奨。期限内なら何度でも差し替え可能。\n期限内に提出できなかった場合、宋に連絡不要（延長は絶対にない）\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/visualization1.html#グラフを作成する方法",
    "href": "slides/micro/visualization1.html#グラフを作成する方法",
    "title": "ミクロ政治データ分析実習",
    "section": "グラフを作成する方法",
    "text": "グラフを作成する方法\n代表的な可視化のパッケージ\n\n他にもインタラクティブ・プロットに特化した{plotly}、3次元グラフのための{rgl}、インタラクティブ地図の{leaflet}など多数あり\n\n\n\nBase R\n\n別途のパッケージを使わず、R内蔵関数で作図\n紙にペンでグラフを書くイメージ\n図が気に入らなかったら一からやり直し\n作成した図をオブジェクトとして保存することが出来ない\n最も自由度が高い\n\n\n\n\n{lattice}\n\nDeepayan Sarkarが開発\n{ggplot2}が登場する前には主流\n関数1つで可視化ができる（ただし、関数が長くなる）\n\n\n\n\n{ggplot2}\n\nHadley Wickhamが大学院生の時に開発\nグラフィックの文法 (grammer of graphics)」の思想をR上で具現化\nグラフの様々な要素をそれぞれ1つの層 (layer)と捉え、積み重ねていく"
  },
  {
    "objectID": "slides/micro/visualization1.html#base-rの例",
    "href": "slides/micro/visualization1.html#base-rの例",
    "title": "ミクロ政治データ分析実習",
    "section": "Base Rの例",
    "text": "Base Rの例\n\nコード結果\n\n\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/Micro09.csv\") # 第9回の実習用データ\n\nplot(x = df$PPP_per_capita, y = df$HDI_2018, pch = 19, \n     col = ifelse(df$OECD == 1, \"red\", \"blue\"),\n     xlab = \"一人当たり購買力平価GDP (USD)\", ylab = \"人間開発指数\")\nlegend(\"bottomright\", pch = 19,\n       legend = c(\"OECD加盟国\", \"OECD非加盟国\"), \n       col    = c(\"red\", \"blue\"))"
  },
  {
    "objectID": "slides/micro/visualization1.html#latticeの例",
    "href": "slides/micro/visualization1.html#latticeの例",
    "title": "ミクロ政治データ分析実習",
    "section": "{lattice}の例",
    "text": "{lattice}の例\n\nコード結果\n\n\n\nlibrary(lattice)\nxyplot(HDI_2018 ~ PPP_per_capita, data = df,\n       group = OECD, pch = 19, grid = TRUE,\n       auto.key = TRUE,\n       key = list(title     = \"OECD加盟有無\",\n                  cex.title = 1,\n                  space     = \"right\",\n                  points    = list(col = c(\"magenta\", \"cyan\"),\n                                   pch = 19),\n                  text      = list(c(\"加盟国\", \"非加盟国\"))), \n       xlab = \"一人当たり購買力平価GDP (USD)\", ylab = \"人間開発指数\")"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2の例",
    "href": "slides/micro/visualization1.html#ggplot2の例",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}の例",
    "text": "{ggplot2}の例\n\nコード結果\n\n\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"加盟国\", \"非加盟国\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD), \n              size = 2) +\n   labs(x = \"一人あたり購買力平価GDP (USD)\", y = \"人間開発指数\",\n        color = \"OECD加盟有無\") +\n   theme_bw(base_size = 16)"
  },
  {
    "objectID": "slides/micro/visualization1.html#グラフィックの文法",
    "href": "slides/micro/visualization1.html#グラフィックの文法",
    "title": "ミクロ政治データ分析実習",
    "section": "グラフィックの文法",
    "text": "グラフィックの文法\nWilkinson, Leland. 2005. The Grammar of Graphics. Springer.\n\n\n\nグラフを構造化された方法で記述し、レイヤー (layer; 層)を積み重ねることによってグラフを構築するフレームワーク\nグラフの構成要素の例\n\n横軸と縦軸\n\n目盛りの間隔、ラベルの大きさ\n\n点、線、面\n\n色、太さ、形、透明度など\n\n凡例\n図のタイトル\n\nそれぞれの構成要素を一つのレイヤーとして扱い、レイヤーを積み重ねていく"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2とは",
    "href": "slides/micro/visualization1.html#ggplot2とは",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}とは",
    "text": "{ggplot2}とは\nHadley Wickhamが大学院生の時に開発した可視化パッケージ\n\n\n\n\n\n\n\n\n\n\ngrammer of graphicsの思想をR上で具現化したパッケージ\n図の構成要素それぞれに対応する関数が存在し、一つのレイヤーとして機能\n\nggplot(): キャンバスを用意\ngeom_point(): 点 / geom_line(): 線 / geom_bar(): 棒\nscale_x_continuous(): 連続変数の横軸\nscale_y_discrete(): 離散変数の縦軸など\n\n関数を覚える必要は全くない\n\n{ggplot2}の仕組みだけを覚え、後はググりながらコーディング"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-1",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-1",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (1)",
    "text": "{ggplot2}のイメージ (1)\nデータの読み込み&ハンドリング\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")\n\ndf &lt;- df |&gt; # OECD変数をリコーディングし、OECD_Jへ\n   mutate(OECD_J = if_else(OECD == 1, \"加盟国\", \"非加盟国\")) |&gt;\n   select(Country, PPP_per_capita, HDI_2018, FH_Status, OECD_J, Continent)\n\ndf\n\n# A tibble: 186 × 6\n   Country             PPP_per_capita HDI_2018 FH_Status OECD_J   Continent\n   &lt;chr&gt;                        &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    \n 1 Afghanistan                  2125.    0.496 NF        非加盟国 Asia     \n 2 Albania                     13781.    0.791 PF        非加盟国 Europe   \n 3 Algeria                     11324.    0.759 NF        非加盟国 Africa   \n 4 Andorra                        NA     0.857 F         非加盟国 Europe   \n 5 Angola                       6649.    0.574 NF        非加盟国 Africa   \n 6 Antigua and Barbuda         21267.    0.776 F         非加盟国 America  \n 7 Argentina                   22938.    0.83  F         非加盟国 America  \n 8 Armenia                     12974.    0.76  PF        非加盟国 Europe   \n 9 Australia                   50001.    0.938 F         加盟国   Oceania  \n10 Austria                     55824.    0.914 F         加盟国   Europe   \n# ℹ 176 more rows"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-2",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-2",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (2)",
    "text": "{ggplot2}のイメージ (2)\nキャンバスの用意\n\ndf |&gt; # データdfをggplot()関数に渡し、作図の準備をする\n   ggplot()"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-3",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-3",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (3)",
    "text": "{ggplot2}のイメージ (3)\nキャンバス上に点を出力\n\ndf |&gt;\n   ggplot() +\n   # 点を出力する。点の横軸上の位置はPPP_per_capita、縦軸上の位置はHDI_2018に対応\n   # OECD_Jの値に応じて色分けする。\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J))"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-4",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-4",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (4)",
    "text": "{ggplot2}のイメージ (4)\nラベルの修正\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J)) +\n   labs(x = \"一人当たり購買力平価基準GDP (米ドル)\", y = \"人間開発指数 (2018)\",  \n        color = \"OECD\")"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-5",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-5",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (5)",
    "text": "{ggplot2}のイメージ (5)\nテーマ変更\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J)) +\n   labs(x = \"一人当たり購買力平価基準GDP (米ドル)\", y = \"人間開発指数 (2018)\",\n        color = \"OECD\") +\n   theme_bw(base_size = 12) # Black and Whiteテーマを使い、文字サイズは12"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2のイメージ-6",
    "href": "slides/micro/visualization1.html#ggplot2のイメージ-6",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}のイメージ (6)",
    "text": "{ggplot2}のイメージ (6)\n凡例の位置調整\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J)) +\n   labs(x = \"一人当たり購買力平価基準GDP (米ドル)\", y = \"人間開発指数 (2018)\",\n        color = \"OECD\") +\n   theme_bw(base_size = 12) +\n   theme(legend.position = \"bottom\") # 凡例を図の下段に"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2で図が出来上がるまで",
    "href": "slides/micro/visualization1.html#ggplot2で図が出来上がるまで",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}で図が出来上がるまで",
    "text": "{ggplot2}で図が出来上がるまで\nレイヤーを積み重ねるイメージ\n\n図の核心部は幾何オブジェクト（geom_*()）とマッピング（aes()）\n先に書いたコードが下に位置する。\n\nコード1 + コード2はコード2の内容が上に位置する。"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2の必須要素",
    "href": "slides/micro/visualization1.html#ggplot2の必須要素",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}の必須要素",
    "text": "{ggplot2}の必須要素\n以下の要素があればグラフはとりあえず出来上がる\n\nデータ（Data）\n幾何オブジェクト（Geometry Object）: geom_*()関数\n\n散布図、棒グラフ、折れ線グラフ、…\n\nマッピング（Mapping）: aes()関数\n\n散布図の場合、点の位置（横軸と縦軸）\n棒グラフの場合、棒の位置（横軸）と高さ（縦軸）\n折れ線グラフの場合、線の傾きが変化する点の位置（横軸と縦軸）\n\n座標系（Coordinate System）: coord_*()関数\n\nデカルト座標系（直交座標系）、極座標系など\n座標系の上限の下限など\n座標系は{ggplot2}が自動的に設定してくれるが、カスタマイズ可\n\n\n凡例の位置、フォント、点の大きさ、軸ラベルの修正などは任意"
  },
  {
    "objectID": "slides/micro/visualization1.html#ggplot2の必須要素-1",
    "href": "slides/micro/visualization1.html#ggplot2の必須要素-1",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}の必須要素",
    "text": "{ggplot2}の必須要素\n座標系はデータ/幾何オブジェクトに応じて自動的に作成される（カスタマイズ可）"
  },
  {
    "objectID": "slides/micro/visualization1.html#書き方",
    "href": "slides/micro/visualization1.html#書き方",
    "title": "ミクロ政治データ分析実習",
    "section": "書き方",
    "text": "書き方\n\n注意: レイヤーの積み重ねは|&gt;でなく+を使用\n\nオブジェクトを渡すのではなく、レイヤーを足すという意味\n\n可視化はggplot()からスタート\n幾何オブジェクトはgeom_で始まる関数\n幾何オブジェクト内にはmapping =でマッピングが必要。\n\n第一引数であるため、mapping =は省略し、aes()からスタートでOK\n\naes()の中にはグラフ上に出力される点、線、面などがデータのどの変数に対応するかを記述\n\n\nggplot(data = データ) +\n   幾何オブジェクト関数(mapping = aes(マッピング))\n\n通常の書き方\n\nデータ |&gt; \n   ggplot() +\n   幾何オブジェクト関数(aes(マッピング))"
  },
  {
    "objectID": "slides/micro/visualization1.html#データ",
    "href": "slides/micro/visualization1.html#データ",
    "title": "ミクロ政治データ分析実習",
    "section": "データ",
    "text": "データ\n使用するデータ構造はdata.frame、またはtibble\n\n\nデータの指定（1）\n\ndata引数にdata.frame（tibble）オブジェクト名を指定\n\n\nggplot(data = データ名)\n\n\n\n\nデータの指定（2）\n\ndata引数は第一引数であるため、省略されることも多い\n\n\nggplot(データ名)\n\n\n\n\nデータの指定（3）\n\ndata引数は第一引数であるため、パイプ演算子 (|&gt;)で渡すことも可能\nこの方法を推奨\n\n\nデータ名 |&gt;\n   ggplot()\n\n\nデータ名とggplot()の間に{dplyr}、{tidyr}などの各種関数も使用可能\n\n\nデータ名 |&gt;\n   {dplyr}/{tidyr}の関数 |&gt;\n   ggplot()"
  },
  {
    "objectID": "slides/micro/visualization1.html#幾何オブジェクト",
    "href": "slides/micro/visualization1.html#幾何オブジェクト",
    "title": "ミクロ政治データ分析実習",
    "section": "幾何オブジェクト",
    "text": "幾何オブジェクト\n\nデータ名 |&gt;\n   ggplot() +\n   幾何オブジェクト関数()\n\n指定されたデータを使ってどのような図を作成するか\n\n散布図: geom_point()\n棒グラフ: geom_bar()\n折れ線グラフ: geom_line()\nヒストグラム: geom_histogram()\n箱ひげ図: geom_boxplot()\nその他\n\n{ggplot2}が提供する幾何オブジェクトも数十種類があり、ユーザーが開発・公開した幾何オブジェクトなどもある\n\n非巡回有向グラフ作成のための{ggdag}、ネットワークの可視化のための{ggnetwork}など"
  },
  {
    "objectID": "slides/micro/visualization1.html#マッピング",
    "href": "slides/micro/visualization1.html#マッピング",
    "title": "ミクロ政治データ分析実習",
    "section": "マッピング",
    "text": "マッピング\nグラフ上の点、線、面などの情報をデータと変数に対応させる\n\nプロット上に出力されるデータの具体的な在り方を指定する\n散布図の例) 各点の横軸と縦軸における位置情報\ngeom_*()内のaes()関数で指定\n\nグラフに複数の幾何オブジェクトが存在し、マッピング情報が同じならggplot()内で指定することも可能\n\n\n例) geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J))\n\n\n\n幾何オブジェクト\nマッピング情報\n引数\n対応する変数\n\n\n\n\ngeom_point()\n点の横軸上の位置\nx\nPPP_per_capita\n\n\ngeom_point()\n点の縦軸上の位置\ny\nHDI_2018\n\n\ngeom_point()\n点の色\ncolor\nOECD_J\n\n\n\n\n点、線、面が持てる情報は他にも色々\n\n大きさ（size）、線の種類（linetype）、透明度（alpha）、面の色（fill）、点の形（shape）、線の太さ（linewidth）、グループ（group）など"
  },
  {
    "objectID": "slides/micro/visualization1.html#マッピング時の注意",
    "href": "slides/micro/visualization1.html#マッピング時の注意",
    "title": "ミクロ政治データ分析実習",
    "section": "マッピング時の注意",
    "text": "マッピング時の注意\naes()の中で指定するか、外で指定するかで挙動が変わる。\n\naes()の中でcolorを指定する場合、それぞれの点が指定された変数の値に応じて色分けされる、\naes()の外でcolorを指定する場合、全ての点に適用される。\n\n\naes()の中（コード）aes()の中（結果）aes()の外（コード）aes()の外（結果）\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J)) +\n   labs(x = \"一人当たり購買力平価基準GDP (米ドル)\", y = \"人間開発指数 (2018)\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018), color = \"red\") +\n   labs(x = \"一人当たり購買力平価基準GDP (米ドル)\", y = \"人間開発指数 (2018)\")"
  },
  {
    "objectID": "slides/micro/visualization1.html#座標系",
    "href": "slides/micro/visualization1.html#座標系",
    "title": "ミクロ政治データ分析実習",
    "section": "座標系",
    "text": "座標系\n\n直交座標系の拡大・縮小: coord_cartesian()\n\n最もよく使う座標系（デフォルト）\n\n横軸と縦軸の交換: coord_flip()\n横軸と縦軸比の固定: coord_fixed()\n極座標系（polar coordinates system）へ変換: coord_polar()\n\n円グラフを作成する際に使われるが、円グラフは邪悪なる存在のケースが多いため、省略"
  },
  {
    "objectID": "slides/micro/visualization1.html#直交座標系拡大の例",
    "href": "slides/micro/visualization1.html#直交座標系拡大の例",
    "title": "ミクロ政治データ分析実習",
    "section": "直交座標系拡大の例",
    "text": "直交座標系拡大の例\n横軸を30000〜90000、縦軸を0.7〜1にする\n\nコード結果\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = PPP_per_capita, y = HDI_2018, color = OECD_J), \n              size = 2) +\n   labs(x = \"一人当たり購買力平価基準GDP\", y = \"人間開発指数\", color = \"OECD\") +\n   coord_cartesian(xlim = c(30000, 90000), ylim = c(0.7, 1)) +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization1.html#スケール-scale",
    "href": "slides/micro/visualization1.html#スケール-scale",
    "title": "ミクロ政治データ分析実習",
    "section": "スケール (Scale)",
    "text": "スケール (Scale)\nマッピング要素のカスタマイズ\n\n横/縦軸の目盛り変更、色分けの色を指定など\nscale_*_*()関数を使用\n\nscale_マッピング要素_対応する変数のタイプ()\n\n詳細は次週以降"
  },
  {
    "objectID": "slides/micro/visualization1.html#ファセット-facet",
    "href": "slides/micro/visualization1.html#ファセット-facet",
    "title": "ミクロ政治データ分析実習",
    "section": "ファセット (Facet)",
    "text": "ファセット (Facet)\nグラフを2つ以上の面で分割\n\n例) FH_Stautsの棒グラフを大陸ごとに出力\n\n\n# データの用意\n# 参考) 「\\n」は図内の改行を意味する。\ndf &lt;- df |&gt;\n   mutate(FH_Status = case_when(FH_Status == \"F\"  ~ \"自由\",\n                                FH_Status == \"PF\" ~ \"部分的に\\n自由\",\n                                TRUE              ~ \"不自由\"),\n          FH_Status = factor(FH_Status,\n                             levels = c(\"自由\", \"部分的に\\n自由\", \"不自由\"))) |&gt;\n   drop_na(FH_Status)\n\ndf\n\n# A tibble: 186 × 6\n   Country             PPP_per_capita HDI_2018 FH_Status        OECD_J Continent\n   &lt;chr&gt;                        &lt;dbl&gt;    &lt;dbl&gt; &lt;fct&gt;            &lt;chr&gt;  &lt;chr&gt;    \n 1 Afghanistan                  2125.    0.496 \"不自由\"         非加…  Asia     \n 2 Albania                     13781.    0.791 \"部分的に\\n自由\" 非加…  Europe   \n 3 Algeria                     11324.    0.759 \"不自由\"         非加…  Africa   \n 4 Andorra                        NA     0.857 \"自由\"           非加…  Europe   \n 5 Angola                       6649.    0.574 \"不自由\"         非加…  Africa   \n 6 Antigua and Barbuda         21267.    0.776 \"自由\"           非加…  America  \n 7 Argentina                   22938.    0.83  \"自由\"           非加…  America  \n 8 Armenia                     12974.    0.76  \"部分的に\\n自由\" 非加…  Europe   \n 9 Australia                   50001.    0.938 \"自由\"           加盟国 Oceania  \n10 Austria                     55824.    0.914 \"自由\"           加盟国 Europe   \n# ℹ 176 more rows"
  },
  {
    "objectID": "slides/micro/visualization1.html#ファセット分割なし",
    "href": "slides/micro/visualization1.html#ファセット分割なし",
    "title": "ミクロ政治データ分析実習",
    "section": "ファセット分割なし",
    "text": "ファセット分割なし\n同じ大陸内のFH_Stautsの分布を確認するには不向き\n\ndf |&gt;\n   ggplot() +\n   geom_bar(aes(x = FH_Status, fill = Continent),\n            position = position_dodge2(1/2)) +\n   labs(x = \"フリーダムハウス評価\", y = \"国家数\", fill = \"大陸\") +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization1.html#ファセット分割あり",
    "href": "slides/micro/visualization1.html#ファセット分割あり",
    "title": "ミクロ政治データ分析実習",
    "section": "ファセット分割あり",
    "text": "ファセット分割あり\n\ndf |&gt;\n   ggplot() +\n   geom_bar(aes(x = FH_Status)) +\n   labs(x = \"フリーダムハウス評価\", y = \"国家数\") +\n   facet_wrap(~ Continent, ncol = 5) +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization1.html#意識すべきところ",
    "href": "slides/micro/visualization1.html#意識すべきところ",
    "title": "ミクロ政治データ分析実習",
    "section": "意識すべきところ",
    "text": "意識すべきところ\n\nデータ・インク比\nカラーユニバーサルデザイン\n円グラフは邪悪なる存在\n3次元グラフは更に邪悪なる存在\n3次元円グラフは概念レベルで駆逐すべき存在\n\n参考図書 (日本語)\n1と4は{ggplot2}の教科書としても優れている\n\nHadley Wickham・Garrett Grolemund(著), 黒川利明(訳). 2017. 『Rではじめるデータサイエンス』オライリージャパン.\n藤俊久仁・渡部良一. 2019. 『データビジュアライゼーションの教科書』秀和システム.\n永田ゆかり. 2020. 『データ視覚化のデザイン』SBクリエイティブ.\n【おすすめ】 キーラン・ヒーリー(著), 瓜生真也・江口哲史・三村喬生(訳). 2021.『データ分析のためのデータ可視化入門』講談社."
  },
  {
    "objectID": "slides/micro/visualization1.html#円グラフ大好き",
    "href": "slides/micro/visualization1.html#円グラフ大好き",
    "title": "ミクロ政治データ分析実習",
    "section": "円グラフ大好き！",
    "text": "円グラフ大好き！\n最も面積が広いのは?\n\n\n\n\n\n\n円グラフ\n\n\n\n\n \n\n\n\n\n\n3次元円グラフ\n\n\n\n\n \n\n\n\n\n\n棒グラフ"
  },
  {
    "objectID": "slides/micro/visualization1.html#それでも円グラフが描きたいです",
    "href": "slides/micro/visualization1.html#それでも円グラフが描きたいです",
    "title": "ミクロ政治データ分析実習",
    "section": "それでも円グラフが描きたいです…",
    "text": "それでも円グラフが描きたいです…"
  },
  {
    "objectID": "slides/micro/visualization1.html#やめとけって",
    "href": "slides/micro/visualization1.html#やめとけって",
    "title": "ミクロ政治データ分析実習",
    "section": "やめとけって",
    "text": "やめとけって\n棒グラフで十分"
  },
  {
    "objectID": "slides/micro/visualization1.html#データインク比-data-ink-ratio",
    "href": "slides/micro/visualization1.html#データインク比-data-ink-ratio",
    "title": "ミクロ政治データ分析実習",
    "section": "データ・インク比 (Data-ink ratio)",
    "text": "データ・インク比 (Data-ink ratio)\nEdward R. Tufte. 2001. The Visual Display of Quantitative Information (2nd Ed). Graphics Press.\n\\[\n\\textrm{データ・インク比} = \\frac{\\textsf{データの情報を含むインクの量}}{\\textsf{グラフの出力に使用されたインクの総量}}\n\\]\n\n良いグラフとはデータ・インク比を最大化したグラフ\nグラフにおいて情報損失なしに除去できる要素が占める割合を1から引いたもの\n色分けにも注意"
  },
  {
    "objectID": "slides/micro/visualization1.html#色分けに注意-1",
    "href": "slides/micro/visualization1.html#色分けに注意-1",
    "title": "ミクロ政治データ分析実習",
    "section": "色分けに注意 (1)",
    "text": "色分けに注意 (1)\n\nインドの新規感染者数が多いことを伝えたい\nどの線がインド?"
  },
  {
    "objectID": "slides/micro/visualization1.html#色分けに注意-2",
    "href": "slides/micro/visualization1.html#色分けに注意-2",
    "title": "ミクロ政治データ分析実習",
    "section": "色分けに注意 (2)",
    "text": "色分けに注意 (2)\n\n情報の損失はあるものの、主張が伝えやすい"
  },
  {
    "objectID": "slides/micro/visualization1.html#やり過ぎにも注意",
    "href": "slides/micro/visualization1.html#やり過ぎにも注意",
    "title": "ミクロ政治データ分析実習",
    "section": "やり過ぎにも注意",
    "text": "やり過ぎにも注意\n\nどの図も同じ情報量を持ち、データ・インク比は右の方が優れているが…"
  },
  {
    "objectID": "slides/micro/visualization1.html#カラーユニバーサルデザイン",
    "href": "slides/micro/visualization1.html#カラーユニバーサルデザイン",
    "title": "ミクロ政治データ分析実習",
    "section": "カラーユニバーサルデザイン",
    "text": "カラーユニバーサルデザイン\n色分けを行う際には注意が必要\n\nP型およびD型色弱の場合、緑と赤の認識が困難\n\n日本の場合、男性の5%、女性の0.2%\nフランス・北欧の場合、男性の約10%\n\n色覚シミュレーターで確認可能\n\nmacOS用のSim Daltonismを使用した第二色盲 (deuteranopia)の例（Linux/WindowsならColor Oracleなど）\n\n自分が好きな色でなく、誰にも見やすい色を使う"
  },
  {
    "objectID": "slides/micro/visualization1.html#次元グラフについて-1",
    "href": "slides/micro/visualization1.html#次元グラフについて-1",
    "title": "ミクロ政治データ分析実習",
    "section": "3次元グラフについて (1)",
    "text": "3次元グラフについて (1)"
  },
  {
    "objectID": "slides/micro/visualization1.html#次元グラフについて-2",
    "href": "slides/micro/visualization1.html#次元グラフについて-2",
    "title": "ミクロ政治データ分析実習",
    "section": "3次元グラフについて (2)",
    "text": "3次元グラフについて (2)\n2001年より合格者が3倍増したようにも見えるが…"
  },
  {
    "objectID": "slides/micro/visualization1.html#次元グラフについて-3",
    "href": "slides/micro/visualization1.html#次元グラフについて-3",
    "title": "ミクロ政治データ分析実習",
    "section": "3次元グラフについて (3)",
    "text": "3次元グラフについて (3)\n\n2次元グラフにすると…\n\n\n\n\n\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "slides/micro/visualization3.html#期末テスト",
    "href": "slides/micro/visualization3.html#期末テスト",
    "title": "ミクロ政治データ分析実習",
    "section": "期末テスト",
    "text": "期末テスト\n\n2023年7月20日14時40分〜16時10分\n指定席に着席すること\n通常の課題と同じ手順\n16時10分まで出来たところまでLMSに提出（.html形式）\n\n16時10分を過ぎると、提出窓口ページを開いていても提出できない。\n残りは持ち帰って2023年7月20日23時59分まで再提出\n\n採点\n\n持ち帰り分は5割減点\n4限中に7問以上回答して提出すること（全て正解である必要はない）\n各問題の配点は履修者の正解率に応じて調整する。\n\n詳細はサポートページ &gt; 課題 &gt; 期末テスト実施要領を参照\n不正行為禁止"
  },
  {
    "objectID": "slides/micro/visualization3.html#授業アンケート任意",
    "href": "slides/micro/visualization3.html#授業アンケート任意",
    "title": "ミクロ政治データ分析実習",
    "section": "授業アンケート（任意）",
    "text": "授業アンケート（任意）\n\nhttps://ctl.jm.kansai-u.ac.jp/q/Ans?ms&cd=13400_23sから回答可能\n\n\n\n\n\n\n\n\n\n\n\n\n\nよくある質問\n\nこの授業のシラバスは?\n\nhttps://www.jaysong.net/r4ps/syllabus/syllabus_micro.html\n\n本講義の到達目標が分かりません…\n\n以下の一つでも達成できたらOK\n\nRがある程度、使えるようになった。\n今は苦手だけど、もっとRを勉強してみたいと思うようになった。\nRは使えないし、使う予定は（多分）ないけど、Rで何が出来るかが分かった。\n自分にRは無理だということが分かった。\n\nつまり、履修前と比べ「何かが分かった」のであれば達成"
  },
  {
    "objectID": "slides/micro/visualization3.html#named-graphs-5ng",
    "href": "slides/micro/visualization3.html#named-graphs-5ng",
    "title": "ミクロ政治データ分析実習",
    "section": "5 Named Graphs (5NG)",
    "text": "5 Named Graphs (5NG)\n\n棒グラフ (bar plot)\n\ngeom_col()\n\nヒストグラム (histogram)\n\ngeom_histogram()\n\n箱ひげ図 (box plot / box-and-whisker plot)\n\ngeom_boxplot()\n\n散布図 (scatter plot)\n\ngeom_point()\n\n折れ線グラフ (line plot)\n\ngeom_line()"
  },
  {
    "objectID": "slides/micro/visualization3.html#散布図の必須要素",
    "href": "slides/micro/visualization3.html#散布図の必須要素",
    "title": "ミクロ政治データ分析実習",
    "section": "散布図の必須要素",
    "text": "散布図の必須要素\n散布図を作成する際に必要な最低限の情報\n\n\nデータにフリーダムハウス・スコアと人間開発指数の列が必要\n\nx: 点の横軸上の位置\n\nフリーダムハウス・スコア\n\ny: 点の縦軸上の位置\n\n人間開発指数\n\n原因と結果の関係（因果関係）が考えられる2変数の場合、原因を横軸、結果を縦軸にする。"
  },
  {
    "objectID": "slides/micro/visualization3.html#データの読み込み",
    "href": "slides/micro/visualization3.html#データの読み込み",
    "title": "ミクロ政治データ分析実習",
    "section": "データの読み込み",
    "text": "データの読み込み\n第9回実習用データ（countries.csv）を使用\n\nlibrary(tidyverse)\ndf &lt;- read_csv(\"Data/countries.csv\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#散布図の作成-1",
    "href": "slides/micro/visualization3.html#散布図の作成-1",
    "title": "ミクロ政治データ分析実習",
    "section": "散布図の作成 (1)",
    "text": "散布図の作成 (1)\n幾何オブジェクトはgeom_point()を使用\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018))"
  },
  {
    "objectID": "slides/micro/visualization3.html#散布図の作成-2",
    "href": "slides/micro/visualization3.html#散布図の作成-2",
    "title": "ミクロ政治データ分析実習",
    "section": "散布図の作成 (2)",
    "text": "散布図の作成 (2)\nラベル修正 / 必要に応じてカスタマイズ\n\ndf |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018), color = \"royalblue\") +\n   labs(x = \"フリーダムハウス・スコア\", y = \"人間開発指数 (2018)\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#次元の追加",
    "href": "slides/micro/visualization3.html#次元の追加",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加",
    "text": "次元の追加\n散布図における次元の追加\n\nそれぞれの点は各国の (1) フリーダムハウス・スコアと (2) 人間開発指数の情報を持つ\n\n= 2次元\n\n更に情報を持たせるためには…\n\n色分け: color\n大きさ: size\n形: shape\n透明度(非推奨): alpha\nファセット分割\n\n5次元以上のグラフも可能だが、3次元までを推奨\n\n一つのグラフの情報が多すぎると読みにくくなる\n4次元以上になりそうならファセット分割で対応\n3次元の場合、色分け（color）を推奨するが、白黒の図を作成する場合は形（shape）を使う。"
  },
  {
    "objectID": "slides/micro/visualization3.html#次元の散布図",
    "href": "slides/micro/visualization3.html#次元の散布図",
    "title": "ミクロ政治データ分析実習",
    "section": "5次元の散布図",
    "text": "5次元の散布図\n各点はフリーダムハウス・スコア、人間開発指数、人口（対数変換）、大陸、OECD加盟有無の情報を持つ\n\nコード結果\n\n\n\ndf |&gt;\n   mutate(OECD = if_else(OECD == 1, \"Member\", \"Non-member\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018, color = Continent,\n                  size = Population, shape = OECD), alpha = 0.65) +\n   scale_size_continuous(trans = \"log10\") +\n   labs(x = \"Freedom House Score\", y = \"Human Development Index (2018)\",\n        size = \"Population (log)\") +\n   theme_gray()"
  },
  {
    "objectID": "slides/micro/visualization3.html#色分けの例",
    "href": "slides/micro/visualization3.html#色分けの例",
    "title": "ミクロ政治データ分析実習",
    "section": "色分けの例",
    "text": "色分けの例\naes()の内部にcolor = 色分けする変数を指定\n\nHighIncome変数を作成し、PPP_per_capitaが2万以上なら\"高\"、未満なら\"低\"\nHighIncome値に応じて点の色分けを行う（color = HighIncome）\n点の大きさは2とする（全体に適用させるため、aes()の外側に指定）\nlabs()内で凡例タイトルを修正; 凡例を下側へ移動\n\n\nコード結果\n\n\n\nscatter_plot1 &lt;- df |&gt;\n   drop_na(FH_Total, HDI_2018, PPP_per_capita) |&gt;\n   mutate(HighIncome = if_else(PPP_per_capita &gt;= 20000, \"高\", \"低\")) |&gt;\n   ggplot() +\n   geom_point(aes(x = FH_Total, y = HDI_2018, color = HighIncome), \n              size = 2) +\n   labs(x = \"フリーダムハウス・スコア\", y = \"人間開発指数 (2018)\",\n        color = \"一人当たりPPP GDP\") +\n   theme(legend.position = \"bottom\")\n\n\n\n\nscatter_plot1"
  },
  {
    "objectID": "slides/micro/visualization3.html#色のカスタマイズ",
    "href": "slides/micro/visualization3.html#色のカスタマイズ",
    "title": "ミクロ政治データ分析実習",
    "section": "色のカスタマイズ",
    "text": "色のカスタマイズ\ncolorにマッピングされている変数（HighIncome）が離散変数\n\nscale_color_manual()を使用\n引数: values = c(\"値1\" = \"色1\", \"値2\" = \"色2\", ...)\n\n\nscatter_plot1 +\n   scale_color_manual(values = c(\"低\" = \"orange\", \"高\" = \"royalblue\"))"
  },
  {
    "objectID": "slides/micro/visualization3.html#ggplot2で使える色",
    "href": "slides/micro/visualization3.html#ggplot2で使える色",
    "title": "ミクロ政治データ分析実習",
    "section": "{ggplot2}で使える色",
    "text": "{ggplot2}で使える色\n\n文字列で指定\n\n\"red\"、\"blue\"、\"royalblue\"など（全657種類）\nGoogleなどで「ggplot2 color」で検索（例）\n\nRGBカラー（HEXコード）で指定\n\n細かく調整可能（16,777,216種類の色）\n例) \"#FF0000\": 赤、\"#4169E1\": ロイヤルブルー"
  },
  {
    "objectID": "slides/micro/visualization3.html#色の見本-一部",
    "href": "slides/micro/visualization3.html#色の見本-一部",
    "title": "ミクロ政治データ分析実習",
    "section": "色の見本 (一部)",
    "text": "色の見本 (一部)"
  },
  {
    "objectID": "slides/micro/visualization3.html#shapeの見本",
    "href": "slides/micro/visualization3.html#shapeの見本",
    "title": "ミクロ政治データ分析実習",
    "section": "shapeの見本",
    "text": "shapeの見本\nshapeで指定（デフォルトはshape = 19）\n\n黒の部分はcolor、グレーの部分はfill（またはbg）で調整\n\n21と22の場合、枠線はcolor、内側の色塗りはfill\n\n0〜14の場合、中身が透明"
  },
  {
    "objectID": "slides/micro/visualization3.html#折れ線グラフの必須要素",
    "href": "slides/micro/visualization3.html#折れ線グラフの必須要素",
    "title": "ミクロ政治データ分析実習",
    "section": "折れ線グラフの必須要素",
    "text": "折れ線グラフの必須要素\n折れ線グラフを作成する際に必要な最低限の情報\n\n\nデータに日と新規感染者数の列が必要\n\nx: 線の傾きが変化し得る点の横軸上の位置\n\n日\n\ny: 線の傾きが変化し得る点の縦軸上の位置\n\n100万人当たり新規感染者数\n\n散布図とほぼ同じ\nただし、線が2つ以上の場合groupsが必要\n\n点をグループ化しないと、どの点を繋げば良いかが分からないため"
  },
  {
    "objectID": "slides/micro/visualization3.html#データの用意",
    "href": "slides/micro/visualization3.html#データの用意",
    "title": "ミクロ政治データ分析実習",
    "section": "データの用意",
    "text": "データの用意\n授業サポートページから実習用データ（covid_2022_06.csv）をダウンロード\n\n整然データとして加工済み\nDay: 日付（2022年6月）; NewCases: 100万人当りCOVID-19新規感染者数\n\n\nCOVID_df &lt;- read_csv(\"Data/covid_2022_06.csv\")\nCOVID_df\n\n# A tibble: 15 × 3\n   Country   Day NewCases\n   &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1 Japan      23    132. \n 2 Japan      24    127. \n 3 Japan      25    132. \n 4 Japan      26    113. \n 5 Japan      27     76.0\n 6 Korea      23    140. \n 7 Korea      24    132. \n 8 Korea      25    122. \n 9 Korea      26     66.8\n10 Korea      27    192. \n11 Taiwan     23   2022. \n12 Taiwan     24   1913. \n13 Taiwan     25   1689. \n14 Taiwan     26   1658. \n15 Taiwan     27   1196."
  },
  {
    "objectID": "slides/micro/visualization3.html#線が一本の場合",
    "href": "slides/micro/visualization3.html#線が一本の場合",
    "title": "ミクロ政治データ分析実習",
    "section": "線が一本の場合",
    "text": "線が一本の場合\ngeom_line()幾何オブジェクトを使用\n\nx: 点の傾きが変化し得る点の横軸上の位置\ny: 点の傾きが変化し得る点の縦軸上の位置\n日本の行のみを抽出し、横軸を日、縦軸を100万人当たり新規感染者数とした折れ線グラフを作成\n\n\nコード結果\n\n\n\nCOVID_df |&gt;\n   filter(Country == \"Japan\") |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases)) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#よく出るメッセージ",
    "href": "slides/micro/visualization3.html#よく出るメッセージ",
    "title": "ミクロ政治データ分析実習",
    "section": "よく出るメッセージ",
    "text": "よく出るメッセージ\n折れ線グラフを作成する際、以下のようなエラーメッセージが表示され、グラフが出力されない場合がある。\n\n原因は不明\n\ngeom_path: Each group consists of only one observation. Do you need to adjust the group aesthetic?\n\n【解決策】 このようなメッセージが出た場合は、aes()の中にgroup = 1を追加すると解決できる。\n\n普段から付けておく習慣を付けた方が良い。\n\n\nCOVID_df |&gt;\n   filter(Country == \"Japan\") |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = 1)) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#線が二本以上の場合",
    "href": "slides/micro/visualization3.html#線が二本以上の場合",
    "title": "ミクロ政治データ分析実習",
    "section": "線が二本以上の場合",
    "text": "線が二本以上の場合\ngroupに線のグループ変数を指定\n\n国別の折れ線グラフの場合、国変数を指定\n\n\nコード結果\n\n\n\nCOVID_df &lt;- COVID_df |&gt;\n   mutate(Country = case_when(Country == \"Japan\" ~ \"日本\",\n                              Country == \"Korea\" ~ \"韓国\",\n                              TRUE               ~ \"台湾\"),\n          Country = factor(Country, levels = c(\"日本\", \"韓国\", \"台湾\")))\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country)) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\")\n\n\n\n各線がどの国を示すのかが分からない…"
  },
  {
    "objectID": "slides/micro/visualization3.html#線が二本以上の場合-1",
    "href": "slides/micro/visualization3.html#線が二本以上の場合-1",
    "title": "ミクロ政治データ分析実習",
    "section": "線が二本以上の場合",
    "text": "線が二本以上の場合\ncolorで色分け: 国別の折れ線グラフの場合、国変数を指定\n\n線をやや太め（1.5）にする\n\nsize: 全線に適用させるためにaes()の外側に\n線が細すぎると色が区別しにくい\n\n\n\nコード結果\n\n\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country, \n                 color = Country), size = 1.5) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        color = \"国\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#次元の追加-1",
    "href": "slides/micro/visualization3.html#次元の追加-1",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加",
    "text": "次元の追加\n多くの折れ線グラフは既に3次元\n\n日（x）、新規感染者数（y）、国（group or color）\nこれ以上次元を増やすならファセット分割で対応するのが賢明\nファセット分割せずに次元を増やすなら…\n\nsize: 線の太さ\nlinetype: 線のタイプ（1 = 実線、2 = 破線、3 = 点線、…）\n\n白黒図の場合、colorでなく、linetype\n\nalpha: 透明度"
  },
  {
    "objectID": "slides/micro/visualization3.html#線のタイプ",
    "href": "slides/micro/visualization3.html#線のタイプ",
    "title": "ミクロ政治データ分析実習",
    "section": "線のタイプ",
    "text": "線のタイプ\n\n主に白黒図で使用\n\n\nコード結果\n\n\n\nCOVID_df |&gt;\n   ggplot() +\n   geom_line(aes(x = Day, y = NewCases, group = Country, linetype = Country),\n             size = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        linetype = \"国\")\n\n自分で線のタイプを指定したい場合は\n\nデータ |&gt;\n  ggplot() +\n  ... +\n  scale_linetype_manual(values = c(\"日本\" = 1, \"韓国\" = 2, \"台湾\" = 3))"
  },
  {
    "objectID": "slides/micro/visualization3.html#linetypeの見本",
    "href": "slides/micro/visualization3.html#linetypeの見本",
    "title": "ミクロ政治データ分析実習",
    "section": "linetypeの見本",
    "text": "linetypeの見本\n種類が多くなると区別しにくいため、最大3つ程度\n\n実線（1）、破線（2）、点線（3）\n一つ面に登場する線は3〜4本程度まで（色分けも同様）"
  },
  {
    "objectID": "slides/micro/visualization3.html#折れ線グラフ-散布図コード",
    "href": "slides/micro/visualization3.html#折れ線グラフ-散布図コード",
    "title": "ミクロ政治データ分析実習",
    "section": "折れ線グラフ + 散布図（コード）",
    "text": "折れ線グラフ + 散布図（コード）\ngeom_point()とgeom_line()を重ねる\n\n後（先）に書いたレイヤーが前面（背面）に\n傾きの変化が激しくない場合に有効\n点は線より大きめに\n白黒印刷に備え、点の形分けも可能\n\n\nCOVID_df |&gt;\n   ggplot(aes(x = Day, y = NewCases, color = Country)) +\n   geom_point(aes(shape = Country), size = 3) +\n   geom_line(aes(group = Country), size = 1) +\n   labs(x = \"日 (2022年6月)\", y = \"100万人当たり新規感染者数 (人)\", \n        color = \"国\", shape = \"国\") +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization3.html#折れ線グラフ-散布図図",
    "href": "slides/micro/visualization3.html#折れ線グラフ-散布図図",
    "title": "ミクロ政治データ分析実習",
    "section": "折れ線グラフ + 散布図（図）",
    "text": "折れ線グラフ + 散布図（図）"
  },
  {
    "objectID": "slides/micro/visualization3.html#箱ひげ図とは",
    "href": "slides/micro/visualization3.html#箱ひげ図とは",
    "title": "ミクロ政治データ分析実習",
    "section": "箱ひげ図とは",
    "text": "箱ひげ図とは\n\n\n変数の分布を示す方法の一つ\n\n最小値、最大値\n\nひげの両端\n\n第一四分位数、第三四分位数\n\n箱の上限と下限\n\n中央値（第二四分位数）\n\n箱内の線\n\n外れ値がある場合、点\n\n変数の分布をグループごとに見る時に有効"
  },
  {
    "objectID": "slides/micro/visualization3.html#箱ひげ図の作成",
    "href": "slides/micro/visualization3.html#箱ひげ図の作成",
    "title": "ミクロ政治データ分析実習",
    "section": "箱ひげ図の作成",
    "text": "箱ひげ図の作成\n人間開発指数 (HDI_2018) の箱ひげ図\n\nx、またはyに分布を確認した変数をマッピングする\n\nxにマッピングするか、yにするかによって箱の向きが変わる\n\n\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018)) +\n   labs(x = \"\", y = \"人間開発指数 (2018)\") +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization3.html#次元の追加-2",
    "href": "slides/micro/visualization3.html#次元の追加-2",
    "title": "ミクロ政治データ分析実習",
    "section": "次元の追加",
    "text": "次元の追加\nyにしかマッピングされているため、まだ次元追加の余地が残っている\n\nxにマッピング（大陸ごとのHDI_2018の箱ひげ図）\n更に次元を追加したい場合は、ファセット分割\n\n\nコード結果\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent)) +\n   labs(x = \"大陸\", y = \"人間開発指数 (2018)\") +\n   theme_bw()"
  },
  {
    "objectID": "slides/micro/visualization3.html#カスタマイズ色",
    "href": "slides/micro/visualization3.html#カスタマイズ色",
    "title": "ミクロ政治データ分析実習",
    "section": "カスタマイズ（色）",
    "text": "カスタマイズ（色）\n箱の色を変える\n\nすべての色を変える場合、aes()の外側にfill\n箱ごとにの色を変える場合、aes()の内側にfill\n\n\nコード (1)結果 (1)コード (2)結果 (2)\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent), fill = \"cornsilk\") +\n   labs(x = \"大陸\", y = \"人間開発指数 (2018)\") +\n   theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent, fill = Continent)) +\n   labs(x = \"大陸\", y = \"人間開発指数 (2018)\") +\n   theme_bw() +\n   theme(legend.position = \"none\") # 凡例の削除"
  },
  {
    "objectID": "slides/micro/visualization3.html#カスタマイズ箱の幅",
    "href": "slides/micro/visualization3.html#カスタマイズ箱の幅",
    "title": "ミクロ政治データ分析実習",
    "section": "カスタマイズ（箱の幅）",
    "text": "カスタマイズ（箱の幅）\n\naes()の外側にwidthを指定\n\n\nコード結果\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(y = HDI_2018, x = Continent), width = 0.5) +\n   labs(x = \"大陸\", y = \"人間開発指数 (2018)\") +\n   theme_bw() +\n   theme(legend.position = \"none\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#横軸と縦軸の交換",
    "href": "slides/micro/visualization3.html#横軸と縦軸の交換",
    "title": "ミクロ政治データ分析実習",
    "section": "横軸と縦軸の交換",
    "text": "横軸と縦軸の交換\n箱が多すぎて読みにくい場合、xとyを交換も良い\n\nコード結果\n\n\n\ndf |&gt;\n   ggplot() +\n   geom_boxplot(aes(x = HDI_2018, y = Continent)) +\n   labs(x = \"人間開発指数 (2018)\", y = \"大陸\") +\n   theme_bw(base_size = 14) +\n   theme(legend.position = \"none\")"
  },
  {
    "objectID": "slides/micro/visualization3.html#最後に",
    "href": "slides/micro/visualization3.html#最後に",
    "title": "ミクロ政治データ分析実習",
    "section": "最後に",
    "text": "最後に\n\n散布図の作成: 教科書第20.6章\n折れ線グラフの作成: 教科書第20.7章\n箱ひげ図: 教科書第20.5章\nグラフのカスタマイズ: 教科書第21章\n\nその他のグラフ\n\n教科書第22章\nThe R Graph Gallery\n\n\n\n\nhttps://www.jaysong.net/r4ps/"
  },
  {
    "objectID": "syllabus/syllabus_macro.html",
    "href": "syllabus/syllabus_macro.html",
    "title": "マクロ政治データ分析実習",
    "section": "",
    "text": "講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: 社会科学のリサーチデザイン & Rを用いたデータ分析の基礎\n\nリサーチデザイン\n統計的推論・仮説検定\n平均値の（差の）検定\n相関分析\n独立性の検定\n線形回帰分析\nロジスティック回帰分析\n\nRの使い方そのものについては解説しない。\n\nRの使い方は前期の「ミクロ政治データ分析実習」で解説済み\n\n前提知識: 前期の「ミクロ政治データ分析実習」を履修すること。\n\n未修の場合、{dplyr}、{tidyr}、{ggplot2}、Quartoに関する知識が必要。\nブラインドタッチが出来ること。"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#概要",
    "href": "syllabus/syllabus_macro.html#概要",
    "title": "マクロ政治データ分析実習",
    "section": "",
    "text": "講義日: 木曜日 第4時限（14:40～16:10）\n場所: TC302教室（高槻キャンパス C棟 302教室）\n講義内容: 社会科学のリサーチデザイン & Rを用いたデータ分析の基礎\n\nリサーチデザイン\n統計的推論・仮説検定\n平均値の（差の）検定\n相関分析\n独立性の検定\n線形回帰分析\nロジスティック回帰分析\n\nRの使い方そのものについては解説しない。\n\nRの使い方は前期の「ミクロ政治データ分析実習」で解説済み\n\n前提知識: 前期の「ミクロ政治データ分析実習」を履修すること。\n\n未修の場合、{dplyr}、{tidyr}、{ggplot2}、Quartoに関する知識が必要。\nブラインドタッチが出来ること。"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#オフィスアワー",
    "href": "syllabus/syllabus_macro.html#オフィスアワー",
    "title": "マクロ政治データ分析実習",
    "section": "オフィス・アワー",
    "text": "オフィス・アワー\n宋、またはTAが研究室に待機し、事前予約なしに相談、質問などが可能な時間\n\n場所：TA227研究室（A棟の2階）\n毎週水曜日2限 (10:40〜12:10)\n\n宋が対応\n\n毎週木曜日3・5限 (13:00〜14:30 / 16:20〜17:50)\n\n宋・TAが対応\n\n上記の時間外は事前予約が必要（メール、対面）\n\nメール: song@kansai-u.ac.jp"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#講義内容",
    "href": "syllabus/syllabus_macro.html#講義内容",
    "title": "マクロ政治データ分析実習",
    "section": "講義内容",
    "text": "講義内容\n\n\n\n回\n内容\n教科書\n課題（予定）\n\n\n\n\n1\nガイダンス\n\n\n\n\n2\nリサーチデザイン（1）\n第1〜3章\n\n\n\n3\nリサーチデザイン（2）\n同上\n\n\n\n4\n記述統計\n第6章\n\\(\\bigcirc\\)\n\n\n5\n統計的推定\n第7章\n\n\n\n6\n統計的仮説検定\n第8章\n\n\n\n7\n変数間の関係\n第9章\n\\(\\bigcirc\\)\n\n\n8\n回帰分析（1）\n第10〜13章\n\n\n\n9\n回帰分析（2）\n同上\n\n\n\n10\n回帰分析（3）\n同上\n\\(\\bigcirc\\)\n\n\n11\nロジスティック回帰分析\n第15章\n\n\n\n12\n交互作用\n第14章\n\\(\\bigcirc\\)\n\n\n13\n分析結果の可視化\n\n\\(\\bigcirc\\)\n\n\n14\n期末レポートの執筆\n\n\n\n\n15\n期末レポートの執筆"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#前提知識",
    "href": "syllabus/syllabus_macro.html#前提知識",
    "title": "マクロ政治データ分析実習",
    "section": "前提知識",
    "text": "前提知識\n\nファイル・システムの理解\n\nフォルダー (ディレクトリ)の概念\nC:/AAA/BBB/CCC.txt (Windows)や~/AAA/BBB/CCC.text (macOS / Linux)の意味が理解できること\n相対パス / 絶対パスの概念が理解できること\n不安がある場合は本サポートページの「ファイル・システム」を参照すること。\n\nブラインド・タッチ (重要)\n\nタイピングが遅いと、実習で非常に苦労する。\n第4回の授業までにブラインドタッチの練習を推奨\n\nグーグルで「タイピング練習」で検索すれば様々な情報が得られる。一日30分以上、2週間程度である程度出来るようになり、それ以降は意識しなくても上達していく。\n\nこの授業に限らず、現代社会で極めて重要なスキル"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#教科書",
    "href": "syllabus/syllabus_macro.html#教科書",
    "title": "マクロ政治データ分析実習",
    "section": "教科書",
    "text": "教科書\n\n浅野正彦・矢内勇生. 2018. 『Rによる計量政治学』オーム社."
  },
  {
    "objectID": "syllabus/syllabus_macro.html#参考書",
    "href": "syllabus/syllabus_macro.html#参考書",
    "title": "マクロ政治データ分析実習",
    "section": "参考書",
    "text": "参考書\n\nデータ分析\n\n飯田健. 2013. 『計量政治分析』共立出版.\n今井耕介 著. 粕谷祐子・原田勝孝・久保浩樹 訳. 2018. 『社会科学のためのデータ分析入門(上/下)』有斐閣.\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nR\n\n松村優哉 他. 2021. 『改訂2版 RユーザのためのRStudio[実践]入門』技術評論社.\nGarrett Grolemund and Hadley Wickham. 2017. R for Data Science. O’Reilly.\n\n邦訳『Rではじめるデータサイエンス』(原著は無料: https://r4ds.had.co.nz/)\n\nSong Jaehyun・矢内勇生.『私たちのR: ベストプラクティスの探求』Web-book.\n\nミクロ政治データ分析実習の教科書"
  },
  {
    "objectID": "syllabus/syllabus_macro.html#成績評価",
    "href": "syllabus/syllabus_macro.html#成績評価",
    "title": "マクロ政治データ分析実習",
    "section": "成績評価",
    "text": "成績評価\n\n平常点: 30%\n\n欠席4回以上は評価の対象外（3回まで評価対象）\n45分以上欠席は出席0.5回扱い\n欠席届を提出した場合は出席扱い\n\n課題: 40%\n\n課題は計5〜6回を予定\n3回以上未提出は評価の対象外（2回未提出までは評価対象）\n課題提出期限の延長はない（提出までの期間が長めであるため）\n\n提出期限は次回講義の前日23時59分まで\n期限内に提出出来なかった場合でも宋に連絡する必要はない（どうせ延ばしてくれない）。\n\n\n期末レポート: 30%\n\n自分独自の問いを立て、その問いに答えるための過程と結果を記録したレポート\n未提出者は評価対象外\n授業の第14・15回は期末レポートの執筆\n\n「評価対象」とは「採点の対象」であることを意味し、単位を保障するものではない。\n不正行為厳禁"
  },
  {
    "objectID": "slides/micro/handling3.html#pivot_longerとpivot_wider",
    "href": "slides/micro/handling3.html#pivot_longerとpivot_wider",
    "title": "ミクロ政治データ分析実習",
    "section": "pivot_longer()とpivot_wider()",
    "text": "pivot_longer()とpivot_wider()"
  },
  {
    "objectID": "slides/micro/visualization1.html#データとプロット内の要素の対応",
    "href": "slides/micro/visualization1.html#データとプロット内の要素の対応",
    "title": "ミクロ政治データ分析実習",
    "section": "データとプロット内の要素の対応",
    "text": "データとプロット内の要素の対応\nプロット内の要素：点、線、面\n\n以下の散布図の場合、各点は横軸上の位置（x）で投票率、縦軸上の位置（y）で現職の得票率を、色（color）で現職の所属政党を表している。"
  },
  {
    "objectID": "slides/micro/visualization2.html#図の保存",
    "href": "slides/micro/visualization2.html#図の保存",
    "title": "ミクロ政治データ分析実習",
    "section": "図の保存",
    "text": "図の保存\nbar_plot3を保存する例\n\nggsave()関数を利用\n作業フォルダー内のFigsフォルダにFigure1.pngという名で保存\n\n予めFigsフォルダーを作成しておくこと\n\n図のサイズは幅6インチ、高さ3インチ\n保存形式はPNG形式 & 解像度は400\n\n画面表示のみなら最低150、印刷目的なら最低300\n\n{ragg}パッケージをインストールしておく（文字化け防止）\n\n\nggsave(filename = \"Figs/Figure1.png\", # 保存先とファイル名\n       plot     = bar_plot3,          # 保存する図のオブジェクト名\n       width    = 6,                  # 図の幅 (インチ)\n       height   = 3,                  # 図の高さ (インチ)\n       dpi      = 400,                # 解像度\n       device   = ragg::agg_png)      # 文字化け防止"
  },
  {
    "objectID": "slides/micro/visualization2.html#授業開始前に",
    "href": "slides/micro/visualization2.html#授業開始前に",
    "title": "ミクロ政治データ分析実習",
    "section": "授業開始前に",
    "text": "授業開始前に\nすぐに実習できるように準備しておきましょう。\n\nJDCat分析ツールを起動しておいてください。\n本日授業用のプロジェクトを作成してください。\nLMSから実習用データをダウンロードしておいてください。\n\n第9・10回と同じデータです。\n\nダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。\n\nプロジェクト・フォルダー内にDataフォルダーを作成し、そこにアップロードしましょう。\n\n実習用コードを入力するスクリプトファイル、またはQuartoファイルを開き、以下のコードを入力&実行してください。\n\n\nlibrary(tidyverse)\n\n# countries.csvのアップロード先に応じて、パスを適宜修正すること\ndf &lt;- read_csv(\"Data/countries.csv\")\n\n\nトラブルが生じた場合、速やかにTAを呼んでください。\n時間に余裕があれば、スライド内のコードも書いておきましょう。"
  },
  {
    "objectID": "slides/micro/visualization3.html",
    "href": "slides/micro/visualization3.html",
    "title": "ミクロ政治データ分析実習",
    "section": "",
    "text": "2022年7月21日14時40分〜16時10分\n指定席に着席すること\n通常の課題と同じ手順\n16時10分まで出来たところまでLMSに提出（.html形式）\n\n16時10分を過ぎると、提出窓口ページを開いていても提出できない。\n残りは持ち帰って2022年7月21日23時59分まで再提出\n\n採点\n\n持ち帰り分は5割減点\n4限中に7問以上回答して提出すること（全て正解である必要はない）\n各問題の配点は履修者の正解率に応じて調整する。\n\n詳細はサポートページ &gt; 課題 &gt; 期末テスト実施要領を参照\n不正行為禁止"
  }
]