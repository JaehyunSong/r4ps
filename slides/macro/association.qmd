---
subtitle: "第7回 変数間の関係"
date: "1986/10/08"
format: revealjs
metadata-files: 
  - _slide.yml
---

## 授業開始前に

```{r}
#| include: false
pacman::p_load(tidyverse, gt, summarytools, mvtnorm)
```

すぐに実習できるように準備しておきましょう。

1. JDCat分析ツールを起動しておいてください。
2. 本日授業用のプロジェクトを作成してください。
3. LMSから実習用データ（3つ）をダウンロードしておいてください。
4. ダウンロードしてデータをプロジェクト・フォルダーにアップロードしてください。
   * プロジェクト・フォルダー内に`Data`フォルダーを作成し、そこにアップロードしましょう。
5. 実習用コードを入力するスクリプト、またはR Markdownを開き、以下のコードを入力&実行してください。

```{r}
#| eval: false
library(tidyverse)

gacha_df   <- read_csv("Data/Gacha2.csv")
subsidy_df <- read_csv("Data/Subsidy.csv")
pasta_df   <- read_csv("Data/Pasta.csv")
```

* トラブルが生じた場合、速やかにTAを読んでください。
* 時間に余裕があれば、スライド内のコードも書いておきましょう。

# $t$検定: 平均値の差の検定

## データの読み込み

```{r}
library(tidyverse)
# 作業フォルダーの下のDataフォルダー内になるGacha2.csvを読み込み、gacha_dfという名で格納
# 今回のデータは先週と同じであるが、result変数のダミー化済み
gacha_df <- read_csv("Data/Gacha2.csv")

gacha_df # gacha_dfの出力
```

## 問題設定

> 　あるソシャゲのガチャ確率を見ると、SSR (★5)の出現確率は5%と記載されている。しかし、ガチャでSSRが出現する確率が有償石か無料石かによって変わる噂を聞いた。これが本当なら大炎上するだろう。この噂は本当だろうか。

* 帰無仮説（$H_0$）：無償石のSSRの確率と有償石のSSRの確率の差は0である。
   * 2つの確率が同じなら、その差分は0であるため
* 対立仮説（$H_a$）：無償石のSSRの確率と有償石のSSRの確率の差は0ではない。

<br/>

* 2つの考え方があり得る（本質的には同じ）
  * 無償石のガチャと有償石のガチャを別途の標本として考える。
  * 名目変数（石の種類）と連続変数（SSRの出現割合）間の関係

::: aside
**注意:** 変数が0または1の値のみを取る場合、これから紹介する「$t$検定」でなく、「母比率の差の検定」を使うのが適切であるが、ここではより汎用性の高い$t$検定の例で紹介する。
:::

## 点推定値

* 約-1.5%ポイントの差が存在
   * 無料石の場合の`result_SSR`の平均値（$\bar{x}_{\mbox{free}}$）は0.0425（4.25%）
   * 有償石の場合の`result_SSR`の平均値（$\bar{x}_{\mbox{paid}}$）は0.0572（5.72%）
* 無料石でガチャを引くと有償石で引いた場合より、SSRが出現する確率が約1.5%ポイント低い $\Rightarrow$ 点推定値
   * これは**統計的**に有意な差か

```{r}
gacha_df %>%
  group_by(stone_type) %>%
  summarise(SSR = mean(result_SSR) * 100)
```

## 平均値の差の検定の考え方

* 標本平均（$\bar{x}_{\mbox{free}}$と$\bar{x}_{\mbox{paid}}$）は正規分布に従う（= 中心極限定理）
* 正規分布を従う2つの値の差分（$\delta = \bar{x}_{\mbox{free}} - \bar{x}_{\mbox{paid}}$）も正規分布に従う
   * 帰無仮説（$H_0$）は$\delta = 0$
* $\delta$は正規分布に従うため、 $\frac{\delta - \delta_0}{\mbox{SE}_\delta}$は$t$分布に従う
   * 帰無仮説上の$\delta$（=$\delta_0$）は0であるため、$\delta_0 = 0$
   * $\mbox{SE}_{\delta}$と検定に使用する$t$分布の自由度の計算はやや複雑
   * パソコンに任せる
* 後は先週の内容と同じ手順
   * `t.test()`関数を使えば簡単

## `t.test()`関数の使用

* 第1引数は「`平均値を計算する変数名 ~ グループ変数名`」(今回は`result_SSR ~ stone_type`)
* 第2引数は「`data = データ名`」(今回は`data = gacha_df`)

```{r}
t.test(result_SSR ~ stone_type, data = gacha_df)
```

## 結果の解釈

* 点推定値：$\hat{\delta} = \bar{x}_{\mbox{free}} - \bar{x}_{\mbox{paid}} \simeq -0.15$（約-1.5%ポイント）

#### 帰無仮説の棄却有無を確認する3つの方法

* 有意水準（$\alpha$）は0.05と設定
   1. 検定統計量：約-2.165 / 棄却域：($-\infty$, $-1.961$]と[$1.961$, $\infty$)
      * 検定統計量は棄却域に含まれる $\rightarrow$ 帰無仮説を棄却
   2. 点推定値の95%信頼区間: [-0.028, -0.001] (-2.8%ポイント〜-0.1%ポイント)
      * 95%信頼区間に帰無仮説の値 (0)が含まれていない $\rightarrow$ 帰無仮説を棄却
   3. $p$値：0.030
      * $p < \alpha$ $\rightarrow$帰無仮説を棄却

#### 結論

* 「無償石のSSRの確率と有償石のSSRの確率の差はない」という帰無仮説を棄却する。したがって、有意水準5%で無償石のSSRの確率と有償石のSSRの確率には差がある。

## 参考）母比率の差の検定：`prop.test()`の使用

* `x`: SSRの出現枚数（無償石ガチャで133枚、有償石ガチャで94枚）
* `n`: 試行回数（無償石ガチャ3128回、有償石ガチャ1644回）

```{r}
prop.test(x = c(133, 94), n = c(3128, 1644))
```

# 相関分析: 連続変数間の関係

## 問題設定

> 　政治家・政党にとって「投票率の高い地域」は「票になる地域」であるため、補助金などで優遇されているかも知れない。一方、投票率の低い地域は票にならないため、政治家・政党にとって、関心が払われていない可能性もある。これは本当だろうか。仮説検定の際、$\alpha = 0.05$を用いる。

2つの**連続変数間の関係**: 「投票率」と「補助金額」

::::{.columns}
:::{.column width=49%}
```{r}
subsidy_df <- read_csv("Data/Subsidy.csv")

subsidy_df
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
|変数|説明|
|:--:|:---|
|`ID`|都道府県ID|
|`Pref`|都道府県名|
|`Turnout`|投票率 (%)|
|`Subsidy`|人口1万人当たり地方交付税額 (万円)|
:::
::::

::: aside
**注意：** 変数が「順序変数」の場合もこれから紹介する方法で相関係数の計算ができるものの、基本的には「ノンパラメトリック相関係数」が推奨される。詳細はGoogleなどで調べてみること
:::

## 正の相関、負の相関、無相関

* **正の相関：**変数1が大きくなれば、変数2も大きくなる
* **負の相関：**変数1が大きくなれば、変数2は小さくなる
* **無相関：**変数1が大きくなっても、変数2は変わらない

```{r}
#| echo: false
#| cache: true
#| fig-width: 8
#| fig-height: 3
set.seed(1986)
col_df1 <- rmvnorm(100, mean = c(0, 0), 
                   sigma = matrix(c(1, 0, 0, 1), nrow = 2)) %>%
  as.data.frame()
col_df2 <- rmvnorm(100, mean = c(0, 0), 
                   sigma = matrix(c(1, 0.75, 0.75, 1), nrow = 2)) %>%
  as.data.frame()
col_df3 <- rmvnorm(100, mean = c(0, 0), 
                   sigma = matrix(c(1, -0.75, -0.75, 1), nrow = 2)) %>%
  as.data.frame()

col_df <- bind_rows(list("Type 1" = col_df1, 
                         "Type 2" = col_df2,
                         "Type 3" = col_df3),
                    .id = "Type") %>%
  mutate(Type = recode(Type,
                       "Type 1" = "相関関係なし (相関係数 = 0)",
                       "Type 2" = "正の相関関係 (相関係数 = 0.75)",
                       "Type 3" = "負の相関関係 (相関係数 = -0.75)"))

col_df %>%
  ggplot() +
  geom_point(aes(x = V1, y = V2)) +
  facet_wrap(~Type, nrow = 1) +
  labs(x = "変数1", y = "変数2") +
  theme_bw(base_size = 12) +
  theme(axis.ticks = element_blank(),
        axis.text = element_blank())
```

## 相関係数

相関係数（$\rho$）: 2つの変数間の相関関係の強さを表す指標

* 相関係数は-1以上1以下（$-1 \leq \rho \leq 1$）
   * -1: 完全な負の相関 / 0: 無相関 / 1: 完全な正の相関
* 母集団における相関係数は$\rho$（ロー）、標本における相関係数は$r$と表記するのが一般的
* 「相関関係の強さ」とは?
   * 2つの変数間の関係を直線で表した場合、点が直線から近いか、離れているか。

## 相関関係の強さ

変数1（$x$）と変数2（$y$）の関係（青い線）はいずれも$y = 1.5 \times x$の直線（若干のズレはある）

* 青の直線 = 回帰直線（次回にて解説）

```{r}
#| echo: false
#| cache: true
#| fig-width: 8
#| fig-height: 3
set.seed(1986)
col_df1 <- tibble(x = runif(100, -1, 1)) %>%
  mutate(y = 1.5 * x + rnorm(100, 0, 3))
col_df2 <- tibble(x = runif(100, -1, 1)) %>%
  mutate(y = 1.5 * x + rnorm(100, 0, 1.5))
col_df3 <- tibble(x = runif(100, -1, 1)) %>%
  mutate(y = 1.5 * x + rnorm(100, 0, 0.6))

col_df <- bind_rows(list("Type 1" = col_df1, 
                         "Type 2" = col_df2,
                         "Type 3" = col_df3),
                    .id = "Type") %>%
  mutate(Type = recode(Type,
                       "Type 1" = "相関係数 = 0.37",
                       "Type 2" = "相関係数 = 0.50",
                       "Type 3" = "相関係数 = 0.83"))

col_df %>%
  ggplot() +
  geom_point(aes(x = x, y = y)) +
  geom_smooth(aes(x = x, y = y), 
              method = "lm", se = FALSE, size = 2) +
  facet_wrap(~Type, nrow = 1) +
  labs(x = "変数1", y = "変数2") +
  theme_bw(base_size = 12) +
  theme(axis.ticks = element_blank(),
        axis.text = element_blank())
```

## 散布図の確認

::::{.columns}
:::{.column width=53%}
正の相関関係

* 相関係数は?
* （超）母集団においても相関しているだろうか。

```{r}
#| eval: false
subsidy_df %>%
  ggplot(aes(x = Turnout, y = Subsidy)) +
  geom_point() +
  # 回帰直線を追加したい場合は以下のレイヤーを足す
  #geom_smooth(method = "lm", se = FALSE) +
  labs(x = "投票率 (%)",
       y = "1万人当り地方交付税額 (万円)") +
  theme_bw()
```
:::

:::{.column width=2%}
:::

:::{.column width=45%}
```{r}
#| cache: true
#| echo: false
#| fig-width: 5
#| fig-height: 5
subsidy_df %>%
  ggplot(aes(x = Turnout, y = Subsidy)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "投票率 (%)",
       y = "1万人当り地方交付税額 (万円)") +
  theme_bw()
```
:::
::::

## 相関係数の求め方

::::{.columns}
:::{.column width=38%}
変数1（$x$）と変数2（$y$）の相関係数

$$
\begin{align}
r_{x, y} = \frac{\mbox{Cov}_{x, y}}{s_x \cdot s_y}
\end{align}
$$

* $\mbox{Cov}_{x, y}$ : 変数 $x$ と $y$ の共分散（`cov()`）
   * 共分散の求め方、意味は適宜[Google](https://www.google.com/search?q=共分散)検索
* $s_x$: 変数$x$の不偏分散の平方根（`sd()`）
* $s_y$: 変数$y$の不偏分散の平方根（`sd()`）
:::

:::{.column width=2%}
:::

:::{.column width=60%}
```{r}
cov_xy <- cov(subsidy_df$Turnout, subsidy_df$Subsidy)
cov_xy # 投票率と補助金額の共分散
sd_x <- sd(subsidy_df$Turnout)
sd_x # 投票率の不偏分散の平方根
sd_y <- sd(subsidy_df$Subsidy)
sd_y # 補助金額の不偏分散の平方根
r <- cov_xy / (sd_x * sd_y)
r # 相関係数
```
:::
::::

## 相関係数の仮説検定

* 帰無仮説（$H_0$）: 都道府県の投票率と補助金額には相関関係がない（$\rho = 0$） 。
* 対立仮説（$H_a$）: 都道府県の投票率と補助金額には相関関係がある（$\rho \neq 0$）。

$$
t = \frac{r_{x, y}}{\sqrt{1 - r_{x, y}}} \sqrt{n - 2}
$$

$t$は自由度$n-2$の$t$分布に従うため、統計的仮説検定が可能（第7回参照）

```{r}
t_value <- r / (sqrt(1 - r^2)) * sqrt(47 - 2)
t_value
pt(-abs(t_value), df = 45) * 2 # p値
```

## `cor.test()`の使用

第一引数として変数1のベクトル、第二引数として変数2のベクトルを指定（順番は逆でも可）

* 順序変数の相関係数を計算する際は、第3引数として`method = "kendall"`（Kendallの順位相関係数$\tau$）、または`method = "spearman"`（Spearmanの順位相関係数$\rho$）を指定することを推奨
   * デフォルトは連続変数の相関係数であるPearsonの積率相関係数（`method = "pearson"`）

```{r}
cor.test(subsidy_df$Turnout, subsidy_df$Subsidy)
```

## 結果の解釈

相関係数の$p$値は約0.006であり、予め決めておいた$\alpha$（= 0.05）より小さい（$p < \alpha$）。

* 帰無仮説は棄却され、対立仮説が支持される。
* 解釈1) 都道府県の投票率と補助金額の間には相関関係が**ある**。
   * これだけだと、ちょっと物足りない。
* 解釈2) 都道府県の投票率と補助金額の間には**正の相関関係**がある。つまり、**投票率が高い都道府県は、政府からもらう補助金額も高い傾向**がある。
   * **注意:** 相関関係 $\neq$ 因果関係
   * 都道府県の投票率が高くなると、政府からもらう補助金額も増える $\leftarrow$ **間違った解釈!!**
   * 相関関係は因果関係の十分条件ではない（というか、必要条件ですらない）。

<br/>

もし、 $p \geq \alpha$ なら...

* 都道府県の投票率と補助金額の間には相関関係が**あるとは言えない**。

## 参考）相関係数の大きさの解釈

Hinkle, Dennis E., William Wiersma, and Stephen G. Jurs. 2003. *Applied Statistics for the Behavioral Sciences. 5th ed.,* Houghton Mifflin.

* ただし、社会科学の場合、相関係数が0.3、-0.3程度であってもそこそこの強さと判断したりもする。
* $\Rightarrow$ 絶対的な基準はない

|相関係数|説明|
|:---:|:---|
|$0.9 < r \leq 1.0$|とても強い正の相関関係|
|$0.7 < r \leq 0.9$|強い正の相関関係|
|$0.5 < r \leq 0.7$|中程度の正の相関関係|
|$0.3 < r \leq 0.5$|弱い正の相関関係|
|$0.0 \leq r \leq 0.3$|わずかな正の相関関係|
|$-0.3 \leq r \leq 0.0$|わずかな負の相関関係|
|$-0.5 \leq r < -0.3$|弱い負の相関関係|
|$-0.7 \leq r < -0.5$|中程度の負の相関関係|
|$-0.9 \leq r < -0.7$|強い負の相関関係|
|$-1.0 \leq r < -0.9$|とても強い負の相関関係|

# $\chi^2$検定: 独立性の検定

## 問題設定

> 　ミートソース、ナポリタン、ペペロンチーノ、カルボナーラ、...。みんなが大好きなパスタだが、性別によって好きなパスタは異なるだろうか。これが分かれば気になる彼（彼女）とのデートに参考にしたい。あるいは、性別よりも年齢によって好きなパスタが異なるかも知れない。実際はどうだろう。仮説検定の際、 $\alpha = 0.05$ を用いる。

2つの**カテゴリー**変数間の関係: 「性別」と「好きなパスタ」/「40歳以上か否か」と「好きなパスタ」

::::{.columns}
:::{.column width=49%}
```{r}
pasta_df <- read_csv("Data/Pasta.csv")

pasta_df
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
|変数|説明|
|:---|:---|
|`ID`|回答者番号|
|`Female`|女性なら1、男性なら0|
|`Over40`|40歳以上なら1、未満なら0|
|`Pasta`|好きなパスタ|
:::
::::

## クロス表を確認する

`table()`関数を使用（2つのベクトルオブジェクト名を指定）

::::{.columns}
:::{.column width=49%}
性別と好きなパスタの関係

```{r}
# with(pasta_df, table(Female, Pasta)) もOK
table(pasta_df$Female, pasta_df$Pasta)
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
年齢と好きなパスタの関係

```{r}
# with(pasta_df, table(Over40, Pasta)) もOK
table(pasta_df$Over40, pasta_df$Pasta)
```
:::
::::

<br/>

どのような場合、「性別 (or 年齢)と好きなパスタには何らかの関係がある」と言えるだろうか。

## カテゴリー変数間の「独立」と「連関」

「独立 (independent)」と「連関 (association)」の例

::::{.columns}
:::{.column width=49%}
出身地と好きな飲物が「**独立**」している例

* 度数で表した場合

```{r, echo = FALSE}
tibble(x = c("大阪", "神戸", "計"),
       coffee = c(10, 10, 20),
       sauce = c(10, 10, 20),
       total = c(20, 20, 40)) %>%
  gt() %>%
  cols_label("x" = "出身", "coffee" = "コーヒー", 
             "sauce" = "ソース", total = "計")
```

* 割合で表した場合

```{r, echo = FALSE}
tibble(x = c("大阪", "神戸", "計"),
       coffee = c(0.25, 0.25, 0.50),
       sauce = c(0.25, 0.25, 0.50),
       total = c(0.50, 0.50, 1.00)) %>%
  gt() %>%
  cols_label("x" = "出身", "coffee" = "コーヒー", 
             "sauce" = "ソース", total = "計")
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
出身地と好きな飲物が「**連関**」している例

* 度数で表した場合

```{r, echo = FALSE}
tibble(x = c("大阪", "神戸", "計"),
       coffee = c(0, 20, 20),
       sauce = c(20, 0, 20),
       total = c(20, 20, 40)) %>%
  gt() %>%
  cols_label("x" = "出身", "coffee" = "コーヒー", 
             "sauce" = "ソース", total = "計")
```

* 割合で表した場合

```{r, echo = FALSE}
tibble(x = c("大阪", "神戸", "計"),
       coffee = c(0.00, 0.50, 0.50),
       sauce = c(0.50, 0.00, 0.50),
       total = c(0.50, 0.50, 1.00)) %>%
  gt() %>%
  cols_label("x" = "出身", "coffee" = "コーヒー", 
             "sauce" = "ソース", total = "計")
```
:::
::::

* 独立: **同時分布が周辺分布の積と一致**する場合
* 連関: 独立ではない場合

## 同時分布と周辺分布

![](Figs/08/Distribution.png)

## クロス表における「独立」の意味

同時分布が周辺分布の積と一致すること

* 前の表 (出身地と好きな飲物)の場合、どれも周辺分布は同じ
* 左側表の場合、同時分布が周辺分布の積と一致
* 右側表の場合、同時分布が周辺分布の積と不一致

<br/>

* 期待割合: 周辺分布の積
   * 独立であれば、このセルの値 (割合)は0.XXだろう。
* 期待度数: 標本サイズに期待割合をかけたもの
   * 独立であれば、このセルの値 (度数)はZZだろう。

::: aside
**注意：** 期待度数が5未満のセルが存在する場合、これから紹介する $\chi^2$ 検定より、Fisher's exact test（フィッシャーの正確検定）の方が望ましいと知られている。詳細は教科書p.184を参照すること。
:::

## 期待度数の計算

::::{.columns}
:::{.column width=49%}
* Step 1: 度数のクロス表を作成する

```{r}
#| echo: false
tibble(x = c("40歳未満", "40歳以上", "計"),
       pasta1 = c(138, 140, 138 + 140),
       pasta2 = c(177, 184, 177 + 184),
       pasta3 = c(160, 138, 160 + 138),
       pasta4 = c(65, 133, 65 + 133),
       total = c(138 + 177 + 160 + 65,
                 140 + 184 + 138 + 133,
                 138 + 177 + 160 + 65 + 140 + 184 + 138 + 133)) %>%
  gt() %>%
  cols_label("x" = "年齢", "total" = "計",
             "pasta1" = "カルボナーラ", "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン", "pasta4" = "ペペロンチーノ")
```

* Step 2: 割合に変換

```{r}
#| echo: false
tibble(x = c("40歳未満", "40歳以上", "計"),
       pasta1 = c(138, 140, 138 + 140),
       pasta2 = c(177, 184, 177 + 184),
       pasta3 = c(160, 138, 160 + 138),
       pasta4 = c(65, 133, 65 + 133),
       total = c(138 + 177 + 160 + 65,
                 140 + 184 + 138 + 133,
                 138 + 177 + 160 + 65 + 140 + 184 + 138 + 133)) %>%
  mutate(across(pasta1:total, ~(.x / 1135))) %>%
  gt() %>%
  cols_label("x" = "年齢", "total" = "計",
             "pasta1" = "カルボナーラ", "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン", "pasta4" = "ペペロンチーノ") %>%
  fmt_number(pasta1:total, decimals = 3)
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
* Step 3: 同時分布を周辺分布の積に置換 $\rightarrow$ 期待割合

```{r}
#| echo: false
tibble(x = c("40歳未満", "40歳以上", "計"),
       pasta1 = c(0.117, 0.128, 0.245),
       pasta2 = c(0.151, 0.167, 0.318),
       pasta3 = c(0.125, 0.138, 0.263),
       pasta4 = c(0.083, 0.091, 0.174),
       total  = c(0.476, 0.524, 1.000)) %>%
  gt() %>%
  cols_label("x" = "年齢", "total" = "計",
             "pasta1" = "カルボナーラ", "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン", "pasta4" = "ペペロンチーノ") %>%
  fmt_number(pasta1:total, decimals = 3)
```

* Step 4: 上の表に標本サイズ (1135)をかける $\rightarrow$ 期待度数

```{r}
#| echo: false
tibble(x = c("40歳未満", "40歳以上", "計"),
       pasta1 = c(0.117, 0.128, 0.245),
       pasta2 = c(0.151, 0.167, 0.318),
       pasta3 = c(0.125, 0.138, 0.263),
       pasta4 = c(0.083, 0.091, 0.174),
       total  = c(0.476, 0.524, 1.000)) %>%
  mutate(across(pasta1:total, ~.x * 1135)) %>%
  gt() %>%
  cols_label("x" = "年齢", "total" = "計",
             "pasta1" = "カルボナーラ", "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン", "pasta4" = "ペペロンチーノ") %>%
  fmt_number(pasta1:total, decimals = 0)
```
:::
::::

## 期待度数からのズレを計算

Step 1: クロス表の値から期待度数の値を引く (周辺分布のセルは不要)。

```{r}
#| echo: false
tibble(x = c("40歳未満", "40歳以上"),
       pasta1 = c("138 - 133 = 5",  "140 - 145 = -5"),
       pasta2 = c("177 - 171 = 6",  "184 - 190 = -6"),
       pasta3 = c("160 - 142 = 18", "138 - 157 = -19"),
       pasta4 = c("65 - 94 = -29",  "133 - 103 = 30")) %>%
  gt() %>%
  cols_label("x" = "年齢",
             "pasta1" = "カルボナーラ", "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン", "pasta4" = "ペペロンチーノ") %>%
  cols_align(columns = pasta1:pasta4, align = "center")
```

<br/>

Step 2: ズレを2乗し、期待度数で割る。

```{r}
#| echo: false
tibble(x      = c("40歳未満", "40歳以上"),
       pasta1 = c("5<sup>2</sup> / 133 = 0.19",  
                  "-5<sup>2</sup> / 145 = 0.17"),
       pasta2 = c("6<sup>2</sup> / 171 = 0.21",
                  "-6<sup>2</sup> / 190 = 0.19"),
       pasta3 = c("18<sup>2</sup> / 142 = 2.28",
                  "-19<sup>2</sup> / 157 = 2.30"),
       pasta4 = c("-29<sup>2</sup> / 94 = 8.95",  
                  "30<sup>2</sup> / 103 = 8.74")) %>%
  gt() %>%
  cols_label("x"      = "年齢",
             "pasta1" = "カルボナーラ", 
             "pasta2" = "ミートソース", 
             "pasta3" = "ナポリタン",
             "pasta4" = "ペペロンチーノ") %>%
  cols_align(columns = pasta1:pasta4, align = "right") %>% 
  fmt_markdown(columns = pasta1:pasta4)
```

<br/>

Step 3: セルの値の合計を計算する

* 0.19 + 0.17 + 0.21 + 0.19 + 2.28 + 2.30 + 8.95 + 8.74 $\simeq$ 23.03　$\leftarrow$　 $\chi^2$ 統計量 (**検定統計量**)
* 小数点を丸めず、厳密に計算すると約22.51549

## $\chi^2$統計量

**各セルの期待度数からのズレを二乗し、期待度数で割った値の和** $\rightarrow$ $\chi^2$ 統計量

* 「カイ二乗」、「カイ自乗」、「カイ・スクェアード (chi squared)」と読む
* $\chi^2$ 統計量は $\chi^2$ 分布と呼ばれる確率分布に従う
   * 与えられた表 ( $i$ 行 $\times$ $j$ 列)と、周辺分布、標本サイズ ( $n$ ) におけるあらゆる可能性から計算された $\chi^2$ 統計量でヒストグラムを描くと 自由度 $(i-1)(j-1)$ の $\chi^2$ 分布の形をする。

### $\chi^2$分布の特徴

* 下限が0、上限が $\infty$ の**非対称**の分布
   * $\chi^2$ は常に0以上であるため、対立仮説は $\chi^2 \neq 0$ でなく、 $\chi^2 > 0$
* **自由度**によって分布の形が変わる
   * 独立性の検定における $\chi^2$ 分布の自由度: (行数 - 1) $\times$ (列数 - 1)
   * 2行4列表の場合、 $(2 - 1) \times (4 - 1) = 1 \times 3 = 3$
* **2つの変数が独立**の場合、 $\chi^2 = 0$ であり、 $\chi^2$が大きいほど**2つの変数は連関**する。
   * $\chi^2$ がいくつ以上なら、独立でないと言えるか $\rightarrow$ 臨界値

## $\chi^2$分布の例

```{r}
#| echo: false
#| cache: true
#| fig-width: 8
#| fig-height: 4
chisq_df <- tibble(x = c(seq(0, 25, 0.1),
                         seq(0, 25, 0.1),
                         seq(0, 25, 0.1),
                         seq(0, 25, 0.1)),
                   y = c(dchisq(seq(0, 25, 0.1), df = 1),
                         dchisq(seq(0, 25, 0.1), df = 3),
                         dchisq(seq(0, 25, 0.1), df = 5),
                         dchisq(seq(0, 25, 0.1), df = 10)),
                   df = c(rep("1", 251),
                          rep("3", 251),
                          rep("5", 251),
                          rep("10", 251))) 

chisq_df %>%
  mutate(df = factor(df, levels = c("1", "3", "5", "10"))) %>%
  ggplot() +
  geom_line(aes(x = x, y = y, color = df), size = 1) +
  coord_cartesian(ylim = c(0, 0.5), xlim = c(0, 20)) +
  labs(x = "検定統計量", y = "確率密度", color = "自由度") +
  theme_bw() +
  theme(legend.position = c(0.95, 0.78),
        legend.background = element_blank())
```

## $\chi^2$分布の臨界値 (自由度3, $\alpha = 0.05$)

臨界値は`qchisq()`で計算可能

```{r}
qchisq(0.95, df = 3) # 0.95は「1 - 有意水準」、dfは自由度
```

```{r}
#| echo: false
#| cache: true
#| fig-width: 8
#| fig-height: 3.5
chisq_df %>%
  filter(df == "3") %>%
  ggplot() +
  geom_line(aes(x = x, y = y), size = 1) +
  geom_area(data = filter(chisq_df, df == "3", x >= 7.814728),
            aes(x = x, y = y), alpha = 0.25) +
  geom_vline(xintercept = 7.9, linetype = 2) +
  geom_vline(xintercept = 22.5, color = "red") +
  annotate("text", x = 10, y = 0.075, label = "面積の5%") +
  annotate("text", x = 5,  y = 0.21, label = "受容域") +
  annotate("text", x = 15, y = 0.16, label = "棄却域") +
  geom_segment(aes(x = 10, y = 0.065, xend = 9, yend = 0.015),
               arrow = arrow(length = unit(0.15, "cm"), type = "closed")) +
  geom_segment(aes(x = 7.9, y = 0.2, xend = 0, yend = 0.2),
               arrow = arrow(length = unit(0.15, "cm"), 
                             type = "closed")) +
  geom_segment(aes(x = 7.9, y = 0.15, xend = 25, yend = 0.15),
               arrow = arrow(length = unit(0.15, "cm"), 
                             type = "closed")) +
  coord_cartesian(ylim = c(0, 0.25), xlim = c(0, 25)) +
  scale_x_continuous(breaks = c(0, 5, 7.9, 10, 15, 22.5, 25),
                     labels = c(0, 5, "7.8 (臨界値)", 
                                10, 15, "22.5 (検定統計量)", 25)) +
  labs(x = "検定統計量", y = "確率密度", color = "自由度") +
  theme_bw() +
  theme(legend.position = c(0.95, 0.78),
        legend.background = element_blank())
```

## `chisq.test()`関数の使用

::::{.columns}
:::{.column width=49%}
性別と好きなパスタの関係

```{r}
table(pasta_df$Female, pasta_df$Pasta) %>%
  chisq.test()

# p値の計算は以下のようなやり方でもOK
1 - pchisq(3.820412, df = 3)
```
:::

:::{.column width=2%}
:::

:::{.column width=49%}
年齢と好きなパスタの関係

```{r}
table(pasta_df$Over40, pasta_df$Pasta) %>%
  chisq.test() 

# p値の計算は以下のようなやり方でもOK
1 - pchisq(22.51549, df = 3)
```

* 5.095e-05は「 $5.095 \times 10^{-5}$ 」の意味
   * = 0.00005095
:::
::::

## 結果の解釈

::::{.columns}
:::{.column width=49%}
**性別と好きなパスタ**の関係

* $H_0$: 性別と好きなパスタの間には関係がない（$\chi^2 = 0$）。
* $H_a$: 性別と好きなパスタの間には関係がある（$\chi^2 > 0$）。
* 結果: $p \geq \alpha$ により、帰無仮説は**受容**される。
   * 性別と好きなパスタの間には関係があるとは言えない。
   * 性別と好きなパスタの間に違いがあるとは言えない。
:::

:::{.column width=2%}
:::

:::{.column width=49%}
**年齢と好きなパスタ**の関係

* $H_0$: 年齢と好きなパスタの間には関係がない（$\chi^2 = 0$）。
* $H_a$: 年齢と好きなパスタの間には関係がある（$\chi^2 > 0$）。
* 結果: $p < \alpha$により、帰無仮説は**棄却**される。
   * 年齢と好きなパスタの間には有意水準5%で (何らかの)関係がある。
   * 年齢と好きなパスタの間には有意水準5%で (何らかの)違いがある。
:::
::::

## 解釈の際の注意点

独立性の検定は2つのカテゴリ変数が「独立」しているか、「連関」しているかを検定するものであり、変数間の具体的な関係を示すものではない。

* 性別とパスタの例
   * 帰無仮説が棄却されなかったため、「性別と好きなパスタは連関しているとは言えない」、または「性別と好きなパスタの間には何らかの関係があるとは言えない」
   * 「性別と好きなパスタは関係がない」　$\leftarrow$　間違い!
* 年齢とパスタの例
   * 帰無仮説が棄却されたため、「年齢と好きなパスタは連関している」、または「年齢と好きなパスタの間には**何らかの関係**がある」
   * その「何らかの関係」とは?　$\leftarrow$　**分析する側の解釈が必要**
      * **ズレが大きいセルに注目**（たとえば、ペペロンチーノとナポリタン）
      * 例) 若年層（40歳未満）の方が高年層（40歳以上）に比べペペロンチーノを好み、高年層は若年層にくらべナポリタンを好む。一方、ミートソースとカルボナーラの場合、年齢と好みの違いは見られない。

# 課題

## 課題について

* 詳細は[サポートページ](../HW/HW08.qmd)を確認
   * データハンドリング
      * `.csv`ファイルの読み込み（`read_csv()`）
      * 列の抽出（`select()`）と行の抽出（`filter()`）
      * 列の操作（`mutate()`）
      * 変数のfactor化（`factor()`）
   * 記述統計（{summarytools}の`descr()`）
   * 平均値の差の検定（$t$検定）
      * グループごとの平均値（`group_by()`と`summarise()`）
   * 相関分析
      * 散布図の作成（{ggplot2}パッケージ）
   * 独立性の検定（$\chi^2$検定）
* **提出期限:** 11月23日（水）の23時59分
   * 遅れた場合、宋に連絡は不要（期限の延長は絶対ない）